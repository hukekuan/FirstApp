/*!
 * 
 *     iclient9-openlayers.(http://iclient.supermapol.com)
 *     Copyright© 2000-2017 SuperMap Software Co. Ltd
 *     license: Apache-2.0
 *     version: v9.0.0
 * 
 */
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 285);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

__webpack_require__(282);

exports.default = window.SuperMap;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SummaryType = exports.StatisticAnalystMode = exports.AnalystSizeUnit = exports.AnalystAreaUnit = exports.ClipAnalystMode = exports.ChartType = exports.ClientType = exports.ServerType = exports.Exponent = exports.VariogramMode = exports.InterpolationAlgorithmType = exports.SearchMode = exports.PixelFormat = exports.StatisticMode = exports.LayerType = exports.ColorSpaceType = exports.GridType = exports.TransferPreference = exports.TransferTactic = exports.EditType = exports.DataReturnMode = exports.SurfaceAnalystMethod = exports.SmoothMethod = exports.OverlayOperationType = exports.BufferEndType = exports.TurnType = exports.SupplyCenterType = exports.SideType = exports.DirectionType = exports.LabelOverLengthMode = exports.LabelBackShape = exports.AlongLineDirection = exports.FillGradientMode = exports.TextAlignment = exports.ColorGradientType = exports.ThemeType = exports.RangeMode = exports.GraduatedMode = exports.GraphAxesTextDisplayMode = exports.ThemeGraphType = exports.ThemeGraphTextFormat = exports.EngineType = exports.Unit = exports.MeasureMode = exports.SpatialRelationType = exports.SpatialQueryMode = exports.JoinType = exports.QueryOption = exports.GeometryType = exports.DataFormat = undefined;

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 *服务请求返回结果数据类型
 *  GEOJSON: "GEOJSON",
 *  ISERVER: "ISERVER"
 */
var DataFormat = exports.DataFormat = _SuperMap2.default.DataFormat = {
    GEOJSON: "GEOJSON",
    ISERVER: "ISERVER"
};

/**
 * Constant: GeometryType
 * {Object} 几何对象枚举类。
 * 该类定义了一系列几何对象类型。
 *
 * LINE: "LINE",
 *
 * LINEM: "LINEM",
 *
 * POINT: "POINT",
 *
 * REGION: "REGION",
 *
 * ELLIPSE: "ELLIPSE",
 *
 * CIRCLE: "CIRCLE",
 *
 * TEXT: "TEXT",
 *
 * UNKNOWN: "UNKNOWN".
 */
var GeometryType = exports.GeometryType = _SuperMap2.default.GeometryType = {
    LINE: "LINE",
    LINEM: "LINEM",
    POINT: "POINT",
    REGION: "REGION",
    ELLIPSE: "ELLIPSE",
    CIRCLE: "CIRCLE",
    TEXT: "TEXT",
    UNKNOWN: "UNKNOWN"
};

/**
 * Constant: QueryOption
 * {Object} 查询结果类型枚举类。
 * 该类描述查询结果返回类型，包括只返回属性、只返回几何实体以及返回属性和几何实体。
 *
 * ATTRIBUTE: "ATTRIBUTE",
 *
 * ATTRIBUTEANDGEOMETRY: "ATTRIBUTEANDGEOMETRY",
 *
 * GEOMETRY: "GEOMETRY".
 */
var QueryOption = exports.QueryOption = _SuperMap2.default.QueryOption = {
    ATTRIBUTE: "ATTRIBUTE",
    ATTRIBUTEANDGEOMETRY: "ATTRIBUTEANDGEOMETRY",
    GEOMETRY: "GEOMETRY"
};

/**
 * Constant: JoinType
 * {Object} 关联查询时的关联类型常量。
 * 该类定义了两个表之间的连接类型常量，决定了对两个表之间进行连接查询时，查询结果中得到的记录的情况。
 *
 * INNERJOIN: "INNERJOIN",
 *
 * LEFTJOIN: "LEFTJOIN".
 */
var JoinType = exports.JoinType = _SuperMap2.default.JoinType = {
    INNERJOIN: "INNERJOIN",
    LEFTJOIN: "LEFTJOIN"
};

/**
 * Constant: SpatialQueryMode
 * {Object} 空间查询模式枚举类。
 * 该类定义了空间查询操作模式常量。
 *
 * CONTAIN: "CONTAIN",
 *
 * CROSS: "CROSS",
 *
 * DISJOINT: "DISJOINT",
 *
 * IDENTITY: "IDENTITY",
 *
 * INTERSECT: "INTERSECT",
 *
 * NONE: "NONE",
 *
 * OVERLAP: "OVERLAP",
 *
 * TOUCH: "TOUCH",
 *
 * WITHIN: "WITHIN".
 */
var SpatialQueryMode = exports.SpatialQueryMode = _SuperMap2.default.SpatialQueryMode = {
    CONTAIN: "CONTAIN",
    CROSS: "CROSS",
    DISJOINT: "DISJOINT",
    IDENTITY: "IDENTITY",
    INTERSECT: "INTERSECT",
    NONE: "NONE",
    OVERLAP: "OVERLAP",
    TOUCH: "TOUCH",
    WITHIN: "WITHIN"
};

/**
 * Constant: SpatialRelationType
 * {Object} 数据集对象间的空间关系枚举类。
 * 该类定义了数据集对象间的空间关系类型常量。
 *
 * 包含关系
 * CONTAIN: "CONTAIN",
 *
 * 相交关系
 * INTERSECT: "INTERSECT",
 *
 * 被包含关系
 * WITHIN: "WITHIN"。
 */
var SpatialRelationType = exports.SpatialRelationType = _SuperMap2.default.SpatialRelationType = {
    CONTAIN: "CONTAIN",
    INTERSECT: "INTERSECT",
    WITHIN: "WITHIN"
};

/**
 * Constant: MeasureMode
 * {Object} 量算模式枚举类。
 * 该类定义了两种测量模式：距离测量和面积测量。
 *
 * DISTANCE: "DISTANCE",
 *
 * AREA: "AREA".
 */
var MeasureMode = exports.MeasureMode = _SuperMap2.default.MeasureMode = {
    DISTANCE: "DISTANCE",
    AREA: "AREA"
};

/**
 * Constant: Unit
 * {Object} 距离单位枚举类。
 * 该类定义了一系列距离单位类型。
 *
 * METER: "METER",
 *
 * KILOMETER: "KILOMETER",
 *
 * MILE: "MILE",
 *
 * YARD: "YARD",
 *
 * DEGREE: "DEGREE",
 *
 * MILLIMETER: "MILLIMETER",
 *
 * CENTIMETER: "CENTIMETER",
 *
 * INCH: "INCH",
 *
 * DECIMETER: "DECIMETER",
 *
 * FOOT: "FOOT",
 *
 * SECOND: "SECOND",
 *
 * MINUTE: "MINUTE",
 *
 * RADIAN: "RADIAN".
 */
var Unit = exports.Unit = _SuperMap2.default.Unit = {
    METER: "METER",
    KILOMETER: "KILOMETER",
    MILE: "MILE",
    YARD: "YARD",
    DEGREE: "DEGREE",
    MILLIMETER: "MILLIMETER",
    CENTIMETER: "CENTIMETER",
    INCH: "INCH",
    DECIMETER: "DECIMETER",
    FOOT: "FOOT",
    SECOND: "SECOND",
    MINUTE: "MINUTE",
    RADIAN: "RADIAN"
};

/**
 * Constant: EngineType
 * {Object} 数据源引擎类型枚举类。
 *
 * IMAGEPLUGINS: "IMAGEPLUGINS",
 *
 * OGC: "OGC",
 *
 * ORACLEPLUS: "ORACLEPLUS",
 *
 * SDBPLUS: "SDBPLUS",
 *
 * SQLPLUS: "SQLPLUS",
 *
 * UDB: "UDB"。
 */
var EngineType = exports.EngineType = _SuperMap2.default.EngineType = {
    IMAGEPLUGINS: "IMAGEPLUGINS",
    OGC: "OGC",
    ORACLEPLUS: "ORACLEPLUS",
    SDBPLUS: "SDBPLUS",
    SQLPLUS: "SQLPLUS",
    UDB: "UDB"
};

/**
 * Constant: ThemeGraphTextFormat
 * {Object } 统计专题图文本显示格式枚举类。
 *
 * CAPTION: "CAPTION",
 *
 * CAPTION_PERCENT: "CAPTION_PERCENT",
 *
 * CAPTION_VALUE: "CAPTION_VALUE",
 *
 * PERCENT: "PERCENT",
 *
 * VALUE: "VALUE".
 */
var ThemeGraphTextFormat = exports.ThemeGraphTextFormat = _SuperMap2.default.ThemeGraphTextFormat = {
    CAPTION: "CAPTION",
    CAPTION_PERCENT: "CAPTION_PERCENT",
    CAPTION_VALUE: "CAPTION_VALUE",
    PERCENT: "PERCENT",
    VALUE: "VALUE"
};

/**
 * Constant: ThemeGraphType
 * {Object} 统计专题图类型枚举类。
 *
 * AREA: "AREA",
 *
 * BAR: "BAR",
 *
 * BAR3D: "BAR3D",
 *
 * LINE: "LINE",
 *
 * PIE: "PIE",
 *
 * PIE3D: "PIE3D",
 *
 * POINT: "POINT",
 *
 * RING: "RING",
 *
 * ROSE: "ROSE",
 *
 * ROSE3D: "ROSE3D",
 *
 * STACK_BAR: "STACK_BAR",
 *
 * STACK_BAR3D: "STACK_BAR3D",
 *
 * STEP: "STEP".
 */
var ThemeGraphType = exports.ThemeGraphType = _SuperMap2.default.ThemeGraphType = {
    AREA: "AREA",
    BAR: "BAR",
    BAR3D: "BAR3D",
    LINE: "LINE",
    PIE: "PIE",
    PIE3D: "PIE3D",
    POINT: "POINT",
    RING: "RING",
    ROSE: "ROSE",
    ROSE3D: "ROSE3D",
    STACK_BAR: "STACK_BAR",
    STACK_BAR3D: "STACK_BAR3D",
    STEP: "STEP"
};

/**
 * Constant: GraphAxesTextDisplayMode
 * {Object} 统计专题图坐标轴文本显示模式。
 * ALL: "ALL", 显示全部文本
 *
 * NONE: "NONE", 没有显示
 *
 * YAXES: "YAXES". 显示Y轴的文本
 */
var GraphAxesTextDisplayMode = exports.GraphAxesTextDisplayMode = _SuperMap2.default.GraphAxesTextDisplayMode = {
    ALL: "ALL",
    NONE: "NONE",
    YAXES: "YAXES"
};

/**
 * Constant: GraduatedMode
 * {Object} 专题图分级模式枚举类。 CONSTANT: "CONSTANT",
 *
 * LOGARITHM: "LOGARITHM",
 *
 * SQUAREROOT: "SQUAREROOT".
 */
var GraduatedMode = exports.GraduatedMode = _SuperMap2.default.GraduatedMode = {
    CONSTANT: "CONSTANT",
    LOGARITHM: "LOGARITHM",
    SQUAREROOT: "SQUAREROOT"
};

/**
 * Constant: RangeMode
 * {Object} 范围分段专题图分段方式枚举类。
 *
 * CUSTOMINTERVAL: "CUSTOMINTERVAL",
 *
 * EQUALINTERVAL: "EQUALINTERVAL",
 *
 * LOGARITHM: "LOGARITHM",
 *
 * QUANTILE: "QUANTILE",
 *
 * SQUAREROOT: "SQUAREROOT",
 *
 * STDDEVIATION: "STDDEVIATION".
 */
var RangeMode = exports.RangeMode = _SuperMap2.default.RangeMode = {
    CUSTOMINTERVAL: "CUSTOMINTERVAL",
    EQUALINTERVAL: "EQUALINTERVAL",
    LOGARITHM: "LOGARITHM",
    QUANTILE: "QUANTILE",
    SQUAREROOT: "SQUAREROOT",
    STDDEVIATION: "STDDEVIATION"
};

/**
 * Constant: ThemeType
 * {Object} 专题图类型枚举类。
 *
 * DOTDENSITY: "DOTDENSITY",
 *
 * GRADUATEDSYMBOL: "GRADUATEDSYMBOL",
 *
 * GRAPH: "GRAPH",
 *
 * LABEL: "LABEL",
 *
 * RANGE: "RANGE",
 *
 * UNIQUE: "UNIQUE".
 */
var ThemeType = exports.ThemeType = _SuperMap2.default.ThemeType = {
    DOTDENSITY: "DOTDENSITY",
    GRADUATEDSYMBOL: "GRADUATEDSYMBOL",
    GRAPH: "GRAPH",
    LABEL: "LABEL",
    RANGE: "RANGE",
    UNIQUE: "UNIQUE"
};

/**
 * Constant: ColorGradientType
 * {Object} 渐变颜色枚举类。
 *
 * BLACK_WHITE: "BLACKWHITE",
 *
 * BLUE_BLACK: "BLUEBLACK",
 *
 * BLUE_RED : "BLUERED",
 *
 * BLUE_WHITE: "BLUEWHITE",
 *
 * CYAN_BLACK: "CYANBLACK",
 *
 * CYAN_BLUE: "CYANBLUE",
 *
 * CYAN_GREEN: "CYANGREEN",
 *
 * CYAN_WHITE: "CYANWHITE",
 *
 * GREEN_BLACK: "GREENBLACK",
 *
 * GREEN_BLUE: "GREENBLUE",
 *
 * GREEN_ORANGE_VIOLET: "GREENORANGEVIOLET",
 *
 * GREEN_RED: "GREENRED",
 *
 * GREEN_WHITE: "GREENWHITE",
 *
 * PINK_BLACK: "PINKBLACK",
 *
 * PINK_BLUE: "PINKBLUE",
 *
 * PINK_RED: "PINKRED",
 *
 * PINK_WHITE: "PINKWHITE",
 *
 * RAIN_BOW: "RAINBOW",
 *
 * RED_BLACK: "REDBLACK",
 *
 * RED_WHITE: "REDWHITE",
 *
 * SPECTRUM: "SPECTRUM",
 *
 * TERRAIN: "TERRAIN",
 *
 * YELLOW_BLACK: "YELLOWBLACK",
 *
 * YELLOW_BLUE: "YELLOWBLUE",
 *
 * YELLOW_GREEN: "YELLOWGREEN",
 *
 * YELLOW_RED: "YELLOWRED",
 *
 * YELLOW_WHITE: "YELLOWWHITE".
 */
var ColorGradientType = exports.ColorGradientType = _SuperMap2.default.ColorGradientType = {
    BLACK_WHITE: "BLACKWHITE",
    BLUE_BLACK: "BLUEBLACK",
    BLUE_RED: "BLUERED",
    BLUE_WHITE: "BLUEWHITE",
    CYAN_BLACK: "CYANBLACK",
    CYAN_BLUE: "CYANBLUE",
    CYAN_GREEN: "CYANGREEN",
    CYAN_WHITE: "CYANWHITE",
    GREEN_BLACK: "GREENBLACK",
    GREEN_BLUE: "GREENBLUE",
    GREEN_ORANGE_VIOLET: "GREENORANGEVIOLET",
    GREEN_RED: "GREENRED",
    GREEN_WHITE: "GREENWHITE",
    PINK_BLACK: "PINKBLACK",
    PINK_BLUE: "PINKBLUE",
    PINK_RED: "PINKRED",
    PINK_WHITE: "PINKWHITE",
    RAIN_BOW: "RAINBOW",
    RED_BLACK: "REDBLACK",
    RED_WHITE: "REDWHITE",
    SPECTRUM: "SPECTRUM",
    TERRAIN: "TERRAIN",
    YELLOW_BLACK: "YELLOWBLACK",
    YELLOW_BLUE: "YELLOWBLUE",
    YELLOW_GREEN: "YELLOWGREEN",
    YELLOW_RED: "YELLOWRED",
    YELLOW_WHITE: "YELLOWWHITE"
};

/**
 * Constant: TextAlignment
 * {Object} 文本对齐枚举类。
 *
 * TOPLEFT: "TOPLEFT",
 *
 * TOPCENTER: "TOPCENTER",
 *
 * TOPRIGHT: "TOPRIGHT",
 *
 * BASELINELEFT: "BASELINELEFT",
 *
 * BASELINECENTER: "BASELINECENTER",
 *
 * BASELINERIGHT: "BASELINERIGHT",
 *
 * BOTTOMLEFT: "BOTTOMLEFT",
 *
 * BOTTOMCENTER: "BOTTOMCENTER",
 *
 * BOTTOMRIGHT: "BOTTOMRIGHT",
 *
 * MIDDLELEFT: "MIDDLELEFT",
 *
 * MIDDLECENTER: "MIDDLECENTER",
 *
 * MIDDLERIGHT: "MIDDLERIGHT".
 */
var TextAlignment = exports.TextAlignment = _SuperMap2.default.TextAlignment = {
    TOPLEFT: "TOPLEFT",
    TOPCENTER: "TOPCENTER",
    TOPRIGHT: "TOPRIGHT",
    BASELINELEFT: "BASELINELEFT",
    BASELINECENTER: "BASELINECENTER",
    BASELINERIGHT: "BASELINERIGHT",
    BOTTOMLEFT: "BOTTOMLEFT",
    BOTTOMCENTER: "BOTTOMCENTER",
    BOTTOMRIGHT: "BOTTOMRIGHT",
    MIDDLELEFT: "MIDDLELEFT",
    MIDDLECENTER: "MIDDLECENTER",
    MIDDLERIGHT: "MIDDLERIGHT"
};

/**
 * Constant: FillGradientMode
 * {Object} 渐变填充风格的渐变类型枚举类。
 *
 * NONE: "NONE",
 *
 * LINEAR: "LINEAR",
 *
 * RADIAL: "RADIAL",
 *
 * CONICAL: "CONICAL",
 *
 * SQUARE: "SQUARE".
 */
var FillGradientMode = exports.FillGradientMode = _SuperMap2.default.FillGradientMode = {
    NONE: "NONE",
    LINEAR: "LINEAR",
    RADIAL: "RADIAL",
    CONICAL: "CONICAL",
    SQUARE: "SQUARE"
};

/**
 * Constant: AlongLineDirection
 * {Object} 标签沿线标注方向枚举类。
 *
 * NORMAL: "ALONG_LINE_NORMAL",
 *
 * LB_TO_RT: "LEFT_BOTTOM_TO_RIGHT_TOP",
 *
 * LT_TO_RB: "LEFT_TOP_TO_RIGHT_BOTTOM",
 *
 * RB_TO_LT: "RIGHT_BOTTOM_TO_LEFT_TOP",
 *
 * RT_TO_LB: "RIGHT_TOP_TO_LEFT_BOTTOM".
 */
var AlongLineDirection = exports.AlongLineDirection = _SuperMap2.default.AlongLineDirection = {
    NORMAL: "ALONG_LINE_NORMAL",
    LB_TO_RT: "LEFT_BOTTOM_TO_RIGHT_TOP",
    LT_TO_RB: "LEFT_TOP_TO_RIGHT_BOTTOM",
    RB_TO_LT: "RIGHT_BOTTOM_TO_LEFT_TOP",
    RT_TO_LB: "RIGHT_TOP_TO_LEFT_BOTTOM"
};

/**
 * Constant: LabelBackShape
 * {Object} 标签专题图中标签背景的形状枚举类。
 *
 * DIAMOND: "DIAMOND",
 *
 * ELLIPSE: "ELLIPSE",
 *
 * MARKER: "MARKER",
 *
 * NONE: "NONE",
 *
 * RECT: "RECT",
 *
 * ROUNDRECT: "ROUNDRECT",
 *
 * TRIANGLE: "TRIANGLE".
 */
var LabelBackShape = exports.LabelBackShape = _SuperMap2.default.LabelBackShape = {
    DIAMOND: "DIAMOND",
    ELLIPSE: "ELLIPSE",
    MARKER: "MARKER",
    NONE: "NONE",
    RECT: "RECT",
    ROUNDRECT: "ROUNDRECT",
    TRIANGLE: "TRIANGLE"
};

/**
 * Constant: LabelOverLengthMode
 * {Object} 标签专题图中超长标签的处理模式枚举类。
 *
 * NEWLINE: "NEWLINE",
 *
 * NONE: "NONE",
 *
 * OMIT: "OMIT".
 */
var LabelOverLengthMode = exports.LabelOverLengthMode = _SuperMap2.default.LabelOverLengthMode = {
    NEWLINE: "NEWLINE",
    NONE: "NONE",
    OMIT: "OMIT"
};

/**
 * Constant: DirectionType
 * {Object} 网络分析中方向枚举类。
 * 在行驶引导子项中使用。
 *
 * EAST: "EAST",
 *
 * NONE: "NONE",
 *
 * NORTH: "NORTH",
 *
 * SOURTH: "SOURTH",
 *
 * WEST: "WEST".
 */
var DirectionType = exports.DirectionType = _SuperMap2.default.DirectionType = {
    EAST: "EAST",
    NONE: "NONE",
    NORTH: "NORTH",
    SOURTH: "SOURTH",
    WEST: "WEST"
};

/**
 * Constant: SideType
 * {Object} 行驶位置枚举类。
 * 表示在行驶在路的左边、右边或者路上的枚举,该类用在行驶导引子项类中。
 *
 * LEFT: "LEFT",
 *
 * MIDDLE: "MIDDLE",
 *
 * NONE: "NONE",
 *
 * RIGHT: "RIGHT".
 */
var SideType = exports.SideType = _SuperMap2.default.SideType = {
    LEFT: "LEFT",
    MIDDLE: "MIDDLE",
    NONE: "NONE",
    RIGHT: "RIGHT"
};

/**
 * Constant: SupplyCenterType
 * {Object} 资源供给中心类型枚举类。
 * 该枚举类定义了网络分析中资源中心点的类型，主要用于资源分配和选址分区。
 * 资源供给中心点的类型包括非中心，固定中心和可选中心。固定中心用于资源分配分析； 固定中心和可选中心用于选址分析；非中心在两种网络分析时都不予考虑。
 *
 * FIXEDCENTER: "FIXEDCENTER",
 *
 * NULL: "NULL",
 *
 * OPTIONALCENTER: "OPTIONALCENTER".
 */
var SupplyCenterType = exports.SupplyCenterType = _SuperMap2.default.SupplyCenterType = {
    FIXEDCENTER: "FIXEDCENTER",
    NULL: "NULL",
    OPTIONALCENTER: "OPTIONALCENTER"
};

/**
 * Constant: TurnType
 * {Object} 转弯方向枚举类。
 * 用在行驶引导子项类中，表示转弯的方向。
 *
 * AHEAD: "AHEAD",
 *
 * BACK: "BACK",
 *
 * END: "END",
 *
 * LEFT: "LEFT",
 *
 * NONE: "NONE",
 *
 * RIGHT: "RIGHT".
 */
var TurnType = exports.TurnType = _SuperMap2.default.TurnType = {
    AHEAD: "AHEAD",
    BACK: "BACK",
    END: "END",
    LEFT: "LEFT",
    NONE: "NONE",
    RIGHT: "RIGHT"
};

/**
 * Constant: BufferEndType
 * {Object} 缓冲区分析BufferEnd类型。
 *
 * FLAT: "FLAT",
 *
 * ROUND: "ROUND".
 */
var BufferEndType = exports.BufferEndType = _SuperMap2.default.BufferEndType = {
    FLAT: "FLAT",
    ROUND: "ROUND"
};

/**
 * Constant: OverlayOperationType
 * {Object} 叠加分析类型枚举。
 *
 * CLIP: "CLIP",
 *
 * ERASE: "ERASE",
 *
 * IDENTITY: "IDENTITY",
 *
 * INTERSECT: "INTERSECT",
 *
 * UNION: "UNION",
 *
 * UPDATE: "UPDATE",
 *
 * XOR: "XOR".
 */
var OverlayOperationType = exports.OverlayOperationType = _SuperMap2.default.OverlayOperationType = {
    CLIP: "CLIP",
    ERASE: "ERASE",
    IDENTITY: "IDENTITY",
    INTERSECT: "INTERSECT",
    UNION: "UNION",
    UPDATE: "UPDATE",
    XOR: "XOR"
};

/**
 * Constant: SmoothMethod
 * {Object} 光滑方法枚举类。
 * 用于从Grid 或DEM数据生成等值线或等值面时对等值线或者等值面的边界线进行平滑处理的方法。
 *
 * BSPLINE: "BSPLINE",
 *
 * POLISH: "POLISH".
 */
var SmoothMethod = exports.SmoothMethod = _SuperMap2.default.SmoothMethod = {
    BSPLINE: "BSPLINE",
    POLISH: "POLISH"
};

/**
 * Constant: SurfaceAnalystMethod
 * {Object} 表面分析方法枚举类。
 * 通过对数据进行表面分析，能够挖掘原始数据所包含的信息，使某些细节明显化，易于分析。
 *
 * ISOLINE: "ISOLINE",
 *
 * ISOREGION: "ISOREGION".
 */
var SurfaceAnalystMethod = exports.SurfaceAnalystMethod = _SuperMap2.default.SurfaceAnalystMethod = {
    ISOLINE: "ISOLINE",
    ISOREGION: "ISOREGION"
};
/**
 * Constant: DataReturnMode
 * {Object} 数据返回模式枚举类。
 * 该枚举类用于指定空间分析返回结果模式,包含返回数据集标识和记录集、只返回数据集标识(数据集名称@数据源名称)及只返回记录集三种模式。
 *
 * DATASET_AND_RECORDSET: "DATASET_AND_RECORDSET",
 *
 * DATASET_ONLY: "DATASET_ONLY",
 *
 * RECORDSET_ONLY: "RECORDSET_ONLY".
 */
var DataReturnMode = exports.DataReturnMode = _SuperMap2.default.DataReturnMode = {
    DATASET_AND_RECORDSET: "DATASET_AND_RECORDSET",
    DATASET_ONLY: "DATASET_ONLY",
    RECORDSET_ONLY: "RECORDSET_ONLY"
};

/**
 * Constant: EditType
 * {Object} 要素集更新模式枚举类。
 * 该枚举类用于指定数据服务中要素集更新模式,包含添加要素集、更新要素集和删除要素集。
 *
 * ADD: "add",
 *
 * UPDATE: "update",
 *
 * DELETE: "delete".
 */
var EditType = exports.EditType = _SuperMap2.default.EditType = {
    ADD: "add",
    UPDATE: "update",
    DELETE: "delete"
};

/**
 * Constant: TransferTactic
 * {Object} 公交换乘策略枚举类。
 * 该枚举类用于指定公交服务中要素集更新模式,包含添加要素集、更新要素集和删除要素集。
 *
 * LESS_TIME: "LESS_TIME",
 *
 * LESS_TRANSFER: "LESS_TRANSFER",
 *
 * LESS_WALK: "LESS_WALK",
 *
 * MIN_DISTANCE: "MIN_DISTANCE"
 */
var TransferTactic = exports.TransferTactic = _SuperMap2.default.TransferTactic = {
    LESS_TIME: "LESS_TIME",
    LESS_TRANSFER: "LESS_TRANSFER",
    LESS_WALK: "LESS_WALK",
    MIN_DISTANCE: "MIN_DISTANCE"
};

/**
 * Constant: TransferPreference
 * {Object} 公交换乘策略枚举类。
 * 该枚举类用于指定交通换乘服务中设置地铁优先、公交优先、不乘地铁、无偏好等偏好设置。
 *
 * BUS: "BUS",
 *
 * SUBWAY: "SUBWAY",
 *
 * NO_SUBWAY: "NO_SUBWAY",
 *
 * NONE: "NONE"
 */
var TransferPreference = exports.TransferPreference = _SuperMap2.default.TransferPreference = {
    BUS: "BUS",
    SUBWAY: "SUBWAY",
    NO_SUBWAY: "NO_SUBWAY",
    NONE: "NONE"
};

/**
 * Constant: GridType
 * {Object} 地图背景格网类型枚举类。
 *
 * CROSS: "CROSS",
 *
 * GRID: "GRID",
 *
 * POINT: "POINT"
 */
var GridType = exports.GridType = _SuperMap2.default.GridType = {
    CROSS: "CROSS",
    GRID: "GRID",
    POINT: "POINT"
};

/**
 * Constant: ColorSpaceType
 * {Object} 色彩空间枚举。
 * 由于成色原理的不同，决定了显示器、投影仪这类靠色光直接合成颜色的颜色设备和打印机、
 * 印刷机这类靠使用颜料的印刷设备在生成颜色方式上的区别。
 * 针对上述不同成色方式，SuperMap 提供两种色彩空间，
 * 分别为 RGB 和 CMYK。RGB 主要用于显示系统中，CMYK 主要用于印刷系统中。
 *
 * CMYK: "CMYK",
 *
 * RGB: "RGB"
 */
var ColorSpaceType = exports.ColorSpaceType = _SuperMap2.default.ColorSpaceType = {
    CMYK: "CMYK",
    RGB: "RGB"
};

/**
 * Constant: LayerType
 * {Object} 图层类型。
 *
 * UGC: "UGC",
 *
 * WMS: "WMS"
 *
 * WFS: "WFS",
 *
 * CUSTOM: "CUSTOM"
 */
var LayerType = exports.LayerType = _SuperMap2.default.LayerType = {
    UGC: "UGC",
    WMS: "WMS",
    WFS: "WFS",
    CUSTOM: "CUSTOM"

};

/**
 * Constant: StatisticMode
 * {Object} 字段统计方法类型。
 *
 * AVERAGE: "AVERAGE", 统计所选字段的平均值
 *
 * MAX: "MAX", 统计所选字段的最大值
 *
 * MIN: "MIN", 统计所选字段的最小值
 *
 * STDDEVIATION: "STDDEVIATION", 统计所选字段的标准差
 *
 * SUM: "SUM", 统计所选字段的总和
 *
 * VARIANCE: "VARIANCE", 统计所选字段的方差
 */
var StatisticMode = exports.StatisticMode = _SuperMap2.default.StatisticMode = {
    AVERAGE: "AVERAGE",
    MAX: "MAX",
    MIN: "MIN",
    STDDEVIATION: "STDDEVIATION",
    SUM: "SUM",
    VARIANCE: "VARIANCE"
};

/**
 * Constant: PixelFormat
 * {Object} 栅格与影像数据存储的像素格式枚举类。
 *
 * BIT16: "BIT16", 每个像元用16个比特(即2个字节)表示
 *
 * BIT32: "BIT32", 每个像元用32个比特(即4个字节)表示
 *
 * BIT64: "BIT64", 每个像元用64个比特(即8个字节)表示，只提供给栅格数据集使用
 *
 * SINGLE: "SINGLE", 每个像元用4个字节来表示，只提供给栅格数据集使用
 *
 * DOUBLE: "DOUBLE", 每个像元用8个字节来表示，只提供给栅格数据集使用
 *
 * UBIT1: "UBIT1", 每个像元用1个比特表示
 *
 * UBIT4: "UBIT4", 每个像元用4个比特来表示
 *
 * UBIT8: "UBIT8", 每个像元用8个比特(即1个字节)来表示
 *
 * UBIT24: "UBIT24", 每个像元用24个比特(即3个字节)来表示
 *
 * UBIT32: "UBIT32", 每个像元用32个比特(即4个字节)来表示
 */
var PixelFormat = exports.PixelFormat = _SuperMap2.default.PixelFormat = {
    BIT16: "BIT16",
    BIT32: "BIT32",
    BIT64: "BIT64",
    SINGLE: "SINGLE",
    DOUBLE: "DOUBLE",
    UBIT1: "UBIT1",
    UBIT4: "UBIT4",
    UBIT8: "UBIT8",
    UBIT24: "UBIT24",
    UBIT32: "UBIT32"
};

/**
 * Constant: SearchMode
 * {Object} 内插时使用的样本点的查找方式枚举
 *
 * KDTREE_FIXED_COUNT: "KDTREE_FIXED_COUNT", 使用 KDTREE 的固定点数方式查找参与内插分析的点
 *
 * KDTREE_FIXED_RADIUS: "KDTREE_FIXED_RADIUS", 使用 KDTREE 的定长方式查找参与内插分析的点
 *
 * NONE: "NONE", 不进行查找，使用所有的输入点进行内插分析
 *
 * QUADTREE: "QUADTREE", 使用 QUADTREE 方式查找参与内插分析的点，仅对样条（RBF）插值和普通克吕金（Kriging）有用
 */
var SearchMode = exports.SearchMode = _SuperMap2.default.SearchMode = {
    KDTREE_FIXED_COUNT: "KDTREE_FIXED_COUNT",
    KDTREE_FIXED_RADIUS: "KDTREE_FIXED_RADIUS",
    NONE: "NONE",
    QUADTREE: "QUADTREE"
};

/**
 * Constant: InterpolationAlgorithmType
 * {Object} 插值分析的算法的类型
 *
 * KRIGING: "KRIGING", 普通克吕金插值法
 *
 * SimpleKriging: "SimpleKriging", 简单克吕金插值法
 *
 * UniversalKriging: "UniversalKriging", 泛克吕金插值法
 */
var InterpolationAlgorithmType = exports.InterpolationAlgorithmType = _SuperMap2.default.InterpolationAlgorithmType = {
    KRIGING: "KRIGING",
    SimpleKriging: "SimpleKriging",
    UniversalKriging: "UniversalKriging"
};

/**
 * Constant: VariogramMode
 * {Object} 克吕金（Kriging）插值时的半变函数类型枚举
 *
 * EXPONENTIAL: "EXPONENTIAL", 指数函数（Exponential Variogram Mode）
 *
 * GAUSSIAN: "GAUSSIAN",  高斯函数（Gaussian Variogram Mode）
 *
 * SPHERICAL: "SPHERICAL", 球型函数（Spherical Variogram Mode）
 */
var VariogramMode = exports.VariogramMode = _SuperMap2.default.VariogramMode = {
    EXPONENTIAL: "EXPONENTIAL",
    GAUSSIAN: "GAUSSIAN",
    SPHERICAL: "SPHERICAL"
};

/**
 * Constant: Exponent
 * {Object} 定义了泛克吕金（UniversalKriging）插值时样点数据中趋势面方程的阶数
 *
 * EXP1: "EXP1", 阶数为1
 *
 * EXP2: "EXP2", 阶数为2
 */
var Exponent = exports.Exponent = _SuperMap2.default.Exponent = {
    EXP1: "EXP1",
    EXP2: "EXP2"
};
var ServerType = exports.ServerType = _SuperMap2.default.ServerType = {
    ISERVER: "ISERVER",
    IPORTAL: "IPORTAL",
    ONLINE: "ONLINE"
};
/**
 * token申请的客户端标识类型
 * @type {{IP: string, REFERER: string, REQUESTIP: string, NONE: string}}
 */
var ClientType = exports.ClientType = _SuperMap2.default.ClientType = {
    IP: "IP",
    REFERER: "Referer",
    REQUESTIP: "RequestIP",
    NONE: "NONE",
    SERVER: "SERVER",
    WEB: "WEB"
};
/**
 * 客户端专题图图表类型
 * @type {{BAR: string, BAR3D: string, CIRCLE: string, PIE: string, POINT: string, LINE: string, RING: string}}
 */
var ChartType = exports.ChartType = _SuperMap2.default.ChartType = {
    BAR: "Bar",
    BAR3D: "Bar3D",
    CIRCLE: "Circle",
    PIE: "Pie",
    POINT: "Point",
    LINE: "Line",
    RING: "Ring"
};
/**
 * 裁剪分析模式
 * @type {{CLIP: string, INTERSECT: string}}
 */
var ClipAnalystMode = exports.ClipAnalystMode = _SuperMap2.default.ClipAnalystMode = {
    CLIP: "clip",
    INTERSECT: "intersect"
};
/**
 * 大数据分析面积单位
 * @type {{SQUAREMETER: string, SQUAREKILOMETER: string, HECTARE: string, ARE: string, ACRE: string, SQUAREFOOT: string, SQUAREYARD: string, SQUAREMILE: string}}
 */
var AnalystAreaUnit = exports.AnalystAreaUnit = _SuperMap2.default.AnalystAreaUnit = {
    "SQUAREMETER": "SquareMeter",
    "SQUAREKILOMETER": "SquareKiloMeter",
    "HECTARE": "Hectare",
    "ARE": "Are",
    "ACRE": "Acre",
    "SQUAREFOOT": "SquareFoot",
    "SQUAREYARD": "SquareYard",
    "SQUAREMILE": "SquareMile"
};
/**
 * 大数据分析单位
 * @type {{METER: string, KILOMETER: string, YARD: string, FOOT: string, MILE: string}}
 */
var AnalystSizeUnit = exports.AnalystSizeUnit = _SuperMap2.default.AnalystSizeUnit = {
    "METER": "Meter",
    "KILOMETER": "Kilometer",
    "YARD": "Yard",
    "FOOT": "Foot",
    "MILE": "Mile"
};
/**
 * 大数据分析统计模式
 * @type {{MAX: string, MIN: string, AVERAGE: string, SUM: string, VARIANCE: string, STDDEVIATION: string}}
 */
var StatisticAnalystMode = exports.StatisticAnalystMode = _SuperMap2.default.StatisticAnalystMode = {
    "MAX": "max",
    "MIN": "min",
    "AVERAGE": "average",
    "SUM": "sum",
    "VARIANCE": "variance",
    "STDDEVIATION": "stdDeviation"
};
/**
 * 大数据分析聚合类型
 * @type {{SUMMARYMESH: string, SUMMARYREGION: string}}
 */
var SummaryType = exports.SummaryType = _SuperMap2.default.SummaryType = {
    "SUMMARYMESH": "SUMMARYMESH",
    "SUMMARYREGION": "SUMMARYREGION"

};

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = ol;

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

__webpack_require__(15);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.CommonServiceBase common服务基类
 * @constructs SuperMap.CommonServiceBase
 * @param url - {String} 与客户端交互的服务地址。
 * @param options - {Object} 参数。
 */
var CommonServiceBase = function () {

    /**
     * @function  initialize
     * @description  ServiceBase的构造函数
     * @param url - {String} 与客户端交互的服务地址。
     * @param options - {Object} 参数。
     */


    /*
     * Property: _processFailed
     * {Function} 请求参数中失败回调函数。
     */


    /*
     * Property: POLLING_TIMES
     * {Int} 默认请求失败次数。
     */


    /*
     * Property: options
     * {Object} 请求参数。
     */


    /*
     * Property: index
     * {Int} 服务访问地址在数组中的位置。
     */


    /*
     * Property: urls
     * {Array} 服务访问地址数组。
     */


    /**
     * @member  eventListeners -{Object}
     * @description APIProperty: 听器对象，在构造函数中设置此参数（可选），对 MapService 支持的两个事件 processCompleted 、processFailed 进行监听，
     *              相当于调用 SuperMap.Events.on(eventListeners)。
     */


    /*
     * Constant: EVENT_TYPES
     * {Array(String)}
     * 此类支持的事件类型
     * - *processCompleted* 服务端返回信息成功触发该事件 。
     * - *processFailed* 服务端返回信息失败触发该事件 。
     */
    function CommonServiceBase(url, options) {
        _classCallCheck(this, CommonServiceBase);

        this.EVENT_TYPES = ["processCompleted", "processFailed"];
        this.events = null;
        this.eventListeners = null;
        this.url = null;
        this.urls = null;
        this.serverType = null;
        this.index = null;
        this.length = null;
        this.options = null;
        this.totalTimes = null;
        this.POLLING_TIMES = 3;
        this._processSuccess = null;
        this._processFailed = null;
        this.isInTheSameDomain = null;
        this.CLASS_NAME = "SuperMap.CommonServiceBase";

        var me = this;

        if (_SuperMap2.default.Util.isArray(url)) {
            me.urls = url;
            me.length = url.length;
            me.totalTimes = me.length;
            if (me.length === 1) {
                me.url = url[0];
            } else {
                me.index = parseInt(Math.random() * me.length);
                me.url = url[me.index];
            }
        } else {
            me.totalTimes = 1;
            me.url = url;
        }

        if (_SuperMap2.default.Util.isArray(url) && !me.isServiceSupportPolling()) {
            me.url = url[0];
            me.totalTimes = 1;
        }

        me.serverType = me.serverType || _SuperMap2.default.ServerType.ISERVER;

        options = options || {};

        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }

        me.isInTheSameDomain = _SuperMap2.default.Util.isInTheSameDomain(me.url);

        me.events = new _SuperMap2.default.Events(me, null, me.EVENT_TYPES, true);
        if (me.eventListeners instanceof Object) {
            me.events.on(me.eventListeners);
        }
    }

    /**
     * @override
     * @function  destroy
     * @description APIMethod: 释放资源，将引用的资源属性置空。
     */


    /*
     * Property: isInTheSameDomain
     * {Boolean}
     */


    /*
     * Property: _processSuccess
     * {Function} 请求参数中成功回调函数。
     */


    /*
     * Property: totalTimes
     * {Int} 实际请求失败次数。
     */


    /*
     * Property: length
     * {String} 服务访问地址数组长度。
     */


    /*
     *  Property: serverType
     *  {SuperMap.ServerType} 服务器类型，iServer|iPortal|Online
     */


    /**
     * @member  url -{String|Array}
     * @description APIProperty: 服务访问地址或者服务访问地址数组。
     *
     * @example
     * var url1 = "http://localhost:8090/iserver/services/map-world/rest/maps/World";
     * var url2 = ["http://192.168.17.168:8090/iserver/services/map-world/rest/maps/World",
     *            "http://192.168.17.169:8091/iserver/services/map-world/rest/maps/World"];
     */


    /**
     * @member events -{SuperMap.Events}
     * @description APIProperty: 处理所有事件的对象，支持 processCompleted 、processFailed 两种事件
     *               服务端成功返回地图信息结果时触发 processCompleted 事件，服务端返回信息结果时触发 processFailed 事件。
     */


    _createClass(CommonServiceBase, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            if (_SuperMap2.default.Util.isArray(me.urls)) {
                me.urls = null;
                me.index = null;
                me.length = null;
                me.totalTimes = null;
            }
            me.url = null;
            me.options = null;
            me._processSuccess = null;
            me._processFailed = null;
            me.isInTheSameDomain = null;

            me.EVENT_TYPES = null;
            if (me.events) {
                me.events.destroy();
                me.events = null;
            }
            if (me.eventListeners) {
                me.eventListeners = null;
            }
        }

        /**
         * @function  request
         * @description APIMethod: 该方法用于向服务发送请求。
         *
         * Parameters:
         * @param options - {Object} 参数。
         *        method - {String} 请求方式，包括GET，POST，PUT， DELETE。<br>
         *        url - {String}  发送请求的地址。<br>
         *        params - {Object} 作为查询字符串添加到url中的一组键值对，
         *                          此参数只适用于GET方式发送的请求。<br>
         *        data - {String } 发送到服务器的数据。<br>
         *        success - {function} 请求成功后的回调函数。<br>
         *        failure - {function} 请求失败后的回调函数。<br>
         *        scope - {Object} 如果回调函数是对象的一个公共方法，设定该对象的范围。<br>
         *        isInTheSameDomain - {Boolean} 请求是否在当前域中。<br>
         */

    }, {
        key: 'request',
        value: function request(options) {
            var me = this;
            options.url = options.url || me.url;
            options.isInTheSameDomain = me.isInTheSameDomain;
            //为url添加安全认证信息片段
            var credential = this.getCredential(options.url);
            if (credential) {
                //当url中含有?，并且?在url末尾的时候直接添加token *网络分析等服务请求url会出现末尾是?的情况*
                //当url中含有?，并且?不在url末尾的时候添加&token
                //当url中不含有?，在url末尾添加?token
                var endStr = options.url.substring(options.url.length - 1, options.url.length);
                if (options.url.indexOf("?") > -1 && endStr === "?") {
                    options.url += credential.getUrlParameters();
                } else if (options.url.indexOf("?") > -1 && endStr !== "?") {
                    options.url += "&" + credential.getUrlParameters();
                } else {
                    options.url += "?" + credential.getUrlParameters();
                }
            }
            me.calculatePollingTimes();
            me._processSuccess = options.success;
            me._processFailed = options.failure;
            options.scope = me;
            options.success = me.getUrlCompleted;
            options.failure = me.getUrlFailed;
            me.options = options;
            _SuperMap2.default.Util.committer(me.options);
        }

        /*
         * 获取凭据信息
         * parameter url
         */

    }, {
        key: 'getCredential',
        value: function getCredential(url) {
            var keyUrl = url,
                credential = void 0,
                value = void 0;
            switch (this.serverType) {
                case _SuperMap2.default.ServerType.ISERVER:
                    value = _SuperMap2.default.SecurityManager.getToken(keyUrl);
                    credential = value ? new _SuperMap2.default.Credential(value, "token") : null;
                    break;
                case _SuperMap2.default.ServerType.IPORTAL:
                    value = _SuperMap2.default.SecurityManager.getToken(keyUrl);
                    credential = value ? new _SuperMap2.default.Credential(value, "token") : null;
                    if (!credential) {
                        value = _SuperMap2.default.SecurityManager.getKey(keyUrl);
                        credential = value ? new _SuperMap2.default.Credential(value, "key") : null;
                    }
                    break;
                case _SuperMap2.default.ServerType.ONLINE:
                    value = _SuperMap2.default.SecurityManager.getKey(keyUrl);
                    credential = value ? new _SuperMap2.default.Credential(value, "key") : null;
                    break;
                default:
                    value = _SuperMap2.default.SecurityManager.getToken(keyUrl);
                    credential = value ? new _SuperMap2.default.Credential(value, "token") : null;
                    break;
            }
            return credential;
        }

        /*
         * Method: getUrlCompleted
         * 请求成功后执行此方法。
         *
         * Parameters:
         * result - {Object} 服务器返回的结果对象。
         */

    }, {
        key: 'getUrlCompleted',
        value: function getUrlCompleted(result) {
            var me = this;
            me._processSuccess(result);
        }

        /*
         * Method: getUrlFailed
         * 请求失败后执行此方法。
         *
         * Parameters:
         * result - {Object} 服务器返回的结果对象。
         */

    }, {
        key: 'getUrlFailed',
        value: function getUrlFailed(result) {
            var me = this;
            if (me.totalTimes > 0) {
                me.totalTimes--;
                me.ajaxPolling();
            } else {
                me._processFailed(result);
            }
        }

        /*
         * Method: ajaxPolling
         * 请求失败后，如果剩余请求失败次数不为0，重新获取url发送请求
         */

    }, {
        key: 'ajaxPolling',
        value: function ajaxPolling() {
            var me = this,
                url = me.options.url,
                re = /^http:\/\/([a-z]{9}|(\d+\.){3}\d+):\d{0,4}/;
            me.index = parseInt(Math.random() * me.length);
            me.url = me.urls[me.index];
            url = url.replace(re, re.exec(me.url)[0]);
            var isInTheSameDomain = _SuperMap2.default.Util.isInTheSameDomain(url);
            if (isInTheSameDomain) {
                if (url.indexOf(".jsonp") > 0) {
                    url = url.replace(/.jsonp/, ".json");
                }
            } else {
                if (!(url.indexOf(".jsonp") > 0)) {
                    url = url.replace(/.json/, ".jsonp");
                }
            }
            me.options.url = url;
            me.options.isInTheSameDomain = isInTheSameDomain;
            _SuperMap2.default.Util.committer(me.options);
        }

        /*
         * Method: calculatePollingTimes
         * 计算剩余请求失败执行次数。
         */

    }, {
        key: 'calculatePollingTimes',
        value: function calculatePollingTimes() {
            var me = this;
            if (me.times) {
                if (me.totalTimes > me.POLLING_TIMES) {
                    if (me.times > me.POLLING_TIMES) {
                        me.totalTimes = me.POLLING_TIMES;
                    } else {
                        me.totalTimes = me.times;
                    }
                } else {
                    if (me.times < me.totalTimes) {
                        me.totalTimes = me.times;
                    }
                }
            } else {
                if (me.totalTimes > me.POLLING_TIMES) {
                    me.totalTimes = me.POLLING_TIMES;
                }
            }
            me.totalTimes--;
        }

        /*
         * Method: isServiceSupportPolling
         * 判断服务是否支持轮询。
         */

    }, {
        key: 'isServiceSupportPolling',
        value: function isServiceSupportPolling() {
            var me = this;
            return !(me.CLASS_NAME === "SuperMap.REST.ThemeService" || me.CLASS_NAME === "SuperMap.REST.EditFeaturesService");
        }

        /*
         * Method: serviceProcessCompleted
         * 状态完成，执行此方法。
         *
         * Parameters:
         * result - {Object} 服务器返回的结果对象。
         */

    }, {
        key: 'serviceProcessCompleted',
        value: function serviceProcessCompleted(result) {
            result = _SuperMap2.default.Util.transformResult(result);
            this.events.triggerEvent("processCompleted", { result: result });
        }

        /*
         * Method: serviceProcessFailed
         * 状态失败，执行此方法。
         *
         * Parameters:
         * result - {Object} 服务器返回的结果对象。
         */

    }, {
        key: 'serviceProcessFailed',
        value: function serviceProcessFailed(result) {
            result = _SuperMap2.default.Util.transformResult(result);
            var error = result.error || result;
            this.events.triggerEvent("processFailed", { error: error });
        }
    }]);

    return CommonServiceBase;
}();

exports.default = CommonServiceBase;


_SuperMap2.default.CommonServiceBase = CommonServiceBase;

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

_olDebug2.default.supermap = _olDebug2.default.supermap || {};

/**
 * @class ol.supermap.ServiceBase
 * @description ol.supermap的服务基类。
 * @param url - {String} 与客户端交互的服务地址。
 * @param options - {Object} 参数。
 */

var ServiceBase = function (_ol$Observable) {
    _inherits(ServiceBase, _ol$Observable);

    function ServiceBase(url, options) {
        _classCallCheck(this, ServiceBase);

        var _this = _possibleConstructorReturn(this, (ServiceBase.__proto__ || Object.getPrototypeOf(ServiceBase)).call(this, url, options));

        _this.options = options || {};
        _this.url = url;
        //服务来源 iServer|iPortal|online
        _this.options.serverType = url;
        _this.dispatchEvent({ type: 'initialized', value: _this });
        return _this;
    }

    return ServiceBase;
}(_olDebug2.default.Observable);

exports.default = ServiceBase;

_olDebug2.default.supermap.ServiceBase = ServiceBase;

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _JSON = __webpack_require__(83);

var _JSON2 = _interopRequireDefault(_JSON);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.Format.GeoJSON
 * @description GeoJSON 的读和写。使用 <SuperMap.Format.GeoJSON> 构造器创建一个GeoJSON解析器.
 * @augments SuperMap.Format.JSON
 * @param options - {Object} 选项对象，
 */
var GeoJSON = function (_JSONFormat) {
    _inherits(GeoJSON, _JSONFormat);

    function GeoJSON() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, GeoJSON);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = GeoJSON.__proto__ || Object.getPrototypeOf(GeoJSON)).call.apply(_ref, [this].concat(args))), _this), _this.ignoreExtraDims = false, _this.parseCoords = {
            /**
             * @method SuperMap.Format.GeoJSON.parseCoords.point
             * @description 将一组坐标成一个<SuperMap.Geometry>对象。
             * @param array - {Object} GeoJSON片段中的一组坐标。
             * @return {SuperMap.Geometry} 一个几何对象。
             */
            "point": function point(array) {
                if (this.ignoreExtraDims == false && array.length != 2) {
                    throw "Only 2D points are supported: " + array;
                }
                return new _SuperMap2.default.Geometry.Point(array[0], array[1]);
            },

            /**
             * @method SuperMap.Format.GeoJSON.parseCoords.multipoint
             * @description 将坐标组数组转化成为一个<SuperMap.Geometry>对象。
             * @param array - {Object} GeoJSON片段中的坐标组数组。
             * @return {SuperMap.Geometry} 一个几何对象。
             */
            "multipoint": function multipoint(array) {
                var points = [];
                var p = null;
                for (var i = 0, len = array.length; i < len; ++i) {
                    try {
                        p = this.parseCoords["point"].apply(this, [array[i]]);
                    } catch (err) {
                        throw err;
                    }
                    points.push(p);
                }
                return new _SuperMap2.default.Geometry.MultiPoint(points);
            },

            /**
             * @method SuperMap.Format.GeoJSON.parseCoords.linestring
             * @description 将坐标组数组转化成为一个<SuperMap.Geometry>对象。
             * @param array - {Object} GeoJSON片段中的坐标组数组。
             * @return {SuperMap.Geometry} 一个几何对象。
             */
            "linestring": function linestring(array) {
                var points = [];
                var p = null;
                for (var i = 0, len = array.length; i < len; ++i) {
                    try {
                        p = this.parseCoords["point"].apply(this, [array[i]]);
                    } catch (err) {
                        throw err;
                    }
                    points.push(p);
                }
                return new _SuperMap2.default.Geometry.LineString(points);
            },

            /**
             * @method SuperMap.Format.GeoJSON.parseCoords.multilinestring
             * @description 将坐标组数组转化成为一个<SuperMap.Geometry>对象。
             * @param array - {Object} GeoJSON片段中的坐标组数组。
             * @return {SuperMap.Geometry} 一个几何对象。
             */
            "multilinestring": function multilinestring(array) {
                var lines = [];
                var l = null;
                for (var i = 0, len = array.length; i < len; ++i) {
                    try {
                        l = this.parseCoords["linestring"].apply(this, [array[i]]);
                    } catch (err) {
                        throw err;
                    }
                    lines.push(l);
                }
                return new _SuperMap2.default.Geometry.MultiLineString(lines);
            },

            /**
             * @method SuperMap.Format.GeoJSON.parseCoords.polygon
             * @description 将坐标组数组转化成为一个<SuperMap.Geometry>对象。
             * @return {SuperMap.Geometry} 一个几何对象。
             */
            "polygon": function polygon(array) {
                var rings = [];
                var r, l;
                for (var i = 0, len = array.length; i < len; ++i) {
                    try {
                        l = this.parseCoords["linestring"].apply(this, [array[i]]);
                    } catch (err) {
                        throw err;
                    }
                    r = new _SuperMap2.default.Geometry.LinearRing(l.components);
                    rings.push(r);
                }
                return new _SuperMap2.default.Geometry.Polygon(rings);
            },

            /**
             * @method SuperMap.Format.GeoJSON.parseCoords.multipolygon
             * @description 将坐标组数组转化成为一个<SuperMap.Geometry>对象。
             * @param array - {Object} GeoJSON片段中的坐标组数组。
             * @return {SuperMap.Geometry} 一个几何对象。
             */
            "multipolygon": function multipolygon(array) {
                var polys = [];
                var p = null;
                for (var i = 0, len = array.length; i < len; ++i) {
                    try {
                        p = this.parseCoords["polygon"].apply(this, [array[i]]);
                    } catch (err) {
                        throw err;
                    }
                    polys.push(p);
                }
                return new _SuperMap2.default.Geometry.MultiPolygon(polys);
            },

            /**
             * @method SuperMap.Format.GeoJSON.parseCoords.box
             * @description 将坐标组数组转化成为一个<SuperMap.Geometry>对象。
             * @param array - {Object} GeoJSON片段中的坐标组数组。
             * @return {SuperMap.Geometry} 一个几何对象。
             */
            "box": function box(array) {
                if (array.length != 2) {
                    throw "GeoJSON box coordinates must have 2 elements";
                }
                return new _SuperMap2.default.Geometry.Polygon([new _SuperMap2.default.Geometry.LinearRing([new _SuperMap2.default.Geometry.Point(array[0][0], array[0][1]), new _SuperMap2.default.Geometry.Point(array[1][0], array[0][1]), new _SuperMap2.default.Geometry.Point(array[1][0], array[1][1]), new _SuperMap2.default.Geometry.Point(array[0][0], array[1][1]), new _SuperMap2.default.Geometry.Point(array[0][0], array[0][1])])]);
            }

        }, _this.extract = {
            /**
             * @method SuperMap.Format.GeoJSON.extract.feature
             * @description 返回一个表示单个要素对象的GeoJSON的一部分。
             * @param feature - iServer要素对象
             * @return {Object} 一个表示点的对象。
             */
            'feature': function feature(_feature) {
                var geom = this.extract.geometry.apply(this, [_feature.geometry]);
                var json = {
                    "type": "Feature",
                    "properties": this.createAttributes(_feature),
                    "geometry": geom
                };

                if (_feature.geometry && _feature.geometry.type === 'TEXT') {
                    json.properties.texts = _feature.geometry.texts;
                    json.properties.textStyle = _feature.geometry.textStyle;
                }
                if (_feature.fid !== null) {
                    json.id = _feature.fid;
                }
                if (_feature.ID !== null) {
                    json.id = _feature.ID;
                }
                return json;
            },

            /**
             * @method SuperMap.Format.GeoJSON.extract.geometry
             * @description 返回一个表示单个几何对象的GeoJSON的一部分。
             * @param geometry -iServer 几何对象
             * @return {Object} 一个表示几何体的对象。
             */
            'geometry': function geometry(_geometry) {
                if (_geometry == null) {
                    return null;
                }
                var geo = this.toGeometry(_geometry);
                var geometryType = geo.type;
                var data = this.extract[geometryType.toLowerCase()].apply(this, [geo]);
                geometryType = geometryType === 'TEXT' ? 'Point' : geometryType;
                var json;
                if (geometryType === "Collection") {
                    json = {
                        "type": "GeometryCollection",
                        "geometries": data
                    };
                } else {
                    json = {
                        "type": geometryType,
                        "coordinates": data
                    };
                }
                return json;
            },

            /**
             * @method SuperMap.Format.GeoJSON.extract.point
             * @description 从一个点对象中返回一个坐标组。
             * @param point - {SuperMap.Geometry.Point} 一个点对象。
             * @return {Array} 一个表示一个点的坐标组。
             */
            'point': function point(_point) {
                return [_point.x, _point.y];
            },

            /**
             * @method SuperMap.Format.GeoJSON.extract.point
             * @description 从一个文本对象中返回一个坐标组。
             * @param geo 一个文本对象。
             * @return {Array} 一个表示一个点的坐标组。
             */
            'text': function text(geo) {
                return [geo.points[0].x, geo.points[0].y];
            },

            /**
             * @method SuperMap.Format.GeoJSON.extract.multipoint
             * @description 从一个多点对象中返一个坐标组数组。
             * @param multipoint - {SuperMap.Geometry.MultiPoint} 多点对象。
             * @return {Array} 一个表示多点的坐标组数组。
             */
            'multipoint': function multipoint(_multipoint) {
                var array = [];
                for (var i = 0, len = _multipoint.components.length; i < len; ++i) {
                    array.push(this.extract.point.apply(this, [_multipoint.components[i]]));
                }
                return array;
            },

            /**
             * @method SuperMap.Format.GeoJSON.extract.linestring
             * @description 从一个线对象中返回一个坐标组数组。
             * @param linestring - {SuperMap.Geometry.LineString} 线对象。
             * @return {Array} 一个表示线对象的坐标组数组。
             */
            'linestring': function linestring(_linestring) {
                var array = [];
                for (var i = 0, len = _linestring.components.length; i < len; ++i) {
                    array.push(this.extract.point.apply(this, [_linestring.components[i]]));
                }
                return array;
            },

            /**
             * @method SuperMap.Format.GeoJSON.extract.multilinestring
             * @description 从一个多线对象中返回一个线数组。
             * @param multilinestring - {SuperMap.Geometry.MultiLineString} 多线对象
             *
             * @return {Array} 一个表示多线的线数组。
             */
            'multilinestring': function multilinestring(_multilinestring) {
                var array = [];
                for (var i = 0, len = _multilinestring.components.length; i < len; ++i) {
                    array.push(this.extract.linestring.apply(this, [{ components: _multilinestring.components[i] }]));
                }
                return array;
            },

            /**
             * @method SuperMap.Format.GeoJSON.extract.polygon
             * @description 从一个面对象中返回一组线环。
             * @polygon - {SuperMap.Geometry.Polygon} 面对象。
             * @return {Array} 一组表示面的线环。
             */
            'polygon': function polygon(_polygon) {
                var array = [];
                for (var i = 0, len = _polygon.components.length; i < len; ++i) {
                    array.push(this.extract.linestring.apply(this, [{ components: _polygon.components[i] }]));
                }
                return array;
            },

            /**
             * @method SuperMap.Format.GeoJSON.extract.multipolygon
             * @description 从一个多面对象中返回一组面。
             * @param multipolygon - {SuperMap.Geometry.MultiPolygon} 多面对象。
             * @return {Array} 一组表示多面的面。
             */
            'multipolygon': function multipolygon(_multipolygon) {
                var array = [];
                for (var i = 0, len = _multipolygon.components.length; i < len; ++i) {
                    array.push(this.extract.polygon.apply(this, [{ components: _multipolygon.components[i] }]));
                }
                return array;
            },

            /**
             * @method SuperMap.Format.GeoJSON.extract.collection
             * @description 从一个几何要素集合中一组几何要素数组。
             * @param collection - {SuperMap.Geometry.Collection} 几何要素集合。
             * @return {Array} 一组表示几何要素集合的几何要素数组。
             */
            'collection': function collection(_collection) {
                var len = _collection.components.length;
                var array = new Array(len);
                for (var i = 0; i < len; ++i) {
                    array[i] = this.extract.geometry.apply(this, [{
                        type: "Collection",
                        components: _collection.components[i]
                    }]);
                }
                return array;
            }
        }, _this.CLASS_NAME = "SuperMap.Format.GeoJSON", _temp), _possibleConstructorReturn(_this, _ret);
    }

    /**
     * APIProperty: ignoreExtraDims
     * {Boolean} 忽略维度超过2的几何要素
     */


    _createClass(GeoJSON, [{
        key: 'read',


        /**
         * @method SuperMap.Format.GeoJSON.read
         * @description 反序列化一个 GeoJSON 字符串
         *
         * @param json - {String}  GeoJSON 字符串
         * @param type - {String} 可选的字符串，它决定了输出的格式。
         *     支持的值有："Geometry","Feature",和"FeatureCollection",
         *     如果此值为null，则会使用默认值"FeaureCollection"。
         * @param filter - {Function} 对象中每个层次每个键值对都会调用此函数得出一个结果。
         *     每个值都会被filter函数的结果所替换掉。这个函数可被用来将某些对象转化成
         *     某个类相应的对象，或者将日期字符串转化成Date对象。
         *
         * @return {Object}
         *    返回值依赖于type参数的值。如果type等于"FeatureCollection"（默认值），
         *     返回值将会是 <SuperMap.Feature.Vector> 数组。如果type为"Geometry",
         *     输入的json对象必须表示一个唯一的几何体，然后返回值就会是 <SuperMap.Feature.Geometry>
         *     如果type为"Feature"，输入的json对象也必须表示的一个要素，这样返回值才会是<SuperMap.Feature.Vector> 。
         */
        value: function read(json, type, filter) {
            type = type ? type : "FeatureCollection";
            var results = null;
            var obj = null;
            if (typeof json == "string") {
                obj = _get(GeoJSON.prototype.__proto__ || Object.getPrototypeOf(GeoJSON.prototype), 'read', this).call(this, json, filter);
            } else {
                obj = json;
            }
            if (!obj) {
                //SuperMap.Console.error("Bad JSON: " + json);
            } else if (typeof obj.type != "string") {
                //SuperMap.Console.error("Bad GeoJSON - no type: " + json);
            } else if (this.isValidType(obj, type)) {
                switch (type) {
                    case "Geometry":
                        try {
                            results = this.parseGeometry(obj);
                        } catch (err) {
                            //SuperMap.Console.error(err);
                        }
                        break;
                    case "Feature":
                        try {
                            results = this.parseFeature(obj);
                            results.type = "Feature";
                        } catch (err) {
                            //SuperMap.Console.error(err);
                        }
                        break;
                    case "FeatureCollection":
                        // for type FeatureCollection, we allow input to be any type
                        results = [];
                        switch (obj.type) {
                            case "Feature":
                                try {
                                    results.push(this.parseFeature(obj));
                                } catch (err) {
                                    results = null;
                                    //SuperMap.Console.error(err);
                                }
                                break;
                            case "FeatureCollection":
                                for (var i = 0, len = obj.features.length; i < len; ++i) {
                                    try {
                                        results.push(this.parseFeature(obj.features[i]));
                                    } catch (err) {
                                        results = null;
                                        // SuperMap.Console.error(err);
                                    }
                                }
                                break;
                            default:
                                try {
                                    var geom = this.parseGeometry(obj);
                                    results.push(new _SuperMap2.default.Feature.Vector(geom));
                                } catch (err) {
                                    results = null;
                                    //SuperMap.Console.error(err);
                                }
                        }
                        break;
                    default:
                        break;
                }
            }
            return results;
        }

        /**
         *  @method SuperMap.Format.GeoJSON.isValidType
         *  @description 检查一个GeoJSON对象是否和给定的类型相符的合法的对象。
         *  @return {Boolean} GeoJSON是否是给定类型的合法对象。
         */

    }, {
        key: 'isValidType',
        value: function isValidType(obj, type) {
            var valid = false;
            switch (type) {
                case "Geometry":
                    if (_SuperMap2.default.Util.indexOf(["Point", "MultiPoint", "LineString", "MultiLineString", "Polygon", "MultiPolygon", "Box", "GeometryCollection"], obj.type) == -1) {
                        // unsupported geometry type
                        //SuperMap.Console.error("Unsupported geometry type: " +
                        // obj.type);
                    } else {
                        valid = true;
                    }
                    break;
                case "FeatureCollection":
                    // allow for any type to be converted to a feature collection
                    valid = true;
                    break;
                default:
                    // for Feature types must match
                    if (obj.type == type) {
                        valid = true;
                    } else {
                        //SuperMap.Console.error("Cannot convert types from " +
                        //obj.type + " to " + type);
                    }
            }
            return valid;
        }

        /**
         * @method SuperMap.Format.GeoJSON.parseFeature
         * @description 将一个GeoJSON中的feature转化成<SuperMap.Feature.Vector>对象。
         * @param obj - {Object} 从GeoJSON对象中创建一个对象。
         * @return {SuperMap.Feature.Vector} 一个要素。
         */

    }, {
        key: 'parseFeature',
        value: function parseFeature(obj) {
            var feature, geometry, attributes, bbox;
            attributes = obj.properties ? obj.properties : {};
            bbox = obj.geometry && obj.geometry.bbox || obj.bbox;
            try {
                geometry = this.parseGeometry(obj.geometry);
            } catch (err) {
                // deal with bad geometries
                throw err;
            }
            feature = new _SuperMap2.default.Feature.Vector(geometry, attributes);
            if (bbox) {
                feature.bounds = _SuperMap2.default.Bounds.fromArray(bbox);
            }
            if (obj.id) {
                feature.fid = obj.id;
            }
            return feature;
        }

        /**
         * @method SuperMap.Format.GeoJSON.parseGeometry
         * @description将一个GeoJSON中的几何要素转化成<SuperMap.Geometry>对象。
         * @param obj - {Object} 从GeoJSON对象中创建一个对象。
         * @return {SuperMap.Geometry} 一个几何要素。
         */

    }, {
        key: 'parseGeometry',
        value: function parseGeometry(obj) {
            if (obj == null) {
                return null;
            }
            var geometry,
                collection = false;
            if (obj.type == "GeometryCollection") {
                if (!_SuperMap2.default.Util.isArray(obj.geometries)) {
                    throw "GeometryCollection must have geometries array: " + obj;
                }
                var numGeom = obj.geometries.length;
                var components = new Array(numGeom);
                for (var i = 0; i < numGeom; ++i) {
                    components[i] = this.parseGeometry.apply(this, [obj.geometries[i]]);
                }
                geometry = new _SuperMap2.default.Geometry.Collection(components);
                collection = true;
            } else {
                if (!_SuperMap2.default.Util.isArray(obj.coordinates)) {
                    throw "Geometry must have coordinates array: " + obj;
                }
                if (!this.parseCoords[obj.type.toLowerCase()]) {
                    throw "Unsupported geometry type: " + obj.type;
                }
                try {
                    geometry = this.parseCoords[obj.type.toLowerCase()].apply(this, [obj.coordinates]);
                } catch (err) {
                    // deal with bad coordinates
                    throw err;
                }
            }
            // We don't reproject collections because the children are reprojected
            // for us when they are created.
            if (this.internalProjection && this.externalProjection && !collection) {
                geometry.transform(this.externalProjection, this.internalProjection);
            }
            return geometry;
        }

        /**
         * Property: parseCoords
         * 一个属性名对应着GeoJSON对象的几何类型的对象。每个属性其实都是一个实际上做解析用的方法。
         */

    }, {
        key: 'write',


        /**
         * @method SuperMap.Format.GeoJSON.write
         * @description 序列化一个要素对象，几何对象，要素对象数组为一个GeoJSON字符串。
         * @param obj - {Object} 一个 <SuperMap.Feature.Vector> 对象，一个 <SuperMap.Geometry> 对象或者一个要素对象数组。
         * @param pretty - {Boolean} 是否使用换行和缩进来控制输出。默认值为false。
         * @return {String} 一个GeoJSON字符串，它表示了输入的几何对象，要素对象，或者要素对象数组。
         */
        value: function write(obj, pretty) {
            var geojson = {
                "type": null
            };
            if (_SuperMap2.default.Util.isArray(obj)) {
                geojson.type = "FeatureCollection";
                var numFeatures = obj.length;
                geojson.features = new Array(numFeatures);
                for (var i = 0; i < numFeatures; ++i) {
                    var element = obj[i];
                    if (isGeometry(element)) {
                        var feature = {};
                        feature.geometry = element;
                        geojson.features[i] = this.extract.feature.apply(this, [feature]);
                    } else {
                        geojson.features[i] = this.extract.feature.apply(this, [element]);
                    }
                }
            } else if (isGeometry(obj)) {
                var feature = {};
                feature.geometry = obj;
                geojson = this.extract.feature.apply(this, [feature]);
            }

            function isGeometry(input) {
                return input.hasOwnProperty("parts") && input.hasOwnProperty("points");
            }

            return _get(GeoJSON.prototype.__proto__ || Object.getPrototypeOf(GeoJSON.prototype), 'write', this).call(this, geojson, pretty);
        }

        /**
         * @method SuperMap.Format.GeoJSON.createCRSObject
         * @description 从一个要素对象中创建一个坐标参考系对象。
         * @param object - {SuperMap.Feature.Vector} 要素对象
         * @return {Object} 一个可作为GeoJSON对象的crs属性使用的对象。
         */

    }, {
        key: 'createCRSObject',
        value: function createCRSObject(object) {
            var proj = object.layer.projection.toString();
            var crs = {};
            if (proj.match(/epsg:/i)) {
                var code = parseInt(proj.substring(proj.indexOf(":") + 1));
                if (code == 4326) {
                    crs = {
                        "type": "name",
                        "properties": {
                            "name": "urn:ogc:def:crs:OGC:1.3:CRS84"
                        }
                    };
                } else {
                    crs = {
                        "type": "name",
                        "properties": {
                            "name": "EPSG:" + code
                        }
                    };
                }
            }
            return crs;
        }

        /**
         * Property: extract
         * 一个属性名对应着GeoJSON类型的对象。其值为相应的实际的解析方法。
         */

    }, {
        key: 'createAttributes',
        value: function createAttributes(feature) {
            if (!feature) {
                return null;
            }
            var attr = {};
            processFieldsAttributes(feature, attr);
            var exceptKeys = ["fieldNames", "fieldValues", "geometry"];
            for (var key in feature) {
                if (exceptKeys.indexOf(key) > -1) {
                    continue;
                }
                attr[key] = feature[key];
            }

            function processFieldsAttributes(feature, attributes) {
                if (!(feature.hasOwnProperty("fieldNames") && feature.hasOwnProperty("fieldValues"))) {
                    return;
                }
                var names = feature.fieldNames,
                    values = feature.fieldValues;
                for (var i in names) {
                    attributes[names[i]] = values[i];
                }
            }

            return attr;
        }
    }, {
        key: 'toGeometry',
        value: function toGeometry(geometry) {
            var me = this,
                geoType = geometry.type;
            if (geoType === 'polygon') {
                geoType = _SuperMap2.default.REST.GeometryType.REGION;
            }
            switch (geoType.toUpperCase()) {
                case _SuperMap2.default.REST.GeometryType.POINT:
                    return me.toGeoPoint(geometry);
                case _SuperMap2.default.REST.GeometryType.LINE:
                    return me.toGeoLine(geometry);
                case _SuperMap2.default.REST.GeometryType.LINEM:
                    return me.toGeoLinem(geometry);
                case _SuperMap2.default.REST.GeometryType.REGION:
                    return me.toGeoRegion(geometry);
                case _SuperMap2.default.REST.GeometryType.POINTEPS:
                    return me.toGeoPoint(geometry);
                // case SuperMap.REST.GeometryType.LINEEPS:
                //     return me.toGeoLineEPS();
                // case SuperMap.REST.GeometryType.REGIONEPS:
                //     return me.toGeoRegionEPS();
                default:
                    return geometry;
            }
        }

        /**
         * @method SuperMap.Format.GeoJSON.toGeoPoint
         * @description 将服务端的点几何对象转换为几何对象
         */

    }, {
        key: 'toGeoPoint',
        value: function toGeoPoint(geometry) {
            var me = this,
                geoPoints = geometry.points || [],
                geoParts = geometry.parts || [geoPoints.length],
                len = geoParts.length;
            if (len < 1) {
                return null;
            }
            if (len === 1) {
                return { type: "Point", x: parseFloat(geoPoints[0].x), y: parseFloat(geoPoints[0].y) };
            } else {
                for (var i = 0, pointList = []; i < len; i++) {
                    pointList.push({ x: parseFloat(geoPoints[i].x), y: parseFloat(geoPoints[i].y) });
                }
                return { type: "MultiPoint", components: pointList };
            }
        }

        /**
         *
         * @method SuperMap.Format.GeoJSON.toGeoPoint
         * @description 将服务端的线几何对象转换为几何对象。
         */

    }, {
        key: 'toGeoLine',
        value: function toGeoLine(geometry) {
            var me = this,
                geoPoints = geometry.points || [],
                geoParts = geometry.parts || [geoPoints.length],
                len = geoParts.length;
            if (len < 1) {
                return null;
            }
            if (len === 1) {
                for (var i = 0, pointList = []; i < geoParts[0]; i++) {
                    pointList.push({ x: parseFloat(geoPoints[i].x), y: parseFloat(geoPoints[i].y) });
                }
                //判断线是否闭合，如果闭合，则返回LinearRing，否则返回LineString
                if (me.isPointsEquals(pointList[0], pointList[geoParts[0] - 1])) {
                    pointList.pop();
                    pointList.push(pointList[0]);
                }
                return { type: "LineString", components: pointList };
            } else {
                for (var i = 0, lineList = []; i < len; i++) {
                    for (var j = 0, pointList = []; j < geoParts[i]; j++) {
                        pointList.push({ x: parseFloat(geoPoints[j].x), y: parseFloat(geoPoints[j].y) });
                    }
                    lineList.push(pointList);
                    geoPoints.splice(0, geoParts[i]);
                }
                return { type: "MultiLineString", components: lineList };
            }
        }

        /**
         *
         * @method SuperMap.Format.GeoJSON.toGeoLinem
         * @description 将服务端的路由线几何对象转换为几何对象。
         */

    }, {
        key: 'toGeoLinem',
        value: function toGeoLinem(geometry) {
            var me = this,
                geoPoints = geometry.points || [],
                geoParts = geometry.parts || [geoPoints.length],
                len = geoParts.length,
                lineList = [],
                type;
            if (len < 1) {
                return null;
            }
            for (var i = 0, pointIndex = 0, pointList = []; i < len; i++) {
                for (var j = 0; j < geoParts[i]; j++) {
                    pointList.push({
                        x: parseFloat(geoPoints[pointIndex + j].x),
                        y: parseFloat(geoPoints[pointIndex + j].y)
                    });
                }
                pointIndex += geoParts[i];
                //判断线是否闭合，如果闭合，则返回LinearRing，否则返回LineString
                if (me.isPointsEquals(pointList[0], pointList[geoParts[0] - 1])) {
                    pointList.pop();
                    pointList.push(pointList[0]);
                }
                lineList.push(pointList);
                pointList = [];
            }
            return { type: "MultiLineString", components: lineList };
        }

        /**
         *
         * @method SuperMap.Format.GeoJSON.toGeoRegion
         * @description 将服务端的面几何对象转换为几何对象。
         */

    }, {
        key: 'toGeoRegion',
        value: function toGeoRegion(geometry) {
            var CCWArray = [],
                geoPoints = geometry.points || [],
                geoParts = geometry.parts || [geoPoints.length],
                len = geoParts.length;
            if (len < 1) {
                return null;
            }
            var polygonArray = new Array();
            for (var i = 0, pointIndex = 0, pointList = []; i < len; i++) {
                for (var j = 0; j < geoParts[i]; j++) {
                    pointList.push({
                        x: parseFloat(geoPoints[pointIndex + j].x),
                        y: parseFloat(geoPoints[pointIndex + j].y)
                    });
                }

                pointIndex += geoParts[i];
                var linearRing = pointList.concat();
                linearRing.pop();
                linearRing.push(linearRing[0]);

                if (this.isClockWise(linearRing) > 0) {
                    CCWArray.push(linearRing);
                } else {
                    polygonArray.push([linearRing]);
                }

                if (i === len - 1) {
                    var polyLength = polygonArray.length;
                    if (!!polyLength) {
                        polygonArray[polyLength - 1] = polygonArray[polyLength - 1].concat(CCWArray);
                    } else {
                        for (var k = 0, length = CCWArray.length; k < length; k++) {
                            polygonArray.push([CCWArray[k]].concat());
                        }
                    }
                }
                pointList = [];
            }
            return { type: "MultiPolygon", components: polygonArray };
        }
    }, {
        key: 'isClockWise',
        value: function isClockWise(points) {
            var length = points.length;
            if (length < 3) {
                return 0.0;
            }
            var s = points[0].y * (points[length - 1].x - points[1].x);
            points.push(points[0]);
            for (var i = 1; i < length; i++) {
                s += points[i].y * (points[i - 1].x - points[i + 1].x);
            }
            return s * 0.5;
        }
    }, {
        key: 'isPointsEquals',
        value: function isPointsEquals(point1, point2) {
            return point1.x === point2.x && point1.y === point2.y;
        }
    }]);

    return GeoJSON;
}(_JSON2.default);

exports.default = GeoJSON;

_SuperMap2.default.Format.GeoJSON = GeoJSON;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _GeoJSON = __webpack_require__(5);

var _GeoJSON2 = _interopRequireDefault(_GeoJSON);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.SpatialAnalystBase
 * @constructs SuperMap.SpatialAnalystBase
 * @classdesc
 * 空间分析服务基类。
 * @extends {SuperMap.CommonServiceBase}
 * @api
 */
var SpatialAnalystBase = function (_CommonServiceBase) {
    _inherits(SpatialAnalystBase, _CommonServiceBase);

    function SpatialAnalystBase(url, options) {
        _classCallCheck(this, SpatialAnalystBase);

        var _this = _possibleConstructorReturn(this, (SpatialAnalystBase.__proto__ || Object.getPrototypeOf(SpatialAnalystBase)).call(this, url, options));

        _this.format = _REST.DataFormat.GEOJSON;
        _this.CLASS_NAME = "SuperMap.SpatialAnalystBase";

        if (options && options.format) {
            _this.format = options.format.toUpperCase();
        }
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用的资源属性置空。
     */


    /**
     *  Property: format
     *  {String} 查询结果返回格式，目前支持iServerJSON 和GeoJSON两种格式
     *  参数格式为"ISERVER","GEOJSON",GEOJSON
     */


    _createClass(SpatialAnalystBase, [{
        key: 'destroy',
        value: function destroy() {
            _get(SpatialAnalystBase.prototype.__proto__ || Object.getPrototypeOf(SpatialAnalystBase.prototype), 'destroy', this).call(this);
            this.format = null;
        }

        /**
         * @method SuperMap.SpatialAnalystBase.serviceProcessCompleted
         * @description 分析完成，执行此方法。
         * @param result - {Object} 服务器返回的结果对象。
         */

    }, {
        key: 'serviceProcessCompleted',
        value: function serviceProcessCompleted(result) {
            var me = this,
                analystResult;
            result = _SuperMap2.default.Util.transformResult(result);
            if (result && me.format === _REST.DataFormat.GEOJSON && typeof me.toGeoJSONResult === 'function') {
                analystResult = me.toGeoJSONResult(result);
            }
            if (!analystResult) {
                analystResult = result;
            }
            me.events.triggerEvent("processCompleted", { result: analystResult });
        }

        /**
         * @method SuperMap.SpatialAnalystBase.toGeoJSONResult
         * @description 将含有geometry的数据转换为geojson格式。
         * @param result - {Object} 服务器返回的结果对象。
         *
         */

    }, {
        key: 'toGeoJSONResult',
        value: function toGeoJSONResult(result) {
            if (!result) {
                return null;
            }
            var geoJSONFormat = new _GeoJSON2.default();
            if (result.recordsets) {
                for (var i = 0, recordsets = result.recordsets, len = recordsets.length; i < len; i++) {
                    if (recordsets[i].features) {
                        recordsets[i].features = JSON.parse(geoJSONFormat.write(recordsets[i].features));
                    }
                }
            } else if (result.recordset && result.recordset.features) {
                result.recordset.features = JSON.parse(geoJSONFormat.write(result.recordset.features));
            }

            return result;
        }
    }]);

    return SpatialAnalystBase;
}(_CommonServiceBase3.default);

exports.default = SpatialAnalystBase;

_SuperMap2.default.SpatialAnalystBase = SpatialAnalystBase;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _GeoJSON = __webpack_require__(5);

var _GeoJSON2 = _interopRequireDefault(_GeoJSON);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

_olDebug2.default.supermap = _olDebug2.default.supermap || {};

var Util = function () {
    function Util() {
        _classCallCheck(this, Util);
    }

    _createClass(Util, null, [{
        key: 'toGeoJSON',
        value: function toGeoJSON(smObj) {
            if (smObj) {
                var format = new _GeoJSON2.default();
                return JSON.parse(format.write(smObj));
            }
        }
    }, {
        key: 'toSuperMapGeometry',
        value: function toSuperMapGeometry(geoJSON) {
            if (geoJSON && geoJSON.type) {
                var format = new _GeoJSON2.default();
                var result = format.read(geoJSON, "FeatureCollection");
                return result[0].geometry;
            }
        }
    }, {
        key: 'resolutionToScale',
        value: function resolutionToScale(resolution, dpi, mapUnit) {
            var inchPerMeter = 1 / 0.0254;
            // 地球半径。
            var meterPerMapUnit = this.getMeterPerMapUnit(mapUnit);
            var scale = resolution * dpi * inchPerMeter * meterPerMapUnit;
            scale = 1 / scale;
            return scale;
        }
    }, {
        key: 'scaleToResolution',
        value: function scaleToResolution(scale, dpi, mapUnit) {
            var inchPerMeter = 1 / 0.0254;
            var meterPerMapUnitValue = this.getMeterPerMapUnit(mapUnit);
            var resolution = scale * dpi * inchPerMeter * meterPerMapUnitValue;
            resolution = 1 / resolution;
            return resolution;
        }
    }, {
        key: 'getMeterPerMapUnit',
        value: function getMeterPerMapUnit(mapUnit) {
            var earchRadiusInMeters = 6378137;
            var meterPerMapUnit;
            if (mapUnit === _SuperMap2.default.Unit.METER) {
                meterPerMapUnit = 1;
            } else if (mapUnit === _SuperMap2.default.Unit.DEGREE) {
                // 每度表示多少米。
                meterPerMapUnit = Math.PI * 2 * earchRadiusInMeters / 360;
            } else if (mapUnit === _SuperMap2.default.Unit.KILOMETER) {
                meterPerMapUnit = 1.0E-3;
            } else if (mapUnit === _SuperMap2.default.Unit.INCH) {
                meterPerMapUnit = 1 / 2.5399999918E-2;
            } else if (mapUnit === _SuperMap2.default.Unit.FOOT) {
                meterPerMapUnit = 0.3048;
            } else {
                return meterPerMapUnit;
            }
            return meterPerMapUnit;
        }
    }, {
        key: 'isArray',
        value: function isArray(obj) {
            return Object.prototype.toString.call(obj) == '[object Array]';
        }
    }, {
        key: 'Csv2GeoJSON',
        value: function Csv2GeoJSON(csv, options) {
            var defaultOptions = {
                titles: ['lon', 'lat'],
                latitudeTitle: 'lat',
                longitudeTitle: 'lon',
                fieldSeparator: ',',
                lineSeparator: '\n',
                deleteDoubleQuotes: true,
                firstLineTitles: false
            };
            options = options || defaultOptions;
            var _propertiesNames = [];
            if (typeof csv === 'string') {
                var titulos = options.titles;
                if (options.firstLineTitles) {
                    csv = csv.split(options.lineSeparator);
                    if (csv.length < 2) return;
                    titulos = csv[0];
                    csv.splice(0, 1);
                    csv = csv.join(options.lineSeparator);
                    titulos = titulos.trim().split(options.fieldSeparator);
                    for (var i = 0; i < titulos.length; i++) {
                        titulos[i] = _deleteDoubleQuotes(titulos[i]);
                    }
                    options.titles = titulos;
                }
                for (var i = 0; i < titulos.length; i++) {
                    var prop = titulos[i].toLowerCase().replace(/[^\w ]+/g, '').replace(/ +/g, '_');
                    if (prop == '' || prop == '_') prop = 'prop-' + i;
                    _propertiesNames[i] = prop;
                }
                csv = _csv2json(csv);
            }
            return csv;

            function _deleteDoubleQuotes(cadena) {
                if (options.deleteDoubleQuotes) cadena = cadena.trim().replace(/^"/, "").replace(/"$/, "");
                return cadena;
            }

            function _csv2json(csv) {
                var json = {};
                json["type"] = "FeatureCollection";
                json["features"] = [];
                var titulos = options.titles;
                csv = csv.split(options.lineSeparator);
                for (var num_linea = 0; num_linea < csv.length; num_linea++) {
                    var campos = csv[num_linea].trim().split(options.fieldSeparator),
                        lng = parseFloat(campos[titulos.indexOf(options.longitudeTitle)]),
                        lat = parseFloat(campos[titulos.indexOf(options.latitudeTitle)]);

                    var isInRange = lng < 180 && lng > -180 && lat < 90 && lat > -90;
                    if (!(campos.length == titulos.length && isInRange)) {
                        continue;
                    }

                    var feature = {};
                    feature["type"] = "Feature";
                    feature["geometry"] = {};
                    feature["properties"] = {};
                    feature["geometry"]["type"] = "Point";
                    feature["geometry"]["coordinates"] = [lng, lat];
                    for (var i = 0; i < titulos.length; i++) {
                        if (titulos[i] != options.latitudeTitle && titulos[i] != options.longitudeTitle) {
                            feature["properties"][_propertiesNames[i]] = _deleteDoubleQuotes(campos[i]);
                        }
                    }
                    json["features"].push(feature);
                }
                return json;
            }
        }
    }, {
        key: 'createCanvasContext2D',
        value: function createCanvasContext2D(opt_width, opt_height) {
            var canvas = document.createElement('CANVAS');
            if (opt_width) {
                canvas.width = opt_width;
            }
            if (opt_height) {
                canvas.height = opt_height;
            }
            return canvas.getContext('2d');
        }
    }]);

    return Util;
}();

exports.default = Util;
;

_olDebug2.default.supermap.Util = Util;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Class: SuperMap.NetworkAnalystServiceBase
 * 网络分析服务基类。
 * Inherits from:
 *  - <SuperMap.CommonServiceBase>
 */
var NetworkAnalystServiceBase = function (_CommonServiceBase) {
    _inherits(NetworkAnalystServiceBase, _CommonServiceBase);

    function NetworkAnalystServiceBase(url, options) {
        _classCallCheck(this, NetworkAnalystServiceBase);

        var _this = _possibleConstructorReturn(this, (NetworkAnalystServiceBase.__proto__ || Object.getPrototypeOf(NetworkAnalystServiceBase)).call(this, url, options));

        _this.format = _REST.DataFormat.GEOJSON;
        _this.CLASS_NAME = "SuperMap.NetworkAnalystServiceBase";

        if (options && options.format) {
            _this.format = options.format.toUpperCase();
        }
        return _this;
    }

    /**
     * APIMethod: destroy
     * 释放资源，将引用的资源属性置空。
     */


    /**
     *  Property: format
     *  {String} 查询结果返回格式，目前支持iServerJSON 和GeoJSON两种格式
     *  参数格式为"ISERVER","GEOJSON",GEOJSON
     */


    _createClass(NetworkAnalystServiceBase, [{
        key: 'destroy',
        value: function destroy() {
            _get(NetworkAnalystServiceBase.prototype.__proto__ || Object.getPrototypeOf(NetworkAnalystServiceBase.prototype), 'destroy', this).call(this);
            this.format = null;
        }

        /**
         * Method: serviceProcessCompleted
         * 分析完成，执行此方法。
         *
         * Parameters:
         * result - {Object} 服务器返回的结果对象。
         */

    }, {
        key: 'serviceProcessCompleted',
        value: function serviceProcessCompleted(result) {
            var me = this,
                analystResult;
            result = _SuperMap2.default.Util.transformResult(result);
            if (result && me.format === _REST.DataFormat.GEOJSON && typeof me.toGeoJSONResult === 'function') {
                analystResult = me.toGeoJSONResult(result);
            }
            if (!analystResult) {
                analystResult = result;
            }
            me.events.triggerEvent("processCompleted", { result: analystResult });
        }

        /**
         * Method: toGeoJSONResult
         * 将含有geometry的数据转换为geojson格式。只处理结果中的路由，由子类实现
         *
         * Parameters:
         * result - {Object} 服务器返回的结果对象。
         */

    }, {
        key: 'toGeoJSONResult',
        value: function toGeoJSONResult(result) {
            return null;
        }
    }]);

    return NetworkAnalystServiceBase;
}(_CommonServiceBase3.default);

exports.default = NetworkAnalystServiceBase;

_SuperMap2.default.NetworkAnalystServiceBase = NetworkAnalystServiceBase;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServerColor = __webpack_require__(11);

var _ServerColor2 = _interopRequireDefault(_ServerColor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Class: SuperMap.ServerStyle
 * 服务端矢量要素风格类
 * 该类用于定义点状符号、线状符号、填充符号风格及其相关属性。
 */
var ServerStyle = function () {

    /**
     * Constructor: SuperMap.ServerStyle
     * 服务端矢量要素风格类构造函数。
     *
     * Parameters:
     * options - {Object} 参数。
     *
     * Allowed options properties:
     * fillBackColor - {SuperMap.ServerColor} 填充背景颜色。
     * fillBackOpaque - {Boolean} 背景是否不透明。
     * fillForeColor - {SuperMap.ServerColor} 填充颜色。
     * fillGradientMode - {FillGradientMode} 渐变填充风格的渐变类型。
     * fillGradientAngle - {Number} 渐变填充的旋转角度。
     * fillGradientOffsetRatioX - {Number} 渐变填充中心点相对于填充区域范围中心点的水平偏移百分比。
     * fillGradientOffsetRatioY - {Number} 填充中心点相对于填充区域范围中心点的垂直偏移百分比。
     * fillOpaqueRate - {Number} 填充不透明度。
     * fillSymbolID - {Integer} 填充符号的编码。
     * lineColor - {SuperMap.ServerColor} 矢量要素的边线颜色。
     * lineSymbolID - {Integer} 线状符号的编码。
     * lineWidth - {Number} 边线的宽度。
     * markerAngle - {Number} 点状符号的旋转角度。
     * markerSize - {Number} 点状符号的大小。
     * markerSymbolID - {Integer} 点状符号的编码。
     */


    /**
     * APIProperty: markerSize
     * {Number} 点状符号的大小。
     * 单位为毫米，精度为0.1，默认值为1.0。当该属性设置为0时，采用符号默认大小1.0显示。当该属性设置为非法值时，交由服务器默认处理。
     */


    /**
     * APIProperty: lineWidth
     * {Number} 边线的宽度。
     * 单位为毫米，精度到0.1，默认值为1.0。
     */


    /**
     * APIProperty: lineColor
     * {SuperMap.ServerColor} 矢量要素的边线颜色。
     * 默认为黑色。
     */


    /**
     * APIProperty: fillOpaqueRate
     * {Number} 填充不透明度。
     * 合法值为0--100的数值。其中为0表示完全透明；100表示完全不透明。赋值小于0时按照0处理，大于100时按照100处理。默认值为 100。
     */


    /**
     * APIProperty: fillGradientOffsetRatioX
     * {Number} 渐变填充中心点相对于填充区域范围中心点的水平偏移百分比。
     * 它们的关系如下：设填充区域范围中心点的坐标为（x0, y0），填充中心点的坐标为（x, y），填充区域范围的宽度为 a，水平偏移百分比为 dx，则 x=x0 + a*dx/100。
     */


    /**
     * APIProperty: fillGradientMode
     * {FillGradientMode} 渐变填充风格的渐变类型。
     */


    /**
     * APIProperty: fillBackOpaque
     * {Boolean} 背景是否不透明。
     * false 表示透明。默认值为 false。
     */
    function ServerStyle(options) {
        _classCallCheck(this, ServerStyle);

        this.fillBackColor = null;
        this.fillBackOpaque = false;
        this.fillForeColor = null;
        this.fillGradientMode = null;
        this.fillGradientAngle = 0;
        this.fillGradientOffsetRatioX = 0;
        this.fillGradientOffsetRatioY = 0;
        this.fillOpaqueRate = 100;
        this.fillSymbolID = 0;
        this.lineColor = null;
        this.lineSymbolID = 0;
        this.lineWidth = 1;
        this.markerAngle = 0;
        this.markerSize = 1;
        this.markerSymbolID = -1;
        this.CLASS_NAME = "SuperMap.ServerStyle";

        var me = this;
        me.fillBackColor = new _ServerColor2.default(255, 255, 255);
        me.fillForeColor = new _ServerColor2.default(255, 0, 0);
        me.lineColor = new _ServerColor2.default(0, 0, 0);
        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: markerSymbolID
     * {Integer} 点状符号的编码。
     * 此编码用于唯一标识各点状符号。默认为 -1。关于线状符号的样式与对应的 ID 号请在 SuperMap 桌面软件中查找。
     */


    /**
     * APIProperty: markerAngle
     * {Number} 点状符号的旋转角度。
     * 以度为单位，精确到0.1度，逆时针方向为正方向，默认值为0。
     */


    /**
     * APIProperty: lineSymbolID
     * {Integer} 线状符号的编码。
     * 此编码用于唯一标识各普通填充风格的填充符号，默认值为0。关于线状符号的样式与对应的 ID 号请在 SuperMap 桌面软件中查找。
     */


    /**
     * APIProperty: fillSymbolID
     * {Integer} 填充符号的编码。
     * 此编码用于唯一标识各普通填充风格的填充符号。关于填充符号的样式与对应的 ID 号请在 SuperMap 桌面软件中查找。
     */


    /**
     * APIProperty: fillGradientOffsetRatioY
     * {Number} 填充中心点相对于填充区域范围中心点的垂直偏移百分比。
     * 它们的关系如下：设填充区域范围中心点的坐标为（x0, y0），填充中心点的坐标为（x, y），填充区域范围的高度为 b，垂直偏移百分比为 dy，则 y=y0 + b*dx/100。
     */


    /**
     * APIProperty: fillGradientAngle
     * {Number} 渐变填充的旋转角度。
     * 单位为度，精确到0.1度，逆时针方向为正方向。
     */


    /**
     * APIProperty: fillForeColor
     * {SuperMap.ServerColor} 填充颜色。
     * 当填充模式为渐变填充时，该颜色为填充起始颜色。默认为红色。
     */


    /**
     * APIProperty: fillBackColor
     * {SuperMap.ServerColor} 填充背景颜色。
     * 当填充模式为渐变填充时，该颜色为填充终止色。默认为白色。
     */


    _createClass(ServerStyle, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            if (me.fillBackColor) {
                me.fillBackColor.destroy();
                me.fillBackColor = null;
            }
            me.fillBackOpaque = null;

            if (me.fillForeColor) {
                me.fillForeColor.destroy();
                me.fillForeColor = null;
            }
            me.fillGradientMode = null;
            me.fillGradientAngle = null;
            me.fillGradientOffsetRatioX = null;
            me.fillGradientOffsetRatioY = null;
            me.fillOpaqueRate = null;
            me.fillSymbolID = null;
            if (me.lineColor) {
                me.lineColor.destroy();
                me.lineColor = null;
            }
            me.lineSymbolID = null;
            me.lineWidth = null;
            me.markerAngle = null;
            me.markerSize = null;
            me.markerSymbolID = null;
        }

        /**
         * Method: toServerJSONObject
         * 转换成对应的 JSON 格式对象。
         */

    }, {
        key: 'toServerJSONObject',
        value: function toServerJSONObject() {
            var styleObj = {};
            styleObj = _SuperMap2.default.Util.copyAttributes(styleObj, this);
            //暂时先忽略serverColor往Json的转换
            return styleObj;
        }

        /**
         * Function: SuperMap.ServerStyle.fromJson
         * 将JSON对象转换为 SuperMap.ServerStyle 对象。
         *
         * Parameters:
         * jsonObject - {Object} 要转换的 JSON 对象。
         *
         * Returns:
         * {SuperMap.ServerStyle} 转化后的 SuperMap.ServerStyle 对象。
         */

    }], [{
        key: 'fromJson',
        value: function fromJson(jsonObject) {
            if (!jsonObject) {
                return;
            }
            return new _SuperMap2.default.ServerStyle({
                fillBackColor: _ServerColor2.default.fromJson(jsonObject.fillBackColor),
                fillBackOpaque: jsonObject.fillBackOpaque,
                fillForeColor: _ServerColor2.default.fromJson(jsonObject.fillForeColor),
                fillGradientMode: jsonObject.fillGradientMode,
                fillGradientAngle: jsonObject.fillGradientAngle,
                fillGradientOffsetRatioX: jsonObject.fillGradientOffsetRatioX,
                fillGradientOffsetRatioY: jsonObject.fillGradientOffsetRatioY,
                fillOpaqueRate: jsonObject.fillOpaqueRate,
                fillSymbolID: jsonObject.fillSymbolID,
                lineColor: _ServerColor2.default.fromJson(jsonObject.lineColor),
                lineSymbolID: jsonObject.lineSymbolID,
                lineWidth: jsonObject.lineWidth,
                markerAngle: jsonObject.markerAngle,
                markerSize: jsonObject.markerSize,
                markerSymbolID: jsonObject.markerSymbolID
            });
        }
    }]);

    return ServerStyle;
}();

exports.default = ServerStyle;


_SuperMap2.default.ServerStyle = ServerStyle;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _JoinItem = __webpack_require__(29);

var _JoinItem2 = _interopRequireDefault(_JoinItem);

var _LinkItem = __webpack_require__(184);

var _LinkItem2 = _interopRequireDefault(_LinkItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/** * @class SuperMap.FilterParameter * @constructs SuperMap.FilterParameter * @classdesc * 查询过滤条件参数类。 * 该类用于设置查询数据集的查询过滤参数。 * @api */
var FilterParameter = function () {

  /**     * @method SuperMap.FilterParameter.initialize     * @description 查询过滤条件参数类构造函数。     * @param options - {Object} 参数。     *     * Allowed options properties:     * attributeFilter - {String} 属性过滤条件。</br>     * name - {String} 查询数据集名称或者图层名称。</br>     * joinItems - {Array(<SuperMap.JoinItem>)} 与外部表的连接信息 SuperMap.JoinItem 数组。</br>     * linkItems - {Array(<SuperMap.LinkItem>)} 与外部表的关联信息 SuperMap.LinkItem 数组。</br>     * ids - {Array(String)} 查询 id 数组，即属性表中的 SmID 值。</br>     * orderBy - {String} 查询排序的字段, orderBy 的字段须为数值型的。</br>     * groupBy - {String} 查询分组条件的字段。</br>     * fields - {Array(String)} 查询字段数组。</br>     */


  /**     * APIProperty: groupBy     * {String} 查询分组条件的字段。     * 相当于 SQL 语句中的 GROUP BY 子句，其格式为：GROUP BY <列名>，     * 列名即属性表中每一列的名称，列又可称为属性，在 SuperMap 中又称为字段。     * 对单个字段分组时，该字段的用法为 groupBy = "字段名"；     * 对多个字段分组时，字段之间以英文逗号进行分割，用法为 groupBy = "字段名1, 字段名2"。     * 例如，现有一个全球城市数据集，该数据集有两个字段分别为“Continent”和“Country”，     * 分别表示某个城市所属的洲和国家。     * 如果要按照国家对全球的城市进行分组， 可以设置 groupBy = "Country"；     * 如果以洲和国家对城市进行分组，设置 groupBy = "Continent, Country"。     */


  /**     * APIProperty: ids     * {Array(String)} 查询 id 数组，即属性表中的 SmID 值。     */


  /**     * APIProperty: joinItems     * {Array(<SuperMap.JoinItem>)} 与外部表的连接信息 SuperMap.JoinItem 数组。     */


  /**     * APIProperty: attributeFilter     * {String} 属性过滤条件。     * 相当于 SQL 语句中的 WHERE 子句，其格式为：WHERE <条件表达式>，     * attributeFilter 就是其中的“条件表达式”。     * 该字段的用法为 attributeFilter = "过滤条件"。     * 例如，要查询字段 fieldValue 小于100的记录，设置 attributeFilter = "fieldValue < 100"；     * 要查询字段 name 的值为“酒店”的记录，设置 attributeFilter = "name like '%酒店%'"，等等。     */
  function FilterParameter(options) {
    _classCallCheck(this, FilterParameter);

    this.attributeFilter = null;
    this.name = null;
    this.joinItems = null;
    this.linkItems = null;
    this.ids = null;
    this.orderBy = null;
    this.groupBy = null;
    this.fields = null;
    this.CLASS_NAME = "SuperMap.FilterParameter";

    if (options) {
      _SuperMap2.default.Util.extend(this, options);
    }
  }

  /*     * APIMethod: destroy     * 释放资源，将引用资源的属性置空。     */


  /**     * APIProperty: fields     * {Array(String)} 查询字段数组，如果不设置则使用系统返回的所有字段。     */


  /**     * APIProperty: orderBy     * {String} 查询排序的字段,orderBy的字段须为数值型的。     * 相当于 SQL 语句中的 ORDER BY 子句，其格式为：ORDER BY <列名>，     * 列名即属性表中每一列的名称，列又可称为属性，在 SuperMap 中又称为字段。     * 对单个字段排序时，该字段的用法为 orderBy = "字段名"；     * 对多个字段排序时，字段之间以英文逗号进行分割，用法为 orderBy = "字段名1, 字段名2"。     * 例如，现有一个国家数据集，它有两个字段分别为“SmArea”和“pop_1994”，     * 分别表示国家的面积和1994年的各国人口数量。     * 如果要按照各国人口数量对记录进行排序，则 orderBy = "pop_1994"；     * 如果要以面积和人口进行排序，则 orderBy = "SmArea, pop_1994"。     */


  /**     * APIProperty: linkItems     * {Array(<LinkItem>)} 与外部表的关联信息 LinkItem 数组。     */


  /**     * APIProperty: name     * {String} 查询数据集名称或者图层名称，根据实际的查询对象而定，必设属性。     * 一般情况下该字段为数据集名称，但在进行与地图相关功能的操作时，     * 需要设置为图层名称（图层名称格式：数据集名称@数据源别名）。     * 因为一个地图的图层可能是来自于不同数据源的数据集，     * 而不同的数据源中可能存在同名的数据集，     * 使用数据集名称不能唯一的确定数据集，     * 所以在进行与地图相关功能的操作时，该值需要设置为图层名称。     */


  _createClass(FilterParameter, [{
    key: 'destroy',
    value: function destroy() {
      var me = this;
      me.attributeFilter = null;
      me.name = null;
      if (me.joinItems) {
        for (var i = 0, joinItems = me.joinItems, len = joinItems.length; i < len; i++) {
          joinItems[i].destroy();
        }
        me.joinItems = null;
      }
      if (me.linkItems) {
        for (var i = 0, linkItems = me.linkItems, len = linkItems.length; i < len; i++) {
          linkItems[i].destroy();
        }
        me.linkItems = null;
      }
      me.ids = null;
      me.orderBy = null;
      me.groupBy = null;
      me.fields = null;
    }
  }]);

  return FilterParameter;
}();

exports.default = FilterParameter;

_SuperMap2.default.FilterParameter = FilterParameter;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Class: SuperMap.ServerColor
 * 颜色类
 * 该类使用三原色（ RGB ）来表达颜色。
 */
var ServerColor = function () {

    /**
     * Constructor: SuperMap.ServerColor
     * 颜色类构造函数。
     *
     * Parameters:
     * options - {Object} 参数。
     *
     * Allowed options properties:
     * red - {Number} 获取或设置红色值,默认值为255。
     * green - {Number} 获取或设置绿色值,默认值为0。
     * blue - {Number} 获取或设置蓝色值,默认值为0。
     */


    /**
     * APIProperty: green
     * {Number} 获取或设置绿色值,默认值为0。
     */
    function ServerColor(red, green, blue) {
        _classCallCheck(this, ServerColor);

        this.red = 255;
        this.green = 0;
        this.blue = 0;
        this.CLASS_NAME = "SuperMap.ServerColor";

        if (!red && red != 0) {
            this.red = 255;
        } else {
            this.red = red;
        }

        if (!green && green != 0) {
            this.green = 0;
        } else {
            this.green = green;
        }

        if (!blue && blue != 0) {
            this.blue = 0;
        } else {
            this.blue = blue;
        }
    }

    /**
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: blue
     * {Number} 获取或设置蓝色值,默认值为0。
     */


    /**
     * APIProperty: red
     * {Number} 获取或设置红色值,默认值为255。
     */


    _createClass(ServerColor, [{
        key: "destroy",
        value: function destroy() {
            var me = this;
            me.red = null;
            me.green = null;
            me.blue = null;
        }

        /**
         * Function: SuperMap.ServerColor.formJson
         * 将JSON对象转化为ServerColor对象。
         *
         * Parameters: jsonObject - {Object} 要转换的JSON对象
         *
         * Returns:
         * { SuperMap.ServerColor> } 转化后的ServerColor对象。
         */

    }], [{
        key: "fromJson",
        value: function fromJson(jsonObject) {
            if (!jsonObject) {
                return;
            }
            var color = new ServerColor();
            var red = 255;
            if (jsonObject.red !== null) {
                red = Number(jsonObject.red);
            }
            color.red = red;

            var green = 0;
            if (jsonObject.green !== null) {
                green = Number(jsonObject.green);
            }
            color.green = green;

            var blue = 0;
            if (jsonObject.blue !== null) {
                blue = Number(jsonObject.blue);
            }
            color.blue = blue;
            return color;
        }
    }]);

    return ServerColor;
}();

exports.default = ServerColor;


_SuperMap2.default.ServerColor = ServerColor;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ThemeMemoryData = __webpack_require__(242);

var _ThemeMemoryData2 = _interopRequireDefault(_ThemeMemoryData);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.Theme
 * @description 专题图基类。
 * @param  type - {String} 专题图类型。
 * @param options - {Object} 可选参数。如：<br>
 *         memoryData - {SuperMap.ThemeMemoryData} 专题图内存数据。
 */
var Theme = function () {

    /**
     * @function SuperMap.Theme.prototype.initialize
     * @description 专题图基类构造函数。
     * @param  type - {String} 专题图类型。
     * @param options - {Object} 可选参数。如：<br>
     *         memoryData - {SuperMap.ThemeMemoryData} 专题图内存数据。
     */


    /*
     * Property: memoryData
     * {SuperMap.ThemeMemoryData} 专题图内存数据。
     * 用内存数据制作专题图的方式与表达式制作专题图的方式互斥，前者优先级较高。
     * 第一个参数代表专题值，即数据集中用来做专题图的字段或表达式的值；第二个参数代表外部值。在制作专题图时，会用外部值代替专题值来制作相应的专题图。
     */
    function Theme(type, options) {
        _classCallCheck(this, Theme);

        this.memoryData = null;
        this.type = null;
        this.CLASS_NAME = "SuperMap.Theme";

        if (!type) {
            return this;
        }
        this.type = type;
        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /*
     * Property: type
     * {String} 专题图类型。
     */


    _createClass(Theme, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            if (me.memoryData) {
                me.memoryData.destroy();
                me.memoryData = null;
            }
            me.type = null;
        }

        /*
         * Method: toServerJSONObject
         * 转换成对应的 JSON 格式对象。
         */

    }, {
        key: 'toServerJSONObject',
        value: function toServerJSONObject() {
            //return 子类实现
            return;
        }
    }]);

    return Theme;
}();

exports.default = Theme;


_SuperMap2.default.Theme = Theme;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FetchRequest = exports.Support = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _whatwgFetchImportable = __webpack_require__(81);

var _whatwgFetchImportable2 = _interopRequireDefault(_whatwgFetchImportable);

var _fetchJsonp2 = __webpack_require__(80);

var _fetchJsonp3 = _interopRequireDefault(_fetchJsonp2);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Support = exports.Support = _SuperMap2.default.Support = {
    cors: window.XMLHttpRequest && 'withCredentials' in new window.XMLHttpRequest()
};
var FetchRequest = exports.FetchRequest = _SuperMap2.default.FetchRequest = {
    commit: function commit(method, url, params, options) {
        method = method ? method.toUpperCase() : method;
        switch (method) {
            case 'GET':
                return this.get(url, params, options);
            case 'POST':
                return this.post(url, params, options);
            case 'PUT':
                return this.put(url, params, options);
            case 'DELETE':
                return this.delete(url, params, options);
            default:
                return this.get(url, params, options);
        }
    },

    get: function get(url, params, options) {
        var type = 'GET';
        url = this._processUrl(url);
        url = _SuperMap2.default.Util.urlAppend(url, this._getParameterString(params || {}));
        if (url.length <= 2000) {
            if (_SuperMap2.default.Util.isInTheSameDomain(url) || _SuperMap2.default.Support.cors && this._isMVTRequest(url)) {
                return this._fetch(url, params, options, type);
            }
            if (!_SuperMap2.default.Util.isInTheSameDomain(url)) {
                url = url.replace('.json', '.jsonp');
                return this._fetchJsonp(url, options);
            }
        }
        return this._postSimulatie(type, url.substring(0, url.indexOf('?') - 1), params, options);
    },

    delete: function _delete(url, params, options) {
        var type = 'DELETE';
        url = this._processUrl(url);
        url = _SuperMap2.default.Util.urlAppend(url, this._getParameterString(params || {}));
        if (url.length <= 2000 && _SuperMap2.default.Support.cors) {
            return this._fetch(url, params, options, type);
        }
        return this._postSimulatie(type, url.substring(0, url.indexOf('?') - 1), params, options);
    },

    post: function post(url, params, options) {
        return this._fetch(this._processUrl(url), params, options, 'POST');
    },

    put: function put(url, params, options) {
        return this._fetch(this._processUrl(url), params, options, 'PUT');
    },

    _postSimulatie: function _postSimulatie(type, url, params, options) {
        var separator = url.indexOf("?") > -1 ? "&" : "?";
        url += separator + '_method= ' + type;
        return this.post(url, params, options);
    },

    _processUrl: function _processUrl(url) {
        if (this._isMVTRequest(url)) {
            return url;
        }

        if (url.indexOf('.json') === -1) {
            if (url.indexOf("?") < 0) {
                url += '.json';
            } else {
                var urlArrays = url.split("?");
                if (urlArrays.length === 2) {
                    url = urlArrays[0] + ".json?" + urlArrays[1];
                }
            }
        }
        return url;
    },

    _fetch: function _fetch(url, params, options, type) {
        options = options || {};
        options.headers = options.headers || {};
        if (!options.headers['Content-Type']) {
            options.headers['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';
        }
        if (options.timeout) {
            return this._timeout(options.timeout, (0, _whatwgFetchImportable2.default)(url, {
                method: type,
                headers: options.headers,
                body: type === 'PUT' || type === 'POST' ? params : undefined,
                credentials: options.withCredentials ? 'include' : 'omit',
                mode: 'cors'
            }).then(function (response) {
                return response;
            }));
        }
        return (0, _whatwgFetchImportable2.default)(url, {
            method: type,
            body: type === 'PUT' || type === 'POST' ? params : undefined,
            headers: options.headers,
            credentials: options.withCredentials ? 'include' : 'omit',
            mode: 'cors'
        }).then(function (response) {
            return response;
        });
    },

    _fetchJsonp: function _fetchJsonp(url, options) {
        options = options || {};
        return (0, _fetchJsonp3.default)(url, { method: 'GET', timeout: options.timeout }).then(function (response) {
            return response;
        });
    },

    _timeout: function _timeout(seconds, promise) {
        return new Promise(function (resolve, reject) {
            setTimeout(function () {
                reject(new Error("timeout"));
            }, seconds);
            promise.then(resolve, reject);
        });
    },

    _getParameterString: function _getParameterString(params) {
        var paramsArray = [];
        for (var key in params) {
            var value = params[key];
            if (value != null && typeof value !== 'function') {
                var encodedValue;
                if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value.constructor === Array) {
                    var encodedItemArray = [];
                    var item;
                    for (var itemIndex = 0, len = value.length; itemIndex < len; itemIndex++) {
                        item = value[itemIndex];
                        encodedItemArray.push(encodeURIComponent(item === null || item === undefined ? "" : item));
                    }
                    encodedValue = '[' + encodedItemArray.join(",") + ']';
                } else {
                    encodedValue = encodeURIComponent(value);
                }
                paramsArray.push(encodeURIComponent(key) + "=" + encodedValue);
            }
        }
        return paramsArray.join("&");
    },

    _isMVTRequest: function _isMVTRequest(url) {
        return url.indexOf('.mvt') > -1 || url.indexOf('.pbf') > -1;
    }
};

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

__webpack_require__(46);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ThemeFeature = _SuperMap2.default.Feature.Theme;

/**
 * @class  SuperMap.Feature.Theme.Graph
 * 统计专题要素基类，此类定义了统计专题要素基础模型，具体的图表模型通过继承此类，在子类中实现 assembleShapes 方法。
 *
 * 统计专题要素模型采用了可视化图形大小自适应策略，用较少的参数控制着图表诸多图形，图表配置对象 <SuperMap.Feature.Theme.Graph::setting> 的基础属性只有 7 个，
 * 它们控制着图表结构、值域范围、数据小数位等基础图表形态。构成图表的图形必须在图表结构里自适应大小。
 *
 * 此类不可实例化，此类的可实例化子类必须实现 assembleShapes() 方法。
 *
 * Inherits:
 *  - <SuperMap.Feature.Theme>
 */

var Graph = function (_ThemeFeature) {
    _inherits(Graph, _ThemeFeature);

    /**
     * Constructor: SuperMap.Feature.Theme.Graph
     * 创建一个矢量专题要素。
     *
     * Parameters:
     * data - {SuperMap.Feature.Vector}  用户数据，必设参数。
     * layer - {SuperMap.Layer.Theme} 此专题要素所在图层，必设参数。
     * fields - {Array{String}} data 中的参与此图表生成的字段名称，必设参数。
     * setting - {Object} 图表配置对象，必设参数。
     * lonlat - {SuperMap.LonLat} 专题要素地理位置。默认为 data 指代的地理要素 Bounds 中心。
     *
     * Returns:
     * {SuperMap.Feature.Theme.Graph} 返回一个统计专题要素。
     */


    /**
     * APIProperty: fields
     * {Array{String}} 数据（ <SuperMap.Feature.Vector> ）属性字段。
     */


    /**
     * APIProperty: DVBHeight
     * {Number} {ReadOnly} 数据视图框高度。
     */


    /**
     * APIProperty: DVBOrigonPoint
     * {Array{Number}} {ReadOnly} 数据视图框原点，数据视图框左上角点，长度为 2 的一维数组，第一个元素表示 x 坐标，第二个元素表示 y 坐标。
     */


    /**
     * APIProperty: DVBCenterPoint
     * {Array{Number}} {ReadOnly} 数据视图框中心点，长度为 2 的一维数组，第一个元素表示 x 坐标，第二个元素表示 y 坐标。
     */


    /**
     * APIProperty: dataViewBox
     * {Array{Number}} {ReadOnly} 数据视图框，长度为 4 的一维数组，[left, bottom, right, top]。
     *
     * dataViewBox 是统计专题要素最核心的内容，它负责解释数据在一个像素区域里的数据可视化含义，
     * 这种含义用可视化图形表达出来，这些表示数据的图形和一些辅助图形组合在一起构成统计专题图表。
     */


    /**
     * APIProperty: YOffset
     * {Number} {ReadOnly} 专题要素（图表）在 Y 方向上的偏移值，单位像素。
     */


    /**
     * APIProperty: height
     * {Number} {ReadOnly} 专题要素（图表）高度 ，必设属性。
     */


    /**
     * APIProperty: chartBounds
     * {SuperMap.Bounds} {ReadOnly} 图表 Bounds 随着 lonlat、XOffset、YOffset 更新，注意 chartBounds 是图表像素范围，不是地理范围。
     */


    /**
     * APIProperty: origonPoint
     * {Array{Number}} {ReadOnly} 专题要素（图表）原点，图表左上角点像素坐标，是长度为 2 的一维数组，第一个元素表示 x 坐标，第二个元素表示 y 坐标。
     */


    /**
     * Property: RelativeCoordinate
     * {bool} 图形是否已经计算了相对坐标
     */


    /**
     * APIProperty: shapeFactory
     * {SuperMap.Feature.ShapeFactory} 内置的图形工厂对象，调用其 createShape 方法创建图形。
     */
    function Graph(data, layer, fields, setting, lonlat, options) {
        _classCallCheck(this, Graph);

        var _this = _possibleConstructorReturn(this, (Graph.__proto__ || Object.getPrototypeOf(Graph)).call(this, data, layer, fields, setting, lonlat, options));

        _this.shapeFactory = null;
        _this.shapeParameters = null;
        _this.RelativeCoordinate = false;
        _this.setting = null;
        _this.origonPoint = null;
        _this.chartBox = null;
        _this.chartBounds = null;
        _this.width = null;
        _this.height = null;
        _this.XOffset = 0;
        _this.YOffset = 0;
        _this.DVBParameter = null;
        _this.dataViewBox = null;
        _this.DVBCodomain = null;
        _this.DVBCenterPoint = null;
        _this.DVBUnitValue = null;
        _this.DVBOrigonPoint = null;
        _this.DVBWidth = null;
        _this.DVBHeight = null;
        _this.origonPointOffset = null;
        _this.fields = null;
        _this.dataValues = null;
        _this.CLASS_NAME = "SuperMap.Feature.Theme.Graph";

        var me = _this;
        // 图表位置
        if (lonlat) {
            me.lonlat = lonlat;
        } else {
            // 默认使用 bounds 中心
            var geometry = data.geometry;
            var dataBounds = geometry.getBounds();
            me.lonlat = dataBounds.getCenterLonLat();
        }

        // 配置项检测与赋值
        if (setting && setting.width && setting.height && setting.codomain) {
            me.setting = setting;
        }

        me.fields = fields ? fields : [];

        me.shapeFactory = new _SuperMap2.default.Feature.ShapeFactory();
        return _this;
    }

    /**
     * APIMethod: destroy
     * 销毁专题要素。
     */


    /**
     * APIProperty: dataValues
     * {Array{Number}} 图表展示的数据值，通过 fields 从数据（feature）属性中获得。
     */


    /**
     * Property: origonPointOffset
     * {Array{Number}} {ReadOnly} 数据视图框原点相对于图表框的原点偏移量，长度为 2 的一维数组，第一个元素表示 x 偏移量，第二个元素表示 y 偏移量。
     */


    /**
     * APIProperty: DVBWidth
     * {Number} {ReadOnly} 数据视图框宽度。
     */


    /**
     * APIProperty: DVBUnitValue
     * {String} {ReadOnly} 单位值。在 assembleShapes() 中初始化其具体意义，例如：饼图的 DVBUnitValue 可以定义为"360/数据总和" ，
     * 折线图的 DVBUnitValue 可以定义为 "DVBCodomain/DVBHeight"。
     */


    /**
     * APIProperty: DVBCodomain
     * {Array{Number}} {ReadOnly} 数据视图框的内允许展示的数据值域，长度为 2 的一维数组，第一个元素表示值域下限，第二个元素表示值域上限。
     * dataViewBox 中允许的数据范围，对数据溢出值域范围情况的处理需要在 assembleShapes 中进行。
     */


    /**
     * APIProperty: DVBParameter
     * {Array{Number}} {ReadOnly} 数据视图框参数，长度为 4 的一维数组（数组元素值 >= 0），[leftOffset, bottomOffset, rightOffset, topOffset]，chartBox 内偏距值。
     * 此属性用于指定数据视图框 dataViewBox 的范围。
     */


    /**
     * APIProperty: XOffset
     * {Number} {ReadOnly} 专题要素（图表）在 X 方向上的偏移值，单位像素。
     */


    /**
     * APIProperty: width
     * {Number} {ReadOnly} 专题要素（图表）宽度 ，必设属性。
     */


    /**
     * APIProperty: chartBox
     * {Array{Number}} {ReadOnly} 专题要素（图表）区域，即图表框，长度为 4 的一维数组，数组的 4 个元素依次表示图表框左端 x 坐标值、
     * 下端 y坐标值、 右端 x坐标值、 上端 y 坐标值；[left, bottom, right, top]。
     */


    /**
     * APIProperty: setting
     * {Object} 图表配置对象，该对象控制着图表的可视化显示。
     *
     * 下面是此配置对象的 7 个基础可设属性：
     *
     * Symbolizer properties:
     * width - {Number} 专题要素（图表）宽度，必设参数。
     * height - {Number} 专题要素（图表）高度，必设参数。
     * codomain - {Array{Number}} 值域，长度为 2 的一维数组，第一个元素表示值域下限，第二个元素表示值域上限，必设参数。
     * XOffset - {Number}  专题要素（图表）在 X 方向上的偏移值，单位像素。
     * YOffset - {Number}  专题要素（图表）在 Y 方向上的偏移值，单位像素。
     * dataViewBoxParameter - {Array{Number}} 数据视图框 dataViewBox 参数，
     * 它是指图表框 chartBox （由图表位置、图表宽度、图表高度构成的图表范围框）在左、下，右，上四个方向上的内偏距值。
     * decimalNumber - {Number} 数据值数组 dataValues 元素值小数位数，数据的小数位处理参数，取值范围：[0, 16]。如果不设置此参数，在取数据值时不对数据做小数位处理。
     *
     *
     * 除了以上 7 个基础属性，此对象的可设属性在不同子类中有较大差异，不同子类中对同一属性的解释也可能不同。
     * 请在此类的子类中查看 setting 对象的可设属性和属性含义。
     */


    /**
     * Property: shapeParameters
     * {Object} 当前图形参数对象，<SuperMap.Feature.ShapeParameters> 的子类对象。
     */


    _createClass(Graph, [{
        key: 'destroy',
        value: function destroy() {
            this.shapeFactory = null;
            this.shapeParameters = null;
            this.width = null;
            this.height = null;
            this.origonPoint = null;
            this.chartBox = null;
            this.dataViewBox = null;
            this.chartBounds = null;
            this.DVBParameter = null;
            this.DVBOrigonPoint = null;
            this.DVBCenterPoint = null;
            this.DVBWidth = null;
            this.DVBHeight = null;
            this.DVBCodomain = null;
            this.DVBUnitValue = null;
            this.origonPointOffset = null;
            this.XOffset = null;
            this.YOffset = null;
            this.fields = null;
            this.dataValues = null;
            this.setting = null;
            _get(Graph.prototype.__proto__ || Object.getPrototypeOf(Graph.prototype), 'destroy', this).call(this);
        }

        /**
         * APIMethod: initBaseParameter
         * 初始化专题要素（图表）基础参数。
         * 在调用此方法前，此类的图表模型相关属性都是不可用的 ，此方法在 assembleShapes 函数中调用。
         *
         * 调用此函数关系到 setting 对象的以下属性
         *
         * Symbolizer properties:
         * width - {Number} 专题要素（图表）宽度，必设参数。
         * height - {Number} 专题要素（图表）高度，必设参数。
         * codomain - {Array{Number}} 值域，长度为 2 的一维数组，第一个元素表示值域下限，第二个元素表示值域上限，必设参数。
         * XOffset - {Number}  专题要素（图表）在 X 方向上的偏移值，单位像素。
         * YOffset - {Number}  专题要素（图表）在 Y 方向上的偏移值，单位像素。
         * dataViewBoxParameter - {Array{Number}} 数据视图框 dataViewBox 参数，
         * 它是指图表框 chartBox （由图表位置、图表宽度、图表高度构成的图表范围框）在左、下，右，上四个方向上的内偏距值。
         * decimalNumber - {Number} 数据值数组 dataValues 元素值小数位数，数据的小数位处理参数，取值范围：[0, 16]。如果不设置此参数，在取数据值时不对数据做小数位处理。
         *
         * Returns:
         * {Boolean} 初始化参数是否成功。
         */

    }, {
        key: 'initBaseParameter',
        value: function initBaseParameter() {
            // 参数初始化是否成功
            var isSuccess = true;

            // setting 属性是否已成功赋值
            if (!this.setting) {
                return false;
            }
            var sets = this.setting;
            // 检测 setting 的必设参数
            if (!(sets.width && sets.height && sets.codomain)) {
                return false;
            }

            // 数据
            var decimalNumber = typeof sets.decimalNumber !== "undefined" && !isNaN(sets.decimalNumber) ? sets.decimalNumber : -1;
            var dataEffective = _SuperMap2.default.Feature.Theme.getDataValues(this.data, this.fields, decimalNumber);
            this.dataValues = dataEffective ? dataEffective : [];

            // 基础参数  width, height, codomain
            this.width = parseFloat(sets.width);
            this.height = parseFloat(sets.height);
            this.DVBCodomain = sets.codomain;

            // 图表偏移
            // if(sets.XOffset) {this.XOffset = sets.XOffset};
            // if(sets.YOffset) {this.YOffset = sets.YOffset};
            this.XOffset = sets.XOffset ? sets.XOffset : 0;
            this.YOffset = sets.YOffset ? sets.YOffset : 0;

            // 其他默认值
            this.origonPoint = [];
            this.chartBox = [];
            this.dataViewBox = [];

            this.DVBParameter = sets.dataViewBoxParameter ? sets.dataViewBoxParameter : [0, 0, 0, 0];

            this.DVBOrigonPoint = [];
            this.DVBCenterPoint = [];
            this.origonPointOffset = [];

            // 图表位置
            this.resetLocation();

            // 专题要素宽度 w
            var w = this.width;
            // 专题要素高度 h
            var h = this.height;
            // 专题要素像素位置 loc
            var loc = this.location;

            // 专题要素像素位置 loc
            this.origonPoint = [loc[0] - w / 2, loc[1] - h / 2];
            // 专题要素原点（左上角）
            var op = this.origonPoint;

            // 图表框（[left, bottom, right, top]）
            this.chartBox = [op[0], op[1] + h, op[0] + w, op[1]];
            // 图表框
            var cb = this.chartBox;

            // 数据视图框参数，它是图表框各方向对应的内偏距
            var dbbP = this.DVBParameter;
            // 数据视图框 （[left, bottom, right, top]）
            this.dataViewBox = [cb[0] + dbbP[0], cb[1] - dbbP[1], cb[2] - dbbP[2], cb[3] + dbbP[3]];
            // 数据视图框
            var dvb = this.dataViewBox;
            //检查数据视图框是否合法
            if (dvb[0] >= dvb[2] || dvb[1] <= dvb[3]) {
                return false;
            }

            // 数据视图框原点
            this.DVBOrigonPoint = [dvb[0], dvb[3]];
            // 数据视图框宽度
            this.DVBWidth = Math.abs(dvb[2] - dvb[0]);
            // 数据视图框高度
            this.DVBHeight = Math.abs(dvb[1] - dvb[3]);
            // 数据视图框中心点
            this.DVBCenterPoint = [this.DVBOrigonPoint[0] + this.DVBWidth / 2, this.DVBOrigonPoint[1] + this.DVBHeight / 2];

            // 数据视图框原点与图表框的原点偏移量
            this.origonPointOffset = [this.DVBOrigonPoint[0] - op[0], this.DVBOrigonPoint[1] - op[1]];

            return isSuccess;
        }

        /**
         * Method: resetLocation
         * 根据地理位置 lonlat 重置专题要素（图表）位置。
         *
         * Parameters:
         * lonlat - {SuperMap.LonLat} 专题要素新的像素中心位置。
         *
         * Returns:
         * {Array} - 新专题要素像素参考位置。长度为 2 的数组，第一个元素表示 x 坐标，第二个元素表示 y 坐标。
         */

    }, {
        key: 'resetLocation',
        value: function resetLocation(lonlat) {
            if (lonlat) this.lonlat = lonlat;

            // 获取地理位置对应的像素坐标 newLocalLX
            var newLocalLX = this.getLocalXY(this.lonlat);
            // 处理偏移量 XOffset, YOffset
            newLocalLX[0] += this.XOffset;
            newLocalLX[1] += this.YOffset;
            // 将图形位置赋予  location 属性（注意 location 属性表示的是专题要素中心位置）
            this.location = newLocalLX;

            // 更新图表像素 Bounds
            var w = this.width;
            var h = this.height;
            var loc = this.location;
            this.chartBounds = new _SuperMap2.default.Bounds(loc[0] - w / 2, loc[1] + h / 2, loc[0] + w / 2, loc[1] - h / 2);

            //重新计算当前渐变色
            this.resetLinearGradient();

            return loc;
        }

        /**
         * Method: resetLinearGradient
         * resetLocation中调用 图表的相对坐标存在的时候，重新计算渐变的颜色
         * PS: (目前用于二维柱状图渐变色 所以子类实现此方法)
         */

    }, {
        key: 'resetLinearGradient',
        value: function resetLinearGradient() {}
        //子类实现此方法


        /**
         * APIMethod: shapesConvertToRelativeCoordinate
         * 将（构成图表）图形的节点转为相对坐标表示，此函数必须且只能在 assembleShapes() 结束时调用。
         *
         */

    }, {
        key: 'shapesConvertToRelativeCoordinate',
        value: function shapesConvertToRelativeCoordinate() {
            var shapes = this.shapes;
            var shapeROP = this.location;
            for (var i = 0, len = shapes.length; i < len; i++) {
                shapes[i].refOriginalPosition = shapeROP;

                var style = shapes[i].style;

                for (var sty in style) {
                    switch (sty) {
                        case "pointList":
                            var pl = style[sty];
                            for (var j = 0, len2 = pl.length; j < len2; j++) {
                                pl[j][0] -= shapeROP[0];
                                pl[j][1] -= shapeROP[1];
                            }
                            break;
                        case "x":
                            style[sty] -= shapeROP[0];
                            break;
                        case "y":
                            style[sty] -= shapeROP[1];
                            break;
                        default:
                            break;
                    }
                }
            }
            this.RelativeCoordinate = true;
        }

        /**
         * APIMethod: assembleShapes
         * 图形装配函数。抽象方法，可视化子类必须实现此方法。
         *
         * 重写此方法的步骤：
         *
         * 1. 图表的某些特殊配置项（setting）处理，例如多数图表模型需要重新指定 dataViewBoxParameter 的默认值。
         *
         * 2. 调用 initBaseParameter() 方法初始化模型属性值，此步骤必须执行，只有当 initBaseParameter 返回 true 时才可以允许进行后续步骤。
         *
         * 3. 计算图形参数，制作图形，图形组合。在组装图表过程中，应该特别注意数据视图框单位值的定义、数据值溢出值域范围的处理和图形大小自适应。
         *
         * 4. 调用 shapesConvertToRelativeCoordinate() 方法，将图形的坐标值转为相对坐标，此步骤必须执行。
         *
         * 子类实现 assembleShapes() 接口的步骤示例：
         *
         * (code)
         * assembleShapes: function(){
         *    // 第一步：图表的某些特殊配置项（setting）处理，例如多数图表模型需要重新指定 dataViewBoxParameter 的默认值。此步骤是非必须过程。
         *
         *    // 图表配置对象
         *    var sets = this.setting;
         *    // 默认数据视图框，这里展示在使用坐标轴和不使用坐标轴情况下对数据视图框参数赋予不同的默认值
         *    if(!sets.dataViewBoxParameter){
         *          if(typeof(sets.useAxis) === "undefined" || sets.useAxis){
         *              sets.dataViewBoxParameter = [45, 15, 15, 15];
         *          }
         *          else{
         *                  sets.dataViewBoxParameter = [5, 5, 5, 5];
         *          }
         *    }
         *
         *    // 第二步：初始化图表模型基本参数，只有在图表模型基本参数初始化成功时才可模型相关属性，如 this.dataViewBox、 this.DVBCodomain等。此步骤是必须过程。
         *    if(!this.initBaseParameter()) return;
         *
         *    // 第三步：用图形组装图表，在组装图表过程中，应该特别注意数据视图框单位值的定义、数据值溢出值域范围的处理和图形大小自适应。
         *    // 定义图表数据视图框中单位值的含义，下面行代码表示将数据视图框单位值定义为数据视图框高度上每像素代表的数据值
         *    this.DVBUnitValue =  (this.codomain[1] - this.codomain[0])/this.DVBHeight;
         *    var uv = this.DVBUnitValue;
         *
         *    // 图形参数计算代码......
         *
         *    // 关于图形装配，实际上就是利用图形工程对象 this.shapeFactory 的 createShape() 方法通过图形参数对象创建可视化的图形对象，并把这些图形对象按序添加到模型的图形库（his.shapes）中。下面的代码演示创建一个面图形参数对象，并允许通过图形配置对象设置图形的 style 和 highlightStyle，
         *    var barParams = new SuperMap.Feature.ShapeParameters.Polygon(poiLists);
         *    barParams.style = sets.barStyle? sets.barStyle:{fillColor: "lightblue"};
         *    barParams.highlightStyle = sets.barHoverStyle? sets.barHoverStyle:{fillColor: "blue"};
         *    // 图形携带数据ID信息
         *    barParams.refDataID = this.data.id;
         *    // 创建图形并添加到图表图形数组中
         *    this.shapes.push(this.shapeFactory.createShape(barParams));
         *
         *    // 第四步：调用 shapesConvertToRelativeCoordinate() 方法，将图形库（his.shapes）中的图形转为由相对坐标表示的图形，客户端统计专题图模块从结构上要求可视化图形使用相对坐标，assembleShapes() 函数必须在图形装配完成后调用 shapesConvertToRelativeCoordinate() 函数。此步骤是必须过程。
         *    this.shapesConvertToRelativeCoordinate();
         * },
         * (end)
         *
         */

    }, {
        key: 'assembleShapes',
        value: function assembleShapes() {}
        //子类必须实现此方法


        //地理坐标转为像素坐标。

    }, {
        key: 'getLocalXY',
        value: function getLocalXY(lonlat) {
            return this.layer.getLocalXY(lonlat);
        }
    }]);

    return Graph;
}(ThemeFeature);

/**
 * APIFunction: SuperMap.Feature.Theme.getDataValues
 * 根据字段名数组获取指定数据（feature）的属性值数组。属性值类型必须为 Number。
 *
 * Parameters:
 * data - {SuperMap.Feature.Vector} 数据。
 * fields - {Array} 字段名数组。
 * decimalNumber - {Number} 小数位处理参数，对获取到的属性数据值进行小数位处理。
 *
 * Returns:
 * {Array} 字段名数组对应的属性数据值数组。
 */


exports.default = Graph;
_SuperMap2.default.Feature.Theme.getDataValues = function (data, fields, decimalNumber) {
    if (!data.attributes) return false;

    var fieldsValue = [];

    var attrs = data.attributes;
    for (var i = 0; i < fields.length; i++) {
        for (var field in attrs) {
            if (field !== fields[i]) {
                continue;
            }
            // 数字转换判断
            try {
                if (!isNaN(decimalNumber) && decimalNumber >= 0) {
                    fieldsValue.push(parseFloat(attrs[field].toString()).toFixed(decimalNumber));
                } else {
                    fieldsValue.push(parseFloat(attrs[field].toString()));
                }
            } catch (e) {
                throw new Error("not a number");
            }
        }
    }

    if (fieldsValue.length === fields.length) {
        return fieldsValue;
    } else {
        return false;
    }
};
_SuperMap2.default.Feature.Theme.Graph = Graph;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServerInfo = __webpack_require__(269);

var _ServerInfo2 = _interopRequireDefault(_ServerInfo);

var _TokenServiceParameter = __webpack_require__(270);

var _TokenServiceParameter2 = _interopRequireDefault(_TokenServiceParameter);

var _KeyServiceParameter = __webpack_require__(268);

var _KeyServiceParameter2 = _interopRequireDefault(_KeyServiceParameter);

var _FetchRequest = __webpack_require__(13);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @class SuperMap.SecurityManager
 * @constructs SuperMap.SecurityManager
 * @classdesc
 *  安全管理中心
 *  提供iServer,iPortal,Online统一权限认证管理
 *  使用说明：
 *  创建任何一个服务之前调用SuperMap.SecurityManager.registerToken或
 *  SuperMap.SecurityManager.registerKey注册凭据。
 *  发送请求时根据url或者服务id获取相应的key或者token并自动添加到服务地址中
 * @api
 */

_SuperMap2.default.SecurityManager = {

    INNER_WINDOW_WIDTH: 600,
    INNER_WINDOW_HEIGHT: 600,

    /**
     *
     * @description 从服务器获取一个token,在此之前要注册服务器信息
     * @param url {String} -服务器域名+端口，如：http://localhost:8092
     * @param tokenParam {SuperMap.TokenServiceParameter}
     */
    generateToken: function generateToken(url, tokenParam) {
        var serverInfo = this.servers[url];
        if (!serverInfo) {
            return;
        }
        return _FetchRequest.FetchRequest.post(serverInfo.tokenServiceUrl, JSON.stringify(tokenParam.toJSON())).then(function (response) {
            return response.text();
        });
    },

    /**
     *
     * @description 注册安全服务器相关信息
     * @param serverInfos {SuperMap.ServerInfo}
     */
    registerServers: function registerServers(serverInfos) {
        this.servers = this.servers || {};
        if (!_SuperMap2.default.Util.isArray(serverInfos)) {
            serverInfos = [serverInfos];
        }
        for (var i = 0; i < serverInfos.length; i++) {
            var serverInfo = serverInfos[i];
            this.servers[serverInfo.server] = serverInfo;
        }
    },

    /**
     * @description 服务请求都会自动带上这个token
     * @param url {String} - 服务器域名+端口：如http://localhost:8090
     * @param token {String}
     */
    registerToken: function registerToken(url, token) {
        this.tokens = this.tokens || {};
        if (!url || !token) {
            return;
        }
        var domain = this._getTokenStorageKey(url);
        this.tokens[domain] = token;
    },

    /**
     * @description 注册key,ids为数组(存在一个key对应多个服务)
     * @param ids   {Array} 可以是服务id数组或者url地址数组或者webAPI类型数组
     * @param key   {String}
     */
    registerKey: function registerKey(ids, key) {
        this.keys = this.keys || {};
        if (!ids || ids.length < 1 || !key) {
            return;
        }

        ids = _SuperMap2.default.Util.isArray(ids) ? ids : [ids];
        for (var i = 0; i < ids.length; i++) {
            var id = this._getUrlRestString(ids[0]) || ids[0];
            this.keys[id] = key;
        }
    },

    getServerInfo: function getServerInfo(url) {
        this.servers = this.servers || {};
        return this.servers[url];
    },

    //token按照域名存储
    getToken: function getToken(url) {
        if (!url) {
            return;
        }
        this.tokens = this.tokens || {};
        var domain = this._getTokenStorageKey(url);
        return this.tokens[domain];
    },

    getKey: function getKey(id) {
        this.keys = this.keys || {};
        var key = this._getUrlRestString(id) || id;
        return this.keys[key];
    },

    //Online登录验证
    loginOnline: function loginOnline(callbackLocation, newTab) {
        var loginUrl = SecurityManager.SSO + "/login?service=" + callbackLocation;
        this._open(loginUrl, newTab);
    },

    //iPortal登录验证
    loginPortal: function loginPortal(url, newTab) {
        var end = url.substr(url.length - 1, 1);
        url += end === "/" ? "web/login" : "/web/login";
        this._open(url, newTab);
    },

    destroyAllCredentials: function destroyAllCredentials() {
        this.keys = null;
        this.tokens = null;
        this.servers = null;
    },

    destroyToken: function destroyToken(url) {
        if (!url) {
            return;
        }
        var domain = this._getTokenStorageKey(url);
        this.tokens = this.tokens || {};
        if (this.tokens[domain]) {
            delete this.tokens[domain];
        }
    },

    destroyKey: function destroyKey(id) {
        if (!id) {
            return;
        }
        this.keys = this.keys || {};
        var key = this._getUrlRestString(id) || id;
        if (this.keys[key]) {
            delete this.keys[key];
        }
    },

    _open: function _open(url, newTab) {
        newTab = newTab != null ? newTab : true;
        var offsetX = window.screen.availWidth / 2 - this.INNER_WINDOW_WIDTH / 2;
        var offsetY = window.screen.availHeight / 2 - this.INNER_WINDOW_HEIGHT / 2;
        var options = "height=" + this.INNER_WINDOW_HEIGHT + ", width=" + this.INNER_WINDOW_WIDTH + ",top=" + offsetY + ", left=" + offsetX + ",toolbar=no, menubar=no, scrollbars=no, resizable=no, location=no, status=no";
        if (newTab) {
            window.open(url, 'login');
        } else {
            window.open(url, 'login', options);
        }
    },

    _getTokenStorageKey: function _getTokenStorageKey(url) {
        var patten = /http:\/\/([^\/]+)/i;
        var result = url.match(patten);
        if (!result) {
            return url;
        }
        return result[0];
    },

    _getUrlRestString: function _getUrlRestString(url) {
        if (!url) {
            return url;
        }
        var patten = /http:\/\/(.*\/rest)/i;
        var result = url.match(patten);
        if (!result) {
            return url;
        }
        return result[0];
    }

};
_SuperMap2.default.SecurityManager.SSO = "https://sso.supermap.com";
_SuperMap2.default.SecurityManager.ONLINE = "http://www.supermapol.com";

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _FetchRequest = __webpack_require__(13);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ProcessingServiceBase = function (_CommonServiceBase) {
    _inherits(ProcessingServiceBase, _CommonServiceBase);

    function ProcessingServiceBase(url, options) {
        _classCallCheck(this, ProcessingServiceBase);

        options = options || {};
        /**
         * Constant: EVENT_TYPES
         * {Array(String)}
         * 此类支持的事件类型
         * - *processCompleted* 创建成功后触发的事件。
         * - *processFailed* 创建失败后触发的事件 。
         * - *processRunning* 创建过程的整个阶段都会触发的事件，用于获取创建过程的状态 。
         */
        options.EVENT_TYPES = ["processCompleted", "processFailed", "processRunning"];

        var _this = _possibleConstructorReturn(this, (ProcessingServiceBase.__proto__ || Object.getPrototypeOf(ProcessingServiceBase)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.ProcessingServiceBase";
        return _this;
    }

    _createClass(ProcessingServiceBase, [{
        key: 'destroy',
        value: function destroy() {
            _get(ProcessingServiceBase.prototype.__proto__ || Object.getPrototypeOf(ProcessingServiceBase.prototype), 'destroy', this).call(this);
        }

        /**
         *
         * @param url - 一个空间分析的资源地址。
         */

    }, {
        key: 'getJobs',
        value: function getJobs(url) {
            var me = this;
            return _FetchRequest.FetchRequest.get(url).then(function (response) {
                return response.json();
            }).then(function (result) {
                me.events.triggerEvent("processCompleted", { result: result });
            }).catch(function (e) {
                me.eventListeners.processFailed({ error: e });
            });
        }

        /**
         *
         * @param url - 分布式空间分析资源根地址。
         * @param params - 创建一个空间分析的请求参数。
         * @param paramType - 请求参数类型。
         * @param seconds - 开始创建后，获取创建成功结果的时间间隔。
         */

    }, {
        key: 'addJob',
        value: function addJob(url, params, paramType, seconds) {
            var me = this,
                parameterObject = null;
            if (params && params instanceof paramType) {
                parameterObject = new Object();
                paramType.toObject(params, parameterObject);
            }
            var options = {
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }
            };
            return _FetchRequest.FetchRequest.post(me._processUrl(url), JSON.stringify(parameterObject), options).then(function (response) {
                return response.json();
            }).then(function (result) {
                if (result.succeed) {
                    me.serviceProcessCompleted(result, seconds);
                } else {
                    me.serviceProcessFailed(result);
                }
            }).catch(function (e) {
                me.eventListeners.processFailed({ error: e });
            });
        }
    }, {
        key: 'serviceProcessCompleted',
        value: function serviceProcessCompleted(result, seconds) {
            result = _SuperMap2.default.Util.transformResult(result);
            seconds = seconds || 1000;
            var me = this;
            if (result) {
                var id = setInterval(function () {
                    return _FetchRequest.FetchRequest.get(result.newResourceLocation).then(function (response) {
                        return response.json();
                    }).then(function (job) {
                        me.events.triggerEvent("processRunning", { id: job.id, state: job.state });
                        if (job.state.runState === 'LOST') {
                            clearInterval(id);
                            me.events.triggerEvent("processFailed", { error: job.state.errorMsg });
                        }
                        if (job.state.runState === 'FINISHED' && job.setting.serviceInfo) {
                            clearInterval(id);
                            me.events.triggerEvent("processCompleted", { result: job });
                        }
                    }).catch(function (e) {
                        clearInterval(id);
                        me.events.triggerEvent("processFailed", { error: e });
                    });
                }, seconds);
            }
        }
    }, {
        key: 'serviceProcessFailed',
        value: function serviceProcessFailed(result) {
            _get(ProcessingServiceBase.prototype.__proto__ || Object.getPrototypeOf(ProcessingServiceBase.prototype), 'serviceProcessFailed', this).call(this, result);
        }

        //为不是以.json结尾的url加上.json，并且如果有token的话，在.json后加上token参数。

    }, {
        key: '_processUrl',
        value: function _processUrl(url) {
            if (url.indexOf('.json') === -1) {
                url += '.json';
            }
            if (_SuperMap2.default.SecurityManager.getToken(url)) {
                url += '?token=' + _SuperMap2.default.SecurityManager.getToken(url);
            }
            return url;
        }
    }]);

    return ProcessingServiceBase;
}(_CommonServiceBase3.default);

exports.default = ProcessingServiceBase;


_SuperMap2.default.ProcessingServiceBase = ProcessingServiceBase;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _FilterParameter = __webpack_require__(10);

var _FilterParameter2 = _interopRequireDefault(_FilterParameter);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.QueryParameters
 * @description 查询参数基类。距离查询、SQL 查询、几何地物查询等各自的参数均继承此类。
 * @param options - {Object} 可选参数。如：<br>
 *         customParams - {String} 自定义参数，供扩展使用。<br>
 *         prjCoordSys -{Object} 自定义参数，供isueprmap提供的动态投影查询扩展使用。如 {"epsgCode":3857}。<br>
 *         expectCount - {Number} 期望返回结果记录个数。<br>
 *         networkType - {SuperMap.GeometryType} 网络数据集对应的查询类型。<br>
 *         queryOption - {SuperMap.QueryOption} 查询结果类型枚举类。<br>
 *         queryParams -  {Array<SuperMap.FilterParameter>} 查询过滤条件参数数组。<br>
 *         startRecord - {Number} 查询起始记录号。<br>
 *         holdTime - {Number} 资源在服务端保存的时间。<br>
 *         returnCustomResult -{Boolean} 仅供三维使用。
 */
var QueryParameters = function () {

    /*
     * Constructor: SuperMap.QueryParameters
     * 查询参数基类构造函数。
     */


    /**
     * APIProperty: holdTime
     * @member SuperMap.QueryParameters.prototype.holdTime -{Number}
     * @description 资源在服务端保存的时间。默认为10（分钟）。
     */


    /**
     * APIProperty: queryParams
     * @member SuperMap.QueryParameters.prototype.queryParams -{Array<SuperMap.FilterParameter>}
     * @description 查询过滤条件参数数组。
     *               该类用于设置查询数据集的查询过滤参数。
     */


    /**
     * APIProperty: networkType
     * @member SuperMap.QueryParameters.prototype.networkType -{SuperMap.GeometryType}
     * @description 网络数据集对应的查询类型，
     *               分为点和线两种类型，默认为线几何对象类型，即SuperMap.GeometryType.LINE。
     */


    /**
     * Property: prjCoordSys
     * @member SuperMap.QueryParameters.prototype.prjCoordSys -{Object}
     * @description 自定义参数，供isueprmap提供的动态投影查询扩展使用。如 {"epsgCode":3857}
     */
    function QueryParameters(options) {
        _classCallCheck(this, QueryParameters);

        this.customParams = null;
        this.prjCoordSys = null;
        this.expectCount = 100000;
        this.networkType = _REST.GeometryType.LINE;
        this.queryOption = _REST.QueryOption.ATTRIBUTEANDGEOMETRY;
        this.queryParams = null;
        this.startRecord = 0;
        this.holdTime = 10;
        this.returnCustomResult = false;
        this.CLASS_NAME = "SuperMap.QueryParameters";

        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * Property: returnCustomResult
     * @member SuperMap.QueryParameters.prototype.returnCustomResult -{Boolean}
     * @description 仅供三维使用。
     */


    /**
     * APIProperty: startRecord
     * @member SuperMap.QueryParameters.prototype.startRecord -{Number}
     * @description 查询起始记录号，默认值为0。
     */


    /**
     * APIProperty: queryOption
     * @member SuperMap.QueryParameters.prototype.queryOption -{SuperMap.QueryOption}
     * @description 查询结果类型枚举类。
     *               该类描述查询结果返回类型，包括只返回属性、
     *               只返回几何实体以及返回属性和几何实体。
     */


    /**
     * APIProperty: expectCount
     * @member SuperMap.QueryParameters.prototype.expectCount -{Number}
     * @description 期望返回结果记录个数，默认返回100000条查询记录，
     *               如果实际不足100000条则返回实际记录条数。
     */


    /**
     * APIProperty: customParams
     * @member SuperMap.QueryParameters.prototype.customParams -{String}
     * @description 自定义参数，供扩展使用。
     */


    _createClass(QueryParameters, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.customParams = null;
            me.expectCount = null;
            me.networkType = null;
            me.queryOption = null;
            if (me.queryParams) {
                for (var i = 0, qps = me.queryParams, len = qps.length; i < len; i++) {
                    qps[i].destroy();
                }
                me.queryParams = null;
            }
            me.startRecord = null;
            me.holdTime = null;
            me.returnCustomResult = null;
            me.prjCoordSys = null;
        }
    }]);

    return QueryParameters;
}();

exports.default = QueryParameters;


_SuperMap2.default.QueryParameters = QueryParameters;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

var _ServerColor = __webpack_require__(11);

var _ServerColor2 = _interopRequireDefault(_ServerColor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Class: SuperMap.ServerTextStyle
 * 服务端文本风格类
 * 该类用于定义文本风格的相关属性。
 */
var ServerTextStyle = function () {

    /**
     * Constructor: SuperMap.ServerTextStyle
     * 服务端文本风格类构造函数。
     *
     * Parameters:
     * options - {Object} 参数。
     *
     * Allowed options properties:
     * align - {TextAlignment} 文本的对齐方式。
     * backColor - {SuperMap.ServerColor} 文本的背景色。
     * foreColor - {SuperMap.ServerColor} 文本的前景色。
     * backOpaque - {Boolean} 文本背景是否不透明。
     * sizeFixed - {Boolean} 文本大小是否固定。
     * fontHeight - {Number} 文本字体的高度。
     * fontWidth - {Number} 文本字体的宽度。
     * fontWeight - {Integer} 文本字体的磅数。
     * fontName - {String} 文本字体的名称。
     * bold - {Boolean} 文本是否为粗体字。
     * italic - {Boolean}文本是否采用斜体。
     * italicAngle - {Number} 字体倾斜角度。
     * shadow - {Boolean} 文本是否有阴影。
     * strikeout - {Boolean} 文本字体是否加删除线。
     * outline - {Boolean} 是否以轮廓的方式来显示文本的背景。
     * opaqueRate - {Number} 注记文字的不透明度。
     * underline - {Boolean} 文本字体是否加下划线。
     * rotation -  {Number} 文本旋转的角度。
     */


    /**
     * APIProperty: underline
     * {Boolean} 文本字体是否加下划线。
     * true 表示加下划线。默认为 false。
     */


    /**
     * APIProperty: outline
     * {Boolean} 是否以轮廓的方式来显示文本的背景。
     * true 表示以轮廓的方式来显示文本的背景。默认值为 false，表示不以轮廓的方式来显示文本的背景。
     */


    /**
     * APIProperty: shadow
     * {Boolean} 文本是否有阴影。
     * true 表示给文本增加阴影。默认值为 false，即文本没有阴影。
     */


    /**
     * APIProperty: italic
     * {Boolean}文本是否采用斜体。
     * true 表示采用斜体。默认为 false。
     */


    /**
     * APIProperty: fontName
     * {String} 文本字体的名称。
     * 默认值为 Times New Roman。
     */


    /**
     * APIProperty: fontWidth
     * {Number} 文本字体的宽度。
     * 字体的宽度以英文字符为标准，由于一个中文字符相当于两个英文字符，默认为0地图坐标单位。
     */


    /**
     * APIProperty: sizeFixed
     * {Boolean} 文本大小是否固定。
     * 默认为 true，表示图片为固定像素大小，具体大小请参考 fontHeight 。
     * 当设为 false 时，图片会随着地图缩放而缩放。
     */


    /**
     * APIProperty: foreColor
     * {SuperMap.ServerColor} 文本的前景色。
     * 默认为黑色。
     */


    /**
     * APIProperty: align
     * {TextAlignment} 文本的对齐方式。
     * 默认为 SuperMap.TextAlignment.BASELINECENTER（基准线居中对齐）。
     */
    function ServerTextStyle(options) {
        _classCallCheck(this, ServerTextStyle);

        this.align = _REST.TextAlignment.BASELINECENTER;
        this.backColor = null;
        this.foreColor = null;
        this.backOpaque = false;
        this.sizeFixed = true;
        this.fontHeight = 6;
        this.fontWidth = 0;
        this.fontWeight = 400;
        this.fontName = "Times New Roman";
        this.bold = false;
        this.italic = false;
        this.italicAngle = 0;
        this.shadow = false;
        this.strikeout = false;
        this.outline = false;
        this.opaqueRate = 0;
        this.underline = false;
        this.rotation = 0.0;
        this.CLASS_NAME = "SuperMap.ServerTextStyle";

        var me = this;
        me.backColor = new _ServerColor2.default(255, 255, 255);
        me.foreColor = new _ServerColor2.default(0, 0, 0);
        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: rotation
     * {Number} 文本旋转的角度。
     * 逆时针方向为正方向，单位为度，精确到0.1度。默认值为0.0。
     */


    /**
     * APIProperty: opaqueRate
     * {Number} 注记文字的不透明度。
     * 不透明度的范围为0-100。默认为0，表示透明。
     */


    /**
     * APIProperty: strikeout
     * {Boolean} 文本字体是否加删除线。
     * true 表示加删除线。默认值为 false，即文本字体不加删除线。
     */


    /**
     * APIProperty: italicAngle
     * {Number} 字体倾斜角度。
     * 正负度之间，以度为单位，精确到0.1度，默认为0度。当倾斜角度为0度，为系统默认的字体倾斜样式。正负度是指以纵轴为起始零度线，
     * 其纵轴左侧为正，右侧为负。允许的最大角度为60，最小-60。大于60按照60处理，小于-60按照-60处理。目前只对标签专题图有效。
     */


    /**
     * APIProperty: bold
     * {Boolean} 文本是否为粗体字。
     * true 表示为粗体。默认值为 false，即文本不是粗体字。
     */


    /**
     * APIProperty: fontWeight
     * {Integer} 文本字体的磅数。
     * 表示粗体的具体数值。取值范围为从0－900之间的整百数，默认值为400。
     */


    /**
     * APIProperty: fontHeight
     * {Number} 文本字体的高度，默认为6，
     * 单位与 sizeFixed 有关，当 sizeFixed 为 False 时，即非固定文本大小时使用地图坐标单位，
     * 如地理坐标系下的地图中单位为度；当 sizeFixed 为 True 时，单位为毫米（mm）。
     */


    /**
     * APIProperty: backOpaque
     * {Boolean} 文本背景是否不透明。
     * true 表示文本背景不透明。
     */


    /**
     * APIProperty: backColor
     * {SuperMap.ServerColor} 文本的背景色。
     * 默认为白色。
     */


    _createClass(ServerTextStyle, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.align = null;
            if (me.backColor) {
                me.backColor.destroy();
                me.backColor = null;
            }
            if (me.foreColor) {
                me.foreColor.destroy();
                me.foreColor = null;
            }
            me.backOpaque = null;
            me.sizeFixed = null;
            me.fontHeight = null;
            me.fontWidth = null;
            me.fontWeight = null;
            me.fontName = null;
            me.bold = null;
            me.italic = null;
            me.italicAngle = null;
            me.shadow = null;
            me.strikeout = null;
            me.outline = null;
            me.opaqueRate = null;
            me.underline = null;
            me.rotation = null;
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            var res = new ServerTextStyle(obj);
            _SuperMap2.default.Util.copy(res, obj);
            res.backColor = _ServerColor2.default.fromJson(obj.backColor);
            res.foreColor = _ServerColor2.default.fromJson(obj.foreColor);
            return res;
        }
    }]);

    return ServerTextStyle;
}();

exports.default = ServerTextStyle;


_SuperMap2.default.ServerTextStyle = ServerTextStyle;

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _TransportationAnalystResultSetting = __webpack_require__(254);

var _TransportationAnalystResultSetting2 = _interopRequireDefault(_TransportationAnalystResultSetting);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/** * Class: SuperMap.TransportationAnalystParameter * 交通网络分析通用参数类。 * 该类主要用来提供交通网络分析所需的通用参数。 * 通过本类可以设置障碍边、障碍点、权值字段信息的名称标识、转向权值字段等信息，还可以对分析结果包含的内容进行一些设置。 */
var TransportationAnalystParameter = function () {

  /**     * Constructor: SuperMap.TransportationAnalystParameter     * 交通网络分析通用参数类构造函数。     *     * Parameters:     * options - {Object} 参数。     *     * Allowed options properties:     * barrierEdgeIDs - {Array(<Number>)} 网络分析中障碍弧段的 ID 数组。     * barrierNodeIDs - {Array(<Number>)} 网络分析中障碍点的 ID 数组。     * barrierPoints - {Array(<Point>)}     * weightFieldName - {String} 阻力字段的名称。     * turnWeightField - {String} 转向权重字段的名称。     * resultSetting - {SuperMap.TransportationAnalystResultSetting} 分析结果返回内容。     */


  /**     * APIProperty: turnWeightField     * {String} 转向权重字段的名称。     */


  /**     * APIProperty: barrierPoints     * {Array(<Point>)}网络分析中 Point2D 类型的障碍点数组。障碍点表示任何方向都不能通过此点。     * 当各网络分析参数类中的 isAnalyzeById 属性设置为 false 时，该属性才生效。     */


  /**     * APIProperty: barrierEdgeIDs     * {Array(<Number>)} 网络分析中障碍弧段的 ID 数组。弧段设置为障碍边之后，表示双向都不通。     */
  function TransportationAnalystParameter(options) {
    _classCallCheck(this, TransportationAnalystParameter);

    this.barrierEdgeIDs = null;
    this.barrierNodeIDs = null;
    this.barrierPoints = null;
    this.weightFieldName = null;
    this.turnWeightField = null;
    this.resultSetting = null;
    this.CLASS_NAME = "SuperMap.TransportationAnalystParameter";

    var me = this;
    me.resultSetting = new _TransportationAnalystResultSetting2.default();
    if (!options) {
      return;
    }
    _SuperMap2.default.Util.extend(this, options);
  }

  /**     * APIMethod: destroy     * 释放资源，将引用资源的属性置空。     */


  /**     * APIProperty: resultSetting     * {SuperMap.TransportationAnalystResultSetting} 分析结果返回内容。     */


  /**     * APIProperty: weightFieldName     * {String} 阻力字段的名称，标识了进行网络分析时所使用的阻力字段，例如表示时间、长度等的字段都可以用作阻力字段。     * 该字段默值为服务器发布的所有耗费字段的第一个字段。     */


  /**     * APIProperty: barrierNodeIDs     * {Array(<Number>)} 网络分析中障碍点的 ID 数组。结点设置为障碍点之后，表示任何方向都不能通过此结点。     */


  _createClass(TransportationAnalystParameter, [{
    key: 'destroy',
    value: function destroy() {
      var me = this;
      me.barrierEdgeIDs = null;
      me.barrierNodeIDs = null;
      me.weightFieldName = null;
      me.turnWeightField = null;
      if (me.resultSetting) {
        me.resultSetting.destroy();
        me.resultSetting = null;
      }
      if (me.barrierPoints && me.barrierPoints.length) {
        for (var i in me.barrierPoints) {
          me.barrierPoints.destroy();
        }
      }
      me.barrierPoints = null;
    }
  }]);

  return TransportationAnalystParameter;
}();

exports.default = TransportationAnalystParameter;

_SuperMap2.default.TransportationAnalystParameter = TransportationAnalystParameter;

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.DataReturnOption
 * @constructs SuperMap.DataReturnOption
 * @classdesc
 * 数据返回设置类
 * @api
 */
var DataReturnOption = function () {

    /**
     * @method SuperMap.DataReturnOption.initialize
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * expectCount - {Number} 返回的最大记录数。</br>
     * dataset - {String} 设置结果数据集标识，当dataReturnMode为 SuperMap.DataReturnMode.DATASET_ONLY
     或SuperMap.DataReturnMode.DATASET_AND_RECORDSET时有效，作为返回数据集的名称。</br>
     * dataReturnMode - {SuperMap.DataReturnMode} 数据返回模式，默认为DataReturnMode.DATASET_ONLY。</br>
     * deleteExistResultDataset - {Boolean} 如果用户命名的结果数据集名称与已有的数据集重名，是否删除已有的数据集。</br>
     */


    /**
     * APIProperty: dataReturnMode
     * {SuperMap.DataReturnMode} 数据返回模式，默认为SuperMap.DataReturnMode.RECORDSET_ONLY。
     */


    /**
     * APIProperty: expectCount
     * {Number}  设置返回的最大记录数，小于或者等于0时表示返回所有记录数。
     */
    function DataReturnOption(options) {
        _classCallCheck(this, DataReturnOption);

        this.expectCount = 1000;
        this.dataset = null;
        this.dataReturnMode = _REST.DataReturnMode.RECORDSET_ONLY;
        this.deleteExistResultDataset = true;
        this.CLASS_NAME = "SuperMap.DataReturnOption";

        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: deleteExistResultDataset
     * {Boolean} 如果用户命名的结果数据集名称与已有的数据集重名，是否删除已有的数据集。
     */


    /**
     * APIProperty: dataset
     * {String} 设置结果数据集标识，当dataReturnMode为 SuperMap.DataReturnMode.DATASET_ONLY
     * 或SuperMap.DataReturnMode.DATASET_AND_RECORDSET时有效，
     * 作为返回数据集的名称。该名称用形如"数据集名称@数据源别名"形式来表示。
     */


    _createClass(DataReturnOption, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.expectCount = null;
            me.dataset = null;
            me.dataReturnMode = null;
            me.deleteExistResultDataset = null;
        }
    }]);

    return DataReturnOption;
}();

exports.default = DataReturnOption;


_SuperMap2.default.DataReturnOption = DataReturnOption;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.FacilityAnalyst3DParameters
 * @description 最近设施分析参数基类。<br>
 *               最近设施分析是指在网络上给定一个事件点和一组设施点，查找从事件点到设施点(或从设施点到事件点)以最小耗费能到达的最佳路径。<br>
 *               设施点一般为学校、超市、加油站等服务设施；事件点为需要服务设施的事件位置。<br>
 *               例如事件发生点是一起交通事故，要求查找在10分钟内能到达的最近医院，超过10分钟能到达的都不予考虑。此例中，事故发生地即是一个事件点，周边的医院则是设施点。<br>
 *               最近设施查找实际上也是一种路径分析，因此对路径分析起作用的障碍边、障碍点、转向表、耗费等属性在最近设施分析时同样可设置。
 * @param options - {Object} 可选参数。如：<br>
 *         edgeID - {Number} 指定的弧段ID。<br>
 *         nodeID - {Integer} 指定的结点ID。<br>
 *         weightName -{String} 指定的权值字段信息对象的名称。<br>
 *         isUncertainDirectionValid -{Boolean} 指定不确定流向是否有效。指定为 true，表示不确定流向有效，遇到不确定流向时分析继续进行；<br>
 *                                              指定为 false，表示不确定流向无效，遇到不确定流向将停止在该方向上继续查找。
 */
var FacilityAnalyst3DParameters = function () {

    /*
     * Constructor: SuperMap.FacilityAnalyst3DParameters
     * 最近设施分析参数类构造函数。
     */


    /**
     * APIProperty: weightName
     * @member SuperMap.FacilityAnalyst3DParameters.prototype.weightName -{String}
     * @description 指定的权值字段信息对象的名称
     */


    /**
     * APIProperty: edgeID
     * @member SuperMap.FacilityAnalyst3DParameters.prototype.edgeID -{Number}
     * @description 指定的弧段ID
     */
    function FacilityAnalyst3DParameters(options) {
        _classCallCheck(this, FacilityAnalyst3DParameters);

        this.edgeID = null;
        this.nodeID = null;
        this.weightName = null;
        this.isUncertainDirectionValid = false;
        this.CLASS_NAME = "SuperMap.FacilityAnalyst3DParameters";

        var me = this;
        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(me, options);
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: isUncertainDirectionValid
     * @member SuperMap.FacilityAnalyst3DParameters.prototype.isUncertainDirectionValid -{Boolean}:
     * @description 指定不确定流向是否有效。指定为 true，表示不确定流向有效，遇到不确定流向时分析继续进行；<br>
     *                指定为 false，表示不确定流向无效，遇到不确定流向将停止在该方向上继续查找
     */


    /**
     * APIProperty: nodeID
     * @member SuperMap.FacilityAnalyst3DParameters.prototype.nodeID -{Number}
     * @description 指定的结点ID
     */


    _createClass(FacilityAnalyst3DParameters, [{
        key: "destroy",
        value: function destroy() {
            var me = this;
            me.edgeID = null;
            me.nodeID = null;
            me.weightName = null;
            me.isUncertainDirectionValid = null;
        }
    }]);

    return FacilityAnalyst3DParameters;
}();

exports.default = FacilityAnalyst3DParameters;

_SuperMap2.default.FacilityAnalyst3DParameters = FacilityAnalyst3DParameters;

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.GetFeaturesParametersBase
 * @constructs SuperMap.GetFeaturesParametersBase
 * @classdesc 要素查询参数基类
 * @extends {SuperMap}
 * @api
 */
var GetFeaturesParametersBase = function () {

    /**
     * @method SuperMap.GetFeaturesParametersBase.initialize
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * datasetNames - {Array(String)} 数据集集合中的数据集名称列表。</br>
     * returnContent - {SuperMap.FilterParameter} 是否直接返回查询结果。</br>
     * fromIndex - {Integer} 查询结果的最小索引号。</br>
     * toIndex - {Integer} 查询结果的最大索引号。</br>
     */


    /**
     * APIProperty: returnCountOnly
     * {Boolean} 只返回查询结果的总数，默认为false。
     */

    /**
     * APIProperty: fromIndex
     * {Integer} 查询结果的最小索引号。
     *           默认值是0，如果该值大于查询结果的最大索引号，则查询结果为空。
     */


    /**
     * APIProperty: datasetNames
     * {Array(String)} 数据集集合中的数据集名称列表。
     */
    function GetFeaturesParametersBase(options) {
        _classCallCheck(this, GetFeaturesParametersBase);

        this.datasetNames = null;
        this.returnContent = true;
        this.fromIndex = 0;
        this.toIndex = 19;
        this.returnCountOnly = false;
        this.maxFeatures = null;
        this.CLASS_NAME = "SuperMap.GetFeaturesParametersBase";

        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: maxFeatures
     * {Integer} 进行SQL查询时，用于设置服务端返回查询结果条目数量，默认为1000。
     */


    /**
     * APIProperty: toIndex
     * {Integer} 查询结果的最大索引号。
     *           默认值是19，如果该值大于查询结果的最大索引号，则以查询结果的最大索引号为终止索引号。
     */


    /**
     * APIProperty: returnContent
     * {Boolean} 是否立即返回新创建资源的表述还是返回新资源的URI。
     *           如果为 true，则直接返回新创建资源，即查询结果的表述。
     *           如果为 false，则返回的是查询结果资源的 URI。默认为 true。
     */


    _createClass(GetFeaturesParametersBase, [{
        key: "destroy",
        value: function destroy() {
            var me = this;
            me.datasetNames = null;
            me.returnContent = null;
            me.fromIndex = null;
            me.toIndex = null;
            me.maxFeatures = null;
        }
    }]);

    return GetFeaturesParametersBase;
}();

exports.default = GetFeaturesParametersBase;


_SuperMap2.default.GetFeaturesParametersBase = GetFeaturesParametersBase;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _GeoJSON = __webpack_require__(5);

var _GeoJSON2 = _interopRequireDefault(_GeoJSON);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.GetFeaturesServiceBase
 * @constructs  SuperMap.GetFeaturesServiceBase
 * @classdesc
 * 数据服务中数据集查询服务基类。
 * 获取结果数据类型为Object。包含 result属性，result的数据格式根据format参数决定为GeoJSON或者iServerJSON
 *
 * @extends {SuperMap.CommonServiceBase}
 * @param url - {String} 数据查询结果资源地址。请求数据服务中数据集查询服务，
 * URL 应为：http://{服务器地址}:{服务端口号}/iserver/services/{数据服务名}/rest/data/</br>
 * 例如："http://localhost:8090/iserver/services/data-jingjin/rest/data/"
 * @param eventListeners - {Object} 需要被注册的监听器对象。
 * @example
 *
 *
 * (start code)
 * var myService = new SuperMap.GetFeaturesServiceBase(url, {
     *     eventListeners: {
     *         "processCompleted": getFeatureCompleted,
     *         "processFailed": getFeatureError
     *     }
     * });
 * (end)
 *
 * @api
 */
var GetFeaturesServiceBase = function (_CommonServiceBase) {
    _inherits(GetFeaturesServiceBase, _CommonServiceBase);

    /* @method SuperMap.GetFeaturesServiceBase.initialize
     * @description数据集查询服务基类构造函数。
     * @param url - {String} 数据查询结果资源地址。请求数据服务中数据集查询服务，
     * URL 应为：http://{服务器地址}:{服务端口号}/iserver/services/{数据服务名}/rest/data/；
     * 例如："http://localhost:8090/iserver/services/data-jingjin/rest/data/"
     * @param options - {Object} 参数。
     *
     */


    /**
     * APIProperty: maxFeatures
     * {Integer} 进行SQL查询时，用于设置服务端返回查询结果条目数量，默认为1000。
     */


    /**
     * @property {Integer} fromIndex
     * @description查询结果的最小索引号。
     *         默认值是0，如果该值大于查询结果的最大索引号，则查询结果为空。
     */
    function GetFeaturesServiceBase(url, options) {
        _classCallCheck(this, GetFeaturesServiceBase);

        var _this = _possibleConstructorReturn(this, (GetFeaturesServiceBase.__proto__ || Object.getPrototypeOf(GetFeaturesServiceBase)).call(this, url, options));

        _this.returnContent = true;
        _this.fromIndex = 0;
        _this.toIndex = 19;
        _this.maxFeatures = null;
        _this.format = _REST.DataFormat.GEOJSON;
        _this.CLASS_NAME = "SuperMap.GetFeaturesServiceBase";

        options = options || {};
        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        var me = _this,
            end;
        if (options && options.format) {
            me.format = options.format.toUpperCase();
        }

        end = me.url.substr(me.url.length - 1, 1);
        // TODO 待iServer featureResul资源GeoJSON表述bug修复当使用以下注释掉的逻辑
        // if (me.format==="geojson" && me.isInTheSameDomain) {
        //     me.url += (end == "/") ? "featureResults.geojson?" : "/featureResults.geojson?";
        // } else {
        //     me.url += (end == "/") ? "featureResults.jsonp?" : "/featureResults.jsonp?";
        // }
        if (me.isInTheSameDomain) {
            me.url += end == "/" ? "featureResults.json?" : "/featureResults.json?";
        } else {
            me.url += end == "/" ? "featureResults.jsonp?" : "/featureResults.jsonp?";
        }
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源,将引用资源的属性置空。
     */


    /**
     *  @property {String} format
     *  @description 查询结果返回格式，目前支持iServerJSON 和GeoJSON两种格式
     *  参数格式为"ISERVER","GEOJSON",GEOJSON
     */


    /**
     * Property: toIndex
     * {Integer} 查询结果的最大索引号。
     *         如果该值大于查询结果的最大索引号，则以查询结果的最大索引号为终止索引号。
     */


    /**
     * @property {Boolean} returnContent
     *          @description 是否立即返回新创建资源的表述还是返回新资源的URI。
     *           如果为 true，则直接返回新创建资源，即查询结果的表述。
     *           如果为 false，则返回的是查询结果资源的 URI。默认为 false。
     */


    _createClass(GetFeaturesServiceBase, [{
        key: 'destroy',
        value: function destroy() {
            _get(GetFeaturesServiceBase.prototype.__proto__ || Object.getPrototypeOf(GetFeaturesServiceBase.prototype), 'destroy', this).call(this);
            var me = this;
            me.returnContent = null;
            me.fromIndex = null;
            me.toIndex = null;
            me.maxFeatures = null;
            me.format = null;
        }

        /**
         *@method SuperMap.GetFeaturesServiceBase.processAsync
         * @description  负责将客户端的查询参数传递到服务端。
         *@param params - {GetFeaturesParametersBase} 查询参数。
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                jsonParameters = null,
                firstPara = true;

            me.returnContent = params.returnContent;
            me.fromIndex = params.fromIndex;
            me.toIndex = params.toIndex;
            me.maxFeatures = params.maxFeatures;
            if (me.returnContent) {
                me.url += "returnContent=" + me.returnContent;
                firstPara = false;
            }
            var isValidNumber = me.fromIndex != null && me.toIndex != null && !isNaN(me.fromIndex) && !isNaN(me.toIndex);
            if (isValidNumber && me.fromIndex >= 0 && me.toIndex >= 0 && !firstPara) {
                me.url += "&fromIndex=" + me.fromIndex + "&toIndex=" + me.toIndex;
            }

            if (params.returnCountOnly) me.url += "&returnCountOnly=" + params.returnContent;
            jsonParameters = me.getJsonParameters(params);
            me.request({
                method: "POST",
                data: jsonParameters,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }

        /**
         * @method SuperMap.GetFeaturesServiceBase.getFeatureComplete
         * @description 查询完成，执行此方法。
         * @param result - {Object} 服务器返回的结果对象。
         */

    }, {
        key: 'serviceProcessCompleted',
        value: function serviceProcessCompleted(result) {
            var me = this;
            result = _SuperMap2.default.Util.transformResult(result);
            if (me.format === _REST.DataFormat.GEOJSON && result.features) {
                var geoJSONFormat = new _GeoJSON2.default();
                result.features = JSON.parse(geoJSONFormat.write(result.features));
            }
            me.events.triggerEvent("processCompleted", { result: result });
        }
    }]);

    return GetFeaturesServiceBase;
}(_CommonServiceBase3.default);

exports.default = GetFeaturesServiceBase;


_SuperMap2.default.GetFeaturesServiceBase = GetFeaturesServiceBase;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.InterpolationAnalystParameters
 * @constructs SuperMap.InterpolationAnalystParameters
 * @classdesc
 * 插值分析参数类。
 * @api
 */
var InterpolationAnalystParameters = function () {

    /**
     * @method SuperMap.InterpolationAnalystParameters.initialize
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * bounds - {SuperMap.Bounds} 插值分析的范围，用于确定结果栅格数据集的范围。</br>
     * searchRadius - {Number} 查找半径，即参与运算点的查找范围，与点数据集单位相同。</br>
     * zValueFieldName - {String} 存储用于进行插值分析的字段名称，插值分析不支持文本类型的字段。</br>
     * zValueScale - {Number} 用于进行插值分析值的缩放比率，默认为1。</br>
     * resolution - {Number} 插值结果栅格数据集的分辨率，即一个像元所代表的实地距离，与点数据集单位相同。</br>
     * filterQueryParameter - {SuperMap.FilterParameter} 属性过滤条件。</br>
     * outputDatasetName - {String} 插值分析结果数据集的名称。</br>
     * outputDatasourceName - {String} 插值分析结果数据源的名称。</br>
     * pixelFormat - {SuperMap.PixelFormat} 指定结果栅格数据集存储的像素格式。</br>
     * dataset - {String} 用于做插值分析的数据源中数据集的名称。</br>
     * inputPoints - {Array <Point||Array} 用于做插值分析的离散点集合。</br>
     * InterpolationAnalystType - {String} 插值分析类型（dataset或geometry），默认为dataset 。</br>
     */


    /**
     * APIProperty: InterpolationAnalystType
     * {String} 插值分析类型。差值分析包括数据集插值分析和几何插值分析两类，
     * “dataset”表示对数据集进行插值分析，“geometry”表示对离散点数组进行插值分析，默认值为“dataset”。
     */


    /**
     * APIProperty: dataset
     * {String}用来做插值分析的数据源中数据集的名称，该名称用形如"数据集名称@数据源别名"形式来表示。
     * 当插值分析类型(InterpolationAnalystType)为 dataset 时，必设参数。
     */


    /**
     * APIProperty: outputDatasourceName
     * {String} 插值分析结果数据源的名称。必设参数
     */


    /**
     * APIProperty: filterQueryParameter
     * {SuperMap.FilterParameter} 过滤条件，
     *对分析数据集中的点进行过滤，不设置时默认为null，即对数据集中的所有点进行分析。
     */


    /**
     * APIProperty: zValueScale
     * {Number} 用于进行插值分析值的缩放比率，默认值为1。
     * 参加插值分析的值将乘以该参数值后再进行插值，也就是对进行插值分析的值进行统一的扩大或缩小。
     */


    /**
     * APIProperty: searchRadius
     * {Number} 查找半径，即参与运算点的查找范围，与点数据集单位相同，默认值为0。
     * 计算某个位置的Z 值时，会以该位置为圆心，以查找范围的值为半径，落在这个范围内的采样点都将参与运算。
     * 该值需要根据待插值点数据的分布状况和点数据集范围进行设置。
     */
    function InterpolationAnalystParameters(options) {
        _classCallCheck(this, InterpolationAnalystParameters);

        this.bounds = null;
        this.searchRadius = 0;
        this.zValueFieldName = null;
        this.zValueScale = 1;
        this.resolution = null;
        this.filterQueryParameter = null;
        this.outputDatasetName = null;
        this.outputDatasourceName = null;
        this.pixelFormat = _REST.PixelFormat.BIT16;
        this.dataset = null;
        this.inputPoints = null;
        this.InterpolationAnalystType = "dataset";
        this.clipParam = null;
        this.CLASS_NAME = "SuperMap.InterpolationAnalystParameters";

        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: clipParam
     * {SuperMap.ClipParameter}  对插值分析结果进行裁剪的参数。
     */


    /**
     * APIProperty: inputPoints
     * {Array <Point||Array} 用于做插值分析的离散点（离散点包括Z值）集合。
     * 当插值分析类型（InterpolationAnalystType）为 geometry 时，此参数为必设参数。
     * 通过离散点直接进行插值分析不需要指定输入数据集inputDatasourceName，inputDatasetName以及zValueFieldName。
     */


    /**
     * APIProperty: pixelFormat
     * {SuperMap.PixelFormat} 指定结果栅格数据集存储的像素格式。
     * 默认值为 SuperMap.PixelFormat.BIT16。
     * 支持存储的像素格式有 BIT16、BIT32、DOUBLE、SINGLE、UBIT1、UBIT4、UBIT8、UBIT24、UBIT32。
     */


    /**
     * APIProperty: outputDatasetName
     * {String} 插值分析结果数据集的名称。必设参数
     */


    /**
     * APIProperty: resolution
     * {Number} 插值结果栅格数据集的分辨率，即一个像元所代表的实地距离，与点数据集单位相同。
     * 该值不能超过待分析数据集的范围边长。
     * 且该值设置时，应该考虑点数据集范围大小来取值，一般为结果栅格行列值（即结果栅格数据集范围除以分辨率），在500以内可以较好地体现密度走势。
     */


    /**
     * APIProperty: zValueFieldName
     * {String} 数据集插值分析中，用于指定进行插值分析的目标字段名，插值分析不支持文本类型的字段。
     * 含义为每个插值点在插值过程中的权重，可以将所有点此字段值设置为1，即所有点在整体插值中权重相同。
     * 当插值分析类型(InterpolationAnalystType)为 dataset 时，必设参数。
     */


    /**
     * APIProperty: bounds
     * {SuperMap.Bounds} 插值分析的范围，用于确定结果栅格数据集的范围。
     * 如果缺省，则默认为原数据集的范围。鉴于此插值方法为内插方法，原数据集的范围内的插值结果才相对有参考价值，
     * 因此建议此参数不大于原数据集范围。
     */


    _createClass(InterpolationAnalystParameters, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.bounds = null;
            me.searchRadius = null;
            me.zValueFieldName = null;
            me.zValueScale = null;

            me.resolution = null;
            me.filterQueryParameter = null;
            me.outputDatasetName = null;
            me.pixelFormat = null;
        }
    }], [{
        key: 'toObject',
        value: function toObject(interpolationAnalystParameters, tempObj) {
            for (var name in interpolationAnalystParameters) {
                if (name === "inputPoints" && interpolationAnalystParameters.InterpolationAnalystType === "geometry") {
                    var objs = [];
                    for (var i = 0; i < interpolationAnalystParameters.inputPoints.length; i++) {
                        var item = interpolationAnalystParameters.inputPoints[i];
                        var obj = {
                            x: item.x,
                            y: item.y,
                            z: item.tag
                        };
                        objs.push(obj);
                    }
                    tempObj[name] = objs;
                } else {
                    tempObj[name] = interpolationAnalystParameters[name];
                }
            }
        }
    }]);

    return InterpolationAnalystParameters;
}();

exports.default = InterpolationAnalystParameters;


_SuperMap2.default.InterpolationAnalystParameters = InterpolationAnalystParameters;

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _QueryParameters = __webpack_require__(17);

var _QueryParameters2 = _interopRequireDefault(_QueryParameters);

var _GeoJSON = __webpack_require__(5);

var _GeoJSON2 = _interopRequireDefault(_GeoJSON);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.QueryService
 * @description 查询服务基类。
 * @augments SuperMap.CommonServiceBase
 * @param url - {String} 服务地址。请求地图查询服务的 URL 应为：http://{服务器地址}:{服务端口号}/iserver/services/{地图服务名}/rest/maps/{地图名}；
 * @param options - {Object} 可选参数。如：<br>
 *        eventListeners - {Object} 需要被注册的监听器对象。
 * @example
 * (start code)
 * var myService = new SuperMap.QueryService(url, {
 *     eventListeners: {
 *	       "processCompleted": queryCompleted,
 *		   "processFailed": queryError
 *		   }
 * };
 * (end)
 */
var QueryService = function (_CommonServiceBase) {
    _inherits(QueryService, _CommonServiceBase);

    /**
     * @function SuperMap.QueryService.prototype.initialize
     * @description 查询服务基类构造函数。
     * @param url - {String} 服务地址。请求地图查询服务的 URL 应为：http://{服务器地址}:{服务端口号}/iserver/services/{地图服务名}/rest/maps/{地图名}；
     * @param options - {Object} 可选参数。如：<br>
     *        eventListeners - {Object} 需要被注册的监听器对象。
     */


    /*
     * Property: returnContent
     * {Boolean} 是否立即返回新创建资源的表述还是返回新资源的URI。
     */
    function QueryService(url, options) {
        _classCallCheck(this, QueryService);

        var _this = _possibleConstructorReturn(this, (QueryService.__proto__ || Object.getPrototypeOf(QueryService)).call(this, url, options));

        _this.returnContent = false;
        _this.format = _REST.DataFormat.GEOJSON;
        _this.CLASS_NAME = "SuperMap.QueryService";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        var me = _this,
            end;
        if (!me.url) {
            return _possibleConstructorReturn(_this);
        }
        if (options && options.format) {
            me.format = options.format.toUpperCase();
        }

        end = me.url.substr(me.url.length - 1, 1);

        // TODO 待iServer featureResul资源GeoJSON表述bug修复当使用以下注释掉的逻辑
        // if (this.format==="geojson" && me.isInTheSameDomain) {
        //     me.url += (end == "/") ? "featureResults.geojson?" : "/featureResults.geojson?";
        // } else {
        //     me.url += (end == "/") ? "featureResults.jsonp?" : "/featureResults.jsonp?";
        // }
        if (me.isInTheSameDomain) {
            me.url += end === "/" ? "queryResults.json?" : "/queryResults.json?";
        } else {
            me.url += end === "/" ? "queryResults.jsonp?" : "/queryResults.jsonp?";
        }
        return _this;
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /*
     *  Property: format
     *  {String} 查询结果返回格式，目前支持iServerJSON 和GeoJSON两种格式
     *  参数格式为"ISERVER","GEOJSON",GEOJSON
     */


    _createClass(QueryService, [{
        key: 'destroy',
        value: function destroy() {
            _get(QueryService.prototype.__proto__ || Object.getPrototypeOf(QueryService.prototype), 'destroy', this).call(this);
            var me = this;
            me.returnContent = null;
            me.format = null;
        }

        /**
         * @function SuperMap.QueryService.prototype.processAsync
         * @description 负责将客户端的查询参数传递到服务端。
         * @param params - {QueryParameters} 查询参数。
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                returnCustomResult = null,
                jsonParameters = null;
            me.returnContent = params.returnContent;
            jsonParameters = me.getJsonParameters(params);
            if (me.returnContent) {
                me.url += "returnContent=" + me.returnContent;
            } else {
                //仅供三维使用 获取高亮图片的bounds
                returnCustomResult = params.returnCustomResult;
                if (returnCustomResult) {
                    me.url += "returnCustomResult=" + returnCustomResult;
                }
            }
            me.request({
                method: "POST",
                data: jsonParameters,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }

        /*
         * Method: queryComplete
         * 查询完成，执行此方法。
         *
         * Parameters:
         * result - {Object} 服务器返回的结果对象。
         */

    }, {
        key: 'serviceProcessCompleted',
        value: function serviceProcessCompleted(result) {
            var me = this;
            result = _SuperMap2.default.Util.transformResult(result);
            if (result && result.recordsets && me.format === _SuperMap2.default.DataFormat.GEOJSON) {
                var geoJSONFormat = new _GeoJSON2.default();
                for (var i = 0, recordsets = result.recordsets, len = recordsets.length; i < len; i++) {
                    if (recordsets[i].features) {
                        recordsets[i].features = JSON.parse(geoJSONFormat.write(recordsets[i].features));
                    }
                }
            }
            me.events.triggerEvent("processCompleted", { result: result });
        }

        /*
         * Method: getQueryParameters
         * 将 JSON 对象表示的查询参数转化为 QueryParameters 对象。
         *
         * Parameters:
         * params - {Object} JSON 字符串表示的查询参数。
         *
         * Returns:
         * {QueryParameters} 返回转化后的 QueryParameters 对象。
         */

    }, {
        key: 'getQueryParameters',
        value: function getQueryParameters(params) {
            return new _QueryParameters2.default({
                customParams: params.customParams,
                expectCount: params.expectCount,
                networkType: params.networkType,
                queryOption: params.queryOption,
                queryParams: params.queryParams,
                startRecord: params.startRecord,
                prjCoordSys: params.prjCoordSys,
                holdTime: params.holdTime
            });
        }
    }]);

    return QueryService;
}(_CommonServiceBase3.default);

exports.default = QueryService;


_SuperMap2.default.QueryService = QueryService;

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

__webpack_require__(46);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ThemeFeature = _SuperMap2.default.Feature.Theme;

/**
 * @class SuperMap.Feature.Theme.Vector
 * @description 矢量专题要素类。
 * @augments SuperMap.Feature.Theme
 * @param data - {SuperMap.Feature.Vector}  用户数据，必设参数, 矢量专题要素的类型为矢量数据 feature。
 * @param layer - {SuperMap.Layer} 此专题要素所在图层，必设参数。
 * @param style - {Object} 样式。
 * @param options - {Object} 创建专题要素时的可选参数。如：<br>
 *        nodesClipPixel - {Number} 节点抽稀像素距离，默认值 2, 单位：像素。<br>
 *        isHoverAble - {Boolean} 图形是否可 hover，默认 true。<br>
 *        isMultiHover - {Boolean} 是否使用多图形高亮，isHoverAble 为 true 时生效 ，默认 true。<br>
 *        isClickAble - {Boolean} 图形是否可点击，默认 true。<br>
 *        highlightStyle - {Object} 高亮样式。
 */

var ThemeVector = function (_ThemeFeature) {
    _inherits(ThemeVector, _ThemeFeature);

    /**
     * @function SuperMap.Feature.Theme.Vector.prototype.initialize
     * @description 创建一个矢量专题要素。
     * @param data - {SuperMap.Feature.Vector}  用户数据，必设参数, 矢量专题要素的类型为矢量数据 feature。
     * @param layer - {SuperMap.Layer} 此专题要素所在图层，必设参数。
     * @param style - {Object} 样式。
     * @param options - {Object} 创建专题要素时的可选参数。如：<br>
     *        nodesClipPixel - {Number} 节点抽稀像素距离，默认值 2, 单位：像素。<br>
     *        isHoverAble - {Boolean} 图形是否可 hover，默认 true。<br>
     *        isMultiHover - {Boolean} 是否使用多图形高亮，isHoverAble 为 true 时生效 ，默认 true。<br>
     *        isClickAble - {Boolean} 图形是否可点击，默认 true。<br>
     *        highlightStyle - {Object} 高亮样式。
     * @return {SuperMap.Feature.Theme.Vector} 返回一个矢量专题要素类。
     */


    /*
     * Property: shapeOptions
     * {Object}  添加到渲染器前修改 shape 的一些属性，非特殊情况通常不允许这么做
     */


    /**
     * Property: isClickAble
     * {Boolean} 图形是否可点击，默认 true
     */


    /*
     * Property: isHoverAble
     * {Boolean} 图形是否可 hover，默认 true
     */


    /*
     * Property: dataBounds
     * {SuperMap.Bounds} 用户数据的（feature.geometry）地理范围。
     */
    function ThemeVector(data, layer, style, options, shapeOptions) {
        _classCallCheck(this, ThemeVector);

        //数据的 geometry 属性必须存在且类型是 SuperMap.Geometry 或其子类的类型
        var _this = _possibleConstructorReturn(this, (ThemeVector.__proto__ || Object.getPrototypeOf(ThemeVector)).call(this, data, layer));

        _this.dataBounds = null;
        _this.nodesClipPixel = 2;
        _this.isHoverAble = true;
        _this.isMultiHover = true;
        _this.isClickAble = true;
        _this.highlightStyle = null;
        _this.shapeOptions = null;
        _this.style = null;
        _this.CLASS_NAME = "SuperMap.Feature.Theme.Vector";
        if (!data.geometry) return _possibleConstructorReturn(_this);
        if (!(data.geometry instanceof _SuperMap2.default.Geometry)) return _possibleConstructorReturn(_this);
        _this.style = style ? style : {};
        _this.data = data;
        _this.layer = layer;
        _this.id = _SuperMap2.default.Util.createUniqueID(_this.CLASS_NAME + "_");
        _this.location = [];
        _this.shapes = [];
        if (options) {
            _SuperMap2.default.Util.copyAttributesWithClip(_this, options, ["shapeOptions", "dataBounds"]);
        }
        if (shapeOptions) {
            _this.shapeOptions = {};
            _SuperMap2.default.Util.copyAttributesWithClip(_this.shapeOptions, shapeOptions);
        }

        //设置基础参数 dataBounds、lonlat、location
        var geometry = data.geometry;
        _this.dataBounds = geometry.getBounds();
        _this.lonlat = _this.dataBounds.getCenterLonLat();
        _this.location = _this.getLocalXY(_this.lonlat);

        //将地理要素转为专题要素
        if (geometry instanceof _SuperMap2.default.Geometry.LinearRing) {
            _this.lineToTF(geometry);
        } else if (geometry instanceof _SuperMap2.default.Geometry.LineString) {
            _this.lineToTF(geometry);
        } else if (geometry instanceof _SuperMap2.default.Geometry.Curve) {
            //独立几何体
        } else if (geometry instanceof _SuperMap2.default.Geometry.MultiPoint) {
            _this.multiPointToTF(geometry);
        } else if (geometry instanceof _SuperMap2.default.Geometry.MultiLineString) {

            _this.multiLineStringToTF(geometry);
        } else if (geometry instanceof _SuperMap2.default.Geometry.MultiPolygon) {
            _this.multiPolygonToTF(geometry);
        } else if (geometry instanceof _SuperMap2.default.Geometry.Polygon) {
            _this.polygonToTF(geometry);
        } else if (geometry instanceof _SuperMap2.default.Geometry.Collection) {
            //独立几何体
        } else if (geometry instanceof _SuperMap2.default.Geometry.Point) {
            _this.pointToTF(geometry);
        } else if (geometry instanceof _SuperMap2.default.Geometry.Rectangle) {
            _this.rectangleToTF(geometry);
        } else if (geometry instanceof _SuperMap2.default.Geometry.GeoText) {
            _this.geoTextToTF(geometry);
        }

        return _this;
    }

    /**
     * Method: destroy
     * @inheritDoc
     */


    /*
     * Property: style
     * {Object} 可视化图形的 style。在子类中规定其对象结构和默认属性值。
     */


    /*
     * Property: highlightStyle
     * {Object} 高亮样式
     */


    /*
     * Property: isMultiHover
     * {Boolean} 是否使用多图形高亮，isHoverAble 为 true 时生效 ，默认 true
     */


    /*
     * Property: nodesClipPixel
     * {Number} 节点抽稀像素距离，默认值 2。
     */


    _createClass(ThemeVector, [{
        key: 'destroy',
        value: function destroy() {
            this.style = null;
            this.dataBounds = null;
            this.nodesClipPixel = null;
            this.isHoverAble = null;
            this.isMultiHover = null;
            this.isClickAble = null;
            this.highlightStyle = null;
            this.shapeOptions = null;
            _get(ThemeVector.prototype.__proto__ || Object.getPrototypeOf(ThemeVector.prototype), 'destroy', this).call(this);
        }

        /**
         * Method: LinearRingAndLineStringToTF
         * @function SuperMap.Feature.Theme.Vector.prototype.lineToTF
         * @description 转换线和线环要素。
         * @param geometry - {SuperMap.Geometry} 用户数据几何地理信息，这里必须是 LineString 或 LineRing。
         */

    }, {
        key: 'lineToTF',
        value: function lineToTF(geometry) {
            var components = geometry.components;

            //节点像素坐标
            var localLX = [];
            //参考位置，参考中心为
            var refLocal = [];
            var location = this.location;
            var pointList = [];

            //节点抽稀距离
            var nCPx = this.nodesClipPixel;

            for (var i = 0; i < components.length; i++) {
                var components_i = components[i];
                refLocal = [];
                localLX = [];

                localLX = this.getLocalXY(components_i);

                refLocal[0] = localLX[0] - location[0];
                refLocal[1] = localLX[1] - location[1];

                //抽稀 - 2 px
                if (pointList.length > 0) {
                    var lastLocalXY = pointList[pointList.length - 1];
                    if (Math.abs(lastLocalXY[0] - refLocal[0]) <= nCPx && Math.abs(lastLocalXY[1] - refLocal[1]) <= nCPx) continue;
                }

                //使用参考点
                pointList.push(refLocal);
            }

            if (pointList.length < 2) {
                return null;
            }

            //赋 style
            var style = new Object();
            style = _SuperMap2.default.Util.copyAttributesWithClip(style, this.style, ['pointList']);
            style.pointList = pointList;

            //创建图形
            var shape = new _SuperMap2.default.LevelRenderer.Shape.SmicBrokenLine({
                style: style,
                clickable: this.isClickAble,
                hoverable: this.isHoverAble
            });

            //设置高亮样式
            if (this.highlightStyle) {
                shape.highlightStyle = this.highlightStyle;
            }

            //设置参考中心，指定图形位置
            shape.refOriginalPosition = this.location;

            //储存数据 id 属性，用于事件
            shape.refDataID = this.data.id;

            //储存数据 id 属性，用于事件-多图形同时高亮
            shape.isHoverByRefDataID = this.isMultiHover;

            //添加到渲染器前修改 shape 的一些属性，非特殊情况通常不允许这么做
            if (this.shapeOptions) {
                _SuperMap2.default.Util.copyAttributesWithClip(shape, this.shapeOptions);
            }

            this.shapes.push(shape);
        }

        /**
         * Method: multiPointToTF
         * @function SuperMap.Feature.Theme.Vector.prototype.multiPointToTF
         * @description 转多点要素。
         * @param geometry - {SuperMap.Geometry} 用户数据几何地理信息，这里必须是 MultiPoint。
         */

    }, {
        key: 'multiPointToTF',
        value: function multiPointToTF(geometry) {
            /*   //-- 不抽稀
             var components = geometry.components;
               for(var i = 0; i < components.length; i++){
             var components_i = components[i];
             this.pointToTF(components_i);
             }
             */

            var components = geometry.components;

            //节点像素坐标
            var localLX = [];
            //参考位置，参考中心为
            var refLocal = [];
            var location = this.location;
            var pointList = [];

            //节点抽稀距离
            var nCPx = this.nodesClipPixel;

            for (var i = 0; i < components.length; i++) {
                var components_i = components[i];
                refLocal = [];
                localLX = [];

                localLX = this.getLocalXY(components_i);

                refLocal[0] = localLX[0] - location[0];
                refLocal[1] = localLX[1] - location[1];

                //抽稀
                if (pointList.length > 0) {
                    var lastLocalXY = pointList[pointList.length - 1];
                    if (Math.abs(lastLocalXY[0] - refLocal[0]) <= nCPx && Math.abs(lastLocalXY[1] - refLocal[1]) <= nCPx) continue;
                }

                //使用参考点
                pointList.push(refLocal);

                //赋 style
                var style = new Object();
                style.r = 6; //防止漏设此参数，默认 6 像素
                style = _SuperMap2.default.Util.copyAttributesWithClip(style, this.style);
                style.x = refLocal[0];
                style.y = refLocal[1];

                //创建图形
                var shape = new _SuperMap2.default.LevelRenderer.Shape.SmicPoint({
                    style: style,
                    clickable: this.isClickAble,
                    hoverable: this.isHoverAble
                });

                //设置高亮样式
                if (this.highlightStyle) {
                    shape.highlightStyle = this.highlightStyle;
                }

                //设置参考中心，指定图形位置
                shape.refOriginalPosition = location;

                //储存数据 id 属性，用于事件
                shape.refDataID = this.data.id;

                //储存数据 id 属性，用于事件-多图形同时高亮
                shape.isHoverByRefDataID = this.isMultiHover;

                //修改一些 shape 可选属性，通常不需要这么做
                if (this.shapeOptions) {
                    _SuperMap2.default.Util.copyAttributesWithClip(shape, this.shapeOptions);
                }

                this.shapes.push(shape);
            }
        }

        /**
         * Method: multiLineStringToTF
         * @function SuperMap.Feature.Theme.Vector.prototype.multiLineStringToTF
         * @description 转换多线要素。
         * @param geometry - {SuperMap.Geometry} 用户数据几何地理信息，这里必须是 MultiLineString。
         */

    }, {
        key: 'multiLineStringToTF',
        value: function multiLineStringToTF(geometry) {
            var components = geometry.components;

            for (var i = 0; i < components.length; i++) {
                var components_i = components[i];
                this.lineToTF(components_i);
            }
        }

        /**
         * Method: multiPolygonToTF
         * @function SuperMap.Feature.Theme.Vector.prototype.multiPolygonToTF
         * @description 转换多面要素。
         * @param geometry - {SuperMap.Geometry}  用户数据几何地理信息，这里必须是 MultiPolygon。
         */

    }, {
        key: 'multiPolygonToTF',
        value: function multiPolygonToTF(geometry) {
            var components = geometry.components;

            for (var i = 0; i < components.length; i++) {
                var components_i = components[i];
                this.polygonToTF(components_i);
            }
        }

        /**
         * Method: pointToTF
         * @function SuperMap.Feature.Theme.Vector.prototype.pointToTF
         * @description 转换点要素。
         * @param geometry - {SuperMap.Geometry}  用户数据几何地理信息，这里必须是 Point。
         */

    }, {
        key: 'pointToTF',
        value: function pointToTF(geometry) {
            //参考位置，参考中心为
            var location = this.location;
            //geometry 像素坐标
            var localLX = this.getLocalXY(geometry);

            //赋 style
            var style = new Object();
            style.r = 6; //防止漏设此参数，默认 6 像素
            style = _SuperMap2.default.Util.copyAttributesWithClip(style, this.style);
            style.x = localLX[0] - location[0];
            style.y = localLX[1] - location[1];

            //创建图形
            var shape = new _SuperMap2.default.LevelRenderer.Shape.SmicPoint({
                style: style,
                clickable: this.isClickAble,
                hoverable: this.isHoverAble
            });

            //设置高亮样式
            if (this.highlightStyle) {
                shape.highlightStyle = this.highlightStyle;
            }

            //设置参考中心，指定图形位置
            shape.refOriginalPosition = location;

            //储存数据 id 属性，用于事件
            shape.refDataID = this.data.id;

            //储存数据 id 属性，用于事件-多图形同时高亮
            shape.isHoverByRefDataID = this.isMultiHover;

            //修改一些 shape 可选属性，通常不需要这么做
            if (this.shapeOptions) {
                _SuperMap2.default.Util.copyAttributesWithClip(shape, this.shapeOptions);
            }

            this.shapes.push(shape);
        }

        /**
         * Method: polygonToThemeFeature
         * @function SuperMap.Feature.Theme.Vector.prototype.polygonToThemeFeature
         * @description 转换面要素。
         * @param geometry - {SuperMap.Geometry} 用户数据几何地理信息，这里必须是 Polygon。
         */

    }, {
        key: 'polygonToTF',
        value: function polygonToTF(geometry) {
            var components = geometry.components;
            ;

            //节点像素坐标
            var localLX = [];
            //参考位置，参考中心为
            var refLocal = [];
            var location = this.location;
            var pointList = [];
            //岛洞
            var holePolygonPointList = [];
            var holePolygonPointLists = [];

            //节点抽稀距离
            var nCPx = this.nodesClipPixel;

            for (var i = 0; i < components.length; i++) {
                var components_i = components[i].components;

                if (i === 0) {
                    // 第一个 component 正常绘制
                    pointList = [];

                    for (var j = 0; j < components_i.length; j++) {
                        refLocal = [];
                        localLX = [];

                        localLX = this.getLocalXY(components_i[j]);

                        refLocal[0] = localLX[0] - location[0];
                        refLocal[1] = localLX[1] - location[1];

                        //抽稀 - 2 px
                        if (pointList.length > 0) {
                            var lastLocalXY = pointList[pointList.length - 1];
                            if (Math.abs(lastLocalXY[0] - refLocal[0]) <= nCPx && Math.abs(lastLocalXY[1] - refLocal[1]) <= nCPx) continue;
                        }

                        //使用参考点
                        pointList.push(refLocal);
                    }
                } else {
                    // 其它 component 作为岛洞
                    holePolygonPointList = [];

                    for (var j = 0; j < components_i.length; j++) {
                        refLocal = [];
                        localLX = [];

                        localLX = this.getLocalXY(components_i[j]);

                        refLocal[0] = localLX[0] - location[0];
                        refLocal[1] = localLX[1] - location[1];

                        //抽稀 - 2 px
                        if (holePolygonPointList.length > 0) {
                            var lastLocalXY = holePolygonPointList[holePolygonPointList.length - 1];
                            if (Math.abs(lastLocalXY[0] - refLocal[0]) <= nCPx && Math.abs(lastLocalXY[1] - refLocal[1]) <= nCPx) continue;
                        }

                        //使用参考点
                        holePolygonPointList.push(refLocal);
                    }
                }

                if (holePolygonPointList.length < 2) {
                    continue;
                }

                holePolygonPointLists.push(holePolygonPointList);
            }

            if (pointList.length < 2) {
                return;
            }

            //赋 style
            var style = new Object();
            style = _SuperMap2.default.Util.copyAttributesWithClip(style, this.style, ['pointList']);
            style.pointList = pointList;

            //创建图形
            var shape = new _SuperMap2.default.LevelRenderer.Shape.SmicPolygon({
                style: style,
                clickable: this.isClickAble,
                hoverable: this.isHoverAble
            });

            //设置高亮样式
            if (this.highlightStyle) {
                shape.highlightStyle = this.highlightStyle;
            }

            //设置参考中心，指定图形位置
            shape.refOriginalPosition = this.location;

            //储存数据 id 属性，用于事件
            shape.refDataID = this.data.id;

            //储存数据 id 属性，用于事件-多图形同时高亮
            shape.isHoverByRefDataID = this.isMultiHover;

            //岛洞面
            if (holePolygonPointLists.length > 0) {
                shape.holePolygonPointLists = holePolygonPointLists;
            }

            //修改一些 shape 可选属性，通常不需要这么做
            if (this.shapeOptions) {
                _SuperMap2.default.Util.copyAttributesWithClip(shape, this.shapeOptions);
            }

            this.shapes.push(shape);
        }

        /**
         * Method: rectangleToTF
         * @function SuperMap.Feature.Theme.Vector.prototype.rectangleToTF
         * @description 转换矩形要素。
         * @param geometry - {SuperMap.Geometry}  用户数据几何地理信息，这里必须是 Rectangle。
         */

    }, {
        key: 'rectangleToTF',
        value: function rectangleToTF(geometry) {
            //参考位置，参考中心为
            var location = this.location;
            var ll = new _SuperMap2.default.LonLat(geometry.x, geometry.y);

            //地图分辨率
            var res = this.layer.map.getResolution();

            //geometry 像素坐标
            var localLX = this.getLocalXY(ll);

            //赋 style
            var style = new Object();
            style.r = 6; //防止漏设此参数，默认 6 像素
            style = _SuperMap2.default.Util.copyAttributesWithClip(style, this.style);
            style.x = localLX[0] - location[0];
            // SuperMap.Geometry.Rectangle 使用左下角定位， SmicRectangle 使用左上角定位，需要转换
            style.y = localLX[1] - location[1] - 2 * geometry.width / res;
            style.width = geometry.width / res;
            style.height = geometry.height / res;

            //创建图形
            var shape = new _SuperMap2.default.LevelRenderer.Shape.SmicRectangle({
                style: style,
                clickable: this.isClickAble,
                hoverable: this.isHoverAble
            });

            //设置高亮样式
            if (this.highlightStyle) {
                shape.highlightStyle = this.highlightStyle;
            }

            //设置参考中心，指定图形位置
            shape.refOriginalPosition = location;

            //储存数据 id 属性，用于事件
            shape.refDataID = this.data.id;

            //储存数据 id 属性，用于事件-多图形同时高亮
            shape.isHoverByRefDataID = this.isMultiHover;

            //修改一些 shape 可选属性，通常不需要这么做
            if (this.shapeOptions) {
                _SuperMap2.default.Util.copyAttributesWithClip(shape, this.shapeOptions);
            }

            this.shapes.push(shape);
        }

        /**
         * Method: geoTextToTF
         * @function SuperMap.Feature.Theme.Vector.prototype.geoTextToTF
         * @description 转换文本要素。
         * @param geometry - {SuperMap.Geometry}  用户数据几何地理信息，这里必须是 GeoText。
         */

    }, {
        key: 'geoTextToTF',
        value: function geoTextToTF(geometry) {
            //参考位置，参考中心为
            var location = this.location;
            //geometry 像素坐标
            var localLX = this.getLocalXY(geometry);

            //赋 style
            var style = new Object();
            style.r = 6; //防止漏设此参数，默认 6 像素
            style = _SuperMap2.default.Util.copyAttributesWithClip(style, this.style, ["x", "y", "text"]);
            style.x = localLX[0] - location[0];
            style.y = localLX[1] - location[1];
            style.text = geometry.text;

            //创建图形
            var shape = new _SuperMap2.default.LevelRenderer.Shape.SmicText({
                style: style,
                clickable: this.isClickAble,
                hoverable: this.isHoverAble
            });

            //设置高亮样式
            if (this.highlightStyle) {
                shape.highlightStyle = this.highlightStyle;
            }

            //设置参考中心，指定图形位置
            shape.refOriginalPosition = location;

            //储存数据 id 属性，用于事件
            shape.refDataID = this.data.id;

            //储存数据 id 属性，用于事件-多图形同时高亮
            shape.isHoverByRefDataID = this.isMultiHover;

            //修改一些 shape 可选属性，通常不需要这么做
            if (this.shapeOptions) {
                _SuperMap2.default.Util.copyAttributesWithClip(shape, this.shapeOptions);
            }

            this.shapes.push(shape);
        }

        /**
         * Method: updateAndAddShapes
         * @function SuperMap.Feature.Theme.Vector.prototype.updateAndAddShapes
         * @description 修改位置，针对地图平移操作，地图漫游操作后调用此函数。
         */

    }, {
        key: 'updateAndAddShapes',
        value: function updateAndAddShapes() {
            var newLocalLX = this.getLocalXY(this.lonlat);
            this.location = newLocalLX;

            var render = this.layer.renderer;
            for (var i = 0, len = this.shapes.length; i < len; i++) {
                var shape = this.shapes[i];
                //设置参考中心，指定图形位置
                shape.refOriginalPosition = newLocalLX;
                render.addShape(shape);
            }
        }

        /**
         * APIMethod: getShapesCount
         * @function SuperMap.Feature.Theme.Vector.prototype.getShapesCount
         * @description 获得专题要素中可视化图形的数量。
         * @return {Number} 可视化图形的数量。
         */

    }, {
        key: 'getShapesCount',
        value: function getShapesCount() {
            return this.shapes.length;
        }

        /**
         * @function SuperMap.Feature.Theme.Vector.prototype.getLocalXY
         * @description 地理坐标转为像素坐标。
         * @param lonlat - {SuperMap.LonLat} 专题要素地理位置。
         */

    }, {
        key: 'getLocalXY',
        value: function getLocalXY(lonlat) {
            return this.layer.getLocalXY(lonlat);
        }
    }]);

    return ThemeVector;
}(ThemeFeature);

exports.default = ThemeVector;


_SuperMap2.default.Feature.Theme.Vector = ThemeVector;

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _UGCMapLayer2 = __webpack_require__(256);

var _UGCMapLayer3 = _interopRequireDefault(_UGCMapLayer2);

var _JoinItem = __webpack_require__(29);

var _JoinItem2 = _interopRequireDefault(_JoinItem);

var _DatasetInfo = __webpack_require__(110);

var _DatasetInfo2 = _interopRequireDefault(_DatasetInfo);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Class: SuperMap.UGCSubLayer
 * 地图服务图层属性信息类，影像图层(Image)、专题图层(ServerTheme)、栅格图层(Grid)、矢量图层(Vector)等图层均继承该类。
 *
 * Inherits from:
 *  - <SuperMap.UGCMapLayer>
 */
var UGCSubLayer = function (_UGCMapLayer) {
    _inherits(UGCSubLayer, _UGCMapLayer);

    /**
     * Constructor: SuperMap.UGCSubLayer
     * 地图服务图层属性信息类构造函数。
     *
     * Parameters:
     * options - {Object} 参数。
     *
     * Allowed options properties:
     * datasetInfo - {SuperMap.DatasetInfo} 数据集信息。
     * displayFilter - {String} 图层显示过滤条件。
     * joinItems - {SuperMap.JoinItem} 连接信息类。
     * representationField - {String} 存储制图表达信息的字段。
     * ugcLayerType - {SuperMap.LayerType} 图层类型。
     */


    /**
     * APIProperty: representationField
     * {String} 存储制图表达信息的字段。
     */


    /**
     * APIProperty: displayFilter
     * {String} 图层显示过滤条件。
     */
    function UGCSubLayer(options) {
        _classCallCheck(this, UGCSubLayer);

        options = options || {};

        var _this = _possibleConstructorReturn(this, (UGCSubLayer.__proto__ || Object.getPrototypeOf(UGCSubLayer)).call(this, options));

        _this.datasetInfo = null;
        _this.displayFilter = null;
        _this.joinItems = null;
        _this.representationField = null;
        _this.ugcLayerType = null;
        _this.CLASS_NAME = "SuperMap.UGCSubLayer";
        return _this;
    }

    /**
     * Method: fromJson
     * 将服务端JSON对象转换成当前客户端对象
     * Parameters:
     * jsonObject - {Object} 要转换的 JSON 对象。
     */


    /**
     * APIProperty: ugcLayerType
     * {SuperMap.LayerType} 图层类型。
     */


    /**
     * APIProperty: joinItems
     * {SuperMap.JoinItem} 连接信息类。
     */


    /**
     * APIProperty: datasetInfo
     * {SuperMap.DatasetInfo} 数据集信息。
     */


    _createClass(UGCSubLayer, [{
        key: 'fromJson',
        value: function fromJson(jsonObject) {
            _get(UGCSubLayer.prototype.__proto__ || Object.getPrototypeOf(UGCSubLayer.prototype), 'fromJson', this).call(this, jsonObject);
            if (this.datasetInfo) {
                this.datasetInfo = new _DatasetInfo2.default(this.datasetInfo);
            }
            if (this.joinItems && this.joinItems.length) {
                var newJoinItems = [];
                for (var i = 0; i < this.joinItems.length; i++) {
                    newJoinItems[i] = new _JoinItem2.default(this.joinItems[i]);
                }
                this.joinItems = newJoinItems;
            }
        }
    }, {
        key: 'destroy',
        value: function destroy() {
            _get(UGCSubLayer.prototype.__proto__ || Object.getPrototypeOf(UGCSubLayer.prototype), 'destroy', this).call(this);
            _SuperMap2.default.Util.reset(this);
        }

        /**
         * Method: toServerJSONObject
         * 转换成对应的 JSON 格式对象。
         */

    }, {
        key: 'toServerJSONObject',
        value: function toServerJSONObject() {
            var jsonObject = _get(UGCSubLayer.prototype.__proto__ || Object.getPrototypeOf(UGCSubLayer.prototype), 'toServerJSONObject', this).call(this);
            if (jsonObject.joinItems) {
                var joinItems = [];
                for (var i = 0; i < jsonObject.joinItems.length; i++) {
                    if (jsonObject.joinItems[i].toServerJSONObject) {
                        joinItems[i] = jsonObject.joinItems[i].toServerJSONObject();
                    }
                }
                jsonObject.joinItems = joinItems;
            }
            if (jsonObject.datasetInfo) {
                if (jsonObject.datasetInfo.toServerJSONObject) {
                    jsonObject.datasetInfo = jsonObject.datasetInfo.toServerJSONObject();
                }
            }
            return jsonObject;
        }
    }]);

    return UGCSubLayer;
}(_UGCMapLayer3.default);

exports.default = UGCSubLayer;


_SuperMap2.default.UGCSubLayer = UGCSubLayer;

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

__webpack_require__(15);

var _FetchRequest = __webpack_require__(13);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.iPortalServiceBase
 * @classdesc iPortal服务基类(有权限限制的类需要实现此类)
 */

var IPortalServiceBase = function () {
    /**
     * @method SuperMap.iPortalServiceBase.initialize
     *
     * @param url
     */
    function IPortalServiceBase(url) {
        _classCallCheck(this, IPortalServiceBase);

        this.CLASS_NAME = "SuperMap.iPortalServiceBase";

        var me = this;
        me.serviceUrl = url;
        me.serverType = _REST.ServerType.iPortal;
    }

    /**
     * @method SuperMap.iPortalServiceBase.request
     * @description 子类统一通过该方法发送请求
     * @param url
     * @param method
     * @param param
     * @param requestOptions
     *
     */

    _createClass(IPortalServiceBase, [{
        key: 'request',
        value: function request(method, url, param, requestOptions) {
            url = this.createCredentialUrl(url);
            return _FetchRequest.FetchRequest.commit(method, url, param, requestOptions).then(function (response) {
                return response.json();
            });
        }

        /**
         * @method SuperMap.iPortalServiceBase.createCredentialUrl
         * @description 追加授权信息
         * @param url
         * @return {string}
         */

    }, {
        key: 'createCredentialUrl',
        value: function createCredentialUrl(url) {
            var newUrl = url,
                credential = this.getCredential();

            if (credential) {
                var endStr = newUrl.substring(newUrl.length - 1, newUrl.length);

                if (newUrl.indexOf("?") > -1 && endStr === "?") {
                    newUrl += credential.getUrlParameters();
                } else if (newUrl.indexOf("?") > -1 && endStr !== "?") {
                    newUrl += "&" + credential.getUrlParameters();
                } else {
                    newUrl += "?" + credential.getUrlParameters();
                }
            }
            return newUrl;
        }

        /**
         * @method  SuperMap.iPortalServiceBase.getCredential
         * @description 获取token
         * @return {string } 返回获取的token
         *
         */

    }, {
        key: 'getCredential',
        value: function getCredential() {
            var credential,
                value = _SuperMap2.default.SecurityManager.getToken(this.serviceUrl);
            credential = value ? new _SuperMap2.default.Credential(value, "token") : null;
            if (!credential) {
                value = this.getKey();
                credential = value ? new _SuperMap2.default.Credential(value, "key") : null;
            }
            return credential;
        }

        /**
         * @method SuperMap.iPortalServiceBase.getKey
         * @description 其子类需要重写该方法，修改其中获取key的字段
         * 存储key可能是服务id字段，可能是url
         */

    }, {
        key: 'getKey',
        value: function getKey() {
            //return SuperMap.SecurityManager.getKey(this.id);
            //或
            //return SuperMap.SecurityManager.getKey(this.serviceUrl);
        }
    }]);

    return IPortalServiceBase;
}();

exports.default = IPortalServiceBase;


_SuperMap2.default.iPortalServiceBase = IPortalServiceBase;

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.JoinItem
 * @constructs SuperMap.JoinItem
 * @classdesc
 * 连接信息类。
 * 该类用于矢量数据集与外部表的连接。外部表可以为另一个矢量数据集（其中纯属性数据集中没有空间几何信息）所对应的 DBMS 表，也可以是用户自建的业务表。需要注意的是，矢量数据集与外部表必须属于同一数据源。表之间的联系的建立有两种方式，一种是连接（join），一种是关联（link）。连接，实际上是依据相同的字段将一个外部表追加到指定的表；而关联是基于一个相同的字段定义了两个表格之间的联系，但不是实际的追加。用于连接两个表的字段的名称不一定相同，但类型必须一致。当两个表格之间建立了连接，通过对主表进行操作，可以对外部表进行查询，制作专题图以及分析等。当两个表格之间是一对一或多对一的关系时，可以使用 join 连接。当为多对一的关系时，允许指定多个字段之间的关联。(注意：SuperMap.JoinItem 目前支持左连接和内连接，不支持全连接和右连接，UDB 引擎不支持内连接。并且用于建立连接的两个表必须在同一个数据源下。)
 * @api
 * @example 下面以SQL查询说明joinItem的使用方法：
 *(start code)
 *   function queryBySQL() {
     *       // 设置与外部表的连接信息
     *       var joinItem = new SuperMap.JoinItem({
     *           foreignTableName: "foreignTable",
     *           joinFilter: "foreignTable.CONTINENT = Countries.CONTINENT",
     *           joinType: "LEFTJOIN"
     *       })
     *       var queryParam, queryBySQLParams, queryBySQLService;
     *       // 设置查询参数，在查询参数中添加joinItem关联条件信息
     *       queryParam = new SuperMap.FilterParameter({
     *            name: "Countries@World",
     *            joinItems: [joinItem]
     *         }),
     *       queryBySQLParams = new SuperMap.QueryBySQLParameters({
     *             queryParams: [queryParam]
     *         }),
     *       queryBySQLService = new SuperMap.QueryBySQLService(url, {
     *             eventListeners: { "processCompleted": processCompleted, "processFailed": processFailed}
     *         });
     *       queryBySQLService.processAsync(queryBySQLParams);
     *  }
 *  function processCompleted(queryEventArgs) {//todo}
 *  function processFailed(e) {//todo}
 * (end)
 */
var JoinItem = function () {

    /**
     * @method  SuperMap.JoinItem.initialize
     * @description 连接信息类构造函数。
     * 设置将TableB连接TableA的连接信息，即建立JoinItem 类并设置其属性，
     * 当执行TableA的查询操作时，系统将根据连接条件及查询条件，将满足条件
     * 的TableA中的内容与满足条件的TableB中的内容构成一个查询结果表，并
     * 这个查询表保存在内存中，需要获取结果时，再从内存中取出相应的内容。
     *
     * @param  options - {Object} 参数。
     * Allowed options properties:</br>
     * foreignTableName - {String} 外部表的名称。</br>
     * joinFilter - {String} 矢量数据集与外部表之间的连接表达式，即设定两个表之间关联的字段。</br>
     * joinType - {JoinType} 两个表之间连接类型。</br>
     */


    /**
     * APIProperty: joinFilter
     * {String} 矢量数据集与外部表之间的连接表达式，即设定两个表之间关联的字段。
     * 例如，将房屋面数据集（Building）的 district 字段与房屋拥有者的纯属性数据集（Owner）的 region 字段相连接，
     * 两个数据集对应的表名称分别为 Table_Building 和 Table_Owner，
     * 则连接表达式为 Table_Building.district = Table_Owner.region。
     * 当有多个字段相连接时，用 AND 将多个表达式相连。
     */
    function JoinItem(options) {
        _classCallCheck(this, JoinItem);

        this.foreignTableName = null;
        this.joinFilter = null;
        this.joinType = null;
        this.CLASS_NAME = "SuperMap.JoinItem";

        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /** APIProperty: joinType
     * {JoinType} 两个表之间连接类型。
     * 连接类型决定了对两个表进行连接查询后返回的记录的情况。
     */

    /**
     * APIProperty: foreignTableName
     * {String} 外部表的名称。
     * 如果外部表的名称是以“表名@数据源名”命名方式，则该属性只需赋值表名。
     * 例如：外部表 Name@changchun，Name 为表名，changchun 为数据源名称，则该属性的赋值应为：Name。
     */


    _createClass(JoinItem, [{
        key: "destroy",
        value: function destroy() {
            var me = this;
            me.foreignTableName = null;
            me.joinFilter = null;
            me.joinType = null;
        }

        /**
         * @method SuperMap.JoinItem.toServerJSONObject
         * @description 转换成对应的 JSON 格式对象。
         */

    }, {
        key: "toServerJSONObject",
        value: function toServerJSONObject() {
            var dataObj = {};
            dataObj = _SuperMap2.default.Util.copyAttributes(dataObj, this);
            //joinFilter基本是个纯属性对象，这里不再做转换
            return dataObj;
        }
    }]);

    return JoinItem;
}();

exports.default = JoinItem;

_SuperMap2.default.JoinItem = JoinItem;

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Class: SuperMap.LabelMatrixCell
 * 矩阵标签元素抽象类。
 * 该类可以包含 n*n 个矩阵标签元素，矩阵标签元素的类型可以是图片，符号，标签专题图等。
 * 符号类型的矩阵标签元素类、图片类型的矩阵标签元素类和专题图类型的矩阵标签元素类均继承自该类。
 */
var LabelMatrixCell = function LabelMatrixCell() {
  _classCallCheck(this, LabelMatrixCell);

  this.CLASS_NAME = "LabelMatrixCell";
};

exports.default = LabelMatrixCell;


_SuperMap2.default.LabelMatrixCell = LabelMatrixCell;

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServerStyle = __webpack_require__(9);

var _ServerStyle2 = _interopRequireDefault(_ServerStyle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ThemeFlow
 * @description 标签或符号流动显示和牵引线风格设置类。
 *              通过该类可以设置专题图中符号是否流动显示、是否使用牵引线以及牵引线风格。
 * @param options - {Object} 可选参数。如：<br>
 *        flowEnabled - {Boolean} 是否流动显示标签或符号。
 *        leaderLineDisplayed - {Boolean} 是否显示标签或符号和它标注的对象之间的牵引线。
 *        leaderLineStyle - {SuperMap.ServerStyle} 标签或符号与其标注对象之间牵引线的风格。
 */
var ThemeFlow = function () {

    /*
     * Constructor: SuperMap.ThemeFlow
     * 标签或符号流动显示和牵引线风格设置类构造函数。
     */


    /**
     * APIProperty: leaderLineDisplayed
     * @member SuperMap.ThemeFlow.prototype.leaderLineDisplayed -{Boolean}
     * @description 是否显示标签或符号和它标注的对象之间的牵引线。默认值为 false，即不显示标签或符号和它标注的对象之间的牵引线。<br>
     *              只有当 flowEnabled 为 true 时，牵引线才起作用。在当标签流动显示时，其位置不固定，由于牵引线始终指向要素的内点，<br>
     *              因而通过牵引线显示功能可以找到流动的标签或符号实际对应的要素。或者渲染符号偏移它所指向的对象时，图与对象之间可以采用牵引线进行连接。
     */
    function ThemeFlow(options) {
        _classCallCheck(this, ThemeFlow);

        this.flowEnabled = false;
        this.leaderLineDisplayed = false;
        this.leaderLineStyle = null;
        this.CLASS_NAME = "SuperMap.ThemeFlow";

        var me = this;
        me.leaderLineStyle = new _ServerStyle2.default();
        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: leaderLineStyle
     * @member SuperMap.ThemeFlow.prototype.leaderLineStyle {SuperMap.ServerStyle}
     * @description 标签或符号与其标注对象之间牵引线的风格。
     */


    /**
     * APIProperty: flowEnabled
     * @member SuperMap.ThemeFlow.prototype.flowEnabled -{Boolean}
     * @description 是否流动显示标签或符号。<br>
     *              对于标签专题图而言，对于跨越比较大的区域和线条状的几何对象，在一个地图窗口中不能完全显示的情况下，如果其标签位置比较固定，<br>
     *              在当前地图窗口中该对象的标签不可见，则需要通过平移地图来查看对象的标签信息。如果采用了流动显示的效果，在当前地图窗口中，对象即使是部分显示，<br>
     *              其标签也会显示在当前地图窗口中。当平移地图时，对象的标签会随之移动，以保证在当前地图窗口中部分或全部显示的对象其标签都可见，从而可以方便地查看各要素的标签信息。
     */


    _createClass(ThemeFlow, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.flowEnabled = null;
            me.leaderLineDisplayed = null;
            if (me.leaderLineStyle) {
                me.leaderLineStyle.destroy();
                me.leaderLineStyle = null;
            }
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            if (!obj) {
                return;
            }
            var res = new ThemeFlow();
            _SuperMap2.default.Util.copy(res, obj);
            res.leaderLineStyle = _ServerStyle2.default.fromJson(obj.leaderLineStyle);
            return res;
        }
    }]);

    return ThemeFlow;
}();

exports.default = ThemeFlow;


_SuperMap2.default.ThemeFlow = ThemeFlow;

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _Theme2 = __webpack_require__(12);

var _Theme3 = _interopRequireDefault(_Theme2);

var _ThemeLabelItem = __webpack_require__(239);

var _ThemeLabelItem2 = _interopRequireDefault(_ThemeLabelItem);

var _ThemeLabelUniqueItem = __webpack_require__(241);

var _ThemeLabelUniqueItem2 = _interopRequireDefault(_ThemeLabelUniqueItem);

var _ThemeFlow = __webpack_require__(31);

var _ThemeFlow2 = _interopRequireDefault(_ThemeFlow);

var _ThemeOffset = __webpack_require__(33);

var _ThemeOffset2 = _interopRequireDefault(_ThemeOffset);

var _ThemeLabelText = __webpack_require__(240);

var _ThemeLabelText2 = _interopRequireDefault(_ThemeLabelText);

var _ThemeLabelAlongLine = __webpack_require__(237);

var _ThemeLabelAlongLine2 = _interopRequireDefault(_ThemeLabelAlongLine);

var _ThemeLabelBackground = __webpack_require__(238);

var _ThemeLabelBackground2 = _interopRequireDefault(_ThemeLabelBackground);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.ThemeLabel
 * @description 标签专题图类。
 * @augments SuperMap.Theme
 * @param  options - {Object} 可选参数。如：<br>
 *         alongLine - {SuperMap.ThemeLabelAlongLine} 标签沿线标注方向样式类。<br>
 *         background - {SuperMap.ThemeLabelBackground} 标签专题图中标签的背景风格类。<br>
 *         flow - {SuperMap.ThemeFlow} 标签专题图标签流动显示与牵引线设置类。<br>
 *         items - {Array(<SuperMap.ThemeUniqueItem>)} 分段标签专题图的子项数组。<br>
 *         labelExpression - {String} 标注字段表达式。<br>
 *         labelOverLengthMode - {SuperMap.LabelOverLengthMode} 标签专题图中超长标签的处理模式枚举类。<br>
 *         matrixCells - {Array<SuperMap.LabelMatrixCell>} 矩阵标签元素数组。<br>
 *         maxLabelLength - {Number} 标签在每一行显示的最大长度。<br>
 *         numericPrecision - {Number} 通过该字段设置其显示的精度。<br>
 *         offset - {SuperMap.ThemeOffset} 用于设置标签专题图中标记文本相对于要素内点的偏移量对象。<br>
 *         overlapAvoided - {Boolean} 是否允许以文本避让方式显示文本。<br>
 *         rangeExpression - {String} 制作分段标签专题的分段字段或字段表达式。<br>
 *         smallGeometryLabeled - {Boolean} 是否显示长度大于被标注对象本身长度的标签。<br>
 *         text - {SuperMap.ThemeLabelText} 标签中文本风格。<br>
 *         memoryData - {SuperMap.ThemeMemoryData} 专题图内存数据。
 */
var ThemeLabel = function (_Theme) {
    _inherits(ThemeLabel, _Theme);

    /*
     * Constructor: SuperMap.ThemeLabel
     * 标签专题图构造函数，用于创建 SuperMap.ThemeLabel 类的新实例。
     */


    /**
     * APIProperty: smallGeometryLabeled
     * @member SuperMap.ThemeLabel.prototype.smallGeometryLabeled -{Boolean}
     * @description 是否显示长度大于被标注对象本身长度的标签，默认为 false。在标签的长度大于线或者面对象本身的长度时，
     *              如果该值为 true，则标签文字会叠加在一起显示，为了清楚完整的显示该标签，
     *              可以采用换行模式来显示标签，但必须保证每行的长度小于对象本身的长度。
     */


    /**
     * APIProperty: rangeExpression
     * @member SuperMap.ThemeLabel.prototype.rangeExpression -{String}
     * @description 制作分段标签专题的分段字段或字段表达式。该表达式对应的字段（或者字段表达式）的值应该为数值型。
     *              该字段与 items 分段子项联合使用，每个子项的起始值 [start，end)来源于 rangeExpression 字段值。
     *              最后 labelExpression 指定的标签字段（标签专题图要显示的具体内容）会根据分段子项的风格进行分段显示。
     */


    /**
     * APIProperty: offset
     * @member SuperMap.ThemeLabel.prototype.offset -{SuperMap.ThemeOffset}
     * @description 用于设置标签专题图中标记文本相对于要素内点的偏移量对象。
     */


    /**
     * APIProperty: maxLabelLength
     * @member SuperMap.ThemeLabel.prototype.maxLabelLength -{Number}
     * @description 标签在每一行显示的最大长度，一个中文为两个字符。
     *              如果超过最大长度，可以采用两种方式来处理，一种是换行的模式进行显示，另一种是以省略号方式显示。默认最大长度为256个字符。
     */


    /**
     * APIProperty: labelOverLengthMode
     * @member SuperMap.ThemeLabel.prototype.labelOverLengthMode -{SuperMap.LabelOverLengthMode} 标签专题图中超长标签的处理模式枚举类。
     * 对于标签的长度超过设置的标签最大长度 maxLabelLength 时称为超长标签。默认为 SuperMap.LabelOverLengthMode.NONE。
     */


    /**
     * APIProperty: uniqueItems
     * @member SuperMap.ThemeLabel.prototype.uniqueItems -{Array<SuperMap.ThemeLabelUniqueItem>}
     * @description 单值标签专题图子项数组。单值标签专题图使用 uniqueExpression单值标签专题图子项集合
     */


    /**
     * APIProperty: flow
     * @member SuperMap.ThemeLabel.prototype.flow -{SuperMap.ThemeFlow}
     * @description 标签专题图标签流动显示与牵引线设置类。通过该字段可以设置标签是否流动显示和牵引线风格。
     */


    /**
     * APIProperty: alongLine
     * @member SuperMap.ThemeLabel.prototype.alongLine -{SuperMap.ThemeLabelAlongLine}
     * @description 标签沿线标注方向样式类。<br>
     *              在该类中可以设置标签是否沿线标注以及沿线标注的多种方式。沿线标注属性只适用于线数据集专题图。
     */
    function ThemeLabel(options) {
        _classCallCheck(this, ThemeLabel);

        var _this = _possibleConstructorReturn(this, (ThemeLabel.__proto__ || Object.getPrototypeOf(ThemeLabel)).call(this, "LABEL", options));

        _this.alongLine = null;
        _this.background = null;
        _this.flow = null;
        _this.items = null;
        _this.uniqueItems = null;
        _this.labelExpression = null;
        _this.labelOverLengthMode = _REST.LabelOverLengthMode.NONE;
        _this.matrixCells = null;
        _this.maxLabelLength = 256;
        _this.numericPrecision = 0;
        _this.offset = null;
        _this.overlapAvoided = true;
        _this.rangeExpression = null;
        _this.uniqueExpression = null;
        _this.smallGeometryLabeled = false;
        _this.text = null;
        _this.CLASS_NAME = "SuperMap.ThemeLabel";

        var me = _this;
        me.alongLine = new _ThemeLabelAlongLine2.default();
        me.background = new _ThemeLabelBackground2.default();
        me.flow = new _ThemeFlow2.default();
        me.offset = new _ThemeOffset2.default();
        me.text = new _ThemeLabelText2.default();
        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /**
     * APIMethod: destroy
     * @inheritDoc
     */


    /**
     * APIProperty: text
     * @member SuperMap.ThemeLabel.prototype.text -{ThemeLabelText}
     * @description 标签中文本风格。
     */


    /**
     * APIProperty: uniqueExpression
     * @member SuperMap.ThemeLabel.prototype.uniqueExpression -{String}
     * @description 用于制作单值专题图的字段或字段表达式。
     *              该字段值的数据类型可以为数值型或字符型。如果设置字段表达式，只能是相同数据类型字段间的运算。必设字段,必须与labelExpression一起使用
     */


    /**
     * APIProperty: overlapAvoided
     * @member SuperMap.ThemeLabel.prototype.overlapAvoided -{Boolean}
     * @description 是否允许以文本避让方式显示文本。默认值为 true， 即自动避免文本叠盖。只针对该标签专题图层中的文本数据。
     *               在标签重叠度很大的情况下，即使使用自动避让功能，可能也无法完全避免标签重叠现象。
     */


    /**
     * APIProperty: numericPrecision
     * @member SuperMap.ThemeLabel.prototype.numericPrecision -{Number}
     * @description 如果显示的标签内容为数字，通过该字段设置其显示的精度。例如标签对应的数字是8071.64529347，
     *              如果该属性为0时，显示8071；为1时，显示8071.6；为3时，则是8071.645。
     */


    /**
     * APIProperty: matrixCells
     * @member SuperMap.ThemeLabel.prototype.matrixCells -{Array<SuperMap.LabelMatrixCell>}
     * @description 矩阵标签元素数组，用于制作矩阵标签专题图。
     *              数组中可以放置符号类型的矩阵标签元素和图片类型的矩阵标签元素。
     */


    /**
     * APIProperty: labelExpression
     * @member SuperMap.ThemeLabel.prototype.labelExpression -{String}
     * @description 标注字段表达式。系统将 labelExpression 对应的字段或字段表达式的值以标签的形式显示在图层中。必设字段。
     */


    /**
     * APIProperty: items
     * @member SuperMap.ThemeLabel.prototype.items - {Array<SuperMap.ThemeUniqueItem>}
     * @description 分段标签专题图的子项数组。分段标签专题图使用 rangeExpression <br>
     *              指定数字型的字段作为分段数据，items 中的每个子对象的 [start，end) 分段值必须来源于属性 rangeExpression 的字段值。每个子项拥有自己的风格。
     */


    /**
     * APIProperty: background
     * @member SuperMap.ThemeLabel.prototype.background -{SuperMap.ThemeLabelBackground}
     * @description 标签专题图中标签的背景风格类。通过该字段可以设置标签的背景形状和风格。
     */


    _createClass(ThemeLabel, [{
        key: 'destroy',
        value: function destroy() {
            _get(ThemeLabel.prototype.__proto__ || Object.getPrototypeOf(ThemeLabel.prototype), 'destroy', this).call(this);
            var me = this;
            me.alongLine = null;
            if (me.background) {
                me.background.destroy();
                me.background = null;
            }
            me.flow = null;
            if (me.items) {
                for (var i = 0, items = me.items, len = items.length; i < len; i++) {
                    items[i].destroy();
                }
                me.items = null;
            }
            if (me.uniqueItems) {
                for (var j = 0, uniqueItems = me.uniqueItems, uniqueLen = uniqueItems.length; j < uniqueLen; j++) {
                    uniqueItems[j].destory();
                }
                me.uniqueItems = null;
            }
            me.labelExpression = null;
            me.labelOverLengthMode = null;
            me.matrixCells = null;
            me.maxLabelLength = null;
            me.numericPrecision = null;
            me.overlapAvoided = null;
            me.rangeExpression = null;
            me.uniqueExpression = null;
            if (me.offset) {
                me.offset.destroy();
                me.offset = null;
            }
            me.overlapAvoided = null;
            me.smallGeometryLabeled = null;
            if (me.text) {
                me.text.destroy();
                me.text = null;
            }
        }

        /*
         * Method: toJSON
         * 将themeLabel对象转化为json字符串。
         *
         * Returns:
         * {String} 返回转换后的 JSON 字符串。
         */

    }, {
        key: 'toJSON',
        value: function toJSON() {
            return _SuperMap2.default.Util.toJSON(this.toServerJSONObject());
        }

        /*
         * Method: toServerJSONObject
         * 转换成对应的 JSON 格式对象。
         */

    }, {
        key: 'toServerJSONObject',
        value: function toServerJSONObject() {
            var obj = {};
            obj.type = this.type;
            obj.memoryData = this.memoryData;
            if (this.alongLine) {
                obj.alongLine = this.alongLine.isAlongLine;
                obj.alongLineDirection = this.alongLine.alongLineDirection;
                obj.angleFixed = this.alongLine.angleFixed;
                obj.isLabelRepeated = this.alongLine.isLabelRepeated;
                obj.labelRepeatInterval = this.alongLine.labelRepeatInterval;
                obj.repeatedLabelAvoided = this.alongLine.repeatedLabelAvoided;
                obj.repeatIntervalFixed = this.alongLine.repeatIntervalFixed;
            }
            if (this.offset) {
                obj.offsetFixed = this.offset.offsetFixed;
                obj.offsetX = this.offset.offsetX;
                obj.offsetY = this.offset.offsetY;
            }

            if (this.flow) {
                obj.flowEnabled = this.flow.flowEnabled;
                obj.leaderLineDisplayed = this.flow.leaderLineDisplayed;
                obj.leaderLineStyle = this.flow.leaderLineStyle;
            }
            if (this.text) {
                obj.maxTextHeight = this.text.maxTextHeight;
                obj.maxTextWidth = this.text.maxTextWidth;
                obj.minTextHeight = this.text.minTextHeight;
                obj.minTextWidth = this.text.minTextWidth;
                obj.uniformStyle = this.text.uniformStyle;
                obj.uniformMixedStyle = this.text.uniformMixedStyle;
            }
            if (this.background) {
                obj.labelBackShape = this.background.labelBackShape;
                obj.backStyle = this.background.backStyle;
            }
            obj.labelOverLengthMode = this.labelOverLengthMode;
            obj.maxLabelLength = this.maxLabelLength;
            obj.smallGeometryLabeled = this.smallGeometryLabeled;
            obj.rangeExpression = this.rangeExpression;
            obj.uniqueExpression = this.uniqueExpression;
            obj.numericPrecision = this.numericPrecision;
            obj.items = this.items;
            obj.uniqueItems = this.uniqueItems;
            obj.labelExpression = this.labelExpression;
            obj.overlapAvoided = this.overlapAvoided;
            obj.matrixCells = this.matrixCells;
            return obj;
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            if (!obj) return;
            var lab = new ThemeLabel();
            var itemsL = obj.items,
                itemsU = obj.uniqueItems,
                cells = obj.matrixCells;
            obj.matrixCells = null;
            _SuperMap2.default.Util.copy(lab, obj);
            lab.alongLine = _ThemeLabelAlongLine2.default.fromObj(obj);
            lab.background = _ThemeLabelBackground2.default.fromObj(obj);
            lab.flow = new _ThemeFlow2.default({ flowEnabled: obj.flowEnabled, leaderLineDisplayed: obj.leaderLineDisplayed, leaderLineStyle: obj.leaderLineStyle });
            if (itemsL) {
                lab.items = [];
                for (var i = 0, len = itemsL.length; i < len; i++) {
                    lab.items.push(_ThemeLabelItem2.default.fromObj(itemsL[i]));
                }
            }
            if (itemsU) {
                lab.uniqueItems = [];
                for (var j = 0, uniqueLen = itemsU.length; j < uniqueLen; j++) {
                    lab.uniqueItems.push(ThemeUniqueItem.fromObj(itemsU[j]));
                }
            }
            if (cells) {
                lab.matrixCells = [];
                for (var i = 0, len = cells.length; i < len; i++) {
                    //TODO
                    //lab.matrixCells.push(SuperMap.LabelMatrixCell.fromObj(cells[i]));
                }
            }
            lab.offset = _ThemeOffset2.default.fromObj(obj);
            lab.text = _ThemeLabelText2.default.fromObj(obj);
            return lab;
        }
    }]);

    return ThemeLabel;
}(_Theme3.default);

exports.default = ThemeLabel;


_SuperMap2.default.ThemeLabel = ThemeLabel;

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ThemeOffset
 * @description 专题图中文本或符号相对于要素内点的偏移量设置类。
 *              通过该类可以设置专题图中标记文本或符号的偏移量以及偏移量是否随地图缩放而改变。
 * @param options - {Object} 可选参数。如：<br>
 *        offsetFixed - {Boolean} 当前专题图是否固定标记文本或符号的偏移量。<br>
 *        offsetX - {String} 专题图中文本或符号相对于要素内点的水平偏移量。<br>
 *        offsetY - {String} 专题图中文本或符号相对于要素内点的垂直偏移量。
 */
var ThemeOffset = function () {

    /*
     * Constructor: SuperMap.ThemeOffset
     * 专题图中文本或符号相对于要素内点的偏移量设置类构造函数。
     */


    /**
     * APIProperty: offsetX
     * @member SuperMap.ThemeOffset.prototype.offsetX -{String}
     * @description 专题图中文本或符号相对于要素内点的水平偏移量。偏移量的单位为地图单位。
     *              该偏移量的值为一个常量值或者字段表达式所表示的值，即如果字段表达式为 SmID，其中 SmID = 2，那么水平偏移量为2。
     */
    function ThemeOffset(options) {
        _classCallCheck(this, ThemeOffset);

        this.offsetFixed = false;
        this.offsetX = "0.0";
        this.offsetY = "0.0";
        this.CLASS_NAME = "SuperMap.ThemeOffset";

        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: offsetY
     * @member SuperMap.ThemeOffset.prototype.offsetY -{String}
     * @description 专题图中文本或符号相对于要素内点的垂直偏移量。偏移量的单位为地图单位。
     *              该偏移量的值为一个常量值或者字段表达式所表示的值，即如果字段表达式为 SmID，其中 SmID = 2，那么垂直偏移量为2。
     */


    /**
     * APIProperty: offsetFixed
     * @member SuperMap.ThemeOffset.prototype.offsetFixed -{Boolean}
     * @description 当前专题图是否固定标记文本或符号的偏移量。所谓固定偏移量，则文本或符号的偏移量不随地图的缩放而变化。默认为 false，表示偏移量随地图的缩放而变化。
     */


    _createClass(ThemeOffset, [{
        key: "destroy",
        value: function destroy() {
            var me = this;
            me.offsetFixed = null;
            me.offsetX = null;
            me.offsetY = null;
        }
    }], [{
        key: "fromObj",
        value: function fromObj(obj) {
            if (!obj) return;
            var res = new ThemeOffset();
            _SuperMap2.default.Util.copy(res, obj);
            return res;
        }
    }]);

    return ThemeOffset;
}();

exports.default = ThemeOffset;


_SuperMap2.default.ThemeOffset = ThemeOffset;

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ThiessenAnalystParameters
 * @constructs SuperMap.ThiessenAnalystParameters
 * @classdesc
 * 泰森多边形分析参数基类。
 * @api
 */
var ThiessenAnalystParameters = function () {

    /**
     * @method SuperMap.ThiessenAnalystParameters.initialize
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * clipRegion - {SuperMap.Geometry} 结果数据裁剪区域，可以为null，表示不对结果进行裁剪。</br>
     * createResultDataset - {Boolean} 是否返回结果数据集，默认不返回。</br>
     * resultDatasetName - {Boolean} 指定结果数据集名称。</br>
     * resultDatasourceName - {Boolean} 指定结果数据集所在数据源，默认为当前数据源。</br>
     * returnResultRegion - {Boolean} 是否返回分析得到的多边形面数组，默认返回。</br>
     */


    /**
     * APIProperty: resultDatasourceName
     * {String} 指定结果数据集所在数据源。
     */


    /**
     * APIProperty: createResultDataset
     * {Boolean} 是否返回结果数据集，默认值 false。如果为true，则必须设置属性resultDatasetName和resultDatasourceName。
     */
    function ThiessenAnalystParameters(options) {
        _classCallCheck(this, ThiessenAnalystParameters);

        this.clipRegion = null;
        this.createResultDataset = false;
        this.resultDatasetName = null;
        this.resultDatasourceName = null;
        this.returnResultRegion = true;
        this.CLASS_NAME = "SuperMap.ThiessenAnalystParameters";

        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: returnResultRegion
     * {Boolean} 是否返回分析得到的多边形面数组，默认 true，返回。
     */


    /**
     * APIProperty: resultDatasetName
     * {String} 指定结果数据集名称。
     */


    /**
     * APIProperty: clipRegion
     * {SuperMap.Geometry} 结果数据裁剪区域，可以为null，表示不对结果进行裁剪。
     */


    _createClass(ThiessenAnalystParameters, [{
        key: "destroy",
        value: function destroy() {
            var me = this;
            if (me.clipRegion) {
                me.clipRegion.destroy();
                me.clipRegion = null;
            }
            me.createResultDataset = null;
            me.resultDatasetName = null;
            me.resultDatasourceName = null;
            me.returnResultRegion = null;
        }
    }]);

    return ThiessenAnalystParameters;
}();

exports.default = ThiessenAnalystParameters;

_SuperMap2.default.ThiessenAnalystParameters = ThiessenAnalystParameters;

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServiceBase2 = __webpack_require__(4);

var _ServiceBase3 = _interopRequireDefault(_ServiceBase2);

var _DataFlowService = __webpack_require__(108);

var _DataFlowService2 = _interopRequireDefault(_DataFlowService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DataFlowService = function (_ServiceBase) {
    _inherits(DataFlowService, _ServiceBase);

    function DataFlowService(url, options) {
        _classCallCheck(this, DataFlowService);

        var _this = _possibleConstructorReturn(this, (DataFlowService.__proto__ || Object.getPrototypeOf(DataFlowService)).call(this, url, options));

        options = options || {};
        if (options.projection) {
            _this.options.prjCoordSys = new _SuperMap2.default.Projection(options.projection);
        }
        _ServiceBase3.default.call(_this, url, options);
        _this.dataFlow = new _DataFlowService2.default(url, options);
        _this.dataFlow.events.on({
            "broadcastSocketConnected": _this._defaultEvent,
            "broadcastSocketError": _this._defaultEvent,
            "broadcastFailed": _this._defaultEvent,
            "broadcastSuccessed": _this._defaultEvent,
            "subscribeSocketConnected": _this._defaultEvent,
            "subscribeSocketError": _this._defaultEvent,
            "messageSuccessed": _this._defaultEvent,
            "setFilterParamSuccessed": _this._defaultEvent,
            scope: _this
        });
        return _this;
    }

    _createClass(DataFlowService, [{
        key: 'initBroadcast',
        value: function initBroadcast() {
            this.dataFlow.initBroadcast();
            return this;
        }
    }, {
        key: 'broadcast',
        value: function broadcast(obj) {
            this.dataFlow.broadcast(obj);
        }
    }, {
        key: 'initSubscribe',
        value: function initSubscribe() {
            this.dataFlow.initSubscribe();
            return this;
        }
    }, {
        key: 'setPrjCoordSys',
        value: function setPrjCoordSys(prjCoordSys) {
            if (!prj) {
                return;
            }
            var prj = new _SuperMap2.default.Projection(options.projection);
            this.dataFlow.setPrjCoordSys(prj);
            this.options.prjCoordSys = prj;
            return this;
        }
    }, {
        key: 'setExcludeField',
        value: function setExcludeField(excludeField) {
            this.dataFlow.setExcludeField(excludeField);
            this.options.excludeField = excludeField;
            return this;
        }
    }, {
        key: 'setGeometry',
        value: function setGeometry(geometry) {
            this.dataFlow.setGeometry(geometry);
            this.options.geometry = geometry;
            return this;
        }
    }, {
        key: 'unSubscribe',
        value: function unSubscribe() {
            this.dataFlow.unSubscribe();
        }
    }, {
        key: 'unBroadcast',
        value: function unBroadcast() {
            this.dataFlow.unBroadcast();
        }
    }, {
        key: '_defaultEvent',
        value: function _defaultEvent(e) {
            this.dispatchEvent({ type: e.eventType || e.type, value: e });
        }
    }]);

    return DataFlowService;
}(_ServiceBase3.default);

exports.default = DataFlowService;

_olDebug2.default.supermap.DataFlowService = DataFlowService;

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _ServiceBase2 = __webpack_require__(4);

var _ServiceBase3 = _interopRequireDefault(_ServiceBase2);

var _MapService = __webpack_require__(185);

var _MapService2 = _interopRequireDefault(_MapService);

var _TilesetsService = __webpack_require__(248);

var _TilesetsService2 = _interopRequireDefault(_TilesetsService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class ol.supermap.MapService
 * @description 地图信息服务类
 * @augments ol.supermap.ServiceBase
 * @param url -{String} 地图服务地址
 * @param options -{Object} 地图服务信息相关参数
 * @example
 *   new ol.supermap.MapService(url)
 *      .getMapInfo(function(result){
 *           //doSomething
 *      })
 */
var MapService = function (_ServiceBase) {
    _inherits(MapService, _ServiceBase);

    function MapService(url, options) {
        _classCallCheck(this, MapService);

        return _possibleConstructorReturn(this, (MapService.__proto__ || Object.getPrototypeOf(MapService)).call(this, url, options));
    }

    /**
     * @function ol.supermap.MapService.prototype.getMapInfo
     * @description 地图信息查询服务
     * @param callback -{function} 回调函数
     */


    _createClass(MapService, [{
        key: 'getMapInfo',
        value: function getMapInfo(callback) {
            var me = this;
            var getMapStatusService = new _MapService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                }, projection: me.options.projection
            });
            getMapStatusService.processAsync();
            return me;
        }

        /**
         * @function ol.supermap.MapService.prototype.getTilesets
         * @description 切片列表信息查询服务
         * @param callback -{function} 回调函数
         */

    }, {
        key: 'getTilesets',
        value: function getTilesets(callback) {
            var me = this;
            var tilesetsService = new _TilesetsService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                }
            });
            tilesetsService.processAsync();
            return me;
        }
    }]);

    return MapService;
}(_ServiceBase3.default);

exports.default = MapService;

_olDebug2.default.supermap.MapService = MapService;

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _BufferSetting = __webpack_require__(95);

var _BufferSetting2 = _interopRequireDefault(_BufferSetting);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.BufferAnalystParameters
 * @constructs SuperMap.BufferAnalystParameters
 * @classdesc
 * 缓冲区分析参数基类。
 * @api
 */
var BufferAnalystParameters = function () {

    /**
     * @method SuperMap.BufferAnalystParameters.initialize
     * @param options - {Object} 参数。
     * Allowed options properties:<br>
     * bufferSetting - {SuperMap.BufferSetting} 设置缓冲区通用参数。
     */
    function BufferAnalystParameters(options) {
        _classCallCheck(this, BufferAnalystParameters);

        this.bufferSetting = null;
        this.CLASS_NAME = "SuperMap.BufferAnalystParameters";

        var me = this;
        me.bufferSetting = new _BufferSetting2.default();
        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: bufferSetting
     * {SuperMap.BufferSetting} 设置缓冲区通用参数。
     * 为缓冲区分析提供必要的参数信息，包括左缓冲距离、右缓冲距离、端点类型、圆头缓冲圆弧处线段的个数信息。
     */


    _createClass(BufferAnalystParameters, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            if (me.bufferSetting) {
                me.bufferSetting.destroy();
                me.bufferSetting = null;
            }
        }
    }]);

    return BufferAnalystParameters;
}();

exports.default = BufferAnalystParameters;

_SuperMap2.default.BufferAnalystParameters = BufferAnalystParameters;

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.OverlayAnalystParameters
 * @constructs SuperMap.OverlayAnalystParameters
 * @classdesc
 * 叠加分析参数基类，数据集叠加分析参数和几何对象叠加分析参数均继承此基类
 * @api
 */
var OverlayAnalystParameters = function () {

    /**
     * @method SuperMap.OverlayAnalystParameters.initialize
     * @param options - {Object} 参数。
     *
     * Allowed options properties:</br>
     * operation - {OverlayOperationType} 指定叠加分析操作类型。
     */
    function OverlayAnalystParameters(options) {
        _classCallCheck(this, OverlayAnalystParameters);

        this.operation = _REST.OverlayOperationType.UNION;
        this.CLASS_NAME = "SuperMap.OverlayAnalystParameters";

        var me = this;
        if (options) {
            _SuperMap2.default.Util.extend(me, options);
        }
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * Property: operation
     * {OverlayOperationType}
     */


    _createClass(OverlayAnalystParameters, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.operation = null;
        }
    }]);

    return OverlayAnalystParameters;
}();

exports.default = OverlayAnalystParameters;

_SuperMap2.default.OverlayAnalystParameters = OverlayAnalystParameters;

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _PointWithMeasure = __webpack_require__(193);

var _PointWithMeasure2 = _interopRequireDefault(_PointWithMeasure);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Collection = _SuperMap2.default.Geometry.Collection;

/**
 * @class SuperMap.Route
 * @constructs SuperMap.Route
 * @classdesc
 * 路由对象类。
 * 路由对象为一系列有序的带有属性值 M 的 x，y 坐标对，其中 M 值为该结点的距离属性（到已知点的距离）。
 * @extends {SuperMap.Geometry.Collection}
 * @api
 */

var Route = function (_Collection) {
    _inherits(Route, _Collection);

    /**
     * @method SuperMap.Route.initialize
     * @param points - {Array} 形成路由对象的线数组。
     * @param  options - {Object} 参数。
     * Allowed options properties:</br>
     * id - {Number} 路由对象在数据库中的id。</br>
     * length - {Number} 路由对象的长度。</br>
     * maxM - {Number} 最大线性度量值，即所有结点到起始点的量算距离中最大值。</br>
     * minM - {Number} 最小线性度量值，即所有结点到起始点的量算距离中最小值。</br>
     * type - {String} 数据类型，如："LINEM"</br>
     */


    /**
     * APIProperty: components
     * {Array(<SuperMap.Geometry>)} 存储几何对象的数组。
     */

    /**
     * Property: points
     * {Array(Object)} 路由对象的所有路由点。
     * (start code)
     * [
     *  {
     *      "measure": 0,
     *      "y": -4377.027184298267,
     *      "x": 4020.0045221720466
     *  },
     *  {
     *      "measure": 37.33288381391519,
     *      "y": -4381.569363260499,
     *      "x": 4057.0600591960642
     *  }
     * ]
     * (end)
     */


    /**
     * APIProperty: minM
     * {Number} 最小线性度量值，即所有结点到起始点的量算距离中最小值。
     */


    /**
     * APIProperty: length
     * {Number} 路由对象的长度。
     * 单位与数据集的单位相同。
     */

    /**
     * Property: center
     */
    function Route(points, options) {
        _classCallCheck(this, Route);

        var _this = _possibleConstructorReturn(this, (Route.__proto__ || Object.getPrototypeOf(Route)).call(this, points, options));

        _this.id = null;
        _this.center = null;
        _this.style = null;
        _this.length = null;
        _this.maxM = null;
        _this.minM = null;
        _this.parts = null;
        _this.points = null;
        _this.type = null;
        _this.components = null;
        _this.componentTypes = ["SuperMap.Geometry.LinearRing", "SuperMap.Geometry.LineString"];
        _this.CLASS_NAME = "SuperMap.Route";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /**
     *
     * @method SuperMap.Route.toJson
     * @description 转换为json对象。
     */

    /**
     * Property: componentTypes
     */


    /**
     * APIProperty: type
     * {String} 服务端几何对象类型。
     */


    /**
     * Property: parts
     * {Array(Number)} 服务端几何对象中各个子对象所包含的节点个数。
     */


    /**
     * APIProperty: maxM
     * {Number} 最大线性度量值，即所有结点到起始点的量算距离中最大值。
     */

    /**
     * Property: style
     */


    /**
     * APIProperty: id
     * {Number} 路由对象在数据库中的id。
     * 。
     */


    _createClass(Route, [{
        key: 'toJson',
        value: function toJson() {
            var result = "{";
            if (this.id != null && this.id != undefined) {
                result += "\"id\":" + this.id + ",";
            }
            if (this.center != null && this.center != undefined) {
                result += "\"center\":" + this.center + ",";
            }
            if (this.style != null && this.style != undefined) {
                result += "\"style\":" + this.style + ",";
            }
            if (this.length != null && this.length != undefined) {
                result += "\"length\":" + this.length + ",";
            }
            if (this.maxM != null && this.maxM != undefined) {
                result += "\"maxM\":" + this.maxM + ",";
            }
            if (this.minM != null && this.minM != undefined) {
                result += "\"minM\":" + this.minM + ",";
            }
            if (this.type != null && this.type != undefined) {
                result += "\"type\":\"" + this.type + "\",";
            }
            if (this.parts != null && this.parts != undefined) {
                result += "\"parts\":[" + this.parts[0];

                for (var i = 1; i < this.parts.length; i++) {
                    result += "," + this.parts[i];
                }
                result += "],";
            }
            if (this.components != null && this.components.length > 0) {
                result += "\"points\":[";
                for (var j = 0, len = this.components.length; j < len; j++) {
                    for (var k = 0, len2 = this.components[j].components.length; k < len2; k++) {
                        result += this.components[j].components[k].toJson() + ",";
                    }
                }
                result = result.replace(/,$/g, '');
                result += "]";
            }
            result = result.replace(/,$/g, '');
            result += "}";
            return result;
        }

        /*
         * APIMethod: destroy
         * 释放资源，将引用资源的属性置空。
         */

    }, {
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.id = null;
            me.center = null;
            me.style = null;
            me.length = null;
            me.maxM = null;
            me.minM = null;
            me.type = null;
            me.parts = null;
            this.components.length = 0;
            this.components = null;
            this.componentTypes = null;
        }

        /**
         * @method SuperMap.Route.fromJson
         * @description  将 JSON 对象转换为 SuperMap.Route 对象。
         * @param jsonObject - {Object} JSON 对象表示的路由对象。
         * @return {SuperMap.Route} 转化后的 Route 对象。
         */

    }], [{
        key: 'fromJson',
        value: function fromJson(jsonObject) {
            if (!jsonObject) {
                return;
            }

            var geoParts = jsonObject.parts || [],
                geoPoints = jsonObject.points || [],
                len = geoParts.length,
                lineList = [];
            if (len > 0) {
                for (var i = 0, pointIndex = 0, pointList = []; i < len; i++) {
                    for (var j = 0; j < geoParts[i]; j++) {
                        pointList.push(_PointWithMeasure2.default.fromJson(geoPoints[pointIndex + j]));
                    }
                    pointIndex += geoParts[i];
                    //判断线是否闭合，如果闭合，则返回LinearRing，否则返回LineString
                    if (pointList[0].equals(pointList[geoParts[i] - 1])) {
                        lineList.push(new _SuperMap2.default.Geometry.LinearRing(pointList));
                    } else {
                        lineList.push(new _SuperMap2.default.Geometry.LineString(pointList));
                    }
                    pointList = [];
                }
            } else {
                return null;
            }

            return new Route(lineList, {
                id: jsonObject.id,
                center: jsonObject.center,
                style: jsonObject.style,
                length: jsonObject.length,
                maxM: jsonObject.maxM,
                minM: jsonObject.minM,
                type: jsonObject.type,
                parts: jsonObject.parts
            });
        }
    }]);

    return Route;
}(Collection);

exports.default = Route;


_SuperMap2.default.Route = Route;

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _DataReturnOption = __webpack_require__(20);

var _DataReturnOption2 = _interopRequireDefault(_DataReturnOption);

var _REST = __webpack_require__(1);

var _SurfaceAnalystParametersSetting = __webpack_require__(224);

var _SurfaceAnalystParametersSetting2 = _interopRequireDefault(_SurfaceAnalystParametersSetting);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.SurfaceAnalystParameters
 * @constructs SuperMap.SurfaceAnalystParameters
 * @classdesc
 * 表面分析提取操作参数类。
 * 通过该类可以为进行表面分析提供参数信息，包括表面分析的方法提取等值线、提取等值面和中间结果的分辨率，
 * {SuperMap.DatasetSurfaceAnalystParameters} 和 {SuperMap.GeometrySurfaceAnalystParameters} 继承自该类。
 * @api
 */
var SurfaceAnalystParameters = function () {

    /**
     * @method SuperMap.SurfaceAnalystParameters.initialize
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * extractParameter - {SuperMap.SurfaceAnalystParametersSetting} 获取或设置表面分析参数。</br>
     * resolution - {Number} 指定中间结果（栅格数据集）的分辨率。</br>
     * resultSetting - {SuperMap.DataReturnOption} 结果返回设置类。</br>
     * surfaceAnalystMethod - {SuperMap.SurfaceAnalystMethod} 获取或设置表面分析的提取方法，提取等值线和提取等值面。</br>
     */


    /**
     * APIProperty: resultSetting
     * {SuperMap.DataReturnOption} 结果返回设置类。
     */


    /**
     * APIProperty: resolution
     * {Number} 获取或设置指定中间结果（栅格数据集）的分辨率。
     */
    function SurfaceAnalystParameters(options) {
        _classCallCheck(this, SurfaceAnalystParameters);

        this.resolution = 0;
        this.extractParameter = null;
        this.resultSetting = null;
        this.surfaceAnalystMethod = _REST.SurfaceAnalystMethod.ISOLINE;
        this.CLASS_NAME = "SuperMap.SurfaceAnalystParameters";

        var me = this;
        me.extractParameter = new _SurfaceAnalystParametersSetting2.default();
        me.resultSetting = new _DataReturnOption2.default();
        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: surfaceAnalystMethod
     * {SuperMap.SurfaceAnalystMethod} 获取或设置表面分析的提取方法，提取等值线和提取等值面，默认为等值线分析。
     */


    /**
     * APIProperty: extractParameter
     * {SuperMap.SurfaceAnalystParametersSetting} 获取或设置表面分析参数。
     * 在进行点数据集进行提取等值面分析时，暂时不支持 SurfaceAnalystParametersSetting 类中的 expectedZValues 字段。
     */


    _createClass(SurfaceAnalystParameters, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.resolution = null;
            if (me.extractParameter) {
                me.extractParameter.destroy();
                me.extractParameter = null;
            }
            if (me.resultSetting) {
                me.resultSetting.destroy();
                me.resultSetting = null;
            }
            me.surfaceAnalystMethod = null;
        }
    }]);

    return SurfaceAnalystParameters;
}();

exports.default = SurfaceAnalystParameters;

_SuperMap2.default.SurfaceAnalystParameters = SurfaceAnalystParameters;

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _Theme2 = __webpack_require__(12);

var _Theme3 = _interopRequireDefault(_Theme2);

var _ServerStyle = __webpack_require__(9);

var _ServerStyle2 = _interopRequireDefault(_ServerStyle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.ThemeDotDensity
 * @description 点密度专题图。<br>
 *              点密度专题图用一定大小、形状相同的点表示现象分布范围、数量特征和分布密度。点的多少和所代表的意义由地图的内容确定。<br>
 *              点密度专题图利用图层的某一数值属性信息（专题值）映射为不同等级，每一级别使用不同数量或表现为密度的点符号来表示。<br>
 *              该专题值在各个分区内的分布情况，体现不同区域的相对数量差异。多用于具有数量特征的地图上，<br>
 *              比如表示不同地区的粮食产量、GDP、人口等的分级，主要针对区域或面状的要素，因而，点密度专题图适用于面数据集。<br>
 *              注意：点密度专题图中点的分布是随机的，并不代表实际的分布位置。即使在相关设置完全相同的情况下，<br>
 *              每次制作出的专题图，点的数量相同，但点的位置都有差异。
 * @augments SuperMap.Theme
 * @param options - {Object} 可选参数。如：<br>
 *        dotExpression - {String} 创建点密度专题图的字段或字段表达式。<br>
 *        style - {SuperMap.ServerStyle} 点密度专题图中点的风格。<br>
 *        value - {String} 专题图中每一个点所代表的数值。<br>
 *        memoryData - {SuperMap.REST.ThemeMemoryData} 专题图内存数据。
 */
var ThemeDotDensity = function (_Theme) {
    _inherits(ThemeDotDensity, _Theme);

    /**
     * @function SuperMap.ThemeDotDensity.prototype.initialize
     * @description 点密度专题图构造函数。
     * @param options - {Object} 可选参数。如：<br>
     *        dotExpression - {String} 创建点密度专题图的字段或字段表达式。<br>
     *        style - {SuperMap.ServerStyle} 点密度专题图中点的风格。<br>
     *        value - {String} 专题图中每一个点所代表的数值。<br>
     *        memoryData - {SuperMap.REST.ThemeMemoryData} 专题图内存数据。
     *
     */


    /**
     * APIProperty: style
     * @member SuperMap.ThemeDotDensity.prototype.style -{SuperMap.ServerStyle}
     * @description 点密度专题图中点的风格。
     */
    function ThemeDotDensity(options) {
        _classCallCheck(this, ThemeDotDensity);

        var _this = _possibleConstructorReturn(this, (ThemeDotDensity.__proto__ || Object.getPrototypeOf(ThemeDotDensity)).call(this, "DOTDENSITY", options));

        _this.dotExpression = null;
        _this.style = null;
        _this.value = null;
        _this.CLASS_NAME = "SuperMap.ThemeDotDensity";

        var me = _this;
        me.style = new _ServerStyle2.default();
        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /**
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: value
     * @member SuperMap.ThemeDotDensity.prototype.value -{Number}
     * @description 专题图中每一个点所代表的数值。<br>
     *              点值的确定与地图比例尺以及点的大小有关。地图比例尺越大，相应的图面范围也越大，<br>
     *              点相应就可以越多，此时点值就可以设置相对小一些。点形状越大，<br>
     *              点值相应就应该设置的小一些。点值过大或过小都是不合适的。
     */


    /**
     * APIProperty: dotExpression
     * @member SuperMap.ThemeDotDensity.prototype.dotExpression -{String}
     * @description 创建点密度专题图的字段或字段表达式。点的数目或密集程度的来源。
     */


    _createClass(ThemeDotDensity, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.dotExpression = null;
            me.value = null;

            if (me.style) {
                me.style.destroy();
                me.style = null;
            }
        }

        /*
         * Method: toServerJSONObject
         * 转换成对应的 JSON 格式对象。
         */

    }, {
        key: 'toServerJSONObject',
        value: function toServerJSONObject() {
            var obj = {};
            obj = _SuperMap2.default.Util.copyAttributes(obj, this);
            if (obj.style) {
                if (obj.style.toServerJSONObject) {
                    obj.style = obj.style.toServerJSONObject();
                }
            }
            return obj;
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            if (!obj) return;
            var res = new ThemeDotDensity();
            _SuperMap2.default.Util.copy(res, obj);
            res.style = _ServerStyle2.default.fromJson(obj.style);
            return res;
        }
    }]);

    return ThemeDotDensity;
}(_Theme3.default);

exports.default = ThemeDotDensity;


_SuperMap2.default.ThemeDotDensity = ThemeDotDensity;

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _Theme2 = __webpack_require__(12);

var _Theme3 = _interopRequireDefault(_Theme2);

var _ThemeFlow = __webpack_require__(31);

var _ThemeFlow2 = _interopRequireDefault(_ThemeFlow);

var _ThemeOffset = __webpack_require__(33);

var _ThemeOffset2 = _interopRequireDefault(_ThemeOffset);

var _ThemeGraduatedSymbolStyle = __webpack_require__(228);

var _ThemeGraduatedSymbolStyle2 = _interopRequireDefault(_ThemeGraduatedSymbolStyle);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.ThemeGraduatedSymbol
 * @description 等级符号专题图。
 * @augments SuperMap.Theme
 * @param options - {Object} 可选参数。如：<br>
 *        baseValue - {Number} 等级符号专题图的基准值，单位同专题变量的单位。<br>
 *        expression - {String} 等级符号专题图的字段或字段表达式。<br>
 *        flow - {SuperMap.ThemeFlow} 等级符号专题图符号流动显示与牵引线设置类。<br>
 *        graduatedMode - {SuperMap.GraduatedMode} 等级符号专题图分级模式。<br>
 *        offset - {SuperMap.ThemeOffset} 用于设置标签专题图中标记文本相对于要素内点的偏移量对象。<br>
 *        style - {SuperMap.ThemeGraduatedSymbolStyle} 用于设置等级符号图正负和零值显示风格。<br>
 *        memoryData - {SuperMap.ThemeMemoryData} 专题图内存数据。
 */
var ThemeGraduatedSymbol = function (_Theme) {
    _inherits(ThemeGraduatedSymbol, _Theme);

    /*
     * Constructor: SuperMap.ThemeGraduatedSymbol
     * 等级符号专题图构造函数，用于创建 SuperMap.ThemeGraduatedSymbol类的新实例。
     */


    /**
     * APIProperty: offset
     * @member @member SuperMap.ThemeGraduatedSymbol.prototype.offset -{SuperMap.ThemeOffset}
     * @description 用于设置等级符号图相对于要素内点的偏移量。
     */


    /**
     * APIProperty: flow
     * @member SuperMap.ThemeGraduatedSymbol.prototype.flow -{SuperMap.ThemeFlow}
     * @description 等级符号专题图符号流动显示与牵引线设置类。<br>
     *              通过该字段可以设置等级符号是否流动显示和牵引线风格。
     */


    /**
     * APIProperty: baseValue
     * @member SuperMap.ThemeGraduatedSymbol.prototype.baseValue -{ Number}
     * @description 等级符号专题图的基准值，单位同专题变量的单位。<br>
     *              依据此值系统会自动根据分级方式计算其余值对应的符号大小，每个符号的显示大小等于<br>
     *              ThemeValueSection.positiveStyle（或 zeroStyle，negativeStyle）.markerSize * value / basevalue，<br>
     *              其中 value 是 expression 所指定字段对应的值经过分级计算之后的值。默认值为0，建议通过多次尝试设置该值才能达到较好的显示效果。
     */
    function ThemeGraduatedSymbol(options) {
        _classCallCheck(this, ThemeGraduatedSymbol);

        var _this = _possibleConstructorReturn(this, (ThemeGraduatedSymbol.__proto__ || Object.getPrototypeOf(ThemeGraduatedSymbol)).call(this, "GRADUATEDSYMBOL", options));

        _this.baseValue = 0;
        _this.expression = null;
        _this.flow = null;
        _this.graduatedMode = _REST.GraduatedMode.CONSTANT;
        _this.offset = null;
        _this.style = null;
        _this.CLASS_NAME = "SuperMap.ThemeGraduatedSymbol";

        var me = _this;
        me.flow = new _ThemeFlow2.default();
        me.offset = new _ThemeOffset2.default();
        me.style = new _ThemeGraduatedSymbolStyle2.default();
        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: style
     * @member SuperMap.ThemeGraduatedSymbol.prototype.style -{SuperMap.ThemeGraduatedSymbolStyle}
     * @description 用于设置等级符号图正负和零值显示风格。
     */


    /**
     * APIProperty: graduatedMode
     * @member SuperMap.ThemeGraduatedSymbol.prototype.graduatedMode -{SuperMap.GraduatedMode}
     * @description 等级符号专题图分级模式。<br>
     *              分级主要是为了减少制作等级符号专题图中数据大小之间的差异。如果数据之间差距较大，则可以采用对数或者平方根的分级方式来进行，<br>
     *              这样就减少了数据之间的绝对大小的差异，使得等级符号图的视觉效果比较好，同时不同类别之间的比较也是有意义的。<br>
     *              有三种分级模式：常数、对数和平方根，对于有值为负数的字段，在用对数或平方根方式分级时，默认对负数取正。<br>
     *              不同的分级模式用于确定符号大小的数值是不相同的：常数按照字段的原始数据进行；对数则是对每条记录对应的专题变量取自然对数；<br>
     *              平方根则是对其取平方根，然后用最终得到的结果来确定其等级符号的大小。<br>
     *              默认值为 SuperMap.GraduatedMode.CONSTANT。
     */


    /**
     * APIProperty: expression
     * @member SuperMap.ThemeGraduatedSymbol.prototype.expression -{String}
     * @description 用于创建等级符号专题图的字段或字段表达式，字段或字段表达式应为数值型。必设字段。
     */


    _createClass(ThemeGraduatedSymbol, [{
        key: 'destroy',
        value: function destroy() {
            _get(ThemeGraduatedSymbol.prototype.__proto__ || Object.getPrototypeOf(ThemeGraduatedSymbol.prototype), 'destroy', this).call(this);
            var me = this;
            me.expression = null;
            if (me.flow) {
                me.flow.destroy();
                me.flow = null;
            }
            me.graduatedMode = _REST.GraduatedMode.CONSTANT;
            if (me.offset) {
                me.offset.destroy();
                me.offset = null;
            }
            if (me.style) {
                me.style.destroy();
                me.style = null;
            }
        }

        /*
         * Method: toJSON
         * 将themeLabel对象转化为json字符串。
         *
         * Returns:
         * {String} 返回转换后的 JSON 字符串。
         */

    }, {
        key: 'toJSON',
        value: function toJSON() {
            return _SuperMap2.default.Util.toJSON(this.toServerJSONObject());
        }

        /*
         * Method: toServerJSONObject
         * 转换成对应的 JSON 格式对象。
         */

    }, {
        key: 'toServerJSONObject',
        value: function toServerJSONObject() {
            var obj = {};
            obj.type = this.type;
            obj.memoryData = this.memoryData;
            obj.baseValue = this.baseValue;
            obj.expression = this.expression;
            obj.graduatedMode = this.graduatedMode;
            if (this.flow) {
                obj.flowEnabled = this.flow.flowEnabled;
                obj.leaderLineDisplayed = this.flow.leaderLineDisplayed;
                obj.leaderLineStyle = this.flow.leaderLineStyle;
            }
            if (this.offset) {
                obj.offsetFixed = this.offset.offsetFixed;
                obj.offsetX = this.offset.offsetX;
                obj.offsetY = this.offset.offsetY;
            }
            if (this.style) {
                obj.negativeStyle = this.style.negativeStyle;
                obj.negativeDisplayed = this.style.negativeDisplayed;
                obj.positiveStyle = this.style.positiveStyle;
                obj.zeroDisplayed = this.style.zeroDisplayed;
                obj.zeroStyle = this.style.zeroStyle;
            }
            return obj;
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            if (!obj) return;
            var res = new _SuperMap2.default.ThemeGraduatedSymbol();
            _SuperMap2.default.Util.copy(res, obj);
            res.flow = _ThemeFlow2.default.fromObj(obj);
            res.offset = _ThemeOffset2.default.fromObj(obj);
            res.style = _ThemeGraduatedSymbolStyle2.default.fromObj(obj);
            return res;
        }
    }]);

    return ThemeGraduatedSymbol;
}(_Theme3.default);

exports.default = ThemeGraduatedSymbol;


_SuperMap2.default.ThemeGraduatedSymbol = ThemeGraduatedSymbol;

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _Theme2 = __webpack_require__(12);

var _Theme3 = _interopRequireDefault(_Theme2);

var _ThemeFlow = __webpack_require__(31);

var _ThemeFlow2 = _interopRequireDefault(_ThemeFlow);

var _ThemeOffset = __webpack_require__(33);

var _ThemeOffset2 = _interopRequireDefault(_ThemeOffset);

var _ThemeGraphAxes = __webpack_require__(229);

var _ThemeGraphAxes2 = _interopRequireDefault(_ThemeGraphAxes);

var _ThemeGraphSize = __webpack_require__(231);

var _ThemeGraphSize2 = _interopRequireDefault(_ThemeGraphSize);

var _ThemeGraphText = __webpack_require__(232);

var _ThemeGraphText2 = _interopRequireDefault(_ThemeGraphText);

var _ThemeGraphItem = __webpack_require__(230);

var _ThemeGraphItem2 = _interopRequireDefault(_ThemeGraphItem);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.ThemeGraph
 * @description 统计专题图类。
 * @augments SuperMap.Theme
 * @param options - {Object} 参数。<br>
 *        barWidth - {Number} 柱状专题图中每一个柱的宽度。<br>
 *        flow - {SuperMap.ThemeFlow} 统计专题图流动显示与牵引线设置。<br>
 *        graduatedMode - {SuperMap.GraduatedMode} 统计图中地理要素的值与图表尺寸间的映射关系。<br>
 *        graphAxes - {SuperMap.ThemeGraphAxes} 统计图中坐标轴样式相关信息。<br>
 *        graphSize - {SuperMap.ThemeGraphSize} 统计符号的最大最小尺寸。<br>
 *        graphSizeFixed - {Boolean} 缩放地图时统计图符号是否固定大小。<br>
 *        graphText - {SuperMap.ThemeGraphText} 统计图上的文字是否可以见以及文字标注风格。<br>
 *        graphType - {SuperMap.ThemeGraphType} 统计专题图类型。<br>
 *        items - {Array<SuperMap.ThemeGraphItem>} 统计专题图子项集合。<br>
 *        memoryKeys - {Array(Integer)} 以内存数组方式制作专题图时的键数组。<br>
 *        negativeDisplayed - {Boolean} 专题图中是否显示属性为负值的数据。<br>
 *        offset - {SuperMap.ThemeOffset} 统计图相对于要素内点的偏移量。<br>
 *        overlapAvoided - {Boolean} 统计图是否采用避让方式显示。<br>
 *        roseAngle - {Number} 统计图中玫瑰图或三维玫瑰图用于等分的角度。<br>
 *        startAngle - {Number} 饼状统计图扇形的起始角度。
 */
var ThemeGraph = function (_Theme) {
    _inherits(ThemeGraph, _Theme);

    /*
     * Constructor: SuperMap.ThemeGraph
     * 统计专题图构造函数。
     */


    /**
     * APIProperty: roseAngle
     * @member SuperMap.ThemeGraph.prototype.roseAngle -{Number}
     * @description 统计图中玫瑰图或三维玫瑰图用于等分的角度，默认为0度，精确到0.1度。在角度为0或者大于360度的情况下均使用360度来等分制作统计图的字段数。
     */


    /**
     * APIProperty: offset
     * @member SuperMap.ThemeGraph.prototype.offset -{SuperMap.ThemeOffset}
     * @description 用于设置统计图相对于要素内点的偏移量。
     */


    /**
     * APIProperty: memoryKeys
     * @member SuperMap.ThemeGraph.prototype.memoryKeys -{Array(Integer)}
     * @description 以内存数组方式制作专题图时的键数组。<br>
     *              键数组内的数值代表 SmID 值，它与 SuperMap.ThemeGraphItem 类中的值数组（SuperMap.ThemeGraphItem.memoryDoubleValues）要关联起来应用。<br>
     *              键数组中数值的个数必须要与值数组的数值个数一致。值数组中的值将代替原来的专题值来制作统计专题图。<br>
     *              目前所有的专题图都支持以内存数组的方式制作专题图，但统计专题图与其他专题图指定内存数组的方式不同，<br>
     *              统计专题图使用 memoryKeys 指定内存数组，而其他专题图则使用 memoryData 来指定内存数组。
     * @example
     * (start code)
     *  memoryKeys的使用方法如：
     *   function addThemeGraph() {
     *      removeTheme();
     *        //创建统计专题图对象，SuperMap.ThemeGraph 必设 items。
     *       //专题图参数 ThemeParameters 必设 theme（即以设置好的分段专题图对象）、dataSourceName 和 datasetName
     *      var style1 = new SuperMap.ServerStyle({
     *                   fillForeColor: new SuperMap.ServerColor(92,73,234),
     *                   lineWidth: 0.1
     *               }),
     *               style2 = new SuperMap.ServerStyle({
     *                   fillForeColor: new SuperMap.ServerColor(211,111,240),
     *                   lineWidth: 0.1
     *               }),
     *               item1 = new SuperMap.ThemeGraphItem({
     *                   memoryDoubleValues:[1.18,0.95,0.37,1.31,0.8,1.5],
     *                  caption: "1992-1995人口增长率",
     *                  graphExpression: "Pop_Rate95",
     *                   uniformStyle: style1
     *               }),
     *               item2 = new SuperMap.ThemeGraphItem({
     *               //以内存数组方式制作专题图时的值数组
     *                   memoryDoubleValues:[2.71,0,0.74,3.1,2.2,3.5],
     *                   caption: "1995-1999人口增长率",  //专题图子项的名称
     *                   graphExpression: "Pop_Rate99",  //统计专题图的专题变量
     *                   uniformStyle: style2      //统计专题图子项的显示风格
     *               }),
     *               themeGraph  = new SuperMap.ThemeGraph({
     *               //以内存数组方式制作专题图时的键数组，键数组内的数值代表 SmID 值
     *                    memoryKeys:[1,2,4,8,10,12],
     *                   items: new Array(item1,item2),
     *                   barWidth: 0.03,
     *                    //统计图中地理要素的值与图表尺寸间的映射关系为平方根
     *                   graduatedMode: SuperMap.GraduatedMode.SQUAREROOT,
     *                   //graphAxes用于设置统计图中坐标轴样式相关信息
     *                   graphAxes: new SuperMap.ThemeGraphAxes({
     *                       axesDisplayed: true
     *                   }),
     *                   graphSize: new SuperMap.ThemeGraphSize({
     *                       maxGraphSize: 1,
     *                       minGraphSize: 0.35
     *                   }),
     *                   //统计图上的文字是否可以见以及文字标注风格
     *                   graphText: new SuperMap.ThemeGraphText({
     *                       graphTextDisplayed: true,
     *                       graphTextFormat: SuperMap.ThemeGraphTextFormat.VALUE,
     *                       graphTextStyle: new SuperMap.ServerTextStyle({
     *                           sizeFixed: true,
     *                           fontHeight: 9,
     *                           fontWidth: 5
     *                       })
     *                   }),
     *                   //统计专题图类型为三维柱状图
     *                   graphType: SuperMap.ThemeGraphType.BAR3D
     *               }),
     * //专题图参数对象
     *               themeParameters = new SuperMap.ThemeParameters({
     *                   themes: [themeGraph],
     *                   dataSourceNames: ["Jingjin"],
     *                   datasetNames: ["BaseMap_R"]
     *               }),
     *    //与服务端交互
     *               themeService=new SuperMap.ThemeService(url, {
     *                   eventListeners: {
     *                       "processCompleted": ThemeCompleted,
     *                        "processFailed": themeFailed
     *                  }
     *              });
     *       themeService.processAsync(themeParameters);
     *   }
     * (end)
     */


    /**
     * APIProperty: graphAxesTextDisplayMode
     * @member SuperMap.ThemeGraph.prototype.graphAxesTextDisplayMode -{SuperMap.GraphAxesTextDisplayMode}
     * @description 统计专题图坐标轴文本显示模式 。默认值 SuperMap.GraphAxesTextDisplayMode.NONE。
     */


    /**
     * APIProperty: graphText
     * @member SuperMap.ThemeGraph.prototype.graphText -{SuperMap.ThemeGraphText}
     * @description 统计图上的文字是否可以见以及文字标注风格。
     */


    /**
     * APIProperty: graphSize
     * @member SuperMap.ThemeGraph.prototype.graphSize -{ThemeGraphSize}
     * @description 用于设置统计符号的最大最小尺寸。
     */


    /**
     * APIProperty: graduatedMode
     * @member SuperMap.ThemeGraph.prototype.graduatedMode -{GraduatedMode}
     * @description 统计图中地理要素的值与图表尺寸间的映射关系（常数、对数、平方根），即分级方式。
     *              默认值为 SuperMap.GraduatedMode.CONSTANT。
     *              分级主要是为了减少制作统计专题图中数据大小之间的差异，使得统计图的视觉效果比较好，同时不同类别之间的比较也还是有意义的。
     *              提供三种分级模式：常数、对数和平方根，对于有值为负数的字段，不可以采用对数和平方根的分级方式。不同的等级方式用于确定符号大小的数值是不相同的。
     */


    /**
     * APIProperty: barWidth
     * @member SuperMap.ThemeGraph.prototype.barWidth -{Number}
     * @description 柱状专题图中每一个柱的宽度。使用地图坐标单位，默认值为0。<br>
     *              只有选择的统计图类型为柱状图（柱状图、三维柱状图、堆叠柱状图、三维堆叠柱状图）时，此项才可设置。
     */
    function ThemeGraph(options) {
        _classCallCheck(this, ThemeGraph);

        var _this = _possibleConstructorReturn(this, (ThemeGraph.__proto__ || Object.getPrototypeOf(ThemeGraph)).call(this, "GRAPH", options));

        _this.barWidth = 0;
        _this.flow = null;
        _this.graduatedMode = _REST.GraduatedMode.CONSTANT;
        _this.graphAxes = null;
        _this.graphSize = null;
        _this.graphSizeFixed = false;
        _this.graphText = null;
        _this.graphType = _REST.ThemeGraphType.AREA;
        _this.graphAxesTextDisplayMode = _REST.GraphAxesTextDisplayMode.NONE;
        _this.items = null;
        _this.memoryKeys = null;
        _this.negativeDisplayed = false;
        _this.offset = null;
        _this.overlapAvoided = true;
        _this.roseAngle = 0;
        _this.startAngle = 0;
        _this.CLASS_NAME = "SuperMap.ThemeGraph";

        var me = _this;
        me.flow = new _ThemeFlow2.default();
        me.graphAxes = new _ThemeGraphAxes2.default();
        me.graphSize = new _ThemeGraphSize2.default();
        me.graphText = new _ThemeGraphText2.default();
        me.offset = new _ThemeOffset2.default();
        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /**
     * APIMethod: destroy
     * @inheritDoc
     */


    /**
     * APIProperty: startAngle
     * @member SuperMap.ThemeGraph.prototype.startAngle -{Number}
     * @description 饼状统计图扇形的起始角度。默认为0度，精确到0.1度，以水平方向为正向。只有选择的统计图类型为饼状图（饼图、三维饼图、玫瑰图、三维玫瑰图）时，此项才可设置。
     */


    /**
     * APIProperty: overlapAvoided
     * @member SuperMap.ThemeGraph.prototype.overlapAvoided -{Boolean}
     * @description 统计图是否采用避让方式显示。<br>
     *              1.对数据集制作统计专题图:当统计图采用避让方式显示时，如果 overlapAvoided 为 true，则在统计图重叠度很大的情况下，
     *              会出现无法完全避免统计图重叠的现象；如果 overlapAvoided 为 false，会过滤掉一些统计图，从而保证所有的统计图均不重叠。<br>
     *              2.对数据集同时制作统计专题图和标签专题图：当统计图不显示子项文本时，标签专题图的标签即使和统计图重叠，两者也都可正常显示；
     *              当统计图显示子项文本时，如果统计图中的子项文本和标签专题图中的标签不重叠，则两者均正常显示；如果重叠，则会过滤掉统计图的子项文本，只显示标签。
     */


    /**
     * APIProperty: negativeDisplayed
     * @member SuperMap.ThemeGraph.prototype.negativeDisplayed -{Boolean}
     * @description 专题图中是否显示属性为负值的数据。true 表示显示；默认为 false 即不显示。
     */


    /**
     * APIProperty: items
     * @member SuperMap.ThemeGraph.prototype.items -{Array<SuperMap.ThemeGraphItem>}
     * @description 统计专题图子项集合。必设字段。
     *              统计专题图可以基于多个变量，反映多种属性，即可以将多个专题变量的值绘制在一个统计图上。每一个专题变量对应的统计图即为一个专题图子项。
     *              对于每个专题图子项可以为其设置标题、风格，甚至可以将该子项再制作成范围分段专题图。
     */


    /**
     * APIProperty: graphType
     * @member SuperMap.ThemeGraph.prototype.graphType -{SuperMap.ThemeGraphType}
     * @description 统计专题图类型。SuperMap 提供了多种类型的统计图，<br>
     *              分别为面积图、阶梯图、折线图、点状图、柱状图、三维柱状图、饼图、三维饼图、玫瑰图、三维玫瑰图、堆叠柱状图、三维堆叠柱状图、环状图。默认为面积图。
     */


    /**
     * APIProperty: graphSizeFixed
     * @member SuperMap.ThemeGraph.prototype.graphSizeFixed -{Boolean}
     * @description 缩放地图时统计图符号是否固定大小。默认值为 false，即统计图符号将随地图缩放。
     */


    /**
     * APIProperty: graphAxes
     * @member SuperMap.ThemeGraph.prototype.graphAxes -{ThemeGraphAxes}
     * @description 用于设置统计图中坐标轴样式相关信息，如坐标轴颜色、是否显示、坐标文本样式等。
     */


    /**
     * APIProperty: flow
     * @member SuperMap.ThemeGraph.prototype.flow -{SuperMap.ThemeFlow}
     * @description 统计专题图流动显示与牵引线设置。
     *              通过该字段可以设置统计符号是否流动显示和牵引线风格。
     */


    _createClass(ThemeGraph, [{
        key: 'destroy',
        value: function destroy() {
            _get(ThemeGraph.prototype.__proto__ || Object.getPrototypeOf(ThemeGraph.prototype), 'destroy', this).call(this);
            var me = this;
            me.barWidth = null;
            if (me.flow) {
                me.flow.destroy();
                me.flow = null;
            }
            me.graduatedMode = null;
            if (me.graphAxes) {
                me.graphAxes.destroy();
                me.graphAxes = null;
            }
            if (me.graphSize) {
                me.graphSize.destroy();
                me.graphSize = null;
            }
            me.graphSizeFixed = null;
            if (me.graphText) {
                me.graphText.destroy();
                me.graphText = null;
            }
            me.graphType = null;
            if (me.items) {
                for (var i = 0, items = me.items, len = items.length; i < len; i++) {
                    items[i].destroy();
                }
                me.items = null;
            }
            me.memoryKeys = null;
            me.negativeDisplayed = null;
            if (me.offset) {
                me.offset.destroy();
                me.offset = null;
            }
            me.overlapAvoided = null;
            me.roseAngle = null;
            me.startAngle = null;
            me.graphAxesTextDisplayMode = null;
        }

        /*
         * Method: toJSON
         * 将SuperMap.ThemeGraph对象转化为json字符串。
         *
         * Returns:
         * {String} 返回转换后的 JSON 字符串。
         */

    }, {
        key: 'toJSON',
        value: function toJSON() {
            return _SuperMap2.default.Util.toJSON(this.toServerJSONObject());
        }

        /*
         * Method: toServerJSONObject
         * 转换成对应的 JSON 格式对象。
         */

    }, {
        key: 'toServerJSONObject',
        value: function toServerJSONObject() {
            var obj = {};
            obj.type = this.type;
            if (this.graphText) {
                obj.graphTextDisplayed = this.graphText.graphTextDisplayed;
                obj.graphTextFormat = this.graphText.graphTextFormat;
                obj.graphTextStyle = this.graphText.graphTextStyle;
            }
            if (this.flow) {
                obj.flowEnabled = this.flow.flowEnabled;
                obj.leaderLineDisplayed = this.flow.leaderLineDisplayed;
                obj.leaderLineStyle = this.flow.leaderLineStyle;
            }
            if (this.graphAxes) {
                obj.axesColor = this.graphAxes.axesColor;
                obj.axesDisplayed = this.graphAxes.axesDisplayed;
                obj.axesGridDisplayed = this.graphAxes.axesGridDisplayed;
                obj.axesTextDisplayed = this.graphAxes.axesTextDisplayed;
                obj.axesTextStyle = this.graphAxes.axesTextStyle;
            }
            if (this.graphSize) {
                obj.maxGraphSize = this.graphSize.maxGraphSize;
                obj.minGraphSize = this.graphSize.minGraphSize;
            }
            if (this.offset) {
                obj.offsetFixed = this.offset.offsetFixed;
                obj.offsetX = this.offset.offsetX;
                obj.offsetY = this.offset.offsetY;
            }
            obj.barWidth = this.barWidth;
            obj.graduatedMode = this.graduatedMode;
            obj.graphSizeFixed = this.graphSizeFixed;
            obj.graphType = this.graphType;
            obj.graphAxesTextDisplayMode = this.graphAxesTextDisplayMode;
            obj.items = this.items;
            obj.memoryKeys = this.memoryKeys;
            obj.negativeDisplayed = this.negativeDisplayed;
            obj.overlapAvoided = this.overlapAvoided;
            obj.roseAngle = this.roseAngle;
            obj.startAngle = this.startAngle;
            return obj;
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            var res = new ThemeGraph();
            var itemsG = obj.items;
            var len = itemsG ? itemsG.length : 0;
            _SuperMap2.default.Util.copy(res, obj);
            res.items = [];
            res.flow = _ThemeFlow2.default.fromObj(obj);
            res.graphAxes = _ThemeGraphAxes2.default.fromObj(obj);
            res.graphSize = _ThemeGraphSize2.default.fromObj(obj);
            res.graphText = _ThemeGraphText2.default.fromObj(obj);
            res.offset = _ThemeOffset2.default.fromObj(obj);
            for (var i = 0; i < len; i++) {
                res.items.push(_ThemeGraphItem2.default.fromObj(itemsG[i]));
            }
            return res;
        }
    }]);

    return ThemeGraph;
}(_Theme3.default);

exports.default = ThemeGraph;


_SuperMap2.default.ThemeGraph = ThemeGraph;

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _Theme2 = __webpack_require__(12);

var _Theme3 = _interopRequireDefault(_Theme2);

var _ThemeRangeItem = __webpack_require__(244);

var _ThemeRangeItem2 = _interopRequireDefault(_ThemeRangeItem);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.ThemeRange
 * @description 范围分段专题图。
 *              范围分段专题图是按照指定的分段方法（如：等距离分段法）对字段的属性值进行分段，使用不同的颜色或符号（线型、填充）表示不同范围段落的属性值在整体上的分布情况，体现区域的差异。
 *              在分段专题图中，专题值按照某种分段方式被分成多个范围段，要素根据各自的专题值被分配到其中一个范围段中，在同一个范围段中的要素使用相同的颜色，填充，符号等风格进行显示。
 *              分段专题图所基于的专题变量必须为数值型，分段专题图一般用来反映连续分布现象的数量或程度特征，如降水量的分布，土壤侵蚀强度的分布等。
 * @augments SuperMap.Theme
 * @param options - {Object} 可选参数。如：<br>
 *        items - {Array<SuperMap.ThemeRangeItem>} 分段专题图子项数组。<br>
 *        rangeExpression - {String} 分段字段表达式。<br>
 *        rangeMode - {SuperMap.RangeMode} 分段专题图的分段模式。<br>
 *        rangeParameter - {Number} 分段参数。<br>
 *        colorGradientType - {SuperMap.ColorGradientType} 渐变颜色枚举类。<br>
 *        memoryData - {SuperMap.ThemeMemoryData} 专题图内存数据。
 */
var ThemeRange = function (_Theme) {
    _inherits(ThemeRange, _Theme);

    /*
     * Constructor: SuperMap.ThemeRange
     * 范围分段专题图构造函数。
     */


    /**
     * APIProperty: rangeParameter
     * @member SuperMap.ThemeRange.prototype.rangeParameter -{Number}
     * @description 分段参数。<br>
     *              当分段模式为等距离分段法，平方根分段，对数分段法，计数分段法其中一种模式时，该参数用于设置分段个数，必设；当分段模式为标准差分段法时，
     *              该参数不起作用；当分段模式为自定义距离时，该参数用于设置自定义距离。默认值为 -1。
     */


    /**
     * APIProperty: rangeExpression
     * @member SuperMap.ThemeRange.prototype.rangeExpression -{String}
     * @description 分段字段表达式。<br>
     *              由于范围分段专题图基于各种分段方法根据一定的距离进行分段，因而范围分段专题图所基于的字段值的数据类型必须为数值型。对于字段表达式，只能为数值型的字段间的运算。必设字段。
     */


    /*
     * Property: precision
     * {String}
     */
    function ThemeRange(options) {
        _classCallCheck(this, ThemeRange);

        var _this = _possibleConstructorReturn(this, (ThemeRange.__proto__ || Object.getPrototypeOf(ThemeRange)).call(this, "RANGE", options));

        _this.precision = '1.0E-12';
        _this.items = null;
        _this.rangeExpression = null;
        _this.rangeMode = _REST.RangeMode.EQUALINTERVAL;
        _this.rangeParameter = 0;
        _this.colorGradientType = _REST.ColorGradientType.YELLOW_RED;
        _this.CLASS_NAME = "SuperMap.ThemeRange";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /**
     * APIMethod: destroy
     * @inheritDoc
     */


    /**
     * APIProperty: colorGradientType
     * @member SuperMap.ThemeRange.prototype.colorGradientType -{SuperMap.ColorGradientType}
     * @description 渐变颜色枚举类 <br>
     *              渐变色是由起始色根据一定算法逐渐过渡到终止色的一种混合型颜色。
     *              该类作为单值专题图参数类、分段专题图参数类的属性，负责设置单值专题图、分段专题图的配色方案，在默认情况下专题图所有子项会根据这个配色
     *              方案完成填*充。但如果为某几个子项的风格进行单独设置后（设置了 SuperMap.ThemeUniqueItem 或 SuperMap.ThemeRangeItem 类中Style属性），
     *              该配色方案对于这几个子项将不起作用。
     */


    /**
     * APIProperty: rangeMode
     * @member SuperMap.ThemeRange.prototype.rangeMode -{RangeMode}
     * @description 分段专题图的分段模式。<br>
     *              默认值为 SuperMap.RangeMode.EQUALINTERVAL（等距离分段）。
     *              在分段专题图中，作为专题变量的字段或表达式的值按照某种分段方式被分成多个范围段。
     *              目前 SuperMap 提供的分段方式包括：等距离分段法、平方根分段法、标准差分段法、对数分段法、等计数分段法和自定义距离法，
     *              显然这些分段方法根据一定的距离进行分段，因而范围分段专题图所基于的专题变量必须为数值型。
     */


    /**
     * APIProperty: items
     * @member SuperMap.ThemeRange.prototype.items -{Array<SuperMap.ThemeRangeItem>}
     * @description 分段专题图子项数组。<br>
     *              在分段专题图中，字段值按照某种分段模式被分成多个范围段，每个范围段即为一个子项，同一范围段的要素属于同一个分段专题图子项。<br>
     *              每个子项都有其分段起始值、终止值、名称和风格等。每个分段所表示的范围为[start, end)。<br>
     *              如果设置了范围分段模式和分段数，则会自动计算每段的范围[start, end)，故无需设置[start, end)；当然可以设置，那么结果就会按照您设置的值对分段结果进行调整。
     */


    _createClass(ThemeRange, [{
        key: 'destroy',
        value: function destroy() {
            _get(ThemeRange.prototype.__proto__ || Object.getPrototypeOf(ThemeRange.prototype), 'destroy', this).call(this);
            var me = this;
            if (me.items) {
                if (me.items.length > 0) {
                    for (var item in me.items) {
                        me.items[item].destroy();
                        me.items[item] = null;
                    }
                }
                me.items = null;
            }
            me.rangeExpression = null;
            me.rangeMode = null;
            me.rangeParameter = null;
            me.colorGradientType = null;
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            if (!obj) return;
            var res = new ThemeRange();
            _SuperMap2.default.Util.copy(res, obj);
            var itemsR = obj.items;
            var len = itemsR ? itemsR.length : 0;
            res.items = [];
            for (var i = 0; i < len; i++) {
                res.items.push(_ThemeRangeItem2.default.fromObj(itemsR[i]));
            }
            return res;
        }
    }]);

    return ThemeRange;
}(_Theme3.default);

exports.default = ThemeRange;


_SuperMap2.default.ThemeRange = ThemeRange;

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _Theme2 = __webpack_require__(12);

var _Theme3 = _interopRequireDefault(_Theme2);

var _ServerStyle = __webpack_require__(9);

var _ServerStyle2 = _interopRequireDefault(_ServerStyle);

var _ThemeUniqueItem = __webpack_require__(246);

var _ThemeUniqueItem2 = _interopRequireDefault(_ThemeUniqueItem);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.ThemeUnique
 * @description 单值专题图。<br>
 *              单值专题图是利用不同的颜色或符号（线型、填充）表示图层中某一属性信息的不同属性值，属性值相同的要素具有相同的渲染风格。单值专题图多用于具有分类属性的地图上，
 *              比如土壤类型分布图、土地利用图、行政区划图等。单值专题图着重表示现象质的差别，一般不表示数量的特征。尤其是有交叉或重叠现象时，此类不推荐使用，例如：民族分布区等。
 * @augments SuperMap.Theme
 * @param options - {Object} 可选参数。如：<br>
 *        items - {Array<SuperMap.ThemeUniqueItem>} 单值专题图子项类数组。<br>
 *        uniqueExpression - {String} 用于制作单值专题图的字段或字段表达式。<br>
 *        defaultStyle - {SuperMap.ServerStyle} 未参与单值专题图制作的对象的显示风格。<br>
 *        colorGradientType - {SuperMap.ColorGradientType} 渐变颜色枚举类。<br>
 *        memoryData - {SuperMap.ThemeMemoryData} 专题图内存数据。
 */
var ThemeUnique = function (_Theme) {
    _inherits(ThemeUnique, _Theme);

    /*
     * Constructor: SuperMap.ThemeUnique
     * 单值专题图构造函数。
     */


    /**
     * APIProperty: uniqueExpression
     * @member SuperMap.ThemeUnique,prototype.uniqueExpression -{String}
     * @description 用于制作单值专题图的字段或字段表达式。<br>
     *              该字段值的数据类型可以为数值型或字符型。如果设置字段表达式，只能是相同数据类型字段间的运算。必设字段。
     */


    /**
     * APIProperty: defaultStyle
     * @member SuperMap.ThemeUnique,prototype.defaultStyle -{SuperMap.ServerStyle}
     * @description 未参与单值专题图制作的对象的显示风格。<br>
     *              通过单值专题图子项数组 （items）可以指定某些要素参与单值专题图制作，对于那些没有被包含的要素，即不参加单值专题表达的要素，使用该风格显示。
     */
    function ThemeUnique(options) {
        _classCallCheck(this, ThemeUnique);

        var _this = _possibleConstructorReturn(this, (ThemeUnique.__proto__ || Object.getPrototypeOf(ThemeUnique)).call(this, "UNIQUE", options));

        _this.defaultStyle = null;
        _this.items = null;
        _this.uniqueExpression = null;
        _this.colorGradientType = _REST.ColorGradientType.YELLOW_RED;
        _this.CLASS_NAME = "SuperMap.ThemeUnique";

        var me = _this;
        me.defaultStyle = new _ServerStyle2.default();
        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /**
     * APIMethod: destroy
     * @inheritDoc
     */


    /**
     * APIProperty: colorGradientType
     * @member SuperMap.ThemeUnique,prototype.colorGradientType -{SuperMap.ColorGradientType}
     * @description 渐变颜色枚举类。<br>
     *              渐变色是由起始色根据一定算法逐渐过渡到终止色的一种混合型颜色。
     *              该类作为单值专题图参数类、分段专题图参数类的属性，负责设置单值专题图、分段专题图的配色方案，在默认情况下专题图所有子项会根据这个配色方案完成填充。
     *              但如果为某几个子项的风格进行单独设置后（设置了 ThemeUniqueItem 或 ThemeRangeItem 类中Style属性），
     *              该配色方案对于这几个子项将不起作用。
     */


    /**
     * APIProperty: items
     * @member SuperMap.ThemeUnique,prototype.items -{Array<SuperMap.ThemeUniqueItem>}
     * @description 单值专题图子项类数组。<br>
     *              单值专题图是将专题值相同的要素归为一类，为每一类设定一种渲染风格，其中每一类就是一个专题图子项。比如，利用单值专题图制作行政区划图，
     *              Name 字段代表省/直辖市名，该字段用来做专题变量，如果该字段的字段值总共有5种不同值，则该行政区划图有5个专题图子项。
     */


    _createClass(ThemeUnique, [{
        key: 'destroy',
        value: function destroy() {
            _get(ThemeUnique.prototype.__proto__ || Object.getPrototypeOf(ThemeUnique.prototype), 'destroy', this).call(this);
            var me = this;
            me.uniqueExpression = null;
            me.colorGradientType = null;
            if (me.items) {
                if (me.items.length > 0) {
                    for (var item in me.items) {
                        me.items[item].destroy();
                        me.items[item] = null;
                    }
                }
                me.items = null;
            }

            if (me.defaultStyle) {
                me.defaultStyle.destroy();
                me.defaultStyle = null;
            }
        }

        /**
         * Method: toServerJSONObject
         * 转换成对应的 JSON 格式对象。
         */

    }, {
        key: 'toServerJSONObject',
        value: function toServerJSONObject() {
            var obj = {};
            obj = _SuperMap2.default.Util.copyAttributes(obj, this);
            if (obj.defaultStyle) {
                if (obj.defaultStyle.toServerJSONObject) {
                    obj.defaultStyle = obj.defaultStyle.toServerJSONObject();
                }
            }
            if (obj.items) {
                var items = [],
                    len = obj.items.length;
                for (var i = 0; i < len; i++) {
                    items.push(obj.items[i].toServerJSONObject());
                }
                obj.items = items;
            }
            return obj;
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            var res = new ThemeUnique();
            var uItems = obj.items;
            var len = uItems ? uItems.length : 0;
            _SuperMap2.default.Util.extend(res, obj);
            res.items = [];
            res.defaultStyle = new _ServerStyle2.default.fromJson(obj.defaultStyle);
            for (var i = 0; i < len; i++) {
                res.items.push(new _ThemeUniqueItem2.default.fromObj(uItems[i]));
            }
            return res;
        }
    }]);

    return ThemeUnique;
}(_Theme3.default);

exports.default = ThemeUnique;


_SuperMap2.default.ThemeUnique = ThemeUnique;

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(283);

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _StyleMap = __webpack_require__(279);

var _DeafultCanvasStyle = __webpack_require__(278);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

_olDebug2.default.supermap = _olDebug2.default.supermap || {};

var StyleUtils = function () {
    function StyleUtils() {
        _classCallCheck(this, StyleUtils);
    }

    _createClass(StyleUtils, null, [{
        key: 'getValidStyleFromLayerInfo',
        value: function getValidStyleFromLayerInfo(layerInfo, feature, url) {
            var type = feature.getGeometry().getType().toUpperCase(),
                shader = layerInfo.layerStyle,
                style = this.getDefaultStyle(type);
            if ((type === "POINT" || type === 'MULTIPOINT') && !feature.getProperties().textStyle && layerInfo.type !== 'LABEL' && !feature.getProperties().TEXT_FEATURE_CONTENT) {
                if (shader) {
                    var symbolParameters = {
                        "transparent": true,
                        "resourceType": "SYMBOLMARKER",
                        "picWidth": Math.ceil(shader.markerSize * _SuperMap2.default.DOTS_PER_INCH * _SuperMap2.default.INCHES_PER_UNIT["mm"]),
                        "picHeight": Math.ceil(shader.markerSize * _SuperMap2.default.DOTS_PER_INCH * _SuperMap2.default.INCHES_PER_UNIT["mm"]),
                        "style": JSON.stringify(shader)
                    };
                    var imageUrl = _SuperMap2.default.Util.urlAppend(url + "/symbol.png", _SuperMap2.default.Util.getParameterString(symbolParameters));
                    style.pointFile = imageUrl;
                    return new _olDebug2.default.style.Style({
                        image: new _olDebug2.default.style.Icon({
                            src: style.pointFile
                        })
                    });
                }
                return this.toOLPointStyle(style);
            } else if ((type === "POINT" || type === 'MULTIPOINT') && (feature.getProperties().textStyle || layerInfo.type === 'LABEL' || feature.getProperties().TEXT_STYLE_INFO)) {
                style = this.getDefaultStyle('TEXT');
                if (feature.getProperties().textStyle) {
                    shader = feature.getProperties().textStyle;
                }
                if (feature.getProperties().TEXT_STYLE_INFO) {
                    shader = JSON.parse(feature.getProperties().TEXT_STYLE_INFO).textStyle;
                }
                if (shader && shader !== "{}") {
                    var fontStr = "";
                    //设置文本是否倾斜
                    style.fontStyle = !!shader.italic ? "italic" : "normal";
                    //设置文本是否使用粗体
                    style.fontWeight = shader.bold ? shader.fontWeight : "normal";
                    //设置文本的尺寸（对应fontHeight属性）和行高，行高iserver不支持，默认5像素
                    //固定大小的时候单位是毫米
                    var text_h = shader.fontHeight * _SuperMap2.default.DOTS_PER_INCH * _SuperMap2.default.INCHES_PER_UNIT["mm"] * 0.85; //毫米转像素,服务端的字体貌似要稍微小一点
                    style.fontSize = text_h + "px";

                    //设置文本字体类型
                    //在桌面字体钱加@时为了解决对联那种形式，但是在canvas不支持，并且添加了@会导致
                    //字体大小被固定，这里需要去掉
                    if (shader.fontName.indexOf("@")) {
                        fontStr = shader.fontName.replace(/@/g, "");
                    } else {
                        fontStr = shader.fontName;
                    }
                    style.fontFamily = fontStr;
                    style.textHeight = text_h;

                    //设置对齐方式
                    var alignStr = shader.align.replace(/TOP|MIDDLE|BASELINE|BOTTOM/, "");
                    style.textAlign = alignStr.toLowerCase();
                    var baselineStr = shader.align.replace(/LEFT|RIGHT|CENTER/, "");
                    if (baselineStr === "BASELINE") baselineStr = "alphabetic";
                    style.textBaseline = baselineStr.toLowerCase();

                    /*//首先判定是否需要绘制阴影，如果需要绘制，阴影应该在最下面
                     if(shader.shadow)
                     {
                       //桌面里面的阴影没有做模糊处理，这里统一设置为0,
                     style.shadowBlur=0;
                     //和桌面统一，往右下角偏移阴影，默认3像素
                     style.shadowOffsetX=3;
                     style.shadowOffsetY=3;
                     //颜色取一个灰色，调成半透明
                     style.shadowColor="rgba(50,50,50,0.5)";
                     }else{
                     style.shadowOffsetX=0;
                     style.shadowOffsetY=0;
                     }*/
                    style.haloRadius = shader.outline ? shader.outlineWidth : 0;
                    style.backColor = "rgba(" + shader.backColor.red + "," + shader.backColor.green + "," + shader.backColor.blue + ",1)";
                    style.foreColor = "rgba(" + shader.foreColor.red + "," + shader.foreColor.green + "," + shader.foreColor.blue + ",1)";
                    style.rotation = shader.rotation;
                }
                var text;
                if (feature.getProperties().textStyle && feature.getProperties().texts) {
                    text = feature.getProperties().texts[0];
                }
                if (layerInfo.type === 'LABEL') {
                    text = feature.getProperties().attributes ? feature.getProperties().attributes[layerInfo.textField] : feature.getProperties()[layerInfo.textField];
                }
                if (feature.getProperties().TEXT_FEATURE_CONTENT) {
                    text = feature.getProperties().TEXT_FEATURE_CONTENT;
                }
                if (!text) {
                    return this.toOLPointStyle(this.getDefaultStyle('POINT'));
                }
                return this.toOLTextStyle(style, text);
            } else if (shader) {
                //目前只实现桌面系统默认的几种symbolID，非系统默认的面用颜色填充替代，线则用实线来替代
                var fillSymbolID = shader["fillSymbolID"] > 7 ? 0 : shader["fillSymbolID"];
                var lineSymbolID = shader["lineSymbolID"] > 5 ? 0 : shader["lineSymbolID"];
                for (var attr in shader) {
                    var obj = _StyleMap.StyleMap.ServerStyleMap[attr];
                    var canvasStyle = obj.canvasStyle;
                    if (canvasStyle && canvasStyle != "") {
                        switch (obj.type) {
                            case "number":
                                var value = shader[attr];
                                if (obj.unit) {
                                    //将单位转换为像素单位
                                    value = value * _SuperMap2.default.DOTS_PER_INCH * _SuperMap2.default.INCHES_PER_UNIT[obj.unit] * 2.5;
                                }
                                style[canvasStyle] = value;
                                break;
                            case "color":
                                var color = shader[attr];
                                var backColor = shader["fillBackColor"];
                                var value,
                                    alpha = 1;
                                if (canvasStyle === "fillStyle") {
                                    if (fillSymbolID === 0 || fillSymbolID === 1) {
                                        //当fillSymbolID为0时，用颜色填充，为1是无填充，即为透明填充，alpha通道为0
                                        alpha = 1 - fillSymbolID;
                                        value = "rgba(" + color.red + "," + color.green + "," + color.blue + "," + alpha + ")";
                                    } else {
                                        //当fillSymbolID为2~7时，用的纹理填充,但要按照前景色修改其颜色
                                        try {
                                            var tempCvs = document.createElement("canvas");
                                            tempCvs.height = 8;
                                            tempCvs.width = 8;
                                            var tempCtx = tempCvs.getContext("2d");
                                            var image = new Image();
                                            if (this.layer && this.layer.fillImages) {
                                                tempCtx.drawImage(this.layer.fillImages["System " + fillSymbolID], 0, 0);
                                            }
                                            var imageData = tempCtx.getImageData(0, 0, tempCvs.width, tempCvs.height);
                                            var pix = imageData.data;
                                            for (var i = 0, len = pix.length; i < len; i += 4) {
                                                var r = pix[i],
                                                    g = pix[i + 1],
                                                    b = pix[i + 2];
                                                //将符号图片中的灰色或者黑色的部分替换为前景色，其余为后景色
                                                if (r < 225 && g < 225 && b < 225) {
                                                    pix[i] = color.red;
                                                    pix[i + 1] = color.green;
                                                    pix[i + 2] = color.blue;
                                                } else if (backColor) {
                                                    pix[i] = backColor.red;
                                                    pix[i + 1] = backColor.green;
                                                    pix[i + 2] = backColor.blue;
                                                }
                                            }
                                            tempCtx.putImageData(imageData, 0, 0);
                                            image.src = tempCvs.toDataURL();

                                            if (this.context) {
                                                value = this.context.createPattern(image, "repeat");
                                            }
                                        } catch (e) {
                                            throw Error(e.message);
                                        }
                                    }
                                } else if (canvasStyle === "strokeStyle") {
                                    if (lineSymbolID === 0 || lineSymbolID === 5) {
                                        //对于lineSymbolID为0时，线为实线，为lineSymbolID为5时，为无线模式，即线为透明，即alpha通道为0
                                        alpha = lineSymbolID === 0 ? 1 : 0;
                                    } else {
                                        //以下几种linePattern分别模拟了桌面的SymbolID为1~4几种符号的linePattern
                                        var linePattern = [1, 0];
                                        switch (lineSymbolID) {
                                            case 1:
                                                linePattern = [9.7, 3.7];
                                                break;
                                            case 2:
                                                linePattern = [3.7, 3.7];
                                                break;
                                            case 3:
                                                linePattern = [9.7, 3.7, 2.3, 3.7];
                                                break;
                                            case 4:
                                                linePattern = [9.7, 3.7, 2.3, 3.7, 2.3, 3.7];
                                                break;
                                            default:
                                                break;
                                        }
                                        style.lineDasharray = linePattern;
                                    }
                                    value = "rgba(" + color.red + "," + color.green + "," + color.blue + "," + alpha + ")";
                                }
                                style[canvasStyle] = value;
                                break;
                            default:
                                break;
                        }
                    }
                }
            }
            if (type === 'LINESTRING' || type === 'MULTILINESTRING') {
                return this.toOLLineStyle(style);
            }
            if (type === 'POLYGON' || type === 'MULTIPOLYGON') {
                return this.toOLPolygonStyle(style);
            }
        }
    }, {
        key: 'getStyleFromCarto',
        value: function getStyleFromCarto(zoom, scale, shader, feature, fromServer, url) {
            var type = feature.getGeometry().getType().toUpperCase(),
                attributes = {},
                style = this.getDefaultStyle(type);
            attributes.FEATUREID = feature.getProperties().id;
            attributes.SCALE = scale;
            var cartoStyleMap = _StyleMap.StyleMap.CartoStyleMap[type];
            var fontSize, fontName;
            if (shader) {
                for (var i = 0, len = shader.length; i < len; i++) {
                    var _shader = shader[i];
                    var prop = cartoStyleMap[_shader.property];
                    var value = _shader.getValue(attributes, zoom, true);
                    if (value !== null && prop) {
                        if (prop === "fontSize") {
                            if (fromServer) {
                                value *= 0.8;
                            }
                            //斜杠后面为行间距，默认为0.5倍行间距
                            fontSize = value + "px";
                            style.fontSize = fontSize;
                        } else if (prop === "fontName") {
                            fontName = value;
                        } else {
                            if (prop === "globalCompositeOperation") {
                                value = _StyleMap.StyleMap.CartoCompOpMap[value];
                                if (!value || value === "") continue;
                            } else if (fromServer && prop === 'pointFile') {
                                value = url + '/tileFeature/symbols/' + value.replace(/(___)/gi, '@');
                            }
                            if (prop === 'lineWidth' && value < 1) {
                                value = Math.ceil(value);
                            }
                            style[prop] = value;
                        }
                    }
                }
            }
            if (feature.getProperties().type === 'TEXT') {
                return this.toOLTextStyle(style, feature.getProperties().texts[0]);
            }
            if (type === 'POINT' || type === 'MULTIPOINT') {
                return this.toOLPointStyle(style);
            }
            if (type === 'LINESTRING' || type === 'MULTILINESTRING') {
                return this.toOLLineStyle(style);
            }
            if (type === 'POLYGON' || type === 'MULTIPOLYGON') {
                return this.toOLPolygonStyle(style);
            }
        }
    }, {
        key: 'toOLPointStyle',
        value: function toOLPointStyle(style) {
            if (style.pointFile !== '') {
                return new _olDebug2.default.style.Style({
                    image: new _olDebug2.default.style.Icon({
                        src: style.pointFile
                    })
                });
            }
            return new _olDebug2.default.style.Style({
                image: new _olDebug2.default.style.Circle({
                    radius: style.pointRadius,
                    fill: new _olDebug2.default.style.Fill({
                        color: style.fillStyle
                    }),
                    stroke: new _olDebug2.default.style.Stroke({
                        color: style.pointHaloColor,
                        width: style.pointHaloRadius
                    })
                })
            });
        }
    }, {
        key: 'toOLLineStyle',
        value: function toOLLineStyle(style) {
            return new _olDebug2.default.style.Style({
                stroke: new _olDebug2.default.style.Stroke({
                    color: style.strokeStyle,
                    width: style.lineWidth,
                    lineCap: style.lineCap,
                    lineDash: style.lineDasharray,
                    lineDashOffset: style.lineDashOffset,
                    lineJoin: style.lineJoin,
                    miterLimit: style.miterLimit
                })
            });
        }
    }, {
        key: 'toOLPolygonStyle',
        value: function toOLPolygonStyle(style) {
            var fill = new _olDebug2.default.style.Fill({
                color: style.fillStyle
            });
            var stroke = new _olDebug2.default.style.Stroke({
                color: style.strokeStyle,
                width: style.lineWidth,
                lineCap: style.lineCap,
                lineDash: style.lineDasharray,
                lineDashOffset: style.lineDashOffset,
                lineJoin: style.lineJoin,
                miterLimit: style.miterLimit
            });
            return new _olDebug2.default.style.Style({
                fill: fill,
                stroke: stroke
            });
        }
    }, {
        key: 'toOLTextStyle',
        value: function toOLTextStyle(style, text) {
            return new _olDebug2.default.style.Style({
                text: new _olDebug2.default.style.Text({
                    font: (style.fontStyle || '') + ' ' + (style.fontWeight || '') + ' ' + (style.fontSize || '') + ' ' + style.fontFamily,
                    text: text,
                    textAlign: style.textAlign,
                    textBaseline: style.textBaseline,
                    fill: new _olDebug2.default.style.Fill({
                        color: style.foreColor
                    }),
                    stroke: new _olDebug2.default.style.Stroke({
                        color: style.backColor
                    }),
                    offsetX: style.offsetX,
                    offsetY: style.offsetY
                })
            });
        }
    }, {
        key: 'dashStyle',
        value: function dashStyle(style, widthFactor) {
            if (!style) return [];
            var w = style.strokeWidth * widthFactor;
            var str = style.strokeDashstyle;
            switch (str) {
                case 'solid':
                    return [];
                case 'dot':
                    return [1, 4 * w];
                case 'dash':
                    return [4 * w, 4 * w];
                case 'dashdot':
                    return [4 * w, 4 * w, 1, 4 * w];
                case 'longdash':
                    return [8 * w, 4 * w];
                case 'longdashdot':
                    return [8 * w, 4 * w, 1, 4 * w];
                default:
                    if (!str) return [];
                    if (_SuperMap2.default.Util.isArray(str)) return str;
                    str = _SuperMap2.default.String.trim(str).replace(/\s+/g, ",");
                    return str.replace(/\[|\]/gi, "").split(",");
            }
        }
    }, {
        key: 'getStyleFromiPortalMarker',
        value: function getStyleFromiPortalMarker(icon) {
            if (icon.indexOf("./") == 0) {
                return null;
            }
            //兼容iportal示例的问题
            if (icon.indexOf("http://support.supermap.com.cn:8092/static/portal") == 0) {
                icon = icon.replace("http://support.supermap.com.cn:8092/static/portal", "http://support.supermap.com.cn:8092/apps/viewer/static");
            }
            return new _olDebug2.default.style.Style({
                image: new _olDebug2.default.style.Icon({
                    src: icon,
                    opacity: 1,
                    size: [48, 43],
                    anchor: [0.5, 1]
                })
            });
        }
    }, {
        key: 'getStyleFromiPortalStyle',
        value: function getStyleFromiPortalStyle(iPortalStyle, type, fStyle) {
            var featureStyle = fStyle ? JSON.parse(fStyle) : null;
            var me = this;
            if (type === 'Point' || type === 'MultiPoint') {
                var pointStyle = featureStyle || iPortalStyle.pointStyle;
                if (pointStyle.externalGraphic) {
                    if (pointStyle.externalGraphic.indexOf("./") == 0) {
                        return null;
                    }
                    //兼容iportal示例的问题
                    if (pointStyle.externalGraphic.indexOf("http://support.supermap.com.cn:8092/static/portal") == 0) {
                        pointStyle.externalGraphic = pointStyle.externalGraphic.replace("http://support.supermap.com.cn:8092/static/portal", "http://support.supermap.com.cn:8092/apps/viewer/static");
                    }
                    return new _olDebug2.default.style.Style({
                        image: new _olDebug2.default.style.Icon({
                            src: pointStyle.externalGraphic,
                            opacity: pointStyle.graphicOpacity,
                            size: [pointStyle.graphicWidth, pointStyle.graphicHeight]
                            //anchor: [-pointStyle.graphicXOffset / pointStyle.graphicWidth, -pointStyle.graphicYOffset / pointStyle.graphicHeight]
                        })
                    });
                }
                return new _olDebug2.default.style.Style({
                    image: new _olDebug2.default.style.Circle({
                        fill: new _olDebug2.default.style.Fill({
                            color: me.hexToRgba(pointStyle.fillColor, pointStyle.fillOpacity)
                        }),
                        stroke: new _olDebug2.default.style.Stroke({
                            color: me.hexToRgba(pointStyle.strokeColor, pointStyle.strokeOpacity),
                            lineCap: pointStyle.strokeLineCap,
                            lineDash: this.dashStyle(pointStyle, 1),
                            width: pointStyle.strokeWidth
                        }),
                        radius: pointStyle.pointRadius
                    })
                });
            }
            if (type === 'LineString' || type === 'MultiLineString' || type === 'Box') {
                var lineStyle = featureStyle || iPortalStyle.lineStyle;
                return new _olDebug2.default.style.Style({
                    stroke: new _olDebug2.default.style.Stroke({
                        color: me.hexToRgba(lineStyle.strokeColor, lineStyle.strokeOpacity),
                        lineCap: lineStyle.strokeLineCap,
                        lineDash: this.dashStyle(lineStyle, 1),
                        width: lineStyle.strokeWidth
                    })
                });
            }
            if (type === 'Polygon' || type === 'MultiPolygon') {
                var polygonStyle = featureStyle || iPortalStyle.polygonStyle;
                return new _olDebug2.default.style.Style({
                    fill: new _olDebug2.default.style.Fill({
                        color: me.hexToRgba(polygonStyle.fillColor, polygonStyle.fillOpacity)
                    }),
                    stroke: new _olDebug2.default.style.Stroke({
                        color: me.hexToRgba(polygonStyle.strokeColor, polygonStyle.strokeOpacity),
                        lineCap: polygonStyle.strokeLineCap,
                        lineDash: this.dashStyle(polygonStyle, 1),
                        width: polygonStyle.strokeWidth
                    })
                });
            }
        }
    }, {
        key: 'hexToRgba',
        value: function hexToRgba(hex, opacity) {
            var color = [],
                rgba = [];
            hex = hex.replace(/#/, "");
            if (hex.length == 3) {
                var tmp = [];
                for (var i = 0; i < 3; i++) {
                    tmp.push(hex.charAt(i) + hex.charAt(i));
                }
                hex = tmp.join("");
            }
            for (var i = 0; i < 6; i += 2) {
                color[i] = "0x" + hex.substr(i, 2);
                rgba.push(parseInt(Number(color[i])));
            }
            rgba.push(opacity);
            return "rgba(" + rgba.join(",") + ")";
        }
    }, {
        key: 'getDefaultStyle',
        value: function getDefaultStyle(type) {
            var style = style || {};
            var canvasStyle = _DeafultCanvasStyle.DeafultCanvasStyle[type];
            for (var prop in canvasStyle) {
                var val = canvasStyle[prop];
                style[prop] = val;
            }
            return style;
        }
    }]);

    return StyleUtils;
}();

exports.default = StyleUtils;
;

_olDebug2.default.supermap.StyleUtils = StyleUtils;

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _theme = __webpack_require__(49);

var _theme2 = _interopRequireDefault(_theme);

var _ThemeVector = __webpack_require__(26);

var _ThemeVector2 = _interopRequireDefault(_ThemeVector);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GeoFeature = function (_Theme) {
    _inherits(GeoFeature, _Theme);

    function GeoFeature(name, opt_options) {
        _classCallCheck(this, GeoFeature);

        var _this = _possibleConstructorReturn(this, (GeoFeature.__proto__ || Object.getPrototypeOf(GeoFeature)).call(this, name, opt_options));

        _this.cache = new Object();
        _this.cacheFields = [];
        _this.style = new Object();
        _this.maxCacheCount = 0;
        _this.isCustomSetMaxCacheCount = false;
        _this.nodesClipPixel = 2;
        _this.isHoverAble = false;
        _this.isMultiHover = false;
        _this.isClickAble = true;
        _this.highlightStyle = null;
        _this.isAllowFeatureStyle = false;
        return _this;
    }

    _createClass(GeoFeature, [{
        key: 'destroy',
        value: function destroy() {
            this.maxCacheCount = null;
            this.isCustomSetMaxCacheCount = null;
            this.nodesClipPixel = null;
            this.isHoverAble = null;
            this.isMultiHover = null;
            this.isClickAble = null;
            this.cache = null;
            this.cacheFields = null;
            this.style = null;
            this.highlightStyle = null;
            this.isAllowFeatureStyle = null;
        }
    }, {
        key: 'addFeatures',
        value: function addFeatures(features) {
            //数组
            if (!_SuperMap2.default.Util.isArray(features)) {
                features = [features];
            }
            var event = { features: features };
            this.dispatchEvent({ type: 'beforefeaturesadded', value: event });

            features = event.features;
            var featuresFailAdded = [];
            for (var i = 0, len = features.length; i < len; i++) {
                this.features.push(this.toiClientFeature(features[i]));
            }
            var succeed = featuresFailAdded.length == 0 ? true : false;
            this.dispatchEvent({ type: 'featuresadded', value: { features: featuresFailAdded, succeed: succeed } });
            if (!this.isCustomSetMaxCacheCount) {
                this.maxCacheCount = this.features.length * 5;
            }
            //绘制专题要素
            if (this.renderer) {
                this.redrawThematicFeatures(this.map.getView().calculateExtent());
            }
        }
    }, {
        key: 'removeFeatures',
        value: function removeFeatures(features) {
            this.clearCache();
            _theme2.default.prototype.removeFeatures.apply(this, arguments);
        }
    }, {
        key: 'removeAllFeatures',
        value: function removeAllFeatures() {
            this.clearCache();
            _theme2.default.prototype.removeAllFeatures.apply(this, arguments);
        }
    }, {
        key: 'redrawThematicFeatures',
        value: function redrawThematicFeatures(extent) {
            //获取高亮专题要素对应的用户 id
            var hoverone = this.renderer.getHoverOne();
            var hoverFid = null;
            if (hoverone && hoverone.refDataID) {
                hoverFid = hoverone.refDataID;
            }
            //清除当前所有可视元素
            this.renderer.clearAll();

            var features = this.features;
            var cache = this.cache;
            var cacheFields = this.cacheFields;
            var cmZoom = this.map.getView().getZoom();

            var maxCC = this.maxCacheCount;

            for (var i = 0, len = features.length; i < len; i++) {
                var feature = features[i];
                var feaBounds = feature.geometry.getBounds();

                //剔除当前视图（地理）范围以外的数据
                if (extent) {
                    var bounds = new _SuperMap2.default.Bounds(extent[0], extent[1], extent[2], extent[3]);
                    if (!bounds.intersectsBounds(feaBounds)) continue;
                }

                //缓存字段
                var fields = feature.id + "_zoom_" + cmZoom.toString();

                var thematicFeature;

                //判断专题要素缓存是否存在
                if (cache[fields]) {
                    cache[fields].updateAndAddShapes();
                } else {
                    //如果专题要素缓存不存在，创建专题要素
                    thematicFeature = this.createThematicFeature(features[i]);

                    //检查 thematicFeature 是否有可视化图形
                    if (thematicFeature.getShapesCount() < 1) {
                        continue;
                    }

                    //加入缓存
                    cache[fields] = thematicFeature;
                    cacheFields.push(fields);

                    //缓存数量限制
                    if (cacheFields.length > maxCC) {
                        var fieldsTemp = cacheFields[0];
                        cacheFields.splice(0, 1);
                        delete cache[fieldsTemp];
                    }
                }
            }
            this.renderer.render();

            //地图漫游后，重新高亮图形
            if (hoverFid && this.isHoverAble && this.isMultiHover) {
                var hShapes = this.getShapesByFeatureID(hoverFid);
                this.renderer.updateHoverShapes(hShapes);
            }
        }
    }, {
        key: 'createThematicFeature',
        value: function createThematicFeature(feature) {
            var style = _SuperMap2.default.Util.copyAttributesWithClip(this.style);
            if (feature.style && this.isAllowFeatureStyle === true) {
                style = _SuperMap2.default.Util.copyAttributesWithClip(feature.style);
            }
            //创建专题要素时的可选参数
            var options = {};
            options.nodesClipPixel = this.nodesClipPixel;
            options.isHoverAble = this.isHoverAble;
            options.isMultiHover = this.isMultiHover;
            options.isClickAble = this.isClickAble;
            options.highlightStyle = _SuperMap2.default.Feature.ShapeFactory.transformStyle(this.highlightStyle);
            //将数据转为专题要素（Vector）
            var thematicFeature = new _ThemeVector2.default(feature, this, _SuperMap2.default.Feature.ShapeFactory.transformStyle(style), options);
            //直接添加图形到渲染器
            for (var m = 0; m < thematicFeature.shapes.length; m++) {
                this.renderer.addShape(thematicFeature.shapes[m]);
            }
            return thematicFeature;
        }
    }, {
        key: 'canvasFunctionInternal_',
        value: function canvasFunctionInternal_(extent, resolution, pixelRatio, size, projection) {
            return _theme2.default.prototype.canvasFunctionInternal_.apply(this, arguments);
        }
    }, {
        key: 'clearCache',
        value: function clearCache() {
            this.cache = {};
            this.cacheFields = [];
        }
    }, {
        key: 'clear',
        value: function clear() {
            this.renderer.clearAll();
            this.renderer.refresh();
            this.removeAllFeatures();
            this.clearCache();
        }
    }, {
        key: 'getCacheCount',
        value: function getCacheCount() {
            return this.cacheFields.length;
        }
    }, {
        key: 'setMaxCacheCount',
        value: function setMaxCacheCount(cacheCount) {
            if (!isNaN(cacheCount)) {
                this.maxCacheCount = cacheCount;
                this.isCustomSetMaxCacheCount = true;
            }
        }
    }, {
        key: 'getShapesByFeatureID',
        value: function getShapesByFeatureID(featureID) {
            var list = [];
            var shapeList = this.renderer.getAllShapes();
            if (!featureID) {
                return shapeList;
            }
            for (var i = 0, len = shapeList.length; i < len; i++) {
                var si = shapeList[i];
                if (si.refDataID && featureID === si.refDataID) {
                    list.push(si);
                }
            }
            return list;
        }
    }]);

    return GeoFeature;
}(_theme2.default);

exports.default = GeoFeature;

_olDebug2.default.source.GeoFeature = GeoFeature;

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _Util = __webpack_require__(7);

var _Util2 = _interopRequireDefault(_Util);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _themeFeature = __webpack_require__(277);

var _themeFeature2 = _interopRequireDefault(_themeFeature);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Theme = function (_ol$source$ImageCanva) {
    _inherits(Theme, _ol$source$ImageCanva);

    function Theme(name, opt_options) {
        _classCallCheck(this, Theme);

        var options = opt_options ? opt_options : {};

        function canvasFunctionInternal_(extent, resolution, pixelRatio, size, projection) {
            var mapWidth = Math.round(_olDebug2.default.extent.getWidth(extent) / resolution) * pixelRatio;
            var mapHeight = Math.round(_olDebug2.default.extent.getHeight(extent) / resolution) * pixelRatio;
            var width = this.map.getSize()[0] * pixelRatio;
            var height = this.map.getSize()[1] * pixelRatio;
            this.div.style.width = width + "px";
            this.div.style.height = height + "px";
            this.map.getViewport().appendChild(this.div);
            this.renderer.resize();
            this.map.getViewport().removeChild(this.div);
            this.redrawThematicFeatures(extent);
            var context = _Util2.default.createCanvasContext2D(mapWidth, mapHeight);
            var themeCanvas = this.renderer.painter.root.getElementsByTagName('canvas')[0];
            context.drawImage(themeCanvas, 0, 0, mapWidth, mapHeight, (mapWidth - width) / 2, (mapHeight - height) / 2, mapWidth, mapHeight);
            if (this.resolution !== resolution || JSON.stringify(this.extent) !== JSON.stringify(extent)) {
                this.highLightCanvas = null;
                this.resolution = resolution;
                this.extent = extent;
            }
            if (this.highLightCanvas) {
                context.drawImage(this.highLightCanvas, 0, 0, mapWidth, mapHeight, (mapWidth - width) / 2, (mapHeight - height) / 2, mapWidth, mapHeight);
            }
            return context.canvas;
        }

        var _this = _possibleConstructorReturn(this, (Theme.__proto__ || Object.getPrototypeOf(Theme)).call(this, {
            attributions: options.attributions || new _olDebug2.default.Attribution({
                html: 'Map Data <a href="http://support.supermap.com.cn/product/iServer.aspx">SuperMap iServer</a> with <a href="http://iclient.supermapol.com/">SuperMap iClient</a>'
            }),
            canvasFunction: canvasFunctionInternal_,
            logo: options.logo,
            projection: options.projection,
            ratio: options.ratio,
            resolutions: options.resolutions,
            state: options.state
        }));

        _this.canvasFunctionInternal_ = canvasFunctionInternal_;
        _this.EVENT_TYPES = _SuperMap2.default.Layer.Theme.prototype.EVENT_TYPES.concat(_SuperMap2.default.Layer.prototype.EVENT_TYPES);
        _this.imageTransform = [1, 0, 0, 1, 0, 0];
        _this.features = [];
        _this.TFEvents = [];
        _this.highLightCanvas = null;
        _this.map = options.map;
        var size = _this.map.getSize();
        _this.div = document.createElement('div');
        _this.map.getViewport().appendChild(_this.div);
        _this.div.style.width = size[0] + "px";
        _this.div.style.height = size[1] + "px";
        _this.setOpacity(options.opacity);
        _this.levelRenderer = new _SuperMap2.default.LevelRenderer();
        _this.movingOffset = [0, 0];
        _this.renderer = _this.levelRenderer.init(_this.div);
        _this.map.getViewport().removeChild(_this.div);
        _this.renderer.clear();
        //处理用户预先（在图层添加到 map 前）监听的事件
        _this.addTFEvents();
        return _this;
    }

    _createClass(Theme, [{
        key: 'destroy',
        value: function destroy() {
            this.EVENT_TYPES = null;
            this.isBaseLayer = null;
            this.TFEvents = null;
            this.destroyFeatures();
            this.features = null;
            if (this.renderer) {
                this.renderer.dispose();
            }
            this.renderer = null;
            this.levelRenderer = null;
            this.movingOffset = null;
            this.currentMousePosition = null;
        }
    }, {
        key: 'destroyFeatures',
        value: function destroyFeatures(features) {
            var all = features == undefined;
            if (all) {
                features = this.features;
            }
            if (features) {
                this.removeFeatures(features);
                for (var i = features.length - 1; i >= 0; i--) {
                    features[i].destroy();
                }
            }
        }
    }, {
        key: 'setOpacity',
        value: function setOpacity(opacity) {
            if (opacity !== this.opacity) {
                this.opacity = opacity;
                var element = this.div;
                _SuperMap2.default.Util.modifyDOMElement(element, null, null, null, null, null, null, opacity);

                if (this.map !== null) {
                    this.dispatchEvent({ type: 'changelayer', value: { layer: this, property: "opacity" } });
                }
            }
        }

        /**
         * APIMethod: addFeatures
         * 抽象方法，可实例化子类必须实现此方法。
         *
         * 向专题图图层中添加数据 , 专题图仅接收 SuperMap.Feature.Vector 类型数据，
         * feature 将储存于 features 属性中，其存储形式为数组。
         *
         *
         * Parameters:
         * features - {Array(<SuperMap.Feature.Vector>)} 需要添加的数据。
         */

    }, {
        key: 'addFeatures',
        value: function addFeatures(features) {}

        /**
         * APIMethod: removeFeatures
         * 从专题图中删除 feature。这个函数删除所有传递进来的矢量要素。
         * 参数中的 features 数组中的每一项，必须是已经添加到当前图层中的 feature，
         * 如果无法确定 feature 数组，则可以调用 removeAllFeatures 来删除所有feature。
         * 如果要删除的 feature 数组中的元素特别多，推荐使用 removeAllFeatures，
         * 删除所有feature后再重新添加。这样效率会更高。
         *
         * Parameters:
         * features - {Array(<SuperMap.Feature.Vector>)} 要删除feature的数组。
         */

    }, {
        key: 'removeFeatures',
        value: function removeFeatures(features) {
            if (!features || features.length === 0) {
                return;
            }
            if (features === this.features) {
                return this.removeAllFeatures();
            }
            if (!_SuperMap2.default.Util.isArray(features)) {
                features = [features];
            }
            var featuresFailRemoved = [];
            for (var i = features.length - 1; i >= 0; i--) {
                var feature = features[i];
                //如果我们传入的feature在features数组中没有的话，则不进行删除，
                //并将其放入未删除的数组中。
                var findex = _SuperMap2.default.Util.indexOf(this.features, feature);
                if (findex === -1) {
                    featuresFailRemoved.push(feature);
                    continue;
                }
                this.features.splice(findex, 1);
            }
            var drawFeatures = [];
            for (var hex = 0, len = this.features.length; hex < len; hex++) {
                feature = this.features[hex];
                drawFeatures.push(feature);
            }
            this.features = [];
            this.addFeatures(drawFeatures);
            //绘制专题要素
            if (this.renderer) {
                this.redrawThematicFeatures(this.map.getView().calculateExtent());
            }
            var succeed = featuresFailRemoved.length == 0 ? true : false;
            this.dispatchEvent({ type: "featuresremoved", value: { features: featuresFailRemoved, succeed: succeed } });
        }

        /**
         * APIMethod: removeAllFeatures
         * 清除当前图层所有的矢量要素。
         */

    }, {
        key: 'removeAllFeatures',
        value: function removeAllFeatures() {
            if (this.renderer) {
                this.renderer.clear();
            }
            this.features = [];
            this.dispatchEvent({ type: 'featuresremoved', value: { features: [], succeed: true } });
        }

        /**
         * Method: getFeatures
         * 查看当前图层中的有效数据。
         *
         * Returns:
         * {SuperMap.Feature.Vector} 用户加入图层的有效数据。
         */

    }, {
        key: 'getFeatures',
        value: function getFeatures() {
            var len = this.features.length;
            var clonedFeatures = new Array(len);
            for (var i = 0; i < len; ++i) {
                clonedFeatures[i] = this.features[i];
                //clonedFeatures[i] = this.features[i].clone();
            }
            return clonedFeatures;
        }

        /**
         * APIMethod: getFeatureBy
         * 在专题图的要素数组 features 里面遍历每一个 feature，当 feature[property] === value 时，
         * 返回此 feature（并且只返回第一个）。
         *
         * Parameters:
         * property - {String} feature 的某个属性名称。
         * value - {String} property 所对应的值。
         *
         * Returns:
         * {SuperMap.Feature.Vector} 第一个匹配属性和值的矢量要素。
         */

    }, {
        key: 'getFeatureBy',
        value: function getFeatureBy(property, value) {
            var feature = null;
            for (var id in this.features) {
                if (this.features[id][property] === value) {
                    feature = this.features[id];
                    //feature = this.features[id].clone();
                    break;
                }
            }
            return feature;
        }

        /**
         * APIMethod: getFeatureById
         * 通过给定一个 id，返回对应的矢量要素。
         *
         * Parameters:
         * featureId - {String} 矢量要素的属性 id。
         *
         * Returns:
         * {SuperMap.Feature.Vector} 对应id的 feature，如果不存在则返回 null。
         */

    }, {
        key: 'getFeatureById',
        value: function getFeatureById(featureId) {
            return this.getFeatureBy('id', featureId);
        }

        /**
         * APIMethod: getFeaturesByAttribute
         * 通过给定一个属性的 key 值和 value 值，返回所有匹配的要素数组。
         *
         * Parameters:
         * attrName - {String} 属性的 key。
         * attrValue - {Mixed} 属性对应的 value 值。
         *
         * Returns:
         * Array(<SuperMap.Feature.Vector>) 一个匹配的 feature 数组。
         */

    }, {
        key: 'getFeaturesByAttribute',
        value: function getFeaturesByAttribute(attrName, attrValue) {
            var feature,
                foundFeatures = [];
            for (var id in this.features) {
                feature = this.features[id];
                //feature = this.features[id].clone();
                if (feature && feature.attributes) {
                    if (feature.attributes[attrName] === attrValue) {
                        foundFeatures.push(feature);
                    }
                }
            }
            return foundFeatures;
        }

        /**
         * Method: redrawThematicFeatures
         * 抽象方法，可实例化子类必须实现此方法。
         *
         * 重绘专题要素。
         *
         * Parameters:
         * extent - {Array} 当前级别下计算出的地图范围
         */

    }, {
        key: 'redrawThematicFeatures',
        value: function redrawThematicFeatures(extent) {}

        /**
         * APIMethod: on
         * 添加专题要素事件监听。
         *
         * 支持的事件包括: click、mousedown、mousemove、mouseout、mouseover、mouseup。
         *
         * Parameters:
         * event - {String} 事件名称。
         * callback - {Function} 事件回调函数。
         *
         */

    }, {
        key: 'on',
        value: function on(event, callback) {
            var cb = callback;
            if (!this.renderer) {
                var evn = [];
                evn.push(event);
                evn.push(cb);
                this.TFEvents.push(evn);
            } else {
                this.renderer.on(event, cb);
            }
        }
    }, {
        key: 'fire',
        value: function fire(type, event) {
            event = event.originalEvent;
            if (type === 'click') {
                this.renderer.handler._clickHandler(event);
            }
            if (type === 'dblclick') {
                this.renderer.handler._dblclickHandler(event);
            }
            if (type === 'onmousewheel') {
                this.renderer.handler._mousewheelHandler(event);
            }
            if (type === 'mousemove') {
                this.renderer.handler._mousemoveHandler(event);
                this._initHighLightCanvas();
                this.changed();
            }
            if (type === 'onmouseout') {
                this.renderer.handler._mouseoutHandler(event);
            }
            if (type === 'onmousedown') {
                this.renderer.handler._mousedownHandler(event);
            }
            if (type === 'onmouseup') {
                this.renderer.handler._mouseupHandler(event);
            }
        }
    }, {
        key: '_initHighLightCanvas',
        value: function _initHighLightCanvas() {
            var highLightContext = this.renderer.painter._layers.hover.ctx;
            var canvas = highLightContext.canvas;
            var width = canvas.width;
            var height = canvas.height;
            var copyHighLightContext = _Util2.default.createCanvasContext2D(width, height);
            copyHighLightContext.putImageData(highLightContext.getImageData(0, 0, width, height), 0, 0);
            this.highLightCanvas = copyHighLightContext.canvas;
        }

        /**
         * APIMethod: un
         * 移除专题要素事件监听 。
         *
         * Parameters:
         * event - {String} 事件名称。
         * callback - {Function} 事件回调函数。
         *
         */

    }, {
        key: 'un',
        value: function un(event, callback) {
            var cb = callback;
            if (!this.renderer) {
                var tfEs = this.TFEvents;
                var len = tfEs.length;
                var newtfEs = [];
                for (var i = 0; i < len; i++) {
                    var tfEs_i = tfEs[i];

                    if (!(tfEs_i[0] === event && tfEs_i[1] === cb)) {
                        newtfEs.push(tfEs_i);
                    }
                }
                this.TFEvents = newtfEs;
            } else {
                this.renderer.un(event, cb);
            }
        }

        /**
         * Method: addTFEvents
         * 将图层添加到地图上之前用户要求添加的事件监听添加到图层。
         *
         */

    }, {
        key: 'addTFEvents',
        value: function addTFEvents() {
            var tfEs = this.TFEvents;
            var len = tfEs.length;
            for (var i = 0; i < len; i++) {
                this.renderer.on(tfEs[i][0], tfEs[i][1]);
            }
        }
    }, {
        key: 'getLocalXY',
        value: function getLocalXY(coordinate) {
            var resolution = this.map.getView().getResolution();
            var extent = this.map.getView().calculateExtent();
            if (coordinate instanceof _SuperMap2.default.Geometry.Point || coordinate instanceof _SuperMap2.default.Geometry.GeoText) {
                var x = coordinate.x / resolution + -extent[0] / resolution;
                var y = extent[3] / resolution - coordinate.y / resolution;
                return [x, y];
            } else if (coordinate instanceof _SuperMap2.default.LonLat) {
                var x = coordinate.lon / resolution + -extent[0] / resolution;
                var y = extent[3] / resolution - coordinate.lat / resolution;
                return [x, y];
            } else {
                return null;
            }
        }
    }, {
        key: 'toiClientFeature',
        value: function toiClientFeature(feature) {
            if (feature instanceof _themeFeature2.default) {
                return feature.toFeature();
            }
            return new _SuperMap2.default.REST.ServerFeature.fromJson(feature).toFeature();
        }
    }]);

    return Theme;
}(_olDebug2.default.source.ImageCanvas);

exports.default = Theme;

_olDebug2.default.source.Theme = Theme;

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _iPortalServicesQueryParam = __webpack_require__(87);

var _iPortalServicesQueryParam2 = _interopRequireDefault(_iPortalServicesQueryParam);

var _iPortalMapsQueryParam = __webpack_require__(85);

var _iPortalMapsQueryParam2 = _interopRequireDefault(_iPortalMapsQueryParam);

var _FetchRequest = __webpack_require__(13);

var _iPortalService = __webpack_require__(86);

var _iPortalService2 = _interopRequireDefault(_iPortalService);

var _iPortalMap = __webpack_require__(84);

var _iPortalMap2 = _interopRequireDefault(_iPortalMap);

var _iPortalServiceBase = __webpack_require__(28);

var _iPortalServiceBase2 = _interopRequireDefault(_iPortalServiceBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.iPortal
 * @classdesc iPortal
 * @extends {SuperMap.iPortalServiceBase}
 *
 */
var IPortal = function (_IPortalServiceBase) {
    _inherits(IPortal, _IPortalServiceBase);

    /**
     * @method SuperMap.iPortal.initialize
     * @param iportalUrl
     */
    function IPortal(iportalUrl) {
        _classCallCheck(this, IPortal);

        var _this = _possibleConstructorReturn(this, (IPortal.__proto__ || Object.getPrototypeOf(IPortal)).call(this, iportalUrl));

        _this.iportalUrl = iportalUrl;
        return _this;
    }

    /**
     * @method SuperMap.iPortal.load
     * @param iportalUrl
     */


    _createClass(IPortal, [{
        key: 'load',
        value: function load() {
            return _FetchRequest.FetchRequest.get(this.iportalUrl + '/web');
        }

        /**
         * @method SuperMap.iPortal.queryServices
         * @param queryParams
         */

    }, {
        key: 'queryServices',
        value: function queryServices(queryParams) {
            var serviceUrl = this.iportalUrl + "/web/services";
            return this.request("GET", serviceUrl, queryParams).then(function (result) {
                var services = [];
                result.content.map(function (serviceJsonObj) {
                    services.push(new _iPortalService2.default(serviceUrl, serviceJsonObj));
                });
                return services;
            });
        }

        /**
         * @method SuperMap.iPortal.deleteServices
         * @param ids
         */

    }, {
        key: 'deleteServices',
        value: function deleteServices(ids) {
            var serviceUrl = this.iportalUrl + "/web/services";
            return this.request("DELETE", serviceUrl, { ids: ids });
        }

        /**
         * @method SuperMap.iPortal.queryMaps
         * @param queryParams
         */

    }, {
        key: 'queryMaps',
        value: function queryMaps(queryParams) {
            var mapsUrl = this.iportalUrl + "/web/maps";
            return this.request("GET", mapsUrl, queryParams).then(function (result) {
                var mapRetult = {};
                var maps = [];
                result.content.map(function (mapJsonObj) {
                    maps.push(new _iPortalMap2.default(mapsUrl + "/" + mapJsonObj.id, mapJsonObj));
                });
                mapRetult.content = maps;
                mapRetult.currentPage = result.currentPage;
                mapRetult.pageSize = result.pageSize;
                mapRetult.total = result.total;
                mapRetult.totalPage = result.totalPage;
                return mapRetult;
            });
        }
    }]);

    return IPortal;
}(_iPortalServiceBase2.default);

exports.default = IPortal;


_SuperMap2.default.iPortal = IPortal;

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

__webpack_require__(15);

var _OnlineQueryDatasParameter = __webpack_require__(265);

var _OnlineQueryDatasParameter2 = _interopRequireDefault(_OnlineQueryDatasParameter);

var _OnlineData = __webpack_require__(264);

var _OnlineData2 = _interopRequireDefault(_OnlineData);

var _FetchRequest = __webpack_require__(13);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Class: SuperMap.Online
 * 对接SuperMap Online 所有基础服务
 */
var Online = function () {

    /**
     *** TODO 目前并没有对接Online的所有操作，需要补充完整
     * 所有查询返回的是一个Promise,在外部使用的时候通过Promise的then方法获取异步结果
     * 用法：
     * var online=new SuperMap.Online();
     * var services = online.queryDatas(param);
     * service.then(function(services){
     *      var service= services[0];
     *      service.updateDataInfo();
     * })
     */
    function Online() {
        _classCallCheck(this, Online);

        this.CLASS_NAME = "SuperMap.Online";

        this.rootUrl = "http://www.supermapol.com";
        this.webUrl = this.rootUrl + "/web";

        var mContentUrl = this.webUrl + "/mycontent";
        this.mDatasUrl = mContentUrl + "/datas";
    }

    _createClass(Online, [{
        key: 'load',
        value: function load() {
            return _FetchRequest.FetchRequest.get(this.rootUrl).then(function (response) {
                return response;
            });
        }
    }, {
        key: 'login',
        value: function login() {
            _SuperMap2.default.SecurityManager.loginOnline(this.rootUrl, true);
        }

        /**
         * 查询Online “我的内容”下“我的数据”服务(需要登录状态获取),并返回可操作的服务对象
         * @param parameter   <OnlineQueryDatasParameter>
         */

    }, {
        key: 'queryDatas',
        value: function queryDatas(parameter) {
            var me = this,
                url = me.mDatasUrl;
            if (parameter) {
                parameter = parameter.toJSON();
            }
            return _FetchRequest.FetchRequest.get(url, parameter).then(function (json) {
                if (!json || !json.content || json.content.length < 1) {
                    return;
                }
                var services = [],
                    contents = json.content,
                    len = contents.length;
                for (var i = 0; i < len; i++) {
                    var content = contents[i];
                    var service = new OnlineData(me.mDatasUrl, content);
                    services.push(service);
                }
                return services;
            });
        }
    }]);

    return Online;
}();

exports.default = Online;


_SuperMap2.default.Online = Online;

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(281);

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _MapService = __webpack_require__(36);

var _MapService2 = _interopRequireDefault(_MapService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

_olDebug2.default.supermap = _olDebug2.default.supermap || {};
_olDebug2.default.supermap.control = _olDebug2.default.supermap.control || {};

/**
 * Class:ol.supermap.control.ChangeTileVersion
 * 版本切换控件(目前仅支持IE10及以上)
 * 暂时不支持自定义位置
 * 用法： var control = ol.supermap.control.ChangeTileVersion({
 *           layer: baseLayer,
 *           orientation: "horizontal"
 *      });
 *      map.addControl(control)
 */

var ChangeTileVersion = function (_ol$control$Control) {
    _inherits(ChangeTileVersion, _ol$control$Control);

    function ChangeTileVersion(options) {
        _classCallCheck(this, ChangeTileVersion);

        options = options || {};
        //鼠标滑过时提示
        if (!options.title) {
            options.title = "切换缓存版本";
        }
        //tooltip提示显示位置 top | right | bottom | left
        if (!options.tooltip) {
            options.tooltip = "top";
        }
        //是否折叠
        if (!options.collapsed) {
            options.collapsed = true;
        }
        //上一个版本的按钮布局
        if (!options.lastText) {
            options.lastText = "-";
        }
        //下一个版本的按钮布局
        if (!options.nextText) {
            options.nextText = "+";
        }

        //控件显示的logo
        if (!options.ico) {
            options.ico = "V";
        }
        //方向horizontal|vertical
        if (options.orientation !== 'vertical') {
            options.orientation = "horizontal";
        }
        //是否显示上/下一个版本切换控件
        if (!options.switch) {
            options.switch = true;
        }

        var _this = _possibleConstructorReturn(this, (ChangeTileVersion.__proto__ || Object.getPrototypeOf(ChangeTileVersion)).call(this, options));

        _this.options = options;
        _this.element = options.element = initLayout.call(_this);

        if (options.layer) {
            _this.setLayer(options.layer);
        }

        function initLayout() {
            var className = 'ol-control-ctv';
            this._container = createElement('div', className + ' ' + className + '-' + options.orientation + " ol-unselectable ol-control");
            //正常情况下显示btn
            this._sliderBtn = createElement('button', className + '-toggle', this._container);
            this._sliderBtn.setAttribute("title", options.title);
            this._sliderBtn.innerHTML = options.ico;

            //滑块拖动时值显示区域
            this._sliderValue = createElement('p', className + '-value', this._container);
            this._sliderValue.innerHTML = options.ico;
            this._sliderValue.setAttribute("title", options.title);

            var sliderClassName = "ol-ctv-slider";
            this._sliderContent = createElement('div', sliderClassName + "-main" + "  tooltip", this._container);

            //tooltip提示框
            if (options.orientation === "vertical" && options.tooltip === "top") {
                options.tooltip = "right";
            }
            this.tooltip = createElement("span", "tooltip-text" + "  " + "tooltip-" + options.tooltip, this._sliderContent);
            this.tooltip.innerHTML = options.ico;

            //加控件
            if (options.switch) {
                this._next = createElement('a', sliderClassName + "-incdec" + " " + sliderClassName + '-next', this._sliderContent);
                this._next.innerHTML = options.nextText;
                addDomEvent(this._next, 'click', this.nextTilesVersion, this);
                this._container.classList.add(className + '-incdec');
            }

            //滑块
            this._sliderContainer = createElement('div', sliderClassName + '-container', this._sliderContent);
            this.slider = createElement('input', sliderClassName, this._sliderContainer);

            this.slider.setAttribute("title", options.title);
            this.slider.setAttribute("id", "slider");
            this.slider.setAttribute("type", "range");
            this.slider.setAttribute("min", 0);
            this.slider.setAttribute("max", 0);
            this.slider.setAttribute("step", 1);
            this.slider.setAttribute("value", 0);

            //判断浏览器是否支持Range滑动条
            if (this.slider.type == "text") {
                console.error("抱歉，您的浏览器不支持HTML5 range滑动条，请使用高版本浏览器");
            }
            this.firstLoad = true;
            if ('oninput' in this.slider || 'onchange' in this.slider) {
                addDomEvent(this.slider, "change", tilesVersion, this);
            } else {
                this.slider.onpropertychange = tilesVersion;
            }

            //减控件
            if (options.switch) {
                this._last = createElement('a', sliderClassName + "-incdec" + " " + sliderClassName + '-last', this._sliderContent);
                this._last.innerHTML = options.lastText;
                addDomEvent(this._last, 'click', this.lastTilesVersion, this);
            }

            if (window.matchMedia("screen and (-webkit-min-device-pixel-ratio:0)").matches && options.orientation == 'vertical') {
                this.slider.style.width = 170 + 'px';
                this._sliderContainer.style.height = 170 + 'px';
            } else if (options.orientation == 'vertical') {
                this._sliderContainer.style.height = 170 + 'px';
            } else {
                this._sliderContainer.style.width = 150 + 'px';
            }

            addDomEvent(this._container, "click", function (e) {
                e.preventDefault();
                e.stopPropagation();
            }, this);

            if (options.collapsed) {
                addDomEvent(this._container, 'mouseenter', expand, this);
                addDomEvent(this._container, 'mouseleave', collapse, this);
                addDomEvent(this._sliderBtn, 'click', function (e) {
                    e.preventDefault();
                    e.stopPropagation();
                });
                addDomEvent(this._sliderBtn, 'click', expand, this);
                addDomEvent(this._sliderBtn, 'focus', expand, this);
            } else {
                expand();
            }
            return this._container;
        }

        function createElement(tagName, className, container) {
            var el = document.createElement(tagName);
            el.className = className || '';

            if (container) {
                container.appendChild(el);
            }
            return el;
        }

        function addDomEvent(obj, type, fn, context) {
            var handler = function handler(e) {
                if (fn) {
                    return fn.call(context || obj, e || window.event);
                }
            };
            var originalHandler = handler;
            if ('addEventListener' in obj) {
                if (type === 'mousewheel') {
                    obj.addEventListener('onwheel' in obj ? 'wheel' : 'mousewheel', handler, false);
                } else if (type === 'mouseenter' || type === 'mouseleave') {
                    handler = function handler(e) {
                        e = e || window.event;
                        if (isExternalTarget(obj, e)) {
                            originalHandler(e);
                        }
                    };
                    obj.addEventListener(type === 'mouseenter' ? 'mouseover' : 'mouseout', handler, false);
                } else {
                    obj.addEventListener(type, handler, false);
                }
            } else if ('attachEvent' in obj) {
                obj.attachEvent('on' + type, handler);
            }
            return this;
        }

        function isExternalTarget(el, e) {
            var related = e.relatedTarget;
            if (!related) {
                return true;
            }
            try {
                while (related && related !== el) {
                    related = related.parentNode;
                }
            } catch (err) {
                return false;
            }
            return related !== el;
        }

        function expand() {
            this._container.classList.add('ol-control-ctv-expanded');
        }

        function collapse() {
            this._container.classList.remove('ol-control-ctv-expanded');
        }

        function tilesVersion(e) {
            var version = this.getVersion();
            this.tilesVersion(version);
        }
        return _this;
    }

    //设置版本相关信息
    //@param version {name:{String},desc:{String}}


    _createClass(ChangeTileVersion, [{
        key: 'setContent',
        value: function setContent(version) {
            var content = version || {};
            this.setVersionName(content.desc).setToolTip(content.desc);
        }

        //设置版本号
        //@param content String

    }, {
        key: 'setVersionName',
        value: function setVersionName(content) {
            var value = content;
            if (!content) {
                value = this.getValue();
            }
            this._sliderValue.innerHTML = value;
            return this;
        }

        //设置提示信息
        //@param tooltip HTMLElement|String

    }, {
        key: 'setToolTip',
        value: function setToolTip(tooltip) {
            this.tooltip.innerHTML = tooltip;
            return this;
        }

        //更新进度条长度

    }, {
        key: 'updateLength',
        value: function updateLength(length) {
            if (length > 0) {
                this.length = length;
                this.slider.setAttribute("max", this.length - 1);
            }
            return this;
        }

        //绑定图层

    }, {
        key: 'setLayer',
        value: function setLayer(layer) {
            if (layer) {
                this.options.layer = layer;
            }
            var me = this;
            var tileLayer = me.options.layer;
            tileLayer.on("tilesetsinfoloaded", function (evt) {
                var tileVersions = evt.value && evt.value.tileVersions;
                me.update(tileVersions);
            });
            tileLayer.on("tileversionschanged", function (evt) {
                var tileVersions = evt.value && evt.value.tileVersion;
                me.setContent(tileVersions);
            });
            me.getTileSetsInfo();
            return this;
        }

        //更新缓存切片集及进度条长度

    }, {
        key: 'update',
        value: function update(tileVersions) {
            this.tileVersions = tileVersions;
            this.updateLength(this.tileVersions.length);
        }

        //请求获取切片集信息

    }, {
        key: 'getTileSetsInfo',
        value: function getTileSetsInfo() {
            var me = this;
            if (me.options.layer) {
                var getTilesInfoSucceed = function getTilesInfoSucceed(info) {
                    me.options.layer.setTileSetsInfo(info.result);
                };

                new _MapService2.default(me.options.layer._url).getTilesets(getTilesInfoSucceed);
            }
            return this;
        }

        //移除绑定的地图图层

    }, {
        key: 'removeLayer',
        value: function removeLayer() {
            this.options.layer = null;
            return this;
        }

        //下一个版本
        // 第一次不进行加减，是无版本的状态

    }, {
        key: 'nextTilesVersion',
        value: function nextTilesVersion() {
            if (this.firstLoad) {
                this.options.layer.nextTilesVersion();
                this.firstLoad = !!0;
                return this;
            }
            this.slider.value = this.slider.value + 1;
            this.options.layer.nextTilesVersion();
            return this;
        }

        //上一个版本

    }, {
        key: 'lastTilesVersion',
        value: function lastTilesVersion() {
            this.slider.value = this.slider.value - 1;
            this.options.layer.lastTilesVersion();
            return this;
        }

        //根据指定版本号请求版本

    }, {
        key: 'tilesVersion',
        value: function tilesVersion(version) {
            var layer = this.options.layer,
                tileVersions = this.tileVersions;
            var len = tileVersions.length;
            for (var i = 0; i < len; i++) {
                if (tileVersions[i].name == version) {
                    layer.updateCurrentTileSetsIndex(i);
                    layer.changeTilesVersion();
                    break;
                }
            }
        }

        //获取进度条的值
        //注：(进度条的值并不是版本号)

    }, {
        key: 'getValue',
        value: function getValue() {
            return this.slider.value;
        }

        //获取当前进度条值对应的版本号

    }, {
        key: 'getVersion',
        value: function getVersion() {
            var version = this.tileVersions[this.getValue()];
            return version && version.name;
        }
    }]);

    return ChangeTileVersion;
}(_olDebug2.default.control.Control);

exports.default = ChangeTileVersion;

_olDebug2.default.supermap.control.ChangeTileVersion = ChangeTileVersion;

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Baidu = function (_ol$source$TileImage) {
    _inherits(Baidu, _ol$source$TileImage);

    function Baidu(opt_options) {
        _classCallCheck(this, Baidu);

        var options = opt_options || {};
        var attributions = options.attributions || new _olDebug2.default.Attribution({
            html: 'Map Data © 2017 Baidu - GS(2016)2089号 - Data © 长地万方 with <a href="http://iclient.supermapol.com/">SuperMap iClient</a>'
        });
        var tileGrid = _olDebug2.default.source.Baidu.defaultTileGrid();
        var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';

        var url = options.url !== undefined ? options.url : "http://online1.map.bdimg.com/onlinelabel/?qt=tile&x={x}&y={y}&z={z}&styles={styles}&udt=20170408";
        var hidpi = options.hidpi || (window.devicePixelRatio || window.screen.deviceXDPI / window.screen.logicalXDPI) > 1;
        url = url.replace('{styles}', hidpi ? 'ph' : 'pl');
        return _possibleConstructorReturn(this, (Baidu.__proto__ || Object.getPrototypeOf(Baidu)).call(this, {
            attributions: attributions,
            cacheSize: options.cacheSize,
            crossOrigin: crossOrigin,
            opaque: options.opaque !== undefined ? options.opaque : true,
            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,
            reprojectionErrorThreshold: options.reprojectionErrorThreshold,
            tileLoadFunction: options.tileLoadFunction,
            url: url,
            projection: 'EPSG:3857',
            wrapX: options.wrapX,
            tilePixelRatio: hidpi ? 2 : 1,
            tileGrid: tileGrid,
            tileUrlFunction: function tileUrlFunction(tileCoord, pixelRatio, projection) {
                return url.replace("{z}", tileCoord[0].toString()).replace("{x}", tileCoord[1].toString()).replace("{y}", function () {
                    var y = tileCoord[2];
                    return y.toString();
                }).replace("{-y}", function () {
                    var z = tileCoord[0];
                    var range = tileGrid.getFullTileRange(z);
                    _olDebug2.default.asserts.assert(range, 55); // The {-y} placeholder requires a tile grid with extent
                    var y = range.getHeight() + tileCoord[2];
                    return y.toString();
                });
            }
        }));
    }

    _createClass(Baidu, null, [{
        key: 'defaultTileGrid',
        value: function defaultTileGrid() {
            var tileGird = new _olDebug2.default.tilegrid.TileGrid({
                extent: [-33554432, -33554432, 33554432, 33554432],
                resolutions: [131072 * 2, 131072, 65536, 32768, 16284, 8192, 4096, 2048, 1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 1, 0.5],
                origin: [0, 0],
                minZoom: 3

            });
            return tileGird;
        }
    }]);

    return Baidu;
}(_olDebug2.default.source.TileImage);

exports.default = Baidu;

_olDebug2.default.source.Baidu = Baidu;

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

__webpack_require__(15);

var _Util = __webpack_require__(7);

var _Util2 = _interopRequireDefault(_Util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ImageSuperMapRest = function (_ol$source$TileImage) {
    _inherits(ImageSuperMapRest, _ol$source$TileImage);

    function ImageSuperMapRest(options) {
        _classCallCheck(this, ImageSuperMapRest);

        if (options.url === undefined) {
            return _possibleConstructorReturn(_this);
        }
        options.attributions = options.attributions || new _olDebug2.default.Attribution({
            html: 'Map Data <a href="http://support.supermap.com.cn/product/iServer.aspx">SuperMap iServer</a> with <a href="http://icltest.supermapol.com/">SuperMap iClient</a>'
        });
        var layerUrl = options.url + "/image.png?";
        options.serverType = options.serverType || _SuperMap2.default.ServerType.ISERVER;
        //为url添加安全认证信息片段
        layerUrl = appendCredential(layerUrl, options.serverType);

        function appendCredential(url, serverType) {
            var newUrl = url,
                credential,
                value;
            switch (serverType) {
                case _SuperMap2.default.ServerType.ISERVER:
                    value = _SuperMap2.default.SecurityManager.getToken(url);
                    credential = value ? new _SuperMap2.default.Credential(value, "token") : null;
                    break;
                case _SuperMap2.default.ServerType.IPORTAL:
                    value = _SuperMap2.default.SecurityManager.getToken(url);
                    credential = value ? new _SuperMap2.default.Credential(value, "token") : null;
                    if (!credential) {
                        value = _SuperMap2.default.SecurityManager.getKey(url);
                        credential = value ? new _SuperMap2.default.Credential(value, "key") : null;
                    }
                    break;
                case _SuperMap2.default.ServerType.ONLINE:
                    value = _SuperMap2.default.SecurityManager.getKey(url);
                    credential = value ? new _SuperMap2.default.Credential(value, "key") : null;
                    break;
                default:
                    value = _SuperMap2.default.SecurityManager.getToken(url);
                    credential = value ? new _SuperMap2.default.Credential(value, "token") : null;
                    break;
            }
            if (credential) {
                newUrl += "&" + credential.getUrlParameters();
            }
            return newUrl;
        }

        //切片是否透明
        var transparent = true;
        if (options.opaque !== undefined) {
            transparent = options.opaque;
        }
        layerUrl += "&transparent=" + transparent;

        //是否使用缓存
        var cacheEnabled = false;
        if (options.cacheEnabled !== undefined) {
            cacheEnabled = options.cacheEnabled;
        }
        layerUrl += "&cacheEnabled=" + cacheEnabled;

        //如果有layersID，则是在使用专题图
        if (options.layersID !== undefined) {
            layerUrl += "&layersID=" + options.layersID;
        }
        //是否重定向
        if (options.redirect !== undefined) {
            layerUrl += "&redirect=" + options.redirect;
        }
        if (options.cacheEnabled !== undefined) {
            layerUrl += "&cacheEnabled=" + options.cacheEnabled;
        }
        if (options.prjCoordSys) {
            layerUrl += "prjCoordSys=" + JSON.stringify(options.prjCoordSys);
        }
        if (options.clipRegion instanceof _olDebug2.default.geom.Geometry) {
            options.clipRegionEnabled = true;
            options.clipRegion = _Util2.default.toSuperMapGeometry(new _olDebug2.default.format.GeoJSON().writeGeometryObject(options.clipRegion));
            options.clipRegion = _SuperMap2.default.Util.toJSON(_SuperMap2.default.REST.ServerGeometry.fromGeometry(options.clipRegion));
            layerUrl += "&clipRegionEnabled=" + options.clipRegionEnabled + "&clipRegion=" + JSON.stringify(options.clipRegion);
        }
        if (!!options.overlapDisplayed && options.overlapDisplayedOptions) {
            options.overlapDisplayedOptions = options.overlapDisplayedOptions;
            layerUrl += "&overlapDisplayed=" + options.overlapDisplayed + "&overlapDisplayedOptions=" + options.overlapDisplayedOptions.toString();
        }
        if (options.cacheEnabled === true && options.tileversion) {
            layerUrl += "tileversion=" + options.tileversion;
        }

        function tileUrlFunction(tileCoord, pixelRatio, projection) {
            if (!this.tileGrid) {
                this.tileGrid = this.getTileGridForProjection(projection);
            }
            var tileExtent = this.tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);
            var tileSize = _olDebug2.default.size.toSize(this.tileGrid.getTileSize(tileCoord[0]), this.tmpSize);
            return layerUrl + "&width=" + tileSize[0] + "&height=" + tileSize[1] + "&viewBounds=" + "{\"leftBottom\" : {\"x\":" + tileExtent[0] + ",\"y\":" + tileExtent[1] + "},\"rightTop\" : {\"x\":" + tileExtent[2] + ",\"y\":" + tileExtent[3] + "}}";
        }

        return _possibleConstructorReturn(this, (ImageSuperMapRest.__proto__ || Object.getPrototypeOf(ImageSuperMapRest)).call(this, {
            attributions: options.attributions,
            cacheSize: options.cacheSize,
            crossOrigin: options.crossOrigin,
            logo: options.logo,
            opaque: options.opaque,
            projection: options.projection,
            reprojectionErrorThreshold: options.reprojectionErrorThreshold,
            state: options.state,
            tileClass: options.tileClass,
            tileGrid: options.tileGrid,
            tileLoadFunction: options.tileLoadFunction,
            tilePixelRatio: options.tilePixelRatio,
            tileUrlFunction: tileUrlFunction,
            url: options.url,
            urls: options.urls,
            wrapX: options.wrapX !== undefined ? options.wrapX : false,
            cacheEnabled: options.cacheEnabled,
            layersID: options.layersID
        }));
    }

    _createClass(ImageSuperMapRest, null, [{
        key: 'optionsFromMapJSON',
        value: function optionsFromMapJSON(url, mapJSONObj) {
            var options = {};
            options.url = url;
            options.crossOrigin = 'anonymous';
            var extent = [mapJSONObj.bounds.left, mapJSONObj.bounds.bottom, mapJSONObj.bounds.right, mapJSONObj.bounds.top];
            var resolutions = getResolutions();

            function getResolutions() {
                var level = 17;
                var dpi = 96;
                var width = extent[2] - extent[0];
                var height = extent[3] - extent[1];
                var tileSize = width >= height ? width : height;
                var maxReolution;
                if (tileSize === width) {
                    maxReolution = tileSize / mapJSONObj.viewer.width;
                } else {
                    maxReolution = tileSize / mapJSONObj.viewer.height;
                }
                var resolutions = [];
                var unit = _SuperMap2.default.Unit.METER;
                if (mapJSONObj.coordUnit === _SuperMap2.default.Unit.DEGREE) {
                    unit = _SuperMap2.default.Unit.DEGREE;
                }
                if (mapJSONObj.visibleScales.length > 0) {
                    for (var i = 0; i < mapJSONObj.visibleScales.length; i++) {
                        resolutions.push(_Util2.default.scaleToResolution(mapJSONObj.visibleScales[i], dpi, unit));
                    }
                } else {
                    for (var i = 0; i < level; i++) {
                        resolutions.push(maxReolution / Math.pow(2, i));
                    }
                }
                return resolutions;
            }

            options.tileGrid = new _olDebug2.default.tilegrid.TileGrid({
                extent: extent,
                resolutions: resolutions
            });
            return options;
        }
    }, {
        key: 'createTileGrid',
        value: function createTileGrid(extent, maxZoom, minZoom, tileSize, origin) {
            var tilegrid = _olDebug2.default.tilegrid.createXYZ({
                extent: extent,
                maxZoom: maxZoom,
                minZoom: minZoom,
                tileSize: tileSize
            });
            return new _olDebug2.default.tilegrid.TileGrid({
                extent: extent,
                minZoom: minZoom,
                origin: origin,
                resolutions: tilegrid.getResolutions(),
                tileSize: tilegrid.getTileSize()
            });
        }
    }]);

    return ImageSuperMapRest;
}(_olDebug2.default.source.TileImage);

exports.default = ImageSuperMapRest;

_olDebug2.default.source.ImageSuperMapRest = ImageSuperMapRest;

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SuperMapCloud = function (_ol$source$XYZ) {
    _inherits(SuperMapCloud, _ol$source$XYZ);

    function SuperMapCloud(opt_options) {
        _classCallCheck(this, SuperMapCloud);

        var options = opt_options || {};

        var attributions = options.attributions || new _olDebug2.default.Attribution({
            html: 'Map Data ©2013 SuperMap - GS(2011)6014号-data©Navinfo with <a href="http://iclient.supermapol.com/">SuperMap iClient</a>'
        });
        var mapName = options.mapName || 'quanguo';
        var mapType = options.mapType || 'web';
        var url = options.url || 'http://t2.supermapcloud.com/FileService/image?map={mapName}&type={type}&x={x}&y={y}&z={z}';
        url = url.replace('{mapName}', mapName).replace('{type}', mapType);
        return _possibleConstructorReturn(this, (SuperMapCloud.__proto__ || Object.getPrototypeOf(SuperMapCloud)).call(this, {
            attributions: attributions,
            cacheSize: options.cacheSize,
            crossOrigin: options.crossOrigin,
            opaque: options.opaque || true,
            maxZoom: options.maxZoom || 18,
            reprojectionErrorThreshold: options.reprojectionErrorThreshold,
            tileLoadFunction: options.tileLoadFunction,
            url: url,
            wrapX: options.wrapX
        }));
    }

    return SuperMapCloud;
}(_olDebug2.default.source.XYZ);

exports.default = SuperMapCloud;

_olDebug2.default.source.SuperMapCloud = SuperMapCloud;

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Tianditu = function (_ol$source$WMTS) {
    _inherits(Tianditu, _ol$source$WMTS);

    function Tianditu(opt_options) {
        _classCallCheck(this, Tianditu);

        var options = opt_options || {};
        var attributions = options.attributions || new _olDebug2.default.Attribution({
            html: 'Map Data <a href="http://www.tianditu.com"><img style="background-color:transparent;bottom:2px;opacity:1;" src="http://api.tianditu.com/img/map/logo.png" width="53px" height="22px" opacity="0"></a> with <a href="http://iclient.supermapol.com/">SuperMap iClient</a>'
        });

        if (!options.url && !options.urls) {
            options.url = "http://t{0-7}.tianditu.com/img_w/wmts";
        }
        return _possibleConstructorReturn(this, (Tianditu.__proto__ || Object.getPrototypeOf(Tianditu)).call(this, {
            version: options.version || '1.0.0',
            format: options.format || 'tiles',
            dimensions: options.dimensions || {},
            layer: options.layer || 'img',
            matrixSet: options.matrixSet || 'w',
            tileGrid: options.tileGrid || _olDebug2.default.source.Tianditu.getTileGrid(options.projection || 'EPSG:3857'),
            style: options.style || 'default',
            attributions: attributions,
            cacheSize: options.cacheSize,
            crossOrigin: options.crossOrigin,
            opaque: options.opaque || true,
            maxZoom: options.maxZoom || 19,
            reprojectionErrorThreshold: options.reprojectionErrorThreshold,
            tileLoadFunction: options.tileLoadFunction,
            url: options.url,
            urls: options.urls,
            projection: options.projection || 'EPSG:3857',
            wrapX: options.wrapX
        }));
    }

    _createClass(Tianditu, null, [{
        key: 'getTileGrid',
        value: function getTileGrid(projection) {
            if (projection === "EPSG:4326" || projection === "EPSG:4490") {
                return _olDebug2.default.source.Tianditu.default4326TileGrid();
            }
            return _olDebug2.default.source.Tianditu.default3857TileGrid();
        }
    }, {
        key: 'default4326TileGrid',
        value: function default4326TileGrid() {
            var tdt_WGS84_resolutions = [];
            var matrixIds = [];
            for (var i = 0; i < 18; i++) {
                tdt_WGS84_resolutions.push(0.703125 / Math.pow(2, i));
                matrixIds.push(i + 1);
            }
            var tileGird = new _olDebug2.default.tilegrid.WMTS({
                extent: [-180, -90, 180, 90],
                resolutions: tdt_WGS84_resolutions,
                origin: [-180, 90],
                matrixIds: matrixIds,
                minZoom: 1
            });
            return tileGird;
        }
    }, {
        key: 'default3857TileGrid',
        value: function default3857TileGrid() {
            var tdt_Mercator_resolutions = [];
            var matrixIds = [];
            for (var i = 0; i < 18; i++) {
                tdt_Mercator_resolutions.push(78271.5169640203125 / Math.pow(2, i));
                matrixIds.push(i + 1);
            }
            var tileGird = new _olDebug2.default.tilegrid.WMTS({
                extent: [-20037508.3427892, -20037508.3427892, 20037508.3427892, 20037508.3427892],
                resolutions: tdt_Mercator_resolutions,
                matrixIds: matrixIds,
                origin: [-20037508.3427892, 20037508.3427892],
                minZoom: 1
            });
            return tileGird;
        }
    }]);

    return Tianditu;
}(_olDebug2.default.source.WMTS);

exports.default = Tianditu;

_olDebug2.default.source.Tianditu = Tianditu;

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

__webpack_require__(15);

var _Util = __webpack_require__(7);

var _Util2 = _interopRequireDefault(_Util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TileSuperMapRest = function (_ol$source$TileImage) {
    _inherits(TileSuperMapRest, _ol$source$TileImage);

    function TileSuperMapRest(options) {
        _classCallCheck(this, TileSuperMapRest);

        options = options || {};
        if (options.url === undefined) {
            return _possibleConstructorReturn(_this);
        }

        options.attributions = options.attributions || new _olDebug2.default.Attribution({
            html: 'Map Data <a href="http://support.supermap.com.cn/product/iServer.aspx">SuperMap iServer</a> with <a href="http://iclient.supermapol.com/">SuperMap iClient</a>'
        });

        var layerUrl = options.url + "/tileImage.png?";
        options.serverType = options.serverType || _SuperMap2.default.ServerType.ISERVER;
        //为url添加安全认证信息片段
        layerUrl = appendCredential(layerUrl, options.serverType);

        var _this = _possibleConstructorReturn(this, (TileSuperMapRest.__proto__ || Object.getPrototypeOf(TileSuperMapRest)).call(this, {
            attributions: options.attributions,
            cacheSize: options.cacheSize,
            crossOrigin: options.crossOrigin,
            logo: options.logo,
            opaque: options.opaque,
            projection: options.projection,
            reprojectionErrorThreshold: options.reprojectionErrorThreshold,
            state: options.state,
            tileClass: options.tileClass,
            tileGrid: options.tileGrid,
            tileLoadFunction: options.tileLoadFunction,
            tilePixelRatio: options.tilePixelRatio,
            tileUrlFunction: tileUrlFunction,
            url: options.url,
            urls: options.urls,
            wrapX: options.wrapX !== undefined ? options.wrapX : false,
            cacheEnabled: options.cacheEnabled,
            layersID: options.layersID
        }));

        _this.options = options;
        _this._url = options.url;
        //当前切片在切片集中的index
        _this.tileSetsIndex = -1;
        _this.tempIndex = -1;
        function appendCredential(url, serverType) {
            var newUrl = url,
                credential,
                value;
            switch (serverType) {
                case _SuperMap2.default.ServerType.ISERVER:
                    value = _SuperMap2.default.SecurityManager.getToken(url);
                    credential = value ? new _SuperMap2.default.Credential(value, "token") : null;
                    break;
                case _SuperMap2.default.ServerType.IPORTAL:
                    value = _SuperMap2.default.SecurityManager.getToken(url);
                    credential = value ? new _SuperMap2.default.Credential(value, "token") : null;
                    if (!credential) {
                        value = _SuperMap2.default.SecurityManager.getKey(url);
                        credential = value ? new _SuperMap2.default.Credential(value, "key") : null;
                    }
                    break;
                case _SuperMap2.default.ServerType.ONLINE:
                    value = _SuperMap2.default.SecurityManager.getKey(url);
                    credential = value ? new _SuperMap2.default.Credential(value, "key") : null;
                    break;
                default:
                    value = _SuperMap2.default.SecurityManager.getToken(url);
                    credential = value ? new _SuperMap2.default.Credential(value, "token") : null;
                    break;
            }
            if (credential) {
                newUrl += "&" + credential.getUrlParameters();
            }
            return newUrl;
        }

        function getAllRequestParams() {
            var me = this,
                params = {};

            params["redirect"] = options.redirect === true;
            //切片是否透明
            params["transparent"] = options.transparent === true;
            params["cacheEnabled"] = !(options.cacheEnabled === false);
            params["_cache"] = params["cacheEnabled"];

            //设置切片原点
            if (this.origin) {
                params["origin"] = JSON.stringify({ x: this.origin[0], y: this.origin[1] });
            }

            if (options.prjCoordSys) {
                params["prjCoordSys"] = JSON.stringify(options.prjCoordSys);
            }

            if (options.layersID) {
                params["layersID"] = options.layersID.toString();
            }

            if (options.clipRegion instanceof _olDebug2.default.geom.Geometry) {
                options.clipRegionEnabled = true;
                options.clipRegion = _Util2.default.toSuperMapGeometry(new _olDebug2.default.format.GeoJSON().writeGeometryObject(options.clipRegion));
                options.clipRegion = _SuperMap2.default.Util.toJSON(_SuperMap2.default.REST.ServerGeometry.fromGeometry(options.clipRegion));
                params["clipRegionEnabled"] = options.clipRegionEnabled;
                params["clipRegion"] = JSON.stringify(options.clipRegion);
            }

            if (!options.overlapDisplayed) {
                params["overlapDisplayed"] = false;
                if (options.overlapDisplayedOptions) {
                    params["overlapDisplayedOptions"] = me.overlapDisplayedOptions.toString();
                }
            } else {
                params["overlapDisplayed"] = true;
            }

            if (options.cacheEnabled && options.tileversion) {
                params["tileversion"] = options.tileversion.toString();
            }

            return params;
        }

        function getFullRequestUrl() {
            if (this._paramsChanged) {
                this._layerUrl = createLayerUrl.call(this);
                this._paramsChanged = false;
            }
            return this._layerUrl || createLayerUrl.call(this);
        }

        function createLayerUrl() {
            this._layerUrl = layerUrl + getRequestParamString.call(this);
            return this._layerUrl;
        }

        function getRequestParamString() {
            this.requestParams = this.requestParams || getAllRequestParams.call(this);
            var params = [];
            for (var key in this.requestParams) {
                params.push(key + "=" + this.requestParams[key]);
            }
            return params.join('&');
        }

        var me = _this;

        function tileUrlFunction(tileCoord, pixelRatio, projection) {
            if (!me.tileGrid) {
                if (me.extent) {
                    me.tileGrid = _olDebug2.default.source.TileSuperMapRest.createTileGrid(options.extent);
                    if (me.resolutions) {
                        me.tileGrid.resolutions = me.resolutions;
                    }
                } else {
                    if (projection.getCode() === "EPSG:3857") {
                        me.tileGrid = _olDebug2.default.source.TileSuperMapRest.createTileGrid([-20037508.3427892, -20037508.3427892, 20037508.3427892, 20037508.3427892]);
                        me.extent = [-20037508.3427892, -20037508.3427892, 20037508.3427892, 20037508.3427892];
                    }
                    if (projection.getCode() === "EPSG:4326") {
                        me.tileGrid = _olDebug2.default.source.TileSuperMapRest.createTileGrid([-180, -90, 180, 90]);
                        me.extent = [-180, -90, 180, 90];
                    }
                }
            }
            me.origin = me.tileGrid.getOrigin(0);
            var z = tileCoord[0];
            var x = tileCoord[1];
            var y = -tileCoord[2] - 1;
            var resolution = me.tileGrid.getResolution(z);
            var dpi = 96;
            var unit = projection.getUnits();
            if (unit === 'degrees') {
                unit = _SuperMap2.default.Unit.DEGREE;
            }
            if (unit === 'm') {
                unit = _SuperMap2.default.Unit.METER;
            }
            var scale = _Util2.default.resolutionToScale(resolution, dpi, unit);
            var tileSize = _olDebug2.default.size.toSize(me.tileGrid.getTileSize(z, me.tmpSize));
            var layerUrl = getFullRequestUrl.call(me);
            return layerUrl + "&x=" + x + "&y=" + y + "&width=" + tileSize[0] + "&height=" + tileSize[1] + "&scale=" + scale;
        }

        return _this;
    }

    _createClass(TileSuperMapRest, [{
        key: 'setTileSetsInfo',
        value: function setTileSetsInfo(tileSets) {
            this.tileSets = tileSets;
            if (_Util2.default.isArray(this.tileSets)) {
                this.tileSets = tileSets[0];
            }
            this.dispatchEvent({ type: 'tilesetsinfoloaded', value: { tileVersions: this.tileSets.tileVersions } });
            this.changeTilesVersion();
        }

        //请求上一个版本切片，并重新绘制。

    }, {
        key: 'lastTilesVersion',
        value: function lastTilesVersion() {
            this.tempIndex = this.tileSetsIndex - 1;
            this.changeTilesVersion();
        }

        //请求下一个版本切片，并重新绘制。

    }, {
        key: 'nextTilesVersion',
        value: function nextTilesVersion() {
            this.tempIndex = this.tileSetsIndex + 1;
            this.changeTilesVersion();
        }

        //切换到某一版本的切片，并重绘。
        //通过this.tempIndex保存需要切换的版本索引

    }, {
        key: 'changeTilesVersion',
        value: function changeTilesVersion() {
            var me = this;
            //切片版本集信息是否存在
            if (me.tileSets == null) {
                //版本信息为空，重新查询，查询成功继续跳转到相应的版本
                me.getTileSetsInfo();
                return;
            }
            if (me.tempIndex === me.tileSetsIndex || this.tempIndex < 0) {
                return;
            }
            //检测index是否可用
            var tileVersions = me.tileSets.tileVersions;
            if (tileVersions && me.tempIndex < tileVersions.length && me.tempIndex >= 0) {
                var name = tileVersions[me.tempIndex].name;
                var result = me.mergeTileVersionParam(name);
                if (result) {
                    me.tileSetsIndex = me.tempIndex;
                    me.dispatchEvent({ type: 'tileversionschanged', value: { tileVersion: tileVersions[me.tempIndex] } });
                }
            }
        }

        //手动设置当前切片集索引
        //目前主要提供给控件使用

    }, {
        key: 'updateCurrentTileSetsIndex',
        value: function updateCurrentTileSetsIndex(index) {
            this.tempIndex = index;
        }

        //更改URL请求参数中的切片版本号,并重绘

    }, {
        key: 'mergeTileVersionParam',
        value: function mergeTileVersionParam(version) {
            if (version) {
                this.requestParams["tileversion"] = version;
                this._paramsChanged = true;
                this.refresh();
                return true;
            }
            return false;
        }
    }], [{
        key: 'optionsFromMapJSON',
        value: function optionsFromMapJSON(url, mapJSONObj) {
            var options = {};
            options.url = url;
            options.crossOrigin = 'anonymous';
            var extent = [mapJSONObj.bounds.left, mapJSONObj.bounds.bottom, mapJSONObj.bounds.right, mapJSONObj.bounds.top];
            var resolutions = getResolutions();

            function getResolutions() {
                var level = 17;
                var dpi = 96;
                var width = extent[2] - extent[0];
                var height = extent[3] - extent[1];
                var tileSize = width >= height ? width : height;
                var maxReolution;
                if (tileSize === width) {
                    maxReolution = tileSize / mapJSONObj.viewer.width;
                } else {
                    maxReolution = tileSize / mapJSONObj.viewer.height;
                }
                var resolutions = [];
                var unit = _SuperMap2.default.Unit.METER;
                if (mapJSONObj.coordUnit === _SuperMap2.default.Unit.DEGREE) {
                    unit = _SuperMap2.default.Unit.DEGREE;
                }
                if (mapJSONObj.visibleScales.length > 0) {
                    for (var i = 0; i < mapJSONObj.visibleScales.length; i++) {
                        resolutions.push(_Util2.default.scaleToResolution(mapJSONObj.visibleScales[i], dpi, unit));
                    }
                } else {
                    for (var i = 0; i < level; i++) {
                        resolutions.push(maxReolution / Math.pow(2, i));
                    }
                }
                return resolutions;
            }

            options.tileGrid = new _olDebug2.default.tilegrid.TileGrid({
                extent: extent,
                resolutions: resolutions
            });
            return options;
        }
    }, {
        key: 'createTileGrid',
        value: function createTileGrid(extent, maxZoom, minZoom, tileSize, origin) {
            var tilegrid = _olDebug2.default.tilegrid.createXYZ({
                extent: extent,
                maxZoom: maxZoom,
                minZoom: minZoom,
                tileSize: tileSize
            });
            return new _olDebug2.default.tilegrid.TileGrid({
                extent: extent,
                minZoom: minZoom,
                origin: origin,
                resolutions: tilegrid.getResolutions(),
                tileSize: tilegrid.getTileSize()
            });
        }
    }]);

    return TileSuperMapRest;
}(_olDebug2.default.source.TileImage);

exports.default = TileSuperMapRest;


_olDebug2.default.source.TileSuperMapRest = TileSuperMapRest;

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _FetchRequest = __webpack_require__(13);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _StyleUtils = __webpack_require__(47);

var _StyleUtils2 = _interopRequireDefault(_StyleUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

_olDebug2.default.supermap = _olDebug2.default.supermap || {};

var WebMap = function (_ol$Observable) {
    _inherits(WebMap, _ol$Observable);

    function WebMap(id, options) {
        _classCallCheck(this, WebMap);

        var _this = _possibleConstructorReturn(this, (WebMap.__proto__ || Object.getPrototypeOf(WebMap)).call(this));

        _this.EventType = {
            WEBMAPLOADEND: 'webmaploadend'
        };

        _this.id = id;
        options = options || {};
        _this.target = options.target || 'map';
        _this.map = options.map;
        _this.server = options.server || 'http://www.supermapol.com';
        _this.credentialValue = options.credentialValue;
        _this.credentialKey = options.credentialKey || 'key';
        _this.load();
        return _this;
    }

    _createClass(WebMap, [{
        key: 'load',
        value: function load() {
            if (this.server.indexOf('http://') < 0 && this.server.indexOf('https://') < 0) {
                this.server = "http://" + this.server;
            }
            var mapUrl = this.server + '/web/maps/' + this.id + '.json';
            if (this.credentialValue) {
                mapUrl += '?' + this.credentialKey + '=' + this.credentialValue;
            }
            var me = this;
            _FetchRequest.FetchRequest.get(mapUrl).then(function (response) {
                return response.json();
            }).then(function (jsonObj) {
                if (!jsonObj) {
                    return;
                }
                var layers = jsonObj.layers;
                me.mapInfo = jsonObj;
                me.createLayersByJson(layers);
            });
        }
    }, {
        key: 'createLayersByJson',
        value: function createLayersByJson(layersJson) {
            if (!_olDebug2.default.supermap.Util.isArray(layersJson)) {
                return;
            }
            if (layersJson.length === 0) {
                return;
            }
            var layerQueue = [];
            for (var i = 0; i < layersJson.length; i++) {
                var layerInfo = layersJson[i];
                layerInfo["_originIndex"] = i;
                var layerType = layerInfo.layerType = layerInfo.layerType || "BASE_LAYER";
                var type = layerInfo.type;
                if (layerType !== "BASE_LAYER") {
                    //如果图层不是底图，则先加到图层队列里面等待底图完成后再处理
                    layerQueue.unshift(layerInfo);
                    continue;
                } else {
                    this.createLayer(type, layerInfo);
                }
            }
            //底图加载完成后开始处理图层队列里的图层
            while (layerQueue.length > 0) {
                var layerInfo = layerQueue.pop();
                var type = layerInfo.type;
                var layerType = layerInfo.layerType = layerInfo.layerType || "BASE_LAYER";
                if (layerType !== "OVERLAY_LAYER") {
                    type = layerType;
                }
                this.createLayer(type, layerInfo);
            }
            this.dispatchEvent({ type: _olDebug2.default.supermap.WebMap.EventType.WEBMAPLOADEND, value: this.map });
        }
    }, {
        key: 'addLayer',
        value: function addLayer(layer, options) {
            if (!this.map) {
                this.createMap(options);
            }
            return this.map.addLayer(layer);
        }
    }, {
        key: 'toProjection',
        value: function toProjection(epsgCode, type, extent) {
            if (epsgCode == -1000 && type == "PCS_NON_EARTH") {
                return new _olDebug2.default.proj.Projection({
                    extent: extent,
                    units: 'm'
                });
            }
            if (epsgCode === 910112 || epsgCode === 910102) {
                return 'EPSG:3857';
            }
            if (epsgCode === 910111) {
                return 'EPSG:3857';
                //todo 火星mercator
            }
            if (epsgCode === 910101) {
                return 'EPSG:4326';
                //todo 火星
            }
            return 'EPSG:' + epsgCode;
        }
    }, {
        key: 'createMap',
        value: function createMap(options) {
            if (!this.map) {
                var view = new _olDebug2.default.View(options);
                this.map = new _olDebug2.default.Map({
                    target: this.target,
                    view: view
                });
                view.fit(options.extent);
            }
        }
    }, {
        key: 'getResolutionsFromScales',
        value: function getResolutionsFromScales(scales, dpi, units, datum) {
            var resolutions = [];
            for (var i = 0; i < scales.length; i++) {
                resolutions.push(_SuperMap2.default.Util.GetResolutionFromScaleDpi(scales[i], dpi, units, datum));
            }
            return resolutions;
        }
    }, {
        key: 'createLayer',
        value: function createLayer(type, layerInfo) {
            var prjCoordSys = layerInfo.prjCoordSys,
                epsgCode = prjCoordSys && prjCoordSys.epsgCode || this.mapInfo.epsgCode,
                center = this.mapInfo.center || layerInfo.center,
                level = this.mapInfo.level || layerInfo.level,
                bounds = this.mapInfo.extent || layerInfo.bounds,
                scales = layerInfo.scales,
                opacity = layerInfo.opacity,
                origin = [bounds.leftBottom.x, bounds.rightTop.y],
                extent = [bounds.leftBottom.x, bounds.leftBottom.y, bounds.rightTop.x, bounds.rightTop.y];
            var projection = this.toProjection(epsgCode, prjCoordSys ? prjCoordSys.type : '', extent);
            //var crs = this.createCRS(epsgCode, origin, resolution, boundsL);
            var viewOptions = {
                center: [center.x, center.y],
                zoom: level - 1,
                projection: projection,
                extent: extent
            };
            var layer;
            switch (type) {
                case "SUPERMAP_REST":
                    layer = new _olDebug2.default.layer.Tile({
                        source: new _olDebug2.default.source.TileSuperMapRest({
                            url: layerInfo.url,
                            opaque: opacity
                        }),
                        projection: projection
                    });
                    break;
                case "SUPERMAP_REST_VECTOR":
                    //ToDO
                    break;
                case "TIANDITU_VEC":
                case "TIANDITU_IMG":
                case "TIANDITU_TER":
                    viewOptions.minZoom = 1;
                    viewOptions.zoom = 1 + viewOptions.zoom;
                    layer = this.createTiandituLayer(layerInfo, epsgCode);
                    break;
                case "BAIDU":
                    viewOptions.resolutions = [131072 * 2, 131072, 65536, 32768, 16284, 8192, 4096, 2048, 1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 1, 0.5];
                    viewOptions.zoom = 3 + viewOptions.zoom;
                    viewOptions.minZoom = 3;
                    layer = new _olDebug2.default.layer.Tile({
                        source: new _olDebug2.default.source.Baidu()
                    });
                    break;
                case 'BING':
                    layer = new _olDebug2.default.layer.Tile({
                        source: new _olDebug2.default.source.BingMaps()
                    });
                    break;
                case "WMS":
                    layer = this.createWmsLayer(layerInfo);
                    break;
                case "WMTS":
                    var identifier = layerInfo.identifier;
                    var wellKnownScaleSet = identifier.split("_")[0];
                    var layerName = identifier.substring(identifier.indexOf("_") + 1);
                    var info = this.getWmtsResolutionsAndMatrixIds(wellKnownScaleSet, layerInfo.units, scales, origin, extent);
                    viewOptions.resolutions = info.resolutions;
                    layer = new _olDebug2.default.layer.Tile({
                        opacity: opacity,
                        source: new _olDebug2.default.source.WMTS({
                            url: layerInfo.url,
                            layer: layerName,
                            matrixSet: identifier,
                            format: 'image/png',
                            tileGrid: new _olDebug2.default.tilegrid.WMTS(info),
                            style: 'default'
                        })
                    });
                    break;
                case "CLOUD":
                    viewOptions.zoom = 3 + viewOptions.zoom;
                    viewOptions.minZoom = 3;
                    layer = new _olDebug2.default.layer.Tile({
                        source: new _olDebug2.default.source.SuperMapCloud()
                    });
                    break;
                case "MARKER_LAYER":
                    layer = this.createMarkersLayer(layerInfo);
                    break;
                case "FEATURE_LAYER":
                    if (layerInfo.identifier == "ANIMATORVECTOR") {
                        //todo
                    } else if (layerInfo.identifier == "THEME") {
                        //todo
                    } else {
                        layer = this.createVectorLayer(layerInfo);
                    }
                    break;
                default:
                    throw new Error('unSupported Layer Type');
                    break;
            }
            if (layer) {
                this.addLayer(layer, viewOptions);
            }
        }

        /**
         * Method: getWmtsResolutionsAndMatrixIds
         * 获取WMTS图层的分辨率数组和标识矩阵
         * */

    }, {
        key: 'getWmtsResolutionsAndMatrixIds',
        value: function getWmtsResolutionsAndMatrixIds(wellKnownScaleSet, units, scales, mapOrigin, mapExtent) {
            var resolutions = _olDebug2.default.wellKnownScale.getResolutions(wellKnownScaleSet);
            if (!resolutions && scales) {
                for (var i = 0; i < scales.length; i++) {
                    resolutions.push(_SuperMap2.default.Util.getResolutionFromScaleDpi(scales[i], 90.71446714322, units));
                }
            }
            var origin = _olDebug2.default.wellKnownScale.getOrigin(wellKnownScaleSet);
            if (!origin) {
                origin = mapOrigin;
            }
            var extent = _olDebug2.default.wellKnownScale.getExtent(wellKnownScaleSet);
            if (!extent) {
                extent = mapExtent;
            }
            var matrixIds = _olDebug2.default.wellKnownScale.generateMatrixIds(resolutions.length);
            return {
                resolutions: resolutions,
                origin: origin,
                matrixIds: matrixIds,
                extent: extent
            };
        }
    }, {
        key: 'createTiandituLayer',
        value: function createTiandituLayer(layerInfo, epsgCode) {
            var proj = epsgCode === 4326 ? "c" : "w";
            var tdtURL = "http://t{0-7}.tianditu.com/{type}_{proj}/wmts?";
            var type = layerInfo.type.split('_')[1].toLowerCase();
            if (layerInfo.layerType === 'OVERLAY_LAYER') {
                if (type == "vec") type = "cva";
                if (type == "img") type = "cia";
                if (type == "ter") type = "cta";
            }
            tdtURL = tdtURL.replace("{type}", type).replace("{proj}", proj);
            var layer = new _olDebug2.default.layer.Tile({
                source: new _olDebug2.default.source.Tianditu({
                    url: tdtURL,
                    matrixSet: proj,
                    layer: type,
                    projection: "EPSG:" + epsgCode
                })
            });
            return layer;
        }
    }, {
        key: 'createMarkersLayer',
        value: function createMarkersLayer(layerInfo) {
            var markers = layerInfo.markers || [],
                style = layerInfo.style,
                opacity = layerInfo.opacity,
                marker,
                point,
                size,
                offset,
                icon,
                that = this;
            //todo offset
            var layer = new _olDebug2.default.layer.Vector({
                style: function style(feature) {
                    return _StyleUtils2.default.getStyleFromiPortalMarker(feature.getProperties().icon);
                },
                source: new _olDebug2.default.source.Vector({
                    features: new _olDebug2.default.format.GeoJSON().readFeatures(_olDebug2.default.supermap.Util.toGeoJSON(layerInfo.markers)),
                    wrapX: false
                })
            });

            return layer;
        }

        /**
         * Method: createVectorLayer
         * 创建矢量要素图层
         * */

    }, {
        key: 'createVectorLayer',
        value: function createVectorLayer(layerInfo) {
            var _style = layerInfo.style,
                opacity = layerInfo.opacity,
                isVisible = layerInfo.isVisible;
            //todo readonly = layerInfo.readonly;
            if (!layerInfo.url) {
                var layer = new _olDebug2.default.layer.Vector({
                    style: function style(feature) {
                        return _StyleUtils2.default.getStyleFromiPortalStyle(_style, feature.getGeometry().getType(), feature.getProperties().style);
                    },
                    source: new _olDebug2.default.source.Vector({
                        features: new _olDebug2.default.format.GeoJSON().readFeatures(_olDebug2.default.supermap.Util.toGeoJSON(layerInfo.features)),
                        wrapX: false
                    })
                });

                return layer;
            } else {
                var url = layerInfo.url,
                    datasourceName = layerInfo.name,
                    datasets = layerInfo.features;
                _style = layerInfo.style;
                var me = this;
                for (var setNameIndex = 0; setNameIndex < datasets.length; setNameIndex++) {
                    var dataset = datasets[setNameIndex];
                    if (dataset.visible) {
                        var sqlParam = new _SuperMap2.default.GetFeaturesBySQLParameters({
                            queryParameter: {
                                name: dataset.name + "@" + datasourceName,
                                attributeFilter: "SMID >0"
                            },
                            datasetNames: [datasourceName + ":" + dataset.name]
                        });
                        new _olDebug2.default.supermap.GetFeaturesService(url).getFeaturesBySQL(sqlParam).on("complete", function (serviceResult) {
                            var layer = new _olDebug2.default.layer.Vector({
                                style: function style(feature) {
                                    return _StyleUtils2.default.getStyleFromiPortalStyle(_style, feature.getGeometry().getType(), feature.getProperties().style);
                                },
                                source: new _olDebug2.default.source.Vector({
                                    features: new _olDebug2.default.format.GeoJSON().readFeatures(serviceResult.element.result),
                                    wrapX: false
                                })
                            });
                            me.map.addLayer(layer);
                        });
                    }
                }
            }
        }
    }, {
        key: 'createWmsLayer',
        value: function createWmsLayer(layerInfo) {
            var url = layerInfo.url,
                opacity = layerInfo.opacity,
                subLayers = layerInfo.subLayers;

            if (!subLayers || subLayers === "undefined" || subLayers === "null") {
                subLayers = "0";
            }
            return new _olDebug2.default.layer.Tile({
                opacity: opacity,
                source: new _olDebug2.default.source.TileWMS({
                    url: url,
                    params: {
                        'LAYERS': subLayers,
                        'FORMAT': 'image/png'
                    }
                })
            });
        }
    }]);

    return WebMap;
}(_olDebug2.default.Observable);

exports.default = WebMap;


_olDebug2.default.supermap.WebMap = WebMap;
_olDebug2.default.supermap.WebMap.EventType = {
    WEBMAPLOADEND: 'webmaploadend'
};

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _DataFlowService = __webpack_require__(35);

var _DataFlowService2 = _interopRequireDefault(_DataFlowService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DataFlow = function (_ol$source$Vector) {
    _inherits(DataFlow, _ol$source$Vector);

    function DataFlow(opt_options) {
        _classCallCheck(this, DataFlow);

        var options = opt_options ? opt_options : {};

        var _this = _possibleConstructorReturn(this, (DataFlow.__proto__ || Object.getPrototypeOf(DataFlow)).call(this, {
            attributions: options.attributions || new _olDebug2.default.Attribution({
                html: '© 2017 百度 MapV with <a href="http://iclient.supermapol.com/">SuperMap iClient</a>'
            }),
            ws: options.ws,
            geometry: options.geometry,
            prjCoordSys: options.prjCoordSys,
            excludeField: options.excludeField
        }));

        _this.dataService = new _DataFlowService2.default(options.ws, {
            geometry: options.geometry,
            prjCoordSys: options.prjCoordSys,
            excludeField: options.excludeField
        }).initSubscribe();
        var me = _this;
        me.dataService.on('subscribeSocketConnected', function (e) {
            me.dispatchEvent({ type: "subscribeSuccessed", value: e });
        });
        me.dataService.on('messageSuccessed', function (msg) {
            me._onMessageSuccessed(msg);
        });
        me.dataService.on('setFilterParamSuccessed', function (msg) {
            me.dispatchEvent({ type: "setFilterParamSuccessed", value: msg });
        });
        return _this;
    }

    _createClass(DataFlow, [{
        key: 'setPrjCoordSys',
        value: function setPrjCoordSys(prjCoordSys) {
            this.dataService.setPrjCoordSys(prjCoordSys);
            this.prjCoordSys = prjCoordSys;
            return this;
        }
    }, {
        key: 'setExcludeField',
        value: function setExcludeField(excludeField) {
            this.dataService.setExcludeField(excludeField);
            this.excludeField = excludeField;
            return this;
        }
    }, {
        key: 'setGeometry',
        value: function setGeometry(geometry) {
            this.dataService.setGeometry(geometry);
            this.geometry = geometry;
            return this;
        }
    }, {
        key: '_onMessageSuccessed',
        value: function _onMessageSuccessed(msg) {
            this.clear();
            this.addFeature(new _olDebug2.default.format.GeoJSON().readFeature(msg.value.featureResult));
            this.dispatchEvent({ type: "dataUpdated", value: { source: this, data: msg.featureResult } });
        }
    }]);

    return DataFlow;
}(_olDebug2.default.source.Vector);

exports.default = DataFlow;

_olDebug2.default.source.DataFlow = DataFlow;

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _Util = __webpack_require__(7);

var _Util2 = _interopRequireDefault(_Util);

__webpack_require__(273);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Graphic = function (_ol$source$ImageCanva) {
    _inherits(Graphic, _ol$source$ImageCanva);

    function Graphic(options) {
        _classCallCheck(this, Graphic);

        var _this = _possibleConstructorReturn(this, (Graphic.__proto__ || Object.getPrototypeOf(Graphic)).call(this, {
            attributions: options.attributions,
            canvasFunction: canvasFunctionInternal_,
            logo: options.logo,
            projection: options.projection,
            ratio: options.ratio,
            resolutions: options.resolutions,
            state: options.state
        }));

        _this.canvasContext_ = _Util2.default.createCanvasContext2D();
        _this.imageTransform = [1, 0, 0, 1, 0, 0];
        _this.graphics_ = options.graphics;

        function canvasFunctionInternal_(extent, resolution, pixelRatio, size, projection) {
            var width = Math.round(_olDebug2.default.extent.getWidth(extent) / resolution);
            var height = Math.round(_olDebug2.default.extent.getHeight(extent) / resolution);
            this.canvasContext_.canvas.width = width;
            this.canvasContext_.canvas.height = height;
            this.imageTransform = this.getTransform_(_olDebug2.default.extent.getCenter(extent), resolution, pixelRatio, size);
            var vectorContext = new _olDebug2.default.render.canvas.Immediate(this.canvasContext_, pixelRatio, extent, this.imageTransform, 0);
            //var vectorContext = ol.render.toContext(this.canvasContext_, {pixelRatio:pixelRatio, size:size});
            var graphics = this.getGraphicsInExtent(extent);
            graphics.map(function (graphic) {
                vectorContext.drawFeature(graphic, graphic.getStyle());
            });
            return this.canvasContext_.canvas;
        }
        return _this;
    }

    _createClass(Graphic, [{
        key: 'forEachFeatureAtCoordinate',
        value: function forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, skippedFeatureUids, callback) {
            var graphics = this.getGraphicsInExtent();
            for (var i = 0; i < graphics.length; i++) {
                var center = graphics[i].getGeometry().getCoordinates();
                var image = graphics[i].getStyle().getImage();
                var extent = [];
                extent[0] = center[0] - image.getAnchor()[0] * resolution;
                extent[2] = center[0] + image.getAnchor()[0] * resolution;
                extent[1] = center[1] - image.getAnchor()[1] * resolution;
                extent[3] = center[1] + image.getAnchor()[1] * resolution;
                if (_olDebug2.default.extent.containsCoordinate(extent, coordinate)) {
                    return callback.call(this, graphics[i]);
                }
            }
        }
    }, {
        key: 'getTransform_',
        value: function getTransform_(center, resolution, pixelRatio, size) {
            var dx1 = size[0] / 2;
            var dy1 = size[1] / 2;
            var sx = pixelRatio / resolution;
            var sy = -sx;
            var dx2 = -center[0];
            var dy2 = -center[1];
            return _olDebug2.default.transform.compose(this.imageTransform, dx1, dy1, sx, sy, 0, dx2, dy2);
        }
    }, {
        key: 'getGraphicsInExtent',
        value: function getGraphicsInExtent(extent) {
            var graphics = [];
            if (!extent) {
                this.graphics_.map(function (graphic) {
                    graphics.push(graphic);
                });
                return graphics;
            }
            this.graphics_.map(function (graphic) {
                if (_olDebug2.default.extent.containsExtent(extent, graphic.getGeometry().getExtent())) {
                    graphics.push(graphic);
                }
            });
            return graphics;
        }
    }]);

    return Graphic;
}(_olDebug2.default.source.ImageCanvas);

exports.default = Graphic;


_olDebug2.default.source.Graphic = Graphic;

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

__webpack_require__(15);

__webpack_require__(280);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

_olDebug2.default.supermap = _olDebug2.default.supermap || {};

var VectorTileSuperMapRest = function (_ol$source$VectorTile) {
    _inherits(VectorTileSuperMapRest, _ol$source$VectorTile);

    function VectorTileSuperMapRest(options) {
        _classCallCheck(this, VectorTileSuperMapRest);

        if (options.url === undefined) {
            return _possibleConstructorReturn(_this);
        }
        options.crossOrigin = 'anonymous';
        options.attributions = options.attributions || new _olDebug2.default.Attribution({
            html: 'Tile Data <a href="http://support.supermap.com.cn/product/iServer.aspx">SuperMap iServer</a> with <a href="http://iclient.supermapol.com/">SuperMap iClient</a>'
        });
        var layerUrl = options.url + '/tileFeature.json?';
        if (options.format instanceof _olDebug2.default.format.MVT) {
            layerUrl = options.url + '/tileFeature.mvt?';
        }
        //为url添加安全认证信息片段
        options.serverType = options.serverType || _SuperMap2.default.ServerType.ISERVER;
        layerUrl = appendCredential(layerUrl, options.serverType);
        function appendCredential(url, serverType) {
            var newUrl = url,
                credential,
                value;
            switch (serverType) {
                case _SuperMap2.default.ServerType.ISERVER:
                    value = _SuperMap2.default.SecurityManager.getToken(url);
                    credential = value ? new _SuperMap2.default.Credential(value, "token") : null;
                    break;
                case _SuperMap2.default.ServerType.IPORTAL:
                    value = _SuperMap2.default.SecurityManager.getToken(url);
                    credential = value ? new _SuperMap2.default.Credential(value, "token") : null;
                    if (!credential) {
                        value = _SuperMap2.default.SecurityManager.getKey(url);
                        credential = value ? new _SuperMap2.default.Credential(value, "key") : null;
                    }
                    break;
                case _SuperMap2.default.ServerType.ONLINE:
                    value = _SuperMap2.default.SecurityManager.getKey(url);
                    credential = value ? new _SuperMap2.default.Credential(value, "key") : null;
                    break;
                default:
                    value = _SuperMap2.default.SecurityManager.getToken(url);
                    credential = value ? new _SuperMap2.default.Credential(value, "token") : null;
                    break;
            }
            if (credential) {
                newUrl += "&" + credential.getUrlParameters();
            }
            return newUrl;
        }

        var returnAttributes = true;
        if (options.returnAttributes !== undefined) {
            returnAttributes = options.returnAttributes;
        }
        layerUrl += "&returnAttributes=" + returnAttributes;
        if (options._cache !== undefined) {
            layerUrl += "&_cache=" + options._cache;
        }
        if (options.layersID !== undefined) {
            layerUrl += "&layersID=" + options.layersID;
        }
        if (options.layerNames !== undefined) {
            layerUrl += "&layerNames=" + options.layerNames;
        }
        if (options.expands !== undefined) {
            layerUrl += "&expands=" + options.expands;
        }
        if (options.compressTolerance !== undefined) {
            layerUrl += "&compressTolerance=" + options.compressTolerance;
        }
        if (options.coordinateType !== undefined) {
            layerUrl += "&coordinateType=" + options.coordinateType;
        }
        if (options.returnCutEdges !== undefined) {
            layerUrl += "&returnCutEdges=" + options.returnCutEdges;
        }

        var _this = _possibleConstructorReturn(this, (VectorTileSuperMapRest.__proto__ || Object.getPrototypeOf(VectorTileSuperMapRest)).call(this, {
            attributions: options.attributions,
            cacheSize: options.cacheSize,
            format: options.format || new _olDebug2.default.format.GeoJSON(),
            logo: options.logo,
            overlaps: options.overlaps,
            projection: options.projection,
            state: options.state,
            tileClass: options.tileClass,
            tileGrid: options.tileGrid,
            tilePixelRatio: options.tilePixelRatio,
            tileUrlFunction: tileUrlFunction,
            tileLoadFunction: options.format instanceof _olDebug2.default.format.MVT ? undefined : tileLoadFunction,
            url: options.url,
            urls: options.urls,
            wrapX: options.wrapX !== undefined ? options.wrapX : false
        }));

        var me = _this;

        function tileUrlFunction(tileCoord, pixelRatio, projection) {
            if (!me.tileGrid) {
                me.tileGrid = me.getTileGridForProjection(projection);
            }
            var z = tileCoord[0];
            var x = tileCoord[1];
            var y = -tileCoord[2] - 1;
            var origin = me.tileGrid.getOrigin(z);
            var resolution = me.tileGrid.getResolution(z);
            var dpi = 96;
            var unit = projection.getUnits();
            if (unit === 'degrees') {
                unit = _SuperMap2.default.Unit.DEGREE;
            }
            if (unit === 'm') {
                unit = _SuperMap2.default.Unit.METER;
            }
            var scale = _olDebug2.default.supermap.Util.resolutionToScale(resolution, dpi, unit);
            var tileSize = _olDebug2.default.size.toSize(me.tileGrid.getTileSize(z, me.tmpSize));
            return layerUrl + "&x=" + x + "&y=" + y + "&width=" + tileSize[0] + "&height=" + tileSize[1] + "&scale=" + scale + "&origin={'x':" + origin[0] + ",'y':" + origin[1] + "}";
        }

        function tileLoadFunction(tile, tileUrl) {
            tile.setLoader(function () {
                _SuperMap2.default.FetchRequest.get(tileUrl).then(function (response) {
                    if (tile.getFormat() instanceof _olDebug2.default.format.GeoJSON) {
                        return response.json();
                    }
                }).then(function (tileFeatureJson) {
                    var features = [];
                    if (tile.getFormat() instanceof _olDebug2.default.format.GeoJSON) {
                        tileFeatureJson.recordsets.map(function (recordset) {
                            recordset.features.map(function (feature) {
                                var points = [];
                                var startIndex = 0;
                                for (var i = 0; i < feature.geometry.parts.length; i++) {
                                    var partPointsLength = feature.geometry.parts[i] * 2;
                                    for (var j = 0, index = startIndex; j < partPointsLength; j += 2, index += 2) {
                                        points.push(new _SuperMap2.default.Geometry.Point(feature.geometry.points[index], feature.geometry.points[index + 1]));
                                    }
                                    startIndex += partPointsLength;
                                }
                                feature.geometry.points = points;
                            });
                        });
                        tileFeatureJson.recordsets.map(function (recordset) {
                            recordset.features.map(function (feature) {
                                feature.layerName = recordset.layerName;
                                feature.type = feature.geometry.type;
                                features.push(feature);
                            });
                        });
                        features = tile.getFormat().readFeatures(_olDebug2.default.supermap.Util.toGeoJSON(features));
                    }
                    tile.setFeatures(features);
                    tile.setProjection(new _olDebug2.default.proj.Projection({
                        code: 'TILE_PIXELS',
                        units: 'tile-pixels'
                    }));
                });
            });
        }
        return _this;
    }

    _createClass(VectorTileSuperMapRest, null, [{
        key: 'optionsFromMapJSON',
        value: function optionsFromMapJSON(url, mapJSONObj) {
            var options = {};
            options.url = url;
            options.crossOrigin = 'anonymous';
            var extent = [mapJSONObj.bounds.left, mapJSONObj.bounds.bottom, mapJSONObj.bounds.right, mapJSONObj.bounds.top];
            var resolutions = getResolutions();

            function getResolutions() {
                var level = 17;
                var dpi = 96;
                var width = extent[2] - extent[0];
                var height = extent[3] - extent[1];
                var tileSize = width >= height ? width : height;
                var maxReolution;
                if (tileSize === width) {
                    maxReolution = tileSize / mapJSONObj.viewer.width;
                } else {
                    maxReolution = tileSize / mapJSONObj.viewer.height;
                }
                var resolutions = [];
                var unit = _SuperMap2.default.Unit.METER;
                if (mapJSONObj.coordUnit === _SuperMap2.default.Unit.DEGREE) {
                    unit = _SuperMap2.default.Unit.DEGREE;
                }
                if (mapJSONObj.visibleScales.length > 0) {
                    var scales = initScales(mapJSONObj);
                    for (var i = 0; i < scales.length; i++) {
                        resolutions.push(_olDebug2.default.supermap.Util.scaleToResolution(scales[i], dpi, unit));
                    }
                } else {
                    for (var i = 0; i < level; i++) {
                        resolutions.push(maxReolution / Math.pow(2, i));
                    }
                }
                return resolutions;
            }

            function initScales(mapJSONObj) {
                var scales = mapJSONObj.visibleScales;
                if (!scales) {
                    return null;
                }
                var viewBounds = mapJSONObj.viewBounds,
                    coordUnit = mapJSONObj.coordUnit,
                    viewer = mapJSONObj.viewer,
                    scale = mapJSONObj.scale,
                    datumAxis = mapJSONObj.datumAxis;
                //将jsonObject转化为SuperMap.Bounds，用于计算dpi。
                viewBounds = new _SuperMap2.default.Bounds(viewBounds.left, viewBounds.bottom, viewBounds.right, viewBounds.top);
                viewer = new _SuperMap2.default.Size(viewer.rightBottom.x, viewer.rightBottom.y);
                coordUnit = coordUnit.toLowerCase();
                var units = coordUnit;
                var datumAxis = datumAxis || 6378137;
                var dpi = _SuperMap2.default.Util.calculateDpi(viewBounds, viewer, scale, units, datumAxis);
                var resolutions = _resolutionsFromScales(scales);
                var len = resolutions.length;
                scales = [len];
                for (var i = 0; i < len; i++) {
                    scales[i] = _SuperMap2.default.Util.getScaleFromResolutionDpi(resolutions[i], dpi, units, datumAxis);
                }

                function _resolutionsFromScales(scales) {
                    if (scales === null) {
                        return;
                    }
                    var resolutions, len;
                    len = scales.length;
                    resolutions = [len];
                    for (var i = 0; i < len; i++) {
                        resolutions[i] = _SuperMap2.default.Util.getResolutionFromScaleDpi(scales[i], dpi, units, datumAxis);
                    }
                    return resolutions;
                }

                return scales;
            }

            options.tileGrid = new _olDebug2.default.tilegrid.TileGrid({
                extent: extent,
                resolutions: resolutions
            });
            return options;
        }
    }]);

    return VectorTileSuperMapRest;
}(_olDebug2.default.source.VectorTile);

exports.default = VectorTileSuperMapRest;

_olDebug2.default.source.VectorTileSuperMapRest = VectorTileSuperMapRest;

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _MapvLayer = __webpack_require__(275);

var _MapvLayer2 = _interopRequireDefault(_MapvLayer);

var _Util = __webpack_require__(7);

var _Util2 = _interopRequireDefault(_Util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Mapv = function (_ol$source$ImageCanva) {
    _inherits(Mapv, _ol$source$ImageCanva);

    function Mapv(opt_options) {
        _classCallCheck(this, Mapv);

        var options = opt_options ? opt_options : {};

        var _this = _possibleConstructorReturn(this, (Mapv.__proto__ || Object.getPrototypeOf(Mapv)).call(this, {
            attributions: options.attributions || new _olDebug2.default.Attribution({
                html: '© 2017 百度 MapV with <a href="http://iclient.supermapol.com/">SuperMap iClient</a>'
            }),
            canvasFunction: canvasFunctionInternal_,
            logo: options.logo,
            projection: options.projection,
            ratio: options.ratio,
            resolutions: options.resolutions,
            state: options.state
        }));

        _this.layer = new _MapvLayer2.default(opt_options.map, opt_options.dataSet, opt_options.mapvOptions, _this);
        _this.layer.canvasLayer.draw();
        _this.map = opt_options.map;

        function canvasFunctionInternal_(extent, resolution, pixelRatio, size, projection) {
            if (this.layer) {
                if (!this.layer.isEnabledTime()) {
                    this.layer.canvasLayer.draw();
                }
                var mapWidth = Math.ceil(_olDebug2.default.extent.getWidth(extent) / resolution * pixelRatio);
                var mapHeight = Math.ceil(_olDebug2.default.extent.getHeight(extent) / resolution * pixelRatio);
                var width = this.map.getSize()[0] * pixelRatio;
                var height = this.map.getSize()[1] * pixelRatio;
                var canvas = this.layer.canvasLayer.canvas;
                var context = _Util2.default.createCanvasContext2D(mapWidth, mapHeight);
                context.drawImage(canvas, 0, 0, width, height, (mapWidth - width) / 2, (mapHeight - height) / 2, width, height);
                if (this.resolution !== resolution || JSON.stringify(this.extent) !== JSON.stringify(extent)) {
                    this.resolution = resolution;
                    this.extent = extent;
                }
                return context.canvas;
            }
        }
        return _this;
    }

    _createClass(Mapv, [{
        key: 'update',
        value: function update(options) {
            this.layer.update(options);
            this.changed();
        }
    }]);

    return Mapv;
}(_olDebug2.default.source.ImageCanvas);

exports.default = Mapv;


_olDebug2.default.source.Mapv = Mapv;

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _geoFeature = __webpack_require__(48);

var _geoFeature2 = _interopRequireDefault(_geoFeature);

var _ThemeVector = __webpack_require__(26);

var _ThemeVector2 = _interopRequireDefault(_ThemeVector);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Range = function (_GeoFeature) {
    _inherits(Range, _GeoFeature);

    function Range(name, opt_options) {
        _classCallCheck(this, Range);

        var _this = _possibleConstructorReturn(this, (Range.__proto__ || Object.getPrototypeOf(Range)).call(this, name, opt_options));

        _this.style = new Object();
        _this.styleGroups = [];
        _this.themeField = null;
        return _this;
    }

    _createClass(Range, [{
        key: 'destroy',
        value: function destroy() {
            this.style = null;
            this.themeField = null;
            this.styleGroups = null;
            _geoFeature2.default.prototype.destroy.apply(this, arguments);
        }
    }, {
        key: 'addFeatures',
        value: function addFeatures(features) {
            //数组
            if (!_SuperMap2.default.Util.isArray(features)) {
                features = [features];
            }
            var event = { features: features };
            var ret = this.dispatchEvent({ type: 'beforefeaturesadded', value: event });
            if (ret === false) {
                return;
            }
            features = event.features;
            var featuresFailAdded = [];
            for (var i = 0, len = features.length; i < len; i++) {
                this.features.push(new _SuperMap2.default.REST.ServerFeature.fromJson(features[i]).toFeature());
            }
            var succeed = featuresFailAdded.length == 0 ? true : false;
            this.dispatchEvent({ type: 'featuresadded', value: { features: featuresFailAdded, succeed: succeed } });
            if (!this.isCustomSetMaxCacheCount) {
                this.maxCacheCount = this.features.length * 5;
            }
            //绘制专题要素
            if (this.renderer) {
                this.redrawThematicFeatures(this.map.getView().calculateExtent());
            }
        }
    }, {
        key: 'createThematicFeature',
        value: function createThematicFeature(feature) {
            //赋 style
            var style = this.getStyleByData(feature);
            //创建专题要素时的可选参数
            var options = {};
            options.nodesClipPixel = this.nodesClipPixel;
            options.isHoverAble = this.isHoverAble;
            options.isMultiHover = this.isMultiHover;
            options.isClickAble = this.isClickAble;
            options.highlightStyle = _SuperMap2.default.Feature.ShapeFactory.transformStyle(this.highlightStyle);

            //将数据转为专题要素（Vector）
            var thematicFeature = new _ThemeVector2.default(feature, this, _SuperMap2.default.Feature.ShapeFactory.transformStyle(style), options);

            //直接添加图形到渲染器
            for (var m = 0; m < thematicFeature.shapes.length; m++) {
                this.renderer.addShape(thematicFeature.shapes[m]);
            }

            return thematicFeature;
        }
    }, {
        key: 'getStyleByData',
        value: function getStyleByData(fea) {
            var style = {};
            var feature = fea;
            style = _SuperMap2.default.Util.copyAttributesWithClip(style, this.style);
            if (this.themeField && this.styleGroups && this.styleGroups.length > 0 && feature.attributes) {
                var Sf = this.themeField;
                var Attrs = feature.attributes;
                var Gro = this.styleGroups;
                var isSfInAttrs = false; //指定的 themeField 是否是 feature 的属性字段之一
                var attr = null; //属性值

                for (var property in Attrs) {
                    if (Sf === property) {
                        isSfInAttrs = true;
                        attr = Attrs[property];
                        break;
                    }
                }
                //判断属性值是否属于styleGroups的某一个范围，以便对获取分组 style
                if (isSfInAttrs) {
                    for (var i = 0, len = Gro.length; i < len; i++) {
                        if (attr >= Gro[i].start && attr < Gro[i].end) {
                            //feature.style = SuperMap.Util.copyAttributes(feature.style, this.defaultStyle);
                            var sty1 = Gro[i].style;
                            style = _SuperMap2.default.Util.copyAttributesWithClip(style, sty1);
                        }
                    }
                }
            }
            if (feature.style && this.isAllowFeatureStyle === true) {
                style = _SuperMap2.default.Util.copyAttributesWithClip(feature.style);
            }
            return style;
        }
    }, {
        key: 'canvasFunctionInternal_',
        value: function canvasFunctionInternal_(extent, resolution, pixelRatio, size, projection) {
            return _geoFeature2.default.prototype.canvasFunctionInternal_.apply(this, arguments);
        }
    }]);

    return Range;
}(_geoFeature2.default);

exports.default = Range;


_olDebug2.default.source.Range = Range;

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _graph = __webpack_require__(276);

var _graph2 = _interopRequireDefault(_graph);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RankSymbol = function (_Graph) {
    _inherits(RankSymbol, _Graph);

    function RankSymbol(name, symbolType, opt_options) {
        _classCallCheck(this, RankSymbol);

        var _this = _possibleConstructorReturn(this, (RankSymbol.__proto__ || Object.getPrototypeOf(RankSymbol)).call(this, name, symbolType, opt_options));

        _this.symbolSetting = {};
        _this.themeField = null;
        _this.symbolType = symbolType;
        return _this;
    }

    _createClass(RankSymbol, [{
        key: 'destroy',
        value: function destroy() {
            this.symbolType = null;
            this.symbolSetting = null;
            this.themeField = null;
            _SuperMap2.default.Layer.Graph.prototype.destroy.apply(this, arguments);
        }
    }, {
        key: 'setSymbolType',
        value: function setSymbolType(symbolType) {
            this.symbolType = symbolType;
            this.redraw();
        }
    }, {
        key: 'createThematicFeature',
        value: function createThematicFeature(feature) {
            var thematicFeature;
            // 检查图形创建条件并创建图形
            if (_SuperMap2.default.Feature.Theme[this.symbolType] && this.themeField && this.symbolSetting) {
                thematicFeature = new _SuperMap2.default.Feature.Theme[this.symbolType](feature, this, [this.themeField], this.symbolSetting);
            }
            // thematicFeature 是否创建成功
            if (!thematicFeature) return false;
            // 对专题要素执行图形装载
            thematicFeature.assembleShapes();
            return thematicFeature;
        }
    }, {
        key: 'canvasFunctionInternal_',
        value: function canvasFunctionInternal_(extent, resolution, pixelRatio, size, projection) {
            return _graph2.default.prototype.canvasFunctionInternal_.apply(this, arguments);
        }
    }]);

    return RankSymbol;
}(_graph2.default);

exports.default = RankSymbol;


_olDebug2.default.source.RankSymbol = RankSymbol;

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _geoFeature = __webpack_require__(48);

var _geoFeature2 = _interopRequireDefault(_geoFeature);

var _ThemeVector = __webpack_require__(26);

var _ThemeVector2 = _interopRequireDefault(_ThemeVector);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Unique = function (_GeoFeature) {
    _inherits(Unique, _GeoFeature);

    function Unique(name, opt_options) {
        _classCallCheck(this, Unique);

        var _this = _possibleConstructorReturn(this, (Unique.__proto__ || Object.getPrototypeOf(Unique)).call(this, name, opt_options));

        _this.themeField = null;
        _this.style = new Object();
        _this.styleGroups = new Array();
        return _this;
    }

    _createClass(Unique, [{
        key: 'destroy',
        value: function destroy() {
            this.style = null;
            this.themeField = null;
            this.styleGroups = null;
            _geoFeature2.default.prototype.destroy.apply(this, arguments);
        }
    }, {
        key: 'addFeatures',
        value: function addFeatures(features) {
            //数组
            if (!_SuperMap2.default.Util.isArray(features)) {
                features = [features];
            }
            var event = { features: features };
            this.dispatchEvent({ type: 'beforefeaturesadded', value: event });
            features = event.features;
            var featuresFailAdded = [];
            for (var i = 0, len = features.length; i < len; i++) {
                this.features.push(this.toiClientFeature(features[i]));
            }
            var succeed = featuresFailAdded.length == 0 ? true : false;
            this.dispatchEvent({ type: 'featuresadded', value: { features: featuresFailAdded, succeed: succeed } });
            if (!this.isCustomSetMaxCacheCount) {
                this.maxCacheCount = this.features.length * 5;
            }
            //绘制专题要素
            if (this.renderer) {
                this.redrawThematicFeatures(this.map.getView().calculateExtent());
            }
        }
    }, {
        key: 'createThematicFeature',
        value: function createThematicFeature(feature) {
            var style = this.getStyleByData(feature);
            //创建专题要素时的可选参数
            var options = {};
            options.nodesClipPixel = this.nodesClipPixel;
            options.isHoverAble = this.isHoverAble;
            options.isMultiHover = this.isMultiHover;
            options.isClickAble = this.isClickAble;
            options.highlightStyle = _SuperMap2.default.Feature.ShapeFactory.transformStyle(this.highlightStyle);
            //将数据转为专题要素（Vector）
            var thematicFeature = new _ThemeVector2.default(feature, this, _SuperMap2.default.Feature.ShapeFactory.transformStyle(style), options);
            //直接添加图形到渲染器
            for (var m = 0; m < thematicFeature.shapes.length; m++) {
                this.renderer.addShape(thematicFeature.shapes[m]);
            }
            return thematicFeature;
        }
    }, {
        key: 'getStyleByData',
        value: function getStyleByData(fea) {
            var style = {};
            var feature = fea;
            style = _SuperMap2.default.Util.copyAttributesWithClip(style, this.style);
            if (this.themeField && this.styleGroups && this.styleGroups.length > 0 && feature.attributes) {
                var tf = this.themeField;
                var Attrs = feature.attributes;
                var Gro = this.styleGroups;
                var isSfInAttrs = false; //指定的 themeField 是否是 feature 的属性字段之一
                var attr = null; //属性值
                for (var property in Attrs) {
                    if (tf === property) {
                        isSfInAttrs = true;
                        attr = Attrs[property];
                        break;
                    }
                }
                //判断属性值是否属于styleGroups的某一个范围，以便对获取分组 style
                if (isSfInAttrs) {
                    for (var i = 0, len = Gro.length; i < len; i++) {
                        if (attr.toString() === Gro[i].value.toString()) {
                            //feature.style = SuperMap.Util.copyAttributes(feature.style, this.defaultStyle);
                            var sty1 = Gro[i].style;
                            style = _SuperMap2.default.Util.copyAttributesWithClip(style, sty1);
                        }
                    }
                }
            }
            if (feature.style && this.isAllowFeatureStyle === true) {
                style = _SuperMap2.default.Util.copyAttributesWithClip(feature.style);
            }
            return style;
        }
    }, {
        key: 'canvasFunctionInternal_',
        value: function canvasFunctionInternal_(extent, resolution, pixelRatio, size, projection) {
            return _geoFeature2.default.prototype.canvasFunctionInternal_.apply(this, arguments);
        }
    }]);

    return Unique;
}(_geoFeature2.default);

exports.default = Unique;


_olDebug2.default.source.Unique = Unique;

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServiceBase2 = __webpack_require__(4);

var _ServiceBase3 = _interopRequireDefault(_ServiceBase2);

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _AddressMatchService = __webpack_require__(88);

var _AddressMatchService2 = _interopRequireDefault(_AddressMatchService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class ol.supermap.AddressService
 * @constructs ol.supermap.AddressService
 * @classdesc
 * 地址匹配服务
 * @example 用法：
 *      new ol.supermap.AddressMatchService(url,options)
 *      .code(function(result){
 *          //doSomething
 *      })
 * @api
 */
var AddressMatchService = function (_ServiceBase) {
    _inherits(AddressMatchService, _ServiceBase);

    function AddressMatchService(url, options) {
        _classCallCheck(this, AddressMatchService);

        return _possibleConstructorReturn(this, (AddressMatchService.__proto__ || Object.getPrototypeOf(AddressMatchService)).call(this, url, options));
    }

    /**
     * @method ol.supermap.AddressMatchService.prototype.code
     * @description 获取正向地址匹配结果。
     * @param params 正向匹配参数。
     * @param callback 请求结果的回调函数。
     * @param resultFormat 返回的结果类型（默认为GeoJSON）。
     */


    _createClass(AddressMatchService, [{
        key: 'code',
        value: function code(params, callback, resultFormat) {
            var me = this,
                format = me._processFormat(resultFormat);
            var addressMatchService = new _AddressMatchService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: format
            });
            addressMatchService.code(me.url + '/geocoding', params);
            return me;
        }

        /**
         * @method ol.supermap.AddressMatchService.prototype.decode
         * @description 获取反向地址匹配结果。
         * @param params 反向匹配参数。
         * @param callback 请求结果的回调函数。
         * @param resultFormat 返回的结果类型（默认为GeoJSON）。
         */

    }, {
        key: 'decode',
        value: function decode(params, callback, resultFormat) {
            var me = this,
                format = me._processFormat(resultFormat);
            var addressMatchService = new _AddressMatchService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: format
            });
            addressMatchService.decode(me.url + '/geodecoding', params);
            return me;
        }
    }, {
        key: '_processFormat',
        value: function _processFormat(resultFormat) {
            return resultFormat ? resultFormat : _SuperMap2.default.DataFormat.GEOJSON;
        }
    }]);

    return AddressMatchService;
}(_ServiceBase3.default);

exports.default = AddressMatchService;

_olDebug2.default.supermap.AddressMatchService = AddressMatchService;

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServiceBase2 = __webpack_require__(4);

var _ServiceBase3 = _interopRequireDefault(_ServiceBase2);

var _ChartQueryService = __webpack_require__(103);

var _ChartQueryService2 = _interopRequireDefault(_ChartQueryService);

var _ChartFeatureInfoSpecsService = __webpack_require__(100);

var _ChartFeatureInfoSpecsService2 = _interopRequireDefault(_ChartFeatureInfoSpecsService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class ol.supermap.ChartService
 * @description openlayer的海图服务。
 * @augments ol.supermap.ServiceBase
 * @example
 * 用法：
 *      new ol.supermap.ChartService(url)
 *      .queryChart(param,function(result){
 *          //doSomething
 *      })
 * @param url - {String} 与客户端交互的海图服务地址。
 * @param options -{Object} 交互时所需可选参数。
 */
var ChartService = function (_ServiceBase) {
    _inherits(ChartService, _ServiceBase);

    function ChartService(url, options) {
        _classCallCheck(this, ChartService);

        return _possibleConstructorReturn(this, (ChartService.__proto__ || Object.getPrototypeOf(ChartService)).call(this, url, options));
    }

    /**
     * @function ol.supermap.ChartService.queryChart
     * @description 查询海图服务。
     * @param params -{SuperMap.ChartQueryParameters} 海图查询所需参数类。
     * @param callback -{function} 回调函数。
     * @param resultFormat -{SuperMap.DataFormat} 返回的结果格式类型。
     */


    _createClass(ChartService, [{
        key: 'queryChart',
        value: function queryChart(params, callback, resultFormat) {
            var me = this,
                param = me._processParams(params),
                format = me._processFormat(resultFormat);
            var chartQueryService = new _ChartQueryService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: format
            });

            chartQueryService.processAsync(param);
            return me;
        }

        /**
         * @function ol.supermap.ChartService.prototype.CDgetChartFeatureInfo
         * @description 获取海图物标信息服务。
         * @param callback -{function} 回调函数
         */

    }, {
        key: 'getChartFeatureInfo',
        value: function getChartFeatureInfo(callback) {
            var me = this,
                url = me.url.concat();
            url += "/chartFeatureInfoSpecs";
            var chartFeatureInfoSpecsService = new _ChartFeatureInfoSpecsService2.default(url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                }
            });
            chartFeatureInfoSpecsService.processAsync();
            return me;
        }
    }, {
        key: '_processParams',
        value: function _processParams(params) {
            if (!params) {
                return {};
            }
            params.returnContent = params.returnContent == null ? true : params.returnContent;
            if (params.filter) {
                params.chartQueryFilterParameters = _olDebug2.default.supermap.Util.isArray(params.filter) ? params.filter : [params.filter];
            }
            if (params.bounds) {
                params.bounds = new _SuperMap2.default.Bounds(params.bounds[0], params.bounds[1], params.bounds[2], params.bounds[3]);
            }
        }
    }, {
        key: '_processFormat',
        value: function _processFormat(resultFormat) {
            return resultFormat ? resultFormat : _SuperMap2.default.DataFormat.GEOJSON;
        }
    }]);

    return ChartService;
}(_ServiceBase3.default);

exports.default = ChartService;


_olDebug2.default.supermap.ChartService = ChartService;

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _Util = __webpack_require__(7);

var _Util2 = _interopRequireDefault(_Util);

var _ServiceBase2 = __webpack_require__(4);

var _ServiceBase3 = _interopRequireDefault(_ServiceBase2);

var _GetFeaturesByIDsService = __webpack_require__(162);

var _GetFeaturesByIDsService2 = _interopRequireDefault(_GetFeaturesByIDsService);

var _GetFeaturesBySQLService = __webpack_require__(164);

var _GetFeaturesBySQLService2 = _interopRequireDefault(_GetFeaturesBySQLService);

var _GetFeaturesByBoundsService = __webpack_require__(156);

var _GetFeaturesByBoundsService2 = _interopRequireDefault(_GetFeaturesByBoundsService);

var _GetFeaturesByBufferService = __webpack_require__(158);

var _GetFeaturesByBufferService2 = _interopRequireDefault(_GetFeaturesByBufferService);

var _GetFeaturesByGeometryService = __webpack_require__(160);

var _GetFeaturesByGeometryService2 = _interopRequireDefault(_GetFeaturesByGeometryService);

var _EditFeaturesService = __webpack_require__(118);

var _EditFeaturesService2 = _interopRequireDefault(_EditFeaturesService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class ol.supermap.FeatureService
 * @constructs ol.supermap.FeatureService
 * @classdesc
 * 数据集类。
 * 提供：ID查询，范围查询，SQL查询，几何查询，bounds查询，缓冲区查询，地物编辑
 * @example 用法：
 *      new ol.supermap.FeatureService(url)
 *      .getFeaturesByIDs(param,function(result){
 *          //doSomething
 *      })
 * @api
 */
var FeatureService = function (_ServiceBase) {
    _inherits(FeatureService, _ServiceBase);

    function FeatureService(url, options) {
        _classCallCheck(this, FeatureService);

        return _possibleConstructorReturn(this, (FeatureService.__proto__ || Object.getPrototypeOf(FeatureService)).call(this, url, options));
    }

    /**
     * @method ol.supermap.FeatureService.prototype.getFeaturesByIDs
     * @description 数据集ID查询服务
     * @param params {SuperMap.GetFeaturesByIDsParameters}
     * @param callback
     * @param resultFormat {SuperMap.DataFormat}
     */


    _createClass(FeatureService, [{
        key: 'getFeaturesByIDs',
        value: function getFeaturesByIDs(params, callback, resultFormat) {
            var me = this;
            var getFeaturesByIDsService = new _GetFeaturesByIDsService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            getFeaturesByIDsService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @method ol.supermap.FeatureService.prototype.getFeaturesByBounds
         * @description 数据集Bounds查询服务
         * @param params {SuperMap.GetFeaturesByBoundsParameters}
         * @param callback
         * @param resultFormat {SuperMap.DataFormat}
         */

    }, {
        key: 'getFeaturesByBounds',
        value: function getFeaturesByBounds(params, callback, resultFormat) {
            var me = this;
            var getFeaturesByBoundsService = new _GetFeaturesByBoundsService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            getFeaturesByBoundsService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @method ol.supermap.FeatureService.prototype.getFeaturesByBuffer
         * @description 数据集Buffer查询服务
         * @param params {SuperMap.GetFeaturesByBufferParameters}
         * @param callback
         * @param resultFormat {SuperMap.DataFormat}
         */

    }, {
        key: 'getFeaturesByBuffer',
        value: function getFeaturesByBuffer(params, callback, resultFormat) {
            var me = this;
            var getFeatureService = new _GetFeaturesByBufferService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            getFeatureService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @method ol.supermap.FeatureService.prototype.getFeaturesBySQL
         * @description 数据集SQL查询服务
         * @param params {SuperMap.GetFeaturesBySQLParameters}
         * @param callback
         * @param resultFormat {SuperMap.DataFormat}
         */

    }, {
        key: 'getFeaturesBySQL',
        value: function getFeaturesBySQL(params, callback, resultFormat) {
            var me = this;
            var getFeatureBySQLService = new _GetFeaturesBySQLService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });

            getFeatureBySQLService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @method ol.supermap.FeatureService.prototype.getFeaturesByGeometry
         * @description 数据集几何查询服务类
         * @param params {SuperMap.GetFeaturesByGeometryParameters}
         * @param callback
         * @param resultFormat {SuperMap.DataFormat}
         */

    }, {
        key: 'getFeaturesByGeometry',
        value: function getFeaturesByGeometry(params, callback, resultFormat) {
            var me = this;
            var getFeaturesByGeometryService = new _GetFeaturesByGeometryService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            getFeaturesByGeometryService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @method ol.supermap.FeatureService.prototype.editFeatures
         * @description 地物编辑服务
         * @param params {SuperMap.EditFeaturesParameters}
         * @param callback
         */

    }, {
        key: 'editFeatures',
        value: function editFeatures(params, callback) {
            if (!params || !params.dataSourceName || !params.dataSetName) {
                return;
            }
            var me = this,
                url = me.url,
                dataSourceName = params.dataSourceName,
                dataSetName = params.dataSetName;

            url += "/datasources/" + dataSourceName + "/datasets/" + dataSetName;
            var editFeatureService = new _EditFeaturesService2.default(url, {
                serverType: me.options.serverType,
                eventListeners: {
                    processCompleted: callback,
                    processFailed: callback
                }
            });
            editFeatureService.processAsync(me._processParams(params));
            return me;
        }
    }, {
        key: '_processParams',
        value: function _processParams(params) {
            if (!params) {
                return {};
            }
            var me = this;
            params.returnContent = params.returnContent == null ? true : params.returnContent;
            params.fromIndex = params.fromIndex ? params.fromIndex : 0;
            params.toIndex = params.toIndex ? params.toIndex : -1;
            if (params.bounds) {
                params.bounds = new _SuperMap2.default.Bounds(params.bounds[0], params.bounds[1], params.bounds[2], params.bounds[3]);
            }
            if (params.geometry) {
                params.geometry = _Util2.default.toSuperMapGeometry(JSON.parse(new _olDebug2.default.format.GeoJSON().writeGeometry(params.geometry)));
            }
            if (params.editType) {
                params.editType = params.editType.toLowerCase();
            }
            if (params.features) {
                var features = [];
                if (_Util2.default.isArray(params.features)) {
                    params.features.map(function (feature) {
                        features.push(me._createServerFeature(feature));
                    });
                } else {
                    features.push(me._createServerFeature(params.features));
                }
                params.features = features;
            }
            return params;
        }
    }, {
        key: '_createServerFeature',
        value: function _createServerFeature(geoFeature) {
            var feature = {},
                fieldNames = [],
                fieldValues = [];
            var properties = geoFeature.getProperties();
            for (var key in properties) {
                if (key === geoFeature.getGeometryName()) {
                    continue;
                }
                fieldNames.push(key);
                fieldValues.push(properties[key]);
            }
            feature.fieldNames = fieldNames;
            feature.fieldValues = fieldValues;
            if (geoFeature.getId()) {
                feature.id = geoFeature.getId();
            }
            feature.geometry = _Util2.default.toSuperMapGeometry(new _olDebug2.default.format.GeoJSON().writeFeatureObject(geoFeature));
            return feature;
        }
    }, {
        key: '_processFormat',
        value: function _processFormat(resultFormat) {
            return resultFormat ? resultFormat : _SuperMap2.default.DataFormat.GEOJSON;
        }
    }]);

    return FeatureService;
}(_ServiceBase3.default);

exports.default = FeatureService;

_olDebug2.default.supermap.FeatureService = FeatureService;

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _Util = __webpack_require__(7);

var _Util2 = _interopRequireDefault(_Util);

var _ServiceBase2 = __webpack_require__(4);

var _ServiceBase3 = _interopRequireDefault(_ServiceBase2);

var _GetFieldsService = __webpack_require__(165);

var _GetFieldsService2 = _interopRequireDefault(_GetFieldsService);

var _FieldStatisticService = __webpack_require__(131);

var _FieldStatisticService2 = _interopRequireDefault(_FieldStatisticService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class ol.supermap.FieldService
 * @constructs ol.supermap.FieldService
 * @classdesc
 * 字段服务类
 * @example 用法：
 *      new ol.supermap.FieldService(url).getFields(function(result){
 *           //doSomething
 *      });
 * @api
 */
var FieldService = function (_ServiceBase) {
    _inherits(FieldService, _ServiceBase);

    function FieldService(url, options) {
        _classCallCheck(this, FieldService);

        var _this = _possibleConstructorReturn(this, (FieldService.__proto__ || Object.getPrototypeOf(FieldService)).call(this, url, options));

        _this.options.dataSourceName = options.dataSourceName;
        _this.options.dataSetName = options.dataSetName;
        return _this;
    }

    /**
     * @method ol.supermap.FieldService.prototype.getFields
     * @description 字段查询服务
     * @param callback
     */


    _createClass(FieldService, [{
        key: 'getFields',
        value: function getFields(callback) {
            var me = this;
            var getFieldsService = new _GetFieldsService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                datasource: me.options.dataSourceName,
                dataset: me.options.dataSetName
            });
            getFieldsService.processAsync();
            return me;
        }

        /**
         * @method ol.supermap.FieldService.prototype.getFieldStatisticsInfo
         * @description 字段统计服务
         * @param params {SuperMap.FieldStatisticsParameters}
         * @param callback
         */

    }, {
        key: 'getFieldStatisticsInfo',
        value: function getFieldStatisticsInfo(params, callback) {
            var me = this,
                fieldName = params.fieldName,
                modes = params.statisticMode;
            if (modes && !_Util2.default.isArray(modes)) {
                modes = [modes];
            }
            me.currentStatisticResult = { fieldName: fieldName };
            me._statisticsCallback = callback;
            //针对每种统计方式分别进行请求
            for (var mode in modes) {
                me.currentStatisticResult[modes[mode]] = null;
                me._fieldStatisticRequest(fieldName, modes[mode]);
            }
            return me;
        }
    }, {
        key: '_fieldStatisticRequest',
        value: function _fieldStatisticRequest(fieldName, statisticMode) {
            var me = this;
            var statisticService = new _FieldStatisticService2.default(me.url, {
                eventListeners: {
                    scope: me,
                    processCompleted: me._processCompleted,
                    processFailed: me._statisticsCallback
                },
                datasource: me.options.dataSourceName,
                dataset: me.options.dataSetName,
                field: fieldName,
                statisticMode: statisticMode
            });
            statisticService.processAsync();
        }
    }, {
        key: '_processCompleted',
        value: function _processCompleted(fieldStatisticResult) {
            var me = this;
            var getAll = true,
                result = fieldStatisticResult.result;
            if (this.currentStatisticResult) {
                if (null == me.currentStatisticResult[result.mode]) {
                    this.currentStatisticResult[result.mode] = result.result;
                }
            }
            for (var mode in me.currentStatisticResult) {
                if (null == me.currentStatisticResult[mode]) {
                    getAll = false;
                    break;
                }
            }
            if (getAll) {
                me._statisticsCallback({ result: me.currentStatisticResult });
            }
        }
    }]);

    return FieldService;
}(_ServiceBase3.default);

exports.default = FieldService;

_olDebug2.default.supermap.FieldService = FieldService;

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _ServiceBase2 = __webpack_require__(4);

var _ServiceBase3 = _interopRequireDefault(_ServiceBase2);

var _GetGridCellInfosService = __webpack_require__(167);

var _GetGridCellInfosService2 = _interopRequireDefault(_GetGridCellInfosService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class ol.supermap.GridCellInfosService
 * @constructs ol.supermap.GridCellInfosService
 * @classdesc
 * 数据栅格查询服务
 * @example 用法：
 *      new ol.superMap.GridCellInfosService(url)
 *      .getGridCellInfos(param,function(result){
 *           //doSomething
 *      })
 * @api
 */
var GridCellInfosService = function (_ServiceBase) {
    _inherits(GridCellInfosService, _ServiceBase);

    function GridCellInfosService(url, options) {
        _classCallCheck(this, GridCellInfosService);

        return _possibleConstructorReturn(this, (GridCellInfosService.__proto__ || Object.getPrototypeOf(GridCellInfosService)).call(this, url, options));
    }

    /**
     * @method ol.supermap.GridCellInfosService.prototype.getGridCellInfos
     * @param params {SuperMap.GetGridCellInfosParameters}
     * @param callback
     */


    _createClass(GridCellInfosService, [{
        key: 'getGridCellInfos',
        value: function getGridCellInfos(params, callback) {
            if (!params) {
                return null;
            }
            var me = this;
            var gridCellQueryService = new _GetGridCellInfosService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                }
            });
            gridCellQueryService.processAsync(params);
            return me;
        }
    }]);

    return GridCellInfosService;
}(_ServiceBase3.default);

exports.default = GridCellInfosService;

_olDebug2.default.supermap.GridCellInfosService = GridCellInfosService;

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _ServiceBase2 = __webpack_require__(4);

var _ServiceBase3 = _interopRequireDefault(_ServiceBase2);

var _GetLayersInfoService = __webpack_require__(168);

var _GetLayersInfoService2 = _interopRequireDefault(_GetLayersInfoService);

var _SetLayerInfoService = __webpack_require__(210);

var _SetLayerInfoService2 = _interopRequireDefault(_SetLayerInfoService);

var _SetLayersInfoService = __webpack_require__(214);

var _SetLayersInfoService2 = _interopRequireDefault(_SetLayersInfoService);

var _SetLayerStatusService = __webpack_require__(212);

var _SetLayerStatusService2 = _interopRequireDefault(_SetLayerStatusService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class ol.supermap.LayerInfoService
 * @description 图层信息服务类
 * @augments ol.supermap.ServiceBase
 * @example
 * 用法：
 *      new ol.supermap.LayerInfoService(url).getLayersInfo(function(result){
 *           //doSomething
 *      })
 * @param url - {String} 与客户端交互的地图服务地址。请求地图服务,URL 应为：<br>
 *               http://{服务器地址}:{服务端口号}/iserver/services/{地图服务名}/rest/maps/{地图名}/tempLayersSet/{tempLayerID}/Rivers@World@@World"；
 * @param options - {Object}  互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var LayerInfoService = function (_ServiceBase) {
    _inherits(LayerInfoService, _ServiceBase);

    function LayerInfoService(url, options) {
        _classCallCheck(this, LayerInfoService);

        return _possibleConstructorReturn(this, (LayerInfoService.__proto__ || Object.getPrototypeOf(LayerInfoService)).call(this, url, options));
    }

    /**
     * @function ol.supermap.LayerInfoService.getLayersInfo
     * @description 获取图层信息服务
     * @param callback - {function} 回调函数
     * @return {ol.supermap.LayerInfoService} 返回图层信息类
     */


    _createClass(LayerInfoService, [{
        key: 'getLayersInfo',
        value: function getLayersInfo(callback) {
            var me = this;
            var getLayersInfoService = new _GetLayersInfoService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    processCompleted: callback,
                    processFailed: callback
                }
            });
            getLayersInfoService.processAsync();
            return me;
        }

        /**
         * @function ol.supermap.LayerInfoService.setLayerInfo
         * @description 设置图层信息服务。可以实现临时图层中子图层的修改
         * @param params - {SuperMap.SetLayerInfoParameters} 设置图层信息参数类
         * @param callback -{function} 回调函数
         */

    }, {
        key: 'setLayerInfo',
        value: function setLayerInfo(params, callback) {
            if (!params) {
                return;
            }
            var me = this,
                tempLayerID = params.tempLayerID,
                layerPath = params.layerPath,
                resourceID = params.resourceID,
                layerInfoParams = params.layerInfo;
            if (!tempLayerID || !layerPath || !resourceID) {
                return;
            }
            var url = me.url.concat();
            url += "/tempLayersSet/" + tempLayerID + "/" + layerPath;
            var setLayerInfoService = new _SetLayerInfoService2.default(url, {
                serverType: me.options.serverType,
                eventListeners: {
                    processCompleted: callback,
                    processFailed: callback
                },
                resourceID: resourceID
            });
            setLayerInfoService.processAsync(layerInfoParams);
            return me;
        }

        /**
         * @function ol.supermap.LayerInfoService.setLayersInfo
         * @description 设置图层信息服务。可以实现创建新的临时图层和对现有临时图层的修改
         * @param params - {SuperMap.SetLayersInfoParameters}  设置图层信息参数类,包括临时图层。
         * @param callback - {function} 回调函数
         */

    }, {
        key: 'setLayersInfo',
        value: function setLayersInfo(params, callback) {
            if (!params) {
                return;
            }
            var me = this,
                resourceID = params.resourceID,
                isTempLayers = params.isTempLayers ? params.isTempLayers : false,
                layersInfo = params.layersInfo;
            if (!resourceID || !layersInfo) {
                return;
            }
            var layersInfoParam = {};
            layersInfoParam.subLayers = {};
            layersInfoParam.subLayers.layers = layersInfo;
            var setLayersInfoService = new _SetLayersInfoService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    processCompleted: callback,
                    processFailed: callback
                },
                resourceID: resourceID,
                isTempLayers: isTempLayers
            });
            setLayersInfoService.processAsync(layersInfoParam);
            return me;
        }

        /**
         * @function ol.supermap.LayerInfoService.setLayerStatus
         * @description 子图层显示控制服务。负责将子图层显示控制参数传递到服务端，并获取服务端返回的图层显示状态。
         * @param params - {SuperMap.SetLayerStatusParameters} 子图层显示控制参数类
         * @param callback - {function} 回调函数
         */

    }, {
        key: 'setLayerStatus',
        value: function setLayerStatus(params, callback) {
            if (!params) {
                return;
            }
            var me = this;
            var setLayerStatusService = new _SetLayerStatusService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    processCompleted: callback,
                    processFailed: callback
                }
            });
            setLayerStatusService.processAsync(params);
            return me;
        }
    }]);

    return LayerInfoService;
}(_ServiceBase3.default);

exports.default = LayerInfoService;

_olDebug2.default.supermap.LayerInfoService = LayerInfoService;

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _Util = __webpack_require__(7);

var _Util2 = _interopRequireDefault(_Util);

var _ServiceBase2 = __webpack_require__(4);

var _ServiceBase3 = _interopRequireDefault(_ServiceBase2);

var _MeasureService = __webpack_require__(189);

var _MeasureService2 = _interopRequireDefault(_MeasureService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class ol.supermap.MeasureService
 * @description 距离测量服务
 * @augments ol.supermap.ServiceBase
 * @param url - {String} 服务访问的地址。如：http://localhost:8090/iserver/services/map-world/rest/maps/World+Map 。
 * @param options - {Object} 交互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 *         measureMode - {MeasureMode} 量算模式，包括距离量算模式和面积量算模式。
 */
var MeasureService = function (_ServiceBase) {
    _inherits(MeasureService, _ServiceBase);

    function MeasureService(url, options) {
        _classCallCheck(this, MeasureService);

        return _possibleConstructorReturn(this, (MeasureService.__proto__ || Object.getPrototypeOf(MeasureService)).call(this, url, options));
    }

    /**
     * @function ol.supermap.MeasureService.measureDistance
     * @description 测距
     * @param params -{MeasureParameters} 测量相关参数类
     * @param callback - {function} 回调函数
     */


    _createClass(MeasureService, [{
        key: 'measureDistance',
        value: function measureDistance(params, callback) {
            this.measure(params, 'DISTANCE', callback);
        }

        /**
         * @function ol.supermap.MeasureService.measureArea
         * @description 测面积
         * @param params -{MeasureParameters} 测量相关参数类
         * @param callback - {function} 回调函数
         */

    }, {
        key: 'measureArea',
        value: function measureArea(params, callback) {
            this.measure(params, 'AREA', callback);
        }
    }, {
        key: 'measure',
        value: function measure(params, type, callback) {
            var me = this;
            var measureService = new _MeasureService2.default(me.url, {
                serverType: me.options.serverType,
                measureMode: type,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                }
            });
            measureService.processAsync(me._processParam(params));
            return me;
        }
    }, {
        key: '_processParam',
        value: function _processParam(params) {
            if (params && params.geometry) {
                params.geometry = _Util2.default.toSuperMapGeometry(JSON.parse(new _olDebug2.default.format.GeoJSON().writeGeometry(params.geometry)));
            }
            return params;
        }
    }]);

    return MeasureService;
}(_ServiceBase3.default);

exports.default = MeasureService;

_olDebug2.default.supermap.MeasureService = MeasureService;

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _ServiceBase2 = __webpack_require__(4);

var _ServiceBase3 = _interopRequireDefault(_ServiceBase2);

var _FacilityAnalystSinks3DService = __webpack_require__(120);

var _FacilityAnalystSinks3DService2 = _interopRequireDefault(_FacilityAnalystSinks3DService);

var _FacilityAnalystSources3DService = __webpack_require__(122);

var _FacilityAnalystSources3DService2 = _interopRequireDefault(_FacilityAnalystSources3DService);

var _FacilityAnalystTraceup3DService = __webpack_require__(128);

var _FacilityAnalystTraceup3DService2 = _interopRequireDefault(_FacilityAnalystTraceup3DService);

var _FacilityAnalystTracedown3DService = __webpack_require__(126);

var _FacilityAnalystTracedown3DService2 = _interopRequireDefault(_FacilityAnalystTracedown3DService);

var _FacilityAnalystUpstream3DService = __webpack_require__(130);

var _FacilityAnalystUpstream3DService2 = _interopRequireDefault(_FacilityAnalystUpstream3DService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class ol.supermap.NetworkAnalyst3DService
 * @description 3D网络分析服务类
 * @augments ol.supermap.ServiceBase
 * @example
 * 用法：
 *      new ol.supermap.NetworkAnalyst3DService(url)
 *      .sinksFacilityAnalyst(params,function(result){
 *           //doSomething
 *      })
 * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
 *                        http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
 *                        例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。
 * @param options - {Object} 互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象
 */
var NetworkAnalyst3DService = function (_ServiceBase) {
    _inherits(NetworkAnalyst3DService, _ServiceBase);

    function NetworkAnalyst3DService(url, options) {
        _classCallCheck(this, NetworkAnalyst3DService);

        return _possibleConstructorReturn(this, (NetworkAnalyst3DService.__proto__ || Object.getPrototypeOf(NetworkAnalyst3DService)).call(this, url, options));
    }

    /**
     * @function ol.supermap.NetworkAnalyst3DService.prototype.sinksFacilityAnalyst
     * @description 汇查找服务
     * @param params - {FacilityAnalystSinks3DParameters} 最近设施分析参数类(汇查找资源)
     * @param callback - {function} 回调函数
     */


    _createClass(NetworkAnalyst3DService, [{
        key: 'sinksFacilityAnalyst',
        value: function sinksFacilityAnalyst(params, callback) {
            var me = this;
            var facilityAnalystSinks3DService = new _FacilityAnalystSinks3DService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                }
            });
            facilityAnalystSinks3DService.processAsync(params);
            return me;
        }

        /**
         * @function ol.supermap.NetworkAnalyst3DService.prototype.sourcesFacilityAnalyst
         * @description 源查找服务
         * @param params -{FacilityAnalystSources3DParameters} 最近设施分析参数类(源查找服务)
         * @param callback - {function} 回调函数
         */

    }, {
        key: 'sourcesFacilityAnalyst',
        value: function sourcesFacilityAnalyst(params, callback) {
            var me = this;
            var facilityAnalystSources3DService = new _FacilityAnalystSources3DService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                }
            });
            facilityAnalystSources3DService.processAsync(params);
            return me;
        }
    }, {
        key: 'traceUpFacilityAnalyst',


        /**
         * @function ol.supermap.NetworkAnalyst3DService.prototype.traceUpFacilityAnalyst
         * @description 上游追踪资源服务
         * @param params - {FacilityAnalystTraceup3DParameters} 上游追踪资源参数类
         * @param callback - {function} 回调函数
         */
        value: function traceUpFacilityAnalyst(params, callback) {
            var me = this;
            var facilityAnalystTraceup3DService = new _FacilityAnalystTraceup3DService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                }
            });
            facilityAnalystTraceup3DService.processAsync(params);
            return me;
        }

        /**
         * @function ol.supermap.NetworkAnalyst3DService.prototype.traceDownFacilityAnalyst
         * @description 下游追踪资源服务
         * @param params - {FacilityAnalystTracedown3DParameters} 下游追踪资源服务参数类
         * @param callback - {function} 回调函数
         */

    }, {
        key: 'traceDownFacilityAnalyst',
        value: function traceDownFacilityAnalyst(params, callback) {
            var me = this;
            var facilityAnalystTracedown3DService = new _FacilityAnalystTracedown3DService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                }
            });
            facilityAnalystTracedown3DService.processAsync(params);
            return me;
        }

        /**
         * @function ol.supermap.NetworkAnalyst3DService.prototype.upstreamFacilityAnalyst
         * @description 上游关键设施查找服务
         * @param params -{FacilityAnalystUpstream3DParameters} 上游关键设施查找服务参数类
         * @param callback - {function} 回调函数
         */

    }, {
        key: 'upstreamFacilityAnalyst',
        value: function upstreamFacilityAnalyst(params, callback) {
            var me = this;
            var facilityAnalystUpstream3DService = new _FacilityAnalystUpstream3DService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                }
            });
            facilityAnalystUpstream3DService.processAsync(params);
            return me;
        }
    }]);

    return NetworkAnalyst3DService;
}(_ServiceBase3.default);

exports.default = NetworkAnalyst3DService;

_olDebug2.default.supermap.NetworkAnalyst3DService = NetworkAnalyst3DService;

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _Util = __webpack_require__(7);

var _Util2 = _interopRequireDefault(_Util);

var _ServiceBase2 = __webpack_require__(4);

var _ServiceBase3 = _interopRequireDefault(_ServiceBase2);

var _BurstPipelineAnalystService = __webpack_require__(99);

var _BurstPipelineAnalystService2 = _interopRequireDefault(_BurstPipelineAnalystService);

var _ComputeWeightMatrixService = __webpack_require__(107);

var _ComputeWeightMatrixService2 = _interopRequireDefault(_ComputeWeightMatrixService);

var _FacilityAnalystStreamService = __webpack_require__(124);

var _FacilityAnalystStreamService2 = _interopRequireDefault(_FacilityAnalystStreamService);

var _FindClosestFacilitiesService = __webpack_require__(134);

var _FindClosestFacilitiesService2 = _interopRequireDefault(_FindClosestFacilitiesService);

var _FindLocationService = __webpack_require__(136);

var _FindLocationService2 = _interopRequireDefault(_FindLocationService);

var _FindMTSPPathsService = __webpack_require__(138);

var _FindMTSPPathsService2 = _interopRequireDefault(_FindMTSPPathsService);

var _FindPathService = __webpack_require__(140);

var _FindPathService2 = _interopRequireDefault(_FindPathService);

var _FindServiceAreasService = __webpack_require__(142);

var _FindServiceAreasService2 = _interopRequireDefault(_FindServiceAreasService);

var _FindTSPPathsService = __webpack_require__(144);

var _FindTSPPathsService2 = _interopRequireDefault(_FindTSPPathsService);

var _UpdateEdgeWeightService = __webpack_require__(258);

var _UpdateEdgeWeightService2 = _interopRequireDefault(_UpdateEdgeWeightService);

var _UpdateTurnNodeWeightService = __webpack_require__(260);

var _UpdateTurnNodeWeightService2 = _interopRequireDefault(_UpdateTurnNodeWeightService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class ol.supermap.NetworkAnalystService
 * @description 网络分析服务类
 * @augments ol.supermap.ServiceBase
 * @example
 * 用法：
 *      new ol.supermap.NetworkAnalystService(url)
 *      .findPath(params,function(result){
 *           //doSomething
 *      })
 * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
 *                        http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
 *                       例如: "http://localhost:8090/iserver/services/test/rest/networkanalyst/WaterNet@FacilityNet";
 * @param options - {Object} 互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var NetworkAnalystService = function (_ServiceBase) {
    _inherits(NetworkAnalystService, _ServiceBase);

    function NetworkAnalystService(url, options) {
        _classCallCheck(this, NetworkAnalystService);

        return _possibleConstructorReturn(this, (NetworkAnalystService.__proto__ || Object.getPrototypeOf(NetworkAnalystService)).call(this, url, options));
    }

    /**
     * @function ol.supermap.NetworkAnalystService.prototype.burstPipelineAnalyst
     * @description 爆管分析服务:即将给定弧段或节点作为爆管点来进行分析，返回关键结点 ID 数组，普通结点 ID 数组及其上下游弧段 ID 数组。
     * @param params -{BurstPipelineAnalystParameters} 爆管分析服务参数类
     * @param callback -{function} 回调函数
     */


    _createClass(NetworkAnalystService, [{
        key: 'burstPipelineAnalyst',
        value: function burstPipelineAnalyst(params, callback) {
            var me = this;
            var burstPipelineAnalystService = new _BurstPipelineAnalystService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                }
            });
            burstPipelineAnalystService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @function ol.supermap.NetworkAnalystService.prototype.computeWeightMatrix
         * @description 耗费矩阵分析服务:根据交通网络分析参数中的耗费字段返回一个耗费矩阵。该矩阵是一个二维数组，用来存储任意两点间的资源消耗。
         * @param params - {ComputeWeightMatrixParameters} 耗费矩阵分析服务参数类
         * @param callback - {function} 回调函数
         */

    }, {
        key: 'computeWeightMatrix',
        value: function computeWeightMatrix(params, callback) {
            var me = this;
            var computeWeightMatrixService = new _ComputeWeightMatrixService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                }
            });
            computeWeightMatrixService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @function ol.supermap.NetworkAnalystService.prototype.findClosestFacilities
         * @description 最近设施分析服务:指在网络上给定一个事件点和一组设施点，查找从事件点到设施点(或从设施点到事件点)以最小耗费能到达的最佳路径。
         * @param params - {FindClosestFacilitiesParameters} 最近设施分析服务参数类
         * @param callback -{function} 回调函数
         * @param resultFormat - {SuperMap.DataFormat}返回的结果类型（默认为GeoJSON）。
         */

    }, {
        key: 'findClosestFacilities',
        value: function findClosestFacilities(params, callback, resultFormat) {
            var me = this;
            var findClosestFacilitiesService = new _FindClosestFacilitiesService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            findClosestFacilitiesService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @function ol.supermap.NetworkAnalystService.prototype.streamFacilityAnalyst
         * @description 上游/下游 关键设施查找资源服务:查找给定弧段或节点的上游/下游中的关键设施结点，返回关键结点 ID 数组及其下游弧段 ID 数组。
         * @param params - {FacilityAnalystStreamParameters} 上游/下游 关键设施查找资源服务参数类
         * @param callback - {function} 回调函数
         * @param resultFormat - {SuperMap.DataFormat}返回的结果类型（默认为GeoJSON）。
         */

    }, {
        key: 'streamFacilityAnalyst',
        value: function streamFacilityAnalyst(params, callback, resultFormat) {
            var me = this;
            var facilityAnalystStreamService = new _FacilityAnalystStreamService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            facilityAnalystStreamService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @function ol.supermap.NetworkAnalystService.prototype.findLocation
         * @description 选址分区分析服务：确定一个或多个待建设施的最佳或最优位置
         * @param params - {FindLocationParameters} 选址分区分析服务参数类
         * @param callback - {function} 回调函数
         * @param resultFormat - {SuperMap.DataFormat}返回的结果类型（默认为GeoJSON）。
         */

    }, {
        key: 'findLocation',
        value: function findLocation(params, callback, resultFormat) {
            var me = this;
            var findLocationService = new _FindLocationService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            findLocationService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @function ol.supermap.NetworkAnalystService.prototype.findPath
         * @description 最佳路径分析服务:在网络数据集中指定一些节点，按照节点的选择顺序，顺序访问这些节点从而求解起止点之间阻抗最小的路经。
         * @param params - {FindPathParameters} 最佳路径分析服务参数类
         * @param callback - {function} 回调函数
         * @param resultFormat - {SuperMap.DataFormat}返回的结果类型（默认为GeoJSON）。
         */

    }, {
        key: 'findPath',
        value: function findPath(params, callback, resultFormat) {
            var me = this;
            var findPathService = new _FindPathService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            findPathService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @function ol.supermap.NetworkAnalystService.prototype.findTSPPaths
         * @description 旅行商分析服务:路径分析的一种，它从起点开始（默认为用户指定的第一点）查找能够遍历所有途经点且花费最小的路径。
         * @param params - {SuperMap.FindTSPPathsParameters} 旅行商分析服务参数类
         * @param callback - {function} 回调函数
         * @param resultFormat - {SuperMap.DataFormat}返回的结果类型（默认为GeoJSON）。
         */

    }, {
        key: 'findTSPPaths',
        value: function findTSPPaths(params, callback, resultFormat) {
            var me = this;
            var findTSPPathsService = new _FindTSPPathsService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            findTSPPathsService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @function ol.supermap.NetworkAnalystService.prototype.findMTSPPaths
         * @description 多旅行商分析服务:也称为物流配送，是指在网络数据集中，给定 M 个配送中心点和 N 个配送目的地（M，N 为大于零的整数）。查找经济有效的配送路径，并给出相应的行走路线。
         * @param params - {FindMTSPPathsParameters} 多旅行商分析服务参数类
         * @param callback - {function} 回调函数
         * @param resultFormat - {SuperMap.DataFormat}返回的结果类型（默认为GeoJSON）。
         */

    }, {
        key: 'findMTSPPaths',
        value: function findMTSPPaths(params, callback, resultFormat) {
            var me = this;
            var findMTSPPathsService = new _FindMTSPPathsService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            findMTSPPathsService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @function ol.supermap.NetworkAnalystService.prototype.findServiceAreas
         * @description 服务区分析服务：以指定服务站点为中心，在一定服务范围内查找网络上服务站点能够提供服务的区域范围。
         * @param params - {FindServiceAreasParameters} 服务区分析服务参数类
         * @param callback - {function} 回调函数
         * @param resultFormat - {SuperMap.DataFormat}返回的结果类型（默认为GeoJSON）。
         */

    }, {
        key: 'findServiceAreas',
        value: function findServiceAreas(params, callback, resultFormat) {
            var me = this;
            var findServiceAreasService = new _FindServiceAreasService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            findServiceAreasService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @function ol.supermap.NetworkAnalystService.prototype.updateEdgeWeight
         * @description 更新边的耗费权重服务
         * @param params - {UpdateEdgeWeightParameters} 更新边的耗费权重服务参数类
         * @param callback - {function} 回调函数
         */

    }, {
        key: 'updateEdgeWeight',
        value: function updateEdgeWeight(params, callback) {
            var me = this;
            var updateEdgeWeightService = new _UpdateEdgeWeightService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                }
            });
            updateEdgeWeightService.processAsync(params);
            return me;
        }

        /**
         * @function ol.supermap.NetworkAnalystService.prototype.updateTurnNodeWeight
         * @description 转向耗费权重更新服务
         * @param params - {UpdateTurnNodeWeightParameters} 转向耗费权重更新服务参数类
         * @param callback - {function} 回调函数
         */

    }, {
        key: 'updateTurnNodeWeight',
        value: function updateTurnNodeWeight(params, callback) {
            var me = this;
            var updateTurnNodeWeightService = new _UpdateTurnNodeWeightService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                }
            });
            updateTurnNodeWeightService.processAsync(params);
            return me;
        }
    }, {
        key: '_processParams',
        value: function _processParams(params) {
            if (!params) {
                return {};
            }
            if (params.centers && _Util2.default.isArray(params.centers)) {
                params.centers.map(function (point, key) {
                    params.centers[key] = point instanceof _olDebug2.default.geom.Point ? {
                        x: point.getCoordinates()[0],
                        y: point.getCoordinates()[1]
                    } : point;
                });
            }

            if (params.nodes && _Util2.default.isArray(params.nodes)) {
                params.nodes.map(function (point, key) {
                    params.nodes[key] = point instanceof _olDebug2.default.geom.Point ? {
                        x: point.getCoordinates()[0],
                        y: point.getCoordinates()[1]
                    } : point;
                });
            }

            if (params.event && params.event instanceof _olDebug2.default.geom.Point) {
                params.event = { x: params.event.getCoordinates()[0], y: params.event.getCoordinates()[1] };
            }

            if (params.facilities && _Util2.default.isArray(params.facilities)) {
                params.facilities.map(function (point, key) {
                    params.facilities[key] = point instanceof _olDebug2.default.geom.Point ? {
                        x: point.getCoordinates()[0],
                        y: point.getCoordinates()[1]
                    } : point;
                });
            }
            if (params.parameter && params.parameter.barrierPoints) {
                var barrierPoints = params.parameter.barrierPoints;
                if (_Util2.default.isArray(barrierPoints)) {
                    barrierPoints.map(function (point, key) {
                        params.parameter.barrierPoints[key] = point instanceof _olDebug2.default.geom.Point ? {
                            x: point.getCoordinates()[0],
                            y: point.getCoordinates()[1]
                        } : point;
                    });
                } else {
                    params.parameter.barrierPoints = [barrierPoints instanceof _olDebug2.default.geom.Point ? {
                        x: barrierPoints.getCoordinates()[0],
                        y: barrierPoints.getCoordinates()[1]
                    } : barrierPoints];
                }
            }
            return params;
        }
    }, {
        key: '_processFormat',
        value: function _processFormat(resultFormat) {
            return resultFormat ? resultFormat : _SuperMap2.default.DataFormat.GEOJSON;
        }
    }]);

    return NetworkAnalystService;
}(_ServiceBase3.default);

exports.default = NetworkAnalystService;

_olDebug2.default.supermap.NetworkAnalystService = NetworkAnalystService;

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServiceBase2 = __webpack_require__(4);

var _ServiceBase3 = _interopRequireDefault(_ServiceBase2);

var _KernelDensityJobsService = __webpack_require__(177);

var _KernelDensityJobsService2 = _interopRequireDefault(_KernelDensityJobsService);

var _SingleObjectQueryJobsService = __webpack_require__(216);

var _SingleObjectQueryJobsService2 = _interopRequireDefault(_SingleObjectQueryJobsService);

var _BuildCacheJobsService = __webpack_require__(97);

var _BuildCacheJobsService2 = _interopRequireDefault(_BuildCacheJobsService);

var _SummaryMeshJobsService = __webpack_require__(220);

var _SummaryMeshJobsService2 = _interopRequireDefault(_SummaryMeshJobsService);

var _SummaryRegionJobsService = __webpack_require__(222);

var _SummaryRegionJobsService2 = _interopRequireDefault(_SummaryRegionJobsService);

var _VectorClipJobsService = __webpack_require__(263);

var _VectorClipJobsService2 = _interopRequireDefault(_VectorClipJobsService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class ol.supermap.ProcessingService
 * @description 大数据处理相关服务类。
 * @augments ol.supermap.ServiceBase
 * @example
 * 用法：
 *      new ol.supermap.ProcessingService(url,options)
 *      .getKernelDensityJobs(function(result){
 *          //doSomething
 *      })
 * @param url -{String} 大数据服务地址。
 * @param options - {Object} 交互服务时所需可选参数
 */
var ProcessingService = function (_ServiceBase) {
    _inherits(ProcessingService, _ServiceBase);

    function ProcessingService(url, options) {
        _classCallCheck(this, ProcessingService);

        var _this = _possibleConstructorReturn(this, (ProcessingService.__proto__ || Object.getPrototypeOf(ProcessingService)).call(this, url, options));

        _this.kernelDensityJobs = {};
        _this.buildCacheJobs = {};
        _this.summaryMeshJobs = {};
        _this.queryJobs = {};
        _this.summaryRegionJobs = {};
        _this.vectorClipJobs = {};
        return _this;
    }

    /**
     * @function ol.supermap.ProcessingService.prototype.getKernelDensityJobs
     * @description 获取密度分析的列表。
     * @param callback -{function}请求结果的回调函数。
     * @param resultFormat - {SuperMap.DataFormat} 返回的结果类型（默认为GeoJSON）。
     * @return {ol.supermap.ProcessingService}
     */


    _createClass(ProcessingService, [{
        key: 'getKernelDensityJobs',
        value: function getKernelDensityJobs(callback, resultFormat) {
            var me = this,
                format = me._processFormat(resultFormat);
            var kernelDensityJobsService = new _KernelDensityJobsService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: format
            });
            kernelDensityJobsService.getKernelDensityJobs();
            return me;
        }

        /**
         * @function ol.supermap.ProcessingService.prototype.getKernelDensityJob
         * @description 获取某一个密度分析。
         * @param id -{String} 空间分析的id。
         * @param callback - {function} 请求结果的回调函数。
         * @param resultFormat - {SuperMap.DataFormat} 返回的结果类型（默认为GeoJSON）。
         * @return {ol.supermap.ProcessingService}
         */

    }, {
        key: 'getKernelDensityJob',
        value: function getKernelDensityJob(id, callback, resultFormat) {
            var me = this,
                format = me._processFormat(resultFormat);
            var kernelDensityJobsService = new _KernelDensityJobsService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: format
            });
            kernelDensityJobsService.getKernelDensityJob(id);
            return me;
        }

        /**
         * @function ol.supermap.ProcessingService.prototype.addKernelDensityJob
         * @function 新建一个密度分析。
         * @param params -{SuperMap.KernelDensityJobParameter} 创建一个空间分析的请求参数。
         * @param callback - {function} 请求结果的回调函数。
         * @param seconds - {Number} 开始创建后，获取创建成功结果的时间间隔。
         * @param resultFormat - {SuperMap.DataFormat}返回的结果类型（默认为GeoJSON）。
         * @return {ol.supermap.ProcessingService}
         */

    }, {
        key: 'addKernelDensityJob',
        value: function addKernelDensityJob(params, callback, seconds, resultFormat) {
            var me = this,
                param = me._processParams(params),
                format = me._processFormat(resultFormat);
            var kernelDensityJobsService = new _KernelDensityJobsService2.default(me.url, {
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback,
                    processRunning: function processRunning(job) {
                        me.kernelDensityJobs[job.id] = job.state;
                    }
                },
                format: format
            });
            kernelDensityJobsService.addKernelDensityJob(param, seconds);
            return me;
        }

        /**
         * @function ol.supermap.ProcessingService.prototype.getKernelDensityJobState
         * @description 获取密度分析的状态。
         * @param id - {String}密度分析的id。
         */

    }, {
        key: 'getKernelDensityJobState',
        value: function getKernelDensityJobState(id) {
            return this.kernelDensityJobs[id];
        }

        /**
         * @function ol.supermap.ProcessingService.prototype.getSummaryMeshJobs
         * @description 获取点聚合分析的列表。
         * @param callback - {function}请求结果的回调函数。
         * @param resultFormat - {SuperMap.DataFormat}返回的结果类型（默认为GeoJSON）。
         * @return {ol.supermap.ProcessingService}
         */

    }, {
        key: 'getSummaryMeshJobs',
        value: function getSummaryMeshJobs(callback, resultFormat) {
            var me = this,
                format = me._processFormat(resultFormat);
            var summaryMeshJobsService = new _SummaryMeshJobsService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: format
            });
            summaryMeshJobsService.getSummaryMeshJobs();
            return me;
        }

        /**
         * @function ol.supermap.ProcessingService.prototype.getSummaryMeshJob
         * @description 获取某一个点聚合分析。
         * @param id - {String} 空间分析的id。
         * @param callback - -{function} 请求结果的回调函数。
         * @param resultFormat - {SuperMap.DataFormat} 返回的结果类型（默认为GeoJSON）。
         * @return {ol.supermap.ProcessingService}
         */

    }, {
        key: 'getSummaryMeshJob',
        value: function getSummaryMeshJob(id, callback, resultFormat) {
            var me = this,
                format = me._processFormat(resultFormat);
            var summaryMeshJobsService = new _SummaryMeshJobsService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: format
            });
            summaryMeshJobsService.getSummaryMeshJob(id);
            return me;
        }

        /**
         * @function ol.supermap.ProcessingService.prototype.addSummaryMeshJob
         * @description 新建一个点聚合分析。
         * @param params - {SuperMap.SummaryMeshJobParameter} 点聚合分析任务参数类。
         * @param callback - {function} 请求结果的回调函数。
         * @param seconds - {Number} 开始创建后，获取创建成功结果的时间间隔
         * @param resultFormat - {SuperMap.DataFormat} 返回的结果类型（默认为GeoJSON）。
         * @return {ol.supermap.ProcessingService}
         */

    }, {
        key: 'addSummaryMeshJob',
        value: function addSummaryMeshJob(params, callback, seconds, resultFormat) {
            var me = this,
                param = me._processParams(params),
                format = me._processFormat(resultFormat);
            var summaryMeshJobsService = new _SummaryMeshJobsService2.default(me.url, {
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback,
                    processRunning: function processRunning(job) {
                        me.summaryMeshJobs[job.id] = job.state;
                    }
                },
                format: format
            });
            summaryMeshJobsService.addSummaryMeshJob(param, seconds);
            return me;
        }

        /**
         * @function ol.supermap.ProcessingService.prototype.getSummaryMeshJobState
         * @description 获取点聚合分析的状态。
         * @param id - {String} 点聚合分析的id。
         */

    }, {
        key: 'getSummaryMeshJobState',
        value: function getSummaryMeshJobState(id) {
            return this.summaryMeshJobs[id];
        }

        /**
         * @function ol.supermap.ProcessingService.getBuildCacheJobs
         * @description 获取生成地图缓存的列表。
         * @param callback -{function} 请求结果的回调函数。
         * @param resultFormat - {SuperMap.DataFormat} 返回的结果类型（默认为GeoJSON）。
         * @return {ol.supermap.ProcessingService}
         */

    }, {
        key: 'getBuildCacheJobs',
        value: function getBuildCacheJobs(callback, resultFormat) {
            var me = this,
                format = me._processFormat(resultFormat);
            var buildCacheJobsService = new _BuildCacheJobsService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: format
            });
            buildCacheJobsService.getBuildCacheJobs();
            return me;
        }

        /**
         * @function ol.supermap.ProcessingService.prototype.getBuildCacheJob
         * @description 获取某一个生成地图缓存。
         * @param id -{String}空间分析的id。
         * @param callback - {function}请求结果的回调函数。
         * @param resultFormat -{SuperMap.DataFormat}返回的结果类型（默认为GeoJSON）。
         * @return {ol.supermap.ProcessingService}
         */

    }, {
        key: 'getBuildCacheJob',
        value: function getBuildCacheJob(id, callback, resultFormat) {
            var me = this,
                format = me._processFormat(resultFormat);
            var buildCacheJobsService = new _BuildCacheJobsService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: format
            });
            buildCacheJobsService.getBuildCacheJob(id);
            return me;
        }

        /**
         * @function ol.supermap.ProcessingService.prototype.addBuildCacheJob
         * @description 新建一个生成地图缓存。
         * @param params - {SuperMap.BuildCacheJobParameter} 地图缓存参数类
         * @param callback - {function} 请求结果的回调函数
         * @param seconds - {Number} 开始创建后，获取创建成功结果的时间间隔
         * @param resultFormat -{SuperMap.DataFormat}返回的结果类型（默认为GeoJSON）
         * @return {ol.supermap.ProcessingService}
         */

    }, {
        key: 'addBuildCacheJob',
        value: function addBuildCacheJob(params, callback, seconds, resultFormat) {
            var me = this,
                param = me._processParams(params),
                format = me._processFormat(resultFormat);
            var buildCacheJobsService = new _BuildCacheJobsService2.default(me.url, {
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback,
                    processRunning: function processRunning(job) {
                        me.buildCacheJobs[job.id] = job.state;
                    }
                },
                format: format
            });
            buildCacheJobsService.addBuildCacheJob(param, seconds);
            return me;
        }

        /**
         * @function ol.supermap.ProcessingService.prototype.getBuildCacheJobState
         * @description 获取生成地图缓存的状态。
         * @param id - {String}生成地图缓存的id。
         */

    }, {
        key: 'getBuildCacheJobState',
        value: function getBuildCacheJobState(id) {
            return this.buildCacheJobs[id];
        }

        /**
         * @function ol.supermap.ProcessingService.prototype.getQueryJobs
         * @description 获取单对象查询分析的列表。
         * @param callback -{function}请求结果的回调函数。
         * @param resultFormat - {SuperMap.DataFormat} 返回的结果类型（默认为GeoJSON）。
         * @return {ol.supermap.ProcessingService}
         */

    }, {
        key: 'getQueryJobs',
        value: function getQueryJobs(callback, resultFormat) {
            var me = this,
                format = me._processFormat(resultFormat);
            var singleObjectQueryJobsService = new _SingleObjectQueryJobsService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: format
            });
            singleObjectQueryJobsService.getQueryJobs();
            return me;
        }

        /**
         * @function ol.supermap.ProcessingService.prototype.getQueryJob
         * @description 获取某一个单对象查询分析。
         * @param id -{String} 空间分析的id。
         * @param callback - {function} 请求结果的回调函数。
         * @param resultFormat - {SuperMap.DataFormat} 返回的结果类型（默认为GeoJSON）。
         * @return {ol.supermap.ProcessingService}
         */

    }, {
        key: 'getQueryJob',
        value: function getQueryJob(id, callback, resultFormat) {
            var me = this,
                format = me._processFormat(resultFormat);
            var singleObjectQueryJobsService = new _SingleObjectQueryJobsService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: format
            });
            singleObjectQueryJobsService.getQueryJob(id);
            return me;
        }

        /**
         * @function ol.supermap.ProcessingService.prototype.addQueryJob
         * @function 新建一个单对象查询分析。
         * @param params -{SuperMap.SingleObjectQueryJobsParameter} 创建一个空间分析的请求参数。
         * @param callback - {function} 请求结果的回调函数。
         * @param seconds - {Number} 开始创建后，获取创建成功结果的时间间隔。
         * @param resultFormat - {SuperMap.DataFormat}返回的结果类型（默认为GeoJSON）。
         * @return {ol.supermap.ProcessingService}
         */

    }, {
        key: 'addQueryJob',
        value: function addQueryJob(params, callback, seconds, resultFormat) {
            var me = this,
                param = me._processParams(params),
                format = me._processFormat(resultFormat);
            var singleObjectQueryJobsService = new _SingleObjectQueryJobsService2.default(me.url, {
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback,
                    processRunning: function processRunning(job) {
                        me.queryJobs[job.id] = job.state;
                    }
                },
                format: format
            });
            singleObjectQueryJobsService.addQueryJob(param, seconds);
            return me;
        }

        /**
         * @function ol.supermap.ProcessingService.prototype.getQueryJobState
         * @description 获取单对象查询分析的状态。
         * @param id - {String}单对象查询分析的id。
         */

    }, {
        key: 'getQueryJobState',
        value: function getQueryJobState(id) {
            return this.queryJobs[id];
        }

        /**
         * @function ol.supermap.ProcessingService.getSummaryRegionJobs
         * @description 获取范围汇总分析的列表。
         * @param callback -{function} 请求结果的回调函数。
         * @param resultFormat - {SuperMap.DataFormat} 返回的结果类型（默认为GeoJSON）。
         * @return {ol.supermap.ProcessingService}
         */

    }, {
        key: 'getSummaryRegionJobs',
        value: function getSummaryRegionJobs(callback, resultFormat) {
            var me = this,
                format = me._processFormat(resultFormat);
            var summaryRegionJobsService = new _SummaryRegionJobsService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: format
            });
            summaryRegionJobsService.getSummaryRegionJobs();
            return me;
        }

        /**
         * @function ol.supermap.ProcessingService.prototype.getSummaryRegionJob
         * @description 获取某一个范围汇总分析。
         * @param id -{String}范围汇总分析的id。
         * @param callback - {function}请求结果的回调函数。
         * @param resultFormat -{SuperMap.DataFormat}返回的结果类型（默认为GeoJSON）。
         * @return {ol.supermap.ProcessingService}
         */

    }, {
        key: 'getSummaryRegionJob',
        value: function getSummaryRegionJob(id, callback, resultFormat) {
            var me = this,
                format = me._processFormat(resultFormat);
            var summaryRegionJobsService = new _SummaryRegionJobsService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: format
            });
            summaryRegionJobsService.getSummaryRegionJob(id);
            return me;
        }

        /**
         * @function ol.supermap.ProcessingService.prototype.addSummaryRegionJob
         * @description 新建一个范围汇总分析。
         * @param params - {SuperMap.SummaryRegionJobParameter} 范围汇总分析参数类
         * @param callback - {function} 请求结果的回调函数
         * @param seconds - {Number} 开始创建后，获取创建成功结果的时间间隔
         * @param resultFormat -{SuperMap.DataFormat}返回的结果类型（默认为GeoJSON）
         * @return {ol.supermap.ProcessingService}
         */

    }, {
        key: 'addSummaryRegionJob',
        value: function addSummaryRegionJob(params, callback, seconds, resultFormat) {
            var me = this,
                param = me._processParams(params),
                format = me._processFormat(resultFormat);
            var summaryRegionJobsService = new _SummaryRegionJobsService2.default(me.url, {
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback,
                    processRunning: function processRunning(job) {
                        me.summaryRegionJobs[job.id] = job.state;
                    }
                },
                format: format
            });
            summaryRegionJobsService.addSummaryRegionJob(param, seconds);
            return me;
        }

        /**
         * @function ol.supermap.ProcessingService.prototype.getSummaryRegionJobState
         * @description 获取范围汇总分析的状态。
         * @param id - {String}生成范围汇总分析的id。
         */

    }, {
        key: 'getSummaryRegionJobState',
        value: function getSummaryRegionJobState(id) {
            return this.summaryRegionJobs[id];
        }

        /**
         * @function ol.supermap.ProcessingService.prototype.getVectorClipJobs
         * @description 获取矢量裁剪分析的列表。
         * @param callback - {function} 请求结果的回调函数。
         * @param resultFormat - {SuperMap.DataFormat} 返回的结果类型（默认为GeoJSON）。
         * @return {ol.supermap.ProcessingService}
         */

    }, {
        key: 'getVectorClipJobs',
        value: function getVectorClipJobs(callback, resultFormat) {
            var me = this,
                format = me._processFormat(resultFormat);
            var vectorClipJobsService = new _VectorClipJobsService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: format
            });
            vectorClipJobsService.getVectorClipJobs();
            return me;
        }

        /**
         * @function ol.supermap.ProcessingService.prototype.getVectorClipJob
         * @description 获取某一个矢量裁剪分析。
         * @param id - {String}空间分析的id。
         * @param callback - {function} 请求结果的回调函数。
         * @param resultFormat - {SuperMap.DataFormat} 返回的结果类型（默认为GeoJSON）。
         * @return {ol.supermap.ProcessingService}
         */

    }, {
        key: 'getVectorClipJob',
        value: function getVectorClipJob(id, callback, resultFormat) {
            var me = this,
                format = me._processFormat(resultFormat);
            var vectorClipJobsService = new _VectorClipJobsService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: format
            });
            vectorClipJobsService.getVectorClipJob(id);
            return me;
        }

        /**
         * @function ol.supermap.ProcessingService.prototype.addVectorClipJob
         * @description 新建一个矢量裁剪分析。
         * @param params -{SuperMap.VectorClipJobsParameter} 创建一个空间分析的请求参数。
         * @param callback - {function} 请求结果的回调函数。
         * @param seconds - {Number} 开始创建后，获取创建成功结果的时间间隔。
         * @param resultFormat - {SuperMap.DataFormat} 返回的结果类型（默认为GeoJSON）。
         * @return {ol.supermap.ProcessingService}
         */

    }, {
        key: 'addVectorClipJob',
        value: function addVectorClipJob(params, callback, seconds, resultFormat) {
            var me = this,
                param = me._processParams(params),
                format = me._processFormat(resultFormat);
            var vectorClipJobsService = new _VectorClipJobsService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback,
                    processRunning: function processRunning(job) {
                        me.vectorClipJobs[job.id] = job.state;
                    }
                },
                format: format
            });
            vectorClipJobsService.addVectorClipJob(param, seconds);
            return me;
        }

        /**
         * @function ol.supermap.ProcessingService.prototype.getVectorClipJobState
         * @description 获取矢量裁剪分析的状态。
         * @param id - {String}矢量裁剪分析的id。
         */

    }, {
        key: 'getVectorClipJobState',
        value: function getVectorClipJobState(id) {
            return this.vectorClipJobs[id];
        }
    }, {
        key: '_processFormat',
        value: function _processFormat(resultFormat) {
            return resultFormat ? resultFormat : _SuperMap2.default.DataFormat.GEOJSON;
        }
    }, {
        key: '_processParams',
        value: function _processParams(params) {
            if (!params) {
                return {};
            }
            if (params.query) {
                params.query = params.query.toString();
            }
            if (params.bounds) {
                params.bounds = params.bounds.toString();
            }
            return params;
        }
    }]);

    return ProcessingService;
}(_ServiceBase3.default);

exports.default = ProcessingService;


_olDebug2.default.supermap.ProcessingService = ProcessingService;

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _Util = __webpack_require__(7);

var _Util2 = _interopRequireDefault(_Util);

var _ServiceBase2 = __webpack_require__(4);

var _ServiceBase3 = _interopRequireDefault(_ServiceBase2);

var _QueryByBoundsService = __webpack_require__(195);

var _QueryByBoundsService2 = _interopRequireDefault(_QueryByBoundsService);

var _QueryByDistanceService = __webpack_require__(197);

var _QueryByDistanceService2 = _interopRequireDefault(_QueryByDistanceService);

var _QueryBySQLService = __webpack_require__(201);

var _QueryBySQLService2 = _interopRequireDefault(_QueryBySQLService);

var _QueryByGeometryService = __webpack_require__(199);

var _QueryByGeometryService2 = _interopRequireDefault(_QueryByGeometryService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class ol.supermap.QueryService
 * @description 地图查询服务类
 * 提供：范围查询，SQL查询，几何查询，距离查询
 * @augments ol.supermap.ServiceBase
 * @param url - {String} 地图查询服务访问地址。
 * @param options - {Object} 服务交互时所需的可选参数。
 * @example
 * 用法：
 * new ol.supermap.QueryService(url)
 *      .queryByBounds(param,function(result){
 *          //doSomething
 *      })
 */
var QueryService = function (_ServiceBase) {
    _inherits(QueryService, _ServiceBase);

    function QueryService(url, options) {
        _classCallCheck(this, QueryService);

        return _possibleConstructorReturn(this, (QueryService.__proto__ || Object.getPrototypeOf(QueryService)).call(this, url, options));
    }

    /**
     * @function ol.supermap.QueryService.queryByBounds
     * @description bounds查询地图服务
     * @param params - {SuperMap.QueryByBoundsParameters} 通过Bounds查询的相关参数类
     * @param callback -{function} 回掉函数
     * @param resultFormat - {SuperMap.DataFormat} 返回结果类型
     */


    _createClass(QueryService, [{
        key: 'queryByBounds',
        value: function queryByBounds(params, callback, resultFormat) {
            var me = this;
            var queryService = new _QueryByBoundsService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });

            queryService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @function ol.supermap.QueryService.queryByDistance
         * @description 地图距离查询服务
         * @param params - {QueryByDistanceParameters} Distance查询相关参数类
         * @param callback - {function} 回调函数
         * @param resultFormat -{SuperMap.DataFormat} 返回结果类型
         */

    }, {
        key: 'queryByDistance',
        value: function queryByDistance(params, callback, resultFormat) {
            var me = this;
            var queryByDistanceService = new _QueryByDistanceService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });

            queryByDistanceService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @function ol.supermap.QueryService.queryBySQL
         * @description 地图SQL查询服务
         * @param params - {SuperMap.QueryBySQLParameters} SQL查询相关参数类
         * @param callback -{function} 回调函数
         * @param resultFormat -{SuperMap.DataFormat} 返回结果类型
         */

    }, {
        key: 'queryBySQL',
        value: function queryBySQL(params, callback, resultFormat) {
            var me = this;
            var queryBySQLService = new _QueryBySQLService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });

            queryBySQLService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @function ol.supermap.QueryService.queryByGeometry
         * @description 地图几何查询服务
         * @param params - {SuperMap.QueryByGeometryParameters} Geometry查询相关参数类
         * @param callback - {function} 回调函数
         * @param resultFormat - {SuperMap.DataFormat} 返回结果类型
         */

    }, {
        key: 'queryByGeometry',
        value: function queryByGeometry(params, callback, resultFormat) {
            var me = this;
            var queryByGeometryService = new _QueryByGeometryService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });

            queryByGeometryService.processAsync(me._processParams(params));
            return me;
        }
    }, {
        key: '_processParams',
        value: function _processParams(params) {
            if (!params) {
                return {};
            }
            params.returnContent = params.returnContent == null ? true : params.returnContent;
            if (params.queryParams && !_Util2.default.isArray(params.queryParams)) {
                params.queryParams = [params.queryParams];
            }
            if (params.bounds) {
                params.bounds = new _SuperMap2.default.Bounds(params.bounds[0], params.bounds[1], params.bounds[2], params.bounds[3]);
            }
            if (params.geometry) {
                if (params.geometry instanceof _olDebug2.default.geom.Point) {
                    params.geometry = new _SuperMap2.default.Geometry.Point(params.geometry.getCoordinates()[0], params.geometry.getCoordinates()[1]);
                } else {
                    params.geometry = _Util2.default.toSuperMapGeometry(JSON.parse(new _olDebug2.default.format.GeoJSON().writeGeometry(params.geometry)));
                }
            }
            return params;
        }
    }, {
        key: '_processFormat',
        value: function _processFormat(resultFormat) {
            return resultFormat ? resultFormat : _SuperMap2.default.DataFormat.GEOJSON;
        }
    }]);

    return QueryService;
}(_ServiceBase3.default);

exports.default = QueryService;

_olDebug2.default.supermap.QueryService = QueryService;

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _Util = __webpack_require__(7);

var _Util2 = _interopRequireDefault(_Util);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServiceBase2 = __webpack_require__(4);

var _ServiceBase3 = _interopRequireDefault(_ServiceBase2);

var _AreaSolarRadiationService = __webpack_require__(90);

var _AreaSolarRadiationService2 = _interopRequireDefault(_AreaSolarRadiationService);

var _BufferAnalystService = __webpack_require__(93);

var _BufferAnalystService2 = _interopRequireDefault(_BufferAnalystService);

var _DensityAnalystService = __webpack_require__(115);

var _DensityAnalystService2 = _interopRequireDefault(_DensityAnalystService);

var _GenerateSpatialDataService = __webpack_require__(146);

var _GenerateSpatialDataService2 = _interopRequireDefault(_GenerateSpatialDataService);

var _GeoRelationAnalystService = __webpack_require__(150);

var _GeoRelationAnalystService2 = _interopRequireDefault(_GeoRelationAnalystService);

var _InterpolationAnalystService = __webpack_require__(171);

var _InterpolationAnalystService2 = _interopRequireDefault(_InterpolationAnalystService);

var _MathExpressionAnalysisService = __webpack_require__(187);

var _MathExpressionAnalysisService2 = _interopRequireDefault(_MathExpressionAnalysisService);

var _OverlayAnalystService = __webpack_require__(190);

var _OverlayAnalystService2 = _interopRequireDefault(_OverlayAnalystService);

var _RouteCalculateMeasureService = __webpack_require__(205);

var _RouteCalculateMeasureService2 = _interopRequireDefault(_RouteCalculateMeasureService);

var _RouteLocatorService = __webpack_require__(207);

var _RouteLocatorService2 = _interopRequireDefault(_RouteLocatorService);

var _SurfaceAnalystService = __webpack_require__(225);

var _SurfaceAnalystService2 = _interopRequireDefault(_SurfaceAnalystService);

var _TerrainCurvatureCalculationService = __webpack_require__(227);

var _TerrainCurvatureCalculationService2 = _interopRequireDefault(_TerrainCurvatureCalculationService);

var _ThiessenAnalystService = __webpack_require__(247);

var _ThiessenAnalystService2 = _interopRequireDefault(_ThiessenAnalystService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class ol.supermap.SpatialAnalystService
 * @constructs  ol.supermap.SpatialAnalystService
 * @classdesc
 * 空间分析服务类。
 * 提供：地区太阳辐射、缓冲区分析、点密度分析、动态分段分析、空间关系分析、插值分析、栅格代数运算、叠加分析、路由定位、路由测量计算、表面分析、地形曲率计算、泰森多边形分析。
 * @example  用法：
 *      new ol.supermap.SpatialAnalystService(url)
 *      .bufferAnalysis(params,function(result){
 *          //doSomething
 *      })
 * @api
 */
var SpatialAnalystService = function (_ServiceBase) {
    _inherits(SpatialAnalystService, _ServiceBase);

    function SpatialAnalystService(url, options) {
        _classCallCheck(this, SpatialAnalystService);

        return _possibleConstructorReturn(this, (SpatialAnalystService.__proto__ || Object.getPrototypeOf(SpatialAnalystService)).call(this, url, options));
    }

    /**
     * @method ol.supermap.SpatialAnalystService.prototype.getAreaSolarRadiationResult
     * @description 地区太阳辐射
     * @param params
     * {AreaSolarRadiationParameters}
     * @param callback
     * @param resultFormat
     */


    _createClass(SpatialAnalystService, [{
        key: 'getAreaSolarRadiationResult',
        value: function getAreaSolarRadiationResult(params, callback, resultFormat) {
            var me = this;
            var areaSolarRadiationService = new _AreaSolarRadiationService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            areaSolarRadiationService.processAsync(params);
            return me;
        }

        /**
         * @method ol.supermap.SpatialAnalystService.prototype.bufferAnalysis
         * @description 缓冲区分析
         * @param params
         * {DatasetBufferAnalystParameters}
         * @param callback
         * @param resultFormat
         */

    }, {
        key: 'bufferAnalysis',
        value: function bufferAnalysis(params, callback, resultFormat) {
            var me = this;
            var bufferAnalystService = new _BufferAnalystService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            bufferAnalystService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @method ol.supermap.SpatialAnalystService.prototype.densityAnalysis
         * @description 点密度分析
         * @param params
         * {DensityKernelAnalystParameters}
         * @param callback
         * @param resultFormat
         */

    }, {
        key: 'densityAnalysis',
        value: function densityAnalysis(params, callback, resultFormat) {
            var me = this;
            var densityAnalystService = new _DensityAnalystService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            densityAnalystService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @method ol.supermap.SpatialAnalystService.prototype.generateSpatialData
         * @description 动态分段分析
         * @param params
         * {GenerateSpatialDataParameters}
         * @param callback
         * @param resultFormat
         */

    }, {
        key: 'generateSpatialData',
        value: function generateSpatialData(params, callback, resultFormat) {
            var me = this;
            var generateSpatialDataService = new _GenerateSpatialDataService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            generateSpatialDataService.processAsync(params);
            return me;
        }

        /**
         * @method ol.supermap.SpatialAnalystService.prototype.geoRelationAnalysis
         * @description 空间关系分析
         * @param params
         * {GeoRelationAnalystParameters}
         * @param callback
         * @param resultFormat
         */

    }, {
        key: 'geoRelationAnalysis',
        value: function geoRelationAnalysis(params, callback, resultFormat) {
            var me = this;
            var geoRelationAnalystService = new _GeoRelationAnalystService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            geoRelationAnalystService.processAsync(params);
            return me;
        }

        /**
         * @method ol.supermap.SpatialAnalystService.prototype.interpolationAnalysis
         * @description 插值分析
         * @param params
         * {InterpolationRBFAnalystParameters}
         * @param callback
         * @param resultFormat
         */

    }, {
        key: 'interpolationAnalysis',
        value: function interpolationAnalysis(params, callback, resultFormat) {
            var me = this;
            var interpolationAnalystService = new _InterpolationAnalystService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            interpolationAnalystService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @method ol.supermap.SpatialAnalystService.prototype.mathExpressionAnalysis
         * @description 栅格代数运算
         * @param params
         * {MathExpressionAnalysisParameters}
         * @param callback
         * @param resultFormat
         */

    }, {
        key: 'mathExpressionAnalysis',
        value: function mathExpressionAnalysis(params, callback, resultFormat) {
            var me = this;
            var mathExpressionAnalysisService = new _MathExpressionAnalysisService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            mathExpressionAnalysisService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @method ol.supermap.SpatialAnalystService.prototype.overlayAnalysis
         * @description 叠加分析
         * @param params
         * {DatasetOverlayAnalystParameters}
         * @param callback
         * @param resultFormat
         */

    }, {
        key: 'overlayAnalysis',
        value: function overlayAnalysis(params, callback, resultFormat) {
            var me = this;
            var overlayAnalystService = new _OverlayAnalystService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            overlayAnalystService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @method ol.supermap.SpatialAnalystService.prototype.routeCalculateMeasure
         * @description 路由测量计算
         * @param params
         * {RouteCalculateMeasureParameters}
         * @param callback
         * @param resultFormat
         */

    }, {
        key: 'routeCalculateMeasure',
        value: function routeCalculateMeasure(params, callback, resultFormat) {
            var me = this;
            var routeCalculateMeasureService = new _RouteCalculateMeasureService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            routeCalculateMeasureService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @method ol.supermap.SpatialAnalystService.prototype.routeLocate
         * @description 路由定位
         * @param params
         * {RouteLocatorParameters}
         * @param callback
         * @param resultFormat
         */

    }, {
        key: 'routeLocate',
        value: function routeLocate(params, callback, resultFormat) {
            var me = this;
            var routeLocatorService = new _RouteLocatorService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            routeLocatorService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @method ol.supermap.SpatialAnalystService.prototype.surfaceAnalysis
         * @description 表面分析
         * @param params
         * {DatasetSurfaceAnalystParameters}
         * @param callback
         * @param resultFormat
         */

    }, {
        key: 'surfaceAnalysis',
        value: function surfaceAnalysis(params, callback, resultFormat) {
            var me = this;
            var surfaceAnalystService = new _SurfaceAnalystService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            surfaceAnalystService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @method ol.supermap.SpatialAnalystService.prototype.terrainCurvatureCalculate
         * @description 地形曲率计算
         * @param params
         * {TerrainCurvatureCalculationParameters}
         * @param callback
         * @param resultFormat
         */

    }, {
        key: 'terrainCurvatureCalculate',
        value: function terrainCurvatureCalculate(params, callback, resultFormat) {
            var me = this;
            var terrainCurvatureCalculationService = new _TerrainCurvatureCalculationService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            terrainCurvatureCalculationService.processAsync(params);
            return me;
        }

        /**
         * @method ol.supermap.SpatialAnalystService.prototype.thiessenAnalysis
         * @description 泰森多边形分析
         * @param params
         * {DatasetThiessenAnalystParameters}
         * @param callback
         * @param resultFormat
         */

    }, {
        key: 'thiessenAnalysis',
        value: function thiessenAnalysis(params, callback, resultFormat) {
            var me = this;
            var thiessenAnalystService = new _ThiessenAnalystService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                },
                format: me._processFormat(resultFormat)
            });
            thiessenAnalystService.processAsync(me._processParams(params));
            return me;
        }
    }, {
        key: '_processParams',
        value: function _processParams(params) {
            if (!params) {
                return {};
            }
            if (params.bounds) {
                params.bounds = new _SuperMap2.default.Bounds(params.bounds[0], params.bounds[1], params.bounds[2], params.bounds[3]);
            }
            if (params.inputPoints) {
                for (var i = 0; i < params.inputPoints.length; i++) {
                    var inputPoint = params.points[i];
                    if (_Util2.default.isArray(inputPoint)) {
                        inputPoint.setCoordinates(inputPoint);
                    }
                    params.inputPoints[i] = new _SuperMap2.default.Geometry.Point(inputPoint.getCoordinates()[0], inputPoint.getCoordinates()[1]);
                }
            }
            if (params.points) {
                for (var i = 0; i < params.points.length; i++) {
                    var point = params.points[i];
                    if (_Util2.default.isArray(point)) {
                        point.setCoordinates(point);
                    }
                    params.points[i] = new _SuperMap2.default.Geometry.Point(point.getCoordinates()[0], point.getCoordinates()[1]);
                }
            }

            if (params.extractRegion) {
                params.extractRegion = this.convertGeometry(params.extractRegion);
            }
            if (params.clipRegion) {
                params.clipRegion = this.convertGeometry(params.clipRegion);
            }
            if (params.sourceGeometry) {
                params.sourceGeometry = this.convertGeometry(params.sourceGeometry);
            }
            if (params.sourceRoute && params.sourceRoute.points) {
                params.sourceRoute.points = this.convertGeometry(params.sourceRoute.points);
            }
            if (params.operateRegions && _Util2.default.isArray(params.operateRegions)) {
                var me = this;
                params.operateRegions.map(function (geometry, key) {
                    params.operateRegions[key] = me.convertGeometry(geometry);
                });
            }
            if (params.sourceRoute && params.sourceRoute.components && _Util2.default.isArray(params.sourceRoute.components)) {
                var me = this;
                params.sourceRoute.components.map(function (geometry, key) {
                    params.sourceRoute.components[key] = me.convertGeometry(geometry);
                });
            }
            return params;
        }
    }, {
        key: '_processFormat',
        value: function _processFormat(resultFormat) {
            return resultFormat ? resultFormat : _SuperMap2.default.DataFormat.GEOJSON;
        }
    }, {
        key: 'convertGeometry',
        value: function convertGeometry(ol3Geometry) {
            return _Util2.default.toSuperMapGeometry(JSON.parse(new _olDebug2.default.format.GeoJSON().writeGeometry(ol3Geometry)));
        }
    }]);

    return SpatialAnalystService;
}(_ServiceBase3.default);

exports.default = SpatialAnalystService;

_olDebug2.default.supermap.SpatialAnalystService = SpatialAnalystService;

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _ServiceBase2 = __webpack_require__(4);

var _ServiceBase3 = _interopRequireDefault(_ServiceBase2);

var _ThemeService = __webpack_require__(245);

var _ThemeService2 = _interopRequireDefault(_ThemeService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class ol.supermap.ThemeService
 * @description 专题图服务类
 * @augments ol.supermap.ServiceBase
 * @example
 * 用法：
 *      new ol.supermap.ThemeService(url,{
 *            projection:projection
 *      }).getThemeInfo(params,function(result){
 *           //doSomething
 *      });
 * @param url - {String} 服务的访问地址。
 * @param options - {Object} 交互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var ThemeService = function (_ServiceBase) {
    _inherits(ThemeService, _ServiceBase);

    function ThemeService(url, options) {
        _classCallCheck(this, ThemeService);

        return _possibleConstructorReturn(this, (ThemeService.__proto__ || Object.getPrototypeOf(ThemeService)).call(this, url, options));
    }

    /**
     * @function ol.supermap.ThemeService.getThemeInfo
     * @description 获取专题图信息
     * @param params - {SuperMap.ThemeParameters} 专题图参数类
     * @param callback - {function} 回调函数
     * @return {ol.supermap.ThemeService}
     */


    _createClass(ThemeService, [{
        key: 'getThemeInfo',
        value: function getThemeInfo(params, callback) {
            var me = this;
            var themeService = new _ThemeService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                }
            });
            themeService.processAsync(params);
            return me;
        }
    }]);

    return ThemeService;
}(_ServiceBase3.default);

exports.default = ThemeService;

_olDebug2.default.supermap.ThemeService = ThemeService;

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _Util = __webpack_require__(7);

var _Util2 = _interopRequireDefault(_Util);

var _ServiceBase2 = __webpack_require__(4);

var _ServiceBase3 = _interopRequireDefault(_ServiceBase2);

var _StopQueryService = __webpack_require__(218);

var _StopQueryService2 = _interopRequireDefault(_StopQueryService);

var _TransferPathService = __webpack_require__(251);

var _TransferPathService2 = _interopRequireDefault(_TransferPathService);

var _TransferSolutionService = __webpack_require__(253);

var _TransferSolutionService2 = _interopRequireDefault(_TransferSolutionService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class ol.supermap.TrafficTransferAnalystService
 * @constructs  ol.supermap.TrafficTransferAnalystService
 * @classdesc
 * 交通换乘分析服务类
 * @example 用法
 *      new ol.supermap.TrafficTransferAnalystService(url)
 *      .queryStop(params,function(result){
 *           //doSomething
 *      })
 * @api
 */
var TrafficTransferAnalystService = function (_ServiceBase) {
    _inherits(TrafficTransferAnalystService, _ServiceBase);

    function TrafficTransferAnalystService(url, options) {
        _classCallCheck(this, TrafficTransferAnalystService);

        return _possibleConstructorReturn(this, (TrafficTransferAnalystService.__proto__ || Object.getPrototypeOf(TrafficTransferAnalystService)).call(this, url, options));
    }

    /**
     * @method ol.supermap.TrafficTransferAnalystService.prototype.queryStop
     * @description 站点查询服务
     * @param params {StopQueryParameters}
     * @param callback
     */


    _createClass(TrafficTransferAnalystService, [{
        key: 'queryStop',
        value: function queryStop(params, callback) {
            var me = this;
            var stopQueryService = new _StopQueryService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                }
            });
            stopQueryService.processAsync(params);
            return me;
        }

        /**
         * @method ol.supermap.TrafficTransferAnalystService.prototype.analysisTransferPath
         * @description 交通换乘线路查询服务
         * @param params {TransferPathParameters}
         * @param callback
         */

    }, {
        key: 'analysisTransferPath',
        value: function analysisTransferPath(params, callback) {
            var me = this;
            var transferPathService = new _TransferPathService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                }
            });
            transferPathService.processAsync(me._processParams(params));
            return me;
        }

        /**
         * @method ol.supermap.TrafficTransferAnalystService.prototype.analysisTransferSolution
         * @description 交通换乘方案查询服务
         * @param params {TransferSolutionParameters}
         * @param callback
         */

    }, {
        key: 'analysisTransferSolution',
        value: function analysisTransferSolution(params, callback) {
            var me = this;
            var transferSolutionService = new _TransferSolutionService2.default(me.url, {
                serverType: me.options.serverType,
                eventListeners: {
                    scope: me,
                    processCompleted: callback,
                    processFailed: callback
                }
            });
            transferSolutionService.processAsync(me._processParams(params));
            return me;
        }
    }, {
        key: '_processParams',
        value: function _processParams(params) {
            if (!params) {
                return {};
            }
            if (params.transferLines && !_Util2.default.isArray(params.transferLines)) {
                params.transferLines = [params.transferLines];
            }
            if (params.points && _Util2.default.isArray(params.points)) {
                params.points.map(function (point, key) {
                    params.points[key] = point instanceof _olDebug2.default.geom.Point ? {
                        x: point.getCoordinates()[0],
                        y: point.getCoordinates()[1]
                    } : point;
                });
            }
            return params;
        }
    }]);

    return TrafficTransferAnalystService;
}(_ServiceBase3.default);

exports.default = TrafficTransferAnalystService;

_olDebug2.default.supermap.TrafficTransferAnalystService = TrafficTransferAnalystService;

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, module], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {
    factory(exports, module);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, mod);
    global.fetchJsonp = mod.exports;
  }
})(undefined, function (exports, module) {
  'use strict';

  var defaultOptions = {
    timeout: 5000,
    jsonpCallback: 'callback',
    jsonpCallbackFunction: null
  };

  function generateCallbackFunction() {
    return 'jsonp_' + Date.now() + '_' + Math.ceil(Math.random() * 100000);
  }

  // Known issue: Will throw 'Uncaught ReferenceError: callback_*** is not defined'
  // error if request timeout
  function clearFunction(functionName) {
    // IE8 throws an exception when you try to delete a property on window
    // http://stackoverflow.com/a/1824228/751089
    try {
      delete window[functionName];
    } catch (e) {
      window[functionName] = undefined;
    }
  }

  function removeScript(scriptId) {
    var script = document.getElementById(scriptId);
    document.getElementsByTagName('head')[0].removeChild(script);
  }

  function fetchJsonp(_url) {
    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    // to avoid param reassign
    var url = _url;
    var timeout = options.timeout || defaultOptions.timeout;
    var jsonpCallback = options.jsonpCallback || defaultOptions.jsonpCallback;

    var timeoutId = undefined;

    return new Promise(function (resolve, reject) {
      var callbackFunction = options.jsonpCallbackFunction || generateCallbackFunction();
      var scriptId = jsonpCallback + '_' + callbackFunction;

      window[callbackFunction] = function (response) {
        resolve({
          ok: true,
          // keep consistent with fetch API
          json: function json() {
            return Promise.resolve(response);
          }
        });

        if (timeoutId) clearTimeout(timeoutId);

        removeScript(scriptId);

        clearFunction(callbackFunction);
      };

      // Check if the user set their own params, and if not add a ? to start a list of params
      url += url.indexOf('?') === -1 ? '?' : '&';

      var jsonpScript = document.createElement('script');
      jsonpScript.setAttribute('src', '' + url + jsonpCallback + '=' + callbackFunction);
      jsonpScript.id = scriptId;
      document.getElementsByTagName('head')[0].appendChild(jsonpScript);

      timeoutId = setTimeout(function () {
        reject(new Error('JSONP request to ' + _url + ' timed out'));

        clearFunction(callbackFunction);
        removeScript(scriptId);
      }, timeout);
    });
  }

  // export as global function
  /*
  let local;
  if (typeof global !== 'undefined') {
    local = global;
  } else if (typeof self !== 'undefined') {
    local = self;
  } else {
    try {
      local = Function('return this')();
    } catch (e) {
      throw new Error('polyfill failed because global object is unavailable in this environment');
    }
  }
  local.fetchJsonp = fetchJsonp;
  */

  module.exports = fetchJsonp;
});

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var whatwgFetch = function (self) {
  'use strict';

  var support = {
    searchParams: 'URLSearchParams' in self,
    iterable: 'Symbol' in self && 'iterator' in Symbol,
    blob: 'FileReader' in self && 'Blob' in self && function () {
      try {
        new Blob();
        return true;
      } catch (e) {
        return false;
      }
    }(),
    formData: 'FormData' in self,
    arrayBuffer: 'ArrayBuffer' in self
  };

  function normalizeName(name) {
    if (typeof name !== 'string') {
      name = String(name);
    }
    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
      throw new TypeError('Invalid character in header field name');
    }
    return name.toLowerCase();
  }

  function normalizeValue(value) {
    if (typeof value !== 'string') {
      value = String(value);
    }
    return value;
  }

  // Build a destructive iterator for the value list
  function iteratorFor(items) {
    var iterator = {
      next: function next() {
        var value = items.shift();
        return { done: value === undefined, value: value };
      }
    };

    if (support.iterable) {
      iterator[Symbol.iterator] = function () {
        return iterator;
      };
    }

    return iterator;
  }

  function Headers(headers) {
    this.map = {};

    if (headers instanceof Headers) {
      headers.forEach(function (value, name) {
        this.append(name, value);
      }, this);
    } else if (headers) {
      Object.getOwnPropertyNames(headers).forEach(function (name) {
        this.append(name, headers[name]);
      }, this);
    }
  }

  Headers.prototype.append = function (name, value) {
    name = normalizeName(name);
    value = normalizeValue(value);
    var list = this.map[name];
    if (!list) {
      list = [];
      this.map[name] = list;
    }
    list.push(value);
  };

  Headers.prototype['delete'] = function (name) {
    delete this.map[normalizeName(name)];
  };

  Headers.prototype.get = function (name) {
    var values = this.map[normalizeName(name)];
    return values ? values[0] : null;
  };

  Headers.prototype.getAll = function (name) {
    return this.map[normalizeName(name)] || [];
  };

  Headers.prototype.has = function (name) {
    return this.map.hasOwnProperty(normalizeName(name));
  };

  Headers.prototype.set = function (name, value) {
    this.map[normalizeName(name)] = [normalizeValue(value)];
  };

  Headers.prototype.forEach = function (callback, thisArg) {
    Object.getOwnPropertyNames(this.map).forEach(function (name) {
      this.map[name].forEach(function (value) {
        callback.call(thisArg, value, name, this);
      }, this);
    }, this);
  };

  Headers.prototype.keys = function () {
    var items = [];
    this.forEach(function (value, name) {
      items.push(name);
    });
    return iteratorFor(items);
  };

  Headers.prototype.values = function () {
    var items = [];
    this.forEach(function (value) {
      items.push(value);
    });
    return iteratorFor(items);
  };

  Headers.prototype.entries = function () {
    var items = [];
    this.forEach(function (value, name) {
      items.push([name, value]);
    });
    return iteratorFor(items);
  };

  if (support.iterable) {
    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
  }

  function consumed(body) {
    if (body.bodyUsed) {
      return Promise.reject(new TypeError('Already read'));
    }
    body.bodyUsed = true;
  }

  function fileReaderReady(reader) {
    return new Promise(function (resolve, reject) {
      reader.onload = function () {
        resolve(reader.result);
      };
      reader.onerror = function () {
        reject(reader.error);
      };
    });
  }

  function readBlobAsArrayBuffer(blob) {
    var reader = new FileReader();
    reader.readAsArrayBuffer(blob);
    return fileReaderReady(reader);
  }

  function readBlobAsText(blob) {
    var reader = new FileReader();
    reader.readAsText(blob);
    return fileReaderReady(reader);
  }

  function Body() {
    this.bodyUsed = false;

    this._initBody = function (body) {
      this._bodyInit = body;
      if (typeof body === 'string') {
        this._bodyText = body;
      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
        this._bodyBlob = body;
      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
        this._bodyFormData = body;
      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
        this._bodyText = body.toString();
      } else if (!body) {
        this._bodyText = '';
      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {
        // Only support ArrayBuffers for POST method.
        // Receiving ArrayBuffers happens via Blobs, instead.
      } else {
        throw new Error('unsupported BodyInit type');
      }

      if (!this.headers.get('content-type')) {
        if (typeof body === 'string') {
          this.headers.set('content-type', 'text/plain;charset=UTF-8');
        } else if (this._bodyBlob && this._bodyBlob.type) {
          this.headers.set('content-type', this._bodyBlob.type);
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
        }
      }
    };

    if (support.blob) {
      this.blob = function () {
        var rejected = consumed(this);
        if (rejected) {
          return rejected;
        }

        if (this._bodyBlob) {
          return Promise.resolve(this._bodyBlob);
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as blob');
        } else {
          return Promise.resolve(new Blob([this._bodyText]));
        }
      };

      this.arrayBuffer = function () {
        return this.blob().then(readBlobAsArrayBuffer);
      };

      this.text = function () {
        var rejected = consumed(this);
        if (rejected) {
          return rejected;
        }

        if (this._bodyBlob) {
          return readBlobAsText(this._bodyBlob);
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as text');
        } else {
          return Promise.resolve(this._bodyText);
        }
      };
    } else {
      this.text = function () {
        var rejected = consumed(this);
        return rejected ? rejected : Promise.resolve(this._bodyText);
      };
    }

    if (support.formData) {
      this.formData = function () {
        return this.text().then(decode);
      };
    }

    this.json = function () {
      return this.text().then(JSON.parse);
    };

    return this;
  }

  // HTTP methods whose capitalization should be normalized
  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

  function normalizeMethod(method) {
    var upcased = method.toUpperCase();
    return methods.indexOf(upcased) > -1 ? upcased : method;
  }

  function Request(input, options) {
    options = options || {};
    var body = options.body;
    if (Request.prototype.isPrototypeOf(input)) {
      if (input.bodyUsed) {
        throw new TypeError('Already read');
      }
      this.url = input.url;
      this.credentials = input.credentials;
      if (!options.headers) {
        this.headers = new Headers(input.headers);
      }
      this.method = input.method;
      this.mode = input.mode;
      if (!body) {
        body = input._bodyInit;
        input.bodyUsed = true;
      }
    } else {
      this.url = input;
    }

    this.credentials = options.credentials || this.credentials || 'omit';
    if (options.headers || !this.headers) {
      this.headers = new Headers(options.headers);
    }
    this.method = normalizeMethod(options.method || this.method || 'GET');
    this.mode = options.mode || this.mode || null;
    this.referrer = null;

    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
      throw new TypeError('Body not allowed for GET or HEAD requests');
    }
    this._initBody(body);
  }

  Request.prototype.clone = function () {
    return new Request(this);
  };

  function decode(body) {
    var form = new FormData();
    body.trim().split('&').forEach(function (bytes) {
      if (bytes) {
        var split = bytes.split('=');
        var name = split.shift().replace(/\+/g, ' ');
        var value = split.join('=').replace(/\+/g, ' ');
        form.append(decodeURIComponent(name), decodeURIComponent(value));
      }
    });
    return form;
  }

  function headers(xhr) {
    var head = new Headers();
    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\n');
    pairs.forEach(function (header) {
      var split = header.trim().split(':');
      var key = split.shift().trim();
      var value = split.join(':').trim();
      head.append(key, value);
    });
    return head;
  }

  Body.call(Request.prototype);

  function Response(bodyInit, options) {
    if (!options) {
      options = {};
    }

    this.type = 'default';
    this.status = options.status;
    this.ok = this.status >= 200 && this.status < 300;
    this.statusText = options.statusText;
    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers);
    this.url = options.url || '';
    this._initBody(bodyInit);
  }

  Body.call(Response.prototype);

  Response.prototype.clone = function () {
    return new Response(this._bodyInit, {
      status: this.status,
      statusText: this.statusText,
      headers: new Headers(this.headers),
      url: this.url
    });
  };

  Response.error = function () {
    var response = new Response(null, { status: 0, statusText: '' });
    response.type = 'error';
    return response;
  };

  var redirectStatuses = [301, 302, 303, 307, 308];

  Response.redirect = function (url, status) {
    if (redirectStatuses.indexOf(status) === -1) {
      throw new RangeError('Invalid status code');
    }

    return new Response(null, { status: status, headers: { location: url } });
  };

  // self.Headers = Headers
  // self.Request = Request
  // self.Response = Response

  var fetch = function fetch(input, init) {
    // console.log('whatwgFetchWidthTimeout--->'+input, init);
    init = init || { timeout: 30000 };
    return new Promise(function (resolve, reject) {
      var request;
      if (Request.prototype.isPrototypeOf(input) && !init) {
        request = input;
      } else {
        request = new Request(input, init);
      }

      var xhr = new XMLHttpRequest();

      function responseURL() {
        if ('responseURL' in xhr) {
          return xhr.responseURL;
        }

        // Avoid security warnings on getResponseHeader when not allowed by CORS
        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {
          return xhr.getResponseHeader('X-Request-URL');
        }

        return;
      }

      xhr.onload = function () {
        var options = {
          status: xhr.status,
          statusText: xhr.statusText,
          headers: headers(xhr),
          url: responseURL()
        };
        var body = 'response' in xhr ? xhr.response : xhr.responseText;
        resolve(new Response(body, options));
      };

      xhr.onerror = function () {
        reject(new TypeError('Network request failed'));
      };

      xhr.ontimeout = function () {
        reject(new TypeError('Network request failed due to timeout'));
      };

      xhr.open(request.method, request.url, true);
      xhr.timeout = init.timeout || 30000;

      if (request.credentials === 'include') {
        xhr.withCredentials = true;
      }

      if ('responseType' in xhr && support.blob) {
        xhr.responseType = 'blob';
      }

      request.headers.forEach(function (value, name) {
        xhr.setRequestHeader(name, value);
      });

      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
    });
  };
  return fetch;
}(typeof self !== 'undefined' ? self : undefined);

module.exports = whatwgFetch;

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.Format
 * @description 读写各种格式的格式类基类。其子类应该包含并实现read和write方法。
 * @param options - {Object} 选项对象，其属性会被直接设置到format实例。如：<br>
 *        keepData - {Boolean} 如果设置为true， <data> 属性会指向被解析的对象（例如json或xml数据对象）。
 * @return {SuperMap.Format} 实例。
 */
var Format = function () {
    function Format() {
        _classCallCheck(this, Format);

        this.options = null;
        this.externalProjection = null;
        this.internalProjection = null;
        this.data = null;
        this.keepData = false;
        this.CLASS_NAME = "SuperMap.Format";
    }

    /**
     * @member SuperMap.Format.prototype.options -{Object}
     * @description A reference to options passed to the constructor.
     */


    /**
     * @member SuperMap.Format.prototype.externalProjection -{SuperMap.Projection}
     * @description 当设置了externalProjection和internalProjection参数，
     *              format类会重新对其读到的或写出的几何图形进行投影。externalProjection
     *              是read操作读到或write操作写出的投影内容。为了能够重新投影，针对某
     *              一个投影的transformation方法必须是有效的。同时，我们可以使用proj4js
     *              或自定义的transformation方法来进行支持。查看{SuperMap.Projection.addTransform}
     *              以获取更多的信息。
     */


    /**
     * @member SuperMap.Format.prototype.internalProjection -{SuperMap.Projection}
     * @description 当设置了externalProjection和internalProjection参数，
     *              format类会重新对其读到的或写出的几何图形进行投影。internalProjection
     *              是read操作返回或传给write操作的投影内容。为了能够重新投影，针对某
     *              一个投影的transformation方法必须是有效的。同时，我们可以使用proj4js
     *              或自定义的transformation方法来进行支持。查看{SuperMap.Projection.addTransform}
     *              以获取更多的信息。
     */


    /**
     * @member SuperMap.Format.prototype.data -{Object}
     * @description 当 <keepData> 属性设置为true，这是传递给<read>操作的要被解析的字符串。
     */


    /**
     * APIProperty: keepData
     * @member SuperMap.Format.prototype.keepData -{Object}
     * @description 保持最近读到的数据的引用（通过 <data> 属性）。默认值是false。
     */


    _createClass(Format, [{
        key: "initialize",


        /**
         * @function SuperMap.Format.prototype.initialize
         * @description 直接实例化这个类没有实际作用，可以通过实例化其子类来进行操作。
         * @param options - {Object} 选项对象，其属性会被直接设置到format实例。如：<br>
         *        keepData - {Boolean} 如果设置为true， <data> 属性会指向被解析的对象（例如json或xml数据对象）。
         * @return {SuperMap.Format} 实例。
         */

        value: function initialize(options) {
            _SuperMap2.default.Util.extend(this, options);
            this.options = options;
        }

        /**
         * @function destroy
         * @description 销毁该格式类，释放相关资源。
         */

    }, {
        key: "destroy",
        value: function destroy() {}
        //用来销毁该格式类，释放相关资源


        /**
         * @function SuperMap.Format.prototype.read
         * @description Read data from a string, and return an object whose type depends on the subclass.
         * @param data - {string} Data to read/parse.
         */

    }, {
        key: "read",
        value: function read(data) {}
        //用来从字符串中读取数据


        /**
         * @function SuperMap.Format.prototype.write
         * @description Accept an object, and return a string.
         * @param object - {Object} Object to be serialized
         * @return {String} A string representation of the object.
         */

    }, {
        key: "write",
        value: function write(object) {
            //用来写字符串
        }
    }]);

    return Format;
}();

exports.default = Format;

_SuperMap2.default.Format = Format;

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _Format2 = __webpack_require__(82);

var _Format3 = _interopRequireDefault(_Format2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.Format.JSON
 * @description 安全的读写JSON的解析类。使用<SuperMap.Format.JSON> 构造函数创建新实例。
 * @augments SuperMap.Format
 * @param options - {Object} 选项对象，其属性会被直接设置到JSON实例。
 */
var JSONFormat = function (_Format) {
    _inherits(JSONFormat, _Format);

    function JSONFormat() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, JSONFormat);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = JSONFormat.__proto__ || Object.getPrototypeOf(JSONFormat)).call.apply(_ref, [this].concat(args))), _this), _this.indent = "    ", _this.space = " ", _this.newline = "\n", _this.level = 0, _this.pretty = false, _this.nativeJSON = function () {
            return !!(window.JSON && typeof JSON.parse === "function" && typeof JSON.stringify === "function");
        }(), _this.serialize = {
            /**
             * @method SuperMap.Format.JSON.serialize.object
             * @description Transform an object into a JSON string.
             * @param object - {Object} The object to be serialized.
             * @return {String} A JSON string representing the object.
             */
            'object': function object(_object) {
                // three special objects that we want to treat differently
                if (_object == null) {
                    return "null";
                }
                if (_object.constructor === Date) {
                    return this.serialize.date.apply(this, [_object]);
                }
                if (_object.constructor === Array) {
                    return this.serialize.array.apply(this, [_object]);
                }
                var pieces = ['{'];
                this.level += 1;
                var key, keyJSON, valueJSON;

                var addComma = false;
                for (key in _object) {
                    if (_object.hasOwnProperty(key)) {
                        // recursive calls need to allow for sub-classing
                        keyJSON = _SuperMap2.default.Format.JSON.prototype.write.apply(this, [key, this.pretty]);
                        valueJSON = _SuperMap2.default.Format.JSON.prototype.write.apply(this, [_object[key], this.pretty]);
                        if (keyJSON != null && valueJSON != null) {
                            if (addComma) {
                                pieces.push(',');
                            }
                            pieces.push(this.writeNewline(), this.writeIndent(), keyJSON, ':', this.writeSpace(), valueJSON);
                            addComma = true;
                        }
                    }
                }

                this.level -= 1;
                pieces.push(this.writeNewline(), this.writeIndent(), '}');
                return pieces.join('');
            },

            /**
             * @method SuperMap.Format.JSON.serialize.array
             * @description Transform an array into a JSON string.
             * @param array - {Array} The array to be serialized
             * @return {String} A JSON string representing the array.
             */
            'array': function array(_array) {
                var json;
                var pieces = ['['];
                this.level += 1;

                for (var i = 0, len = _array.length; i < len; ++i) {
                    // recursive calls need to allow for sub-classing
                    json = _SuperMap2.default.Format.JSON.prototype.write.apply(this, [_array[i], this.pretty]);
                    if (json != null) {
                        if (i > 0) {
                            pieces.push(',');
                        }
                        pieces.push(this.writeNewline(), this.writeIndent(), json);
                    }
                }

                this.level -= 1;
                pieces.push(this.writeNewline(), this.writeIndent(), ']');
                return pieces.join('');
            },

            /**
             * @method SuperMap.Format.JSON.serialize.string
             * @description Transform a string into a JSON string.
             * @param string - {String} The string to be serialized
             * @return {String} A JSON string representing the string.
             */
            'string': function string(_string) {
                // If the string contains no control characters, no quote characters, and no
                // backslash characters, then we can simply slap some quotes around it.
                // Otherwise we must also replace the offending characters with safe
                // sequences.
                var m = {
                    '\b': '\\b',
                    '\t': '\\t',
                    '\n': '\\n',
                    '\f': '\\f',
                    '\r': '\\r',
                    '"': '\\"',
                    '\\': '\\\\'
                };
                if (/["\\\x00-\x1f]/.test(_string)) {
                    return '"' + _string.replace(/([\x00-\x1f\\"])/g, function (a, b) {
                        var c = m[b];
                        if (c) {
                            return c;
                        }
                        c = b.charCodeAt();
                        return '\\u00' + Math.floor(c / 16).toString(16) + (c % 16).toString(16);
                    }) + '"';
                }
                return '"' + _string + '"';
            },

            /**
             * @method SuperMap.Format.JSON.serialize.number
             * @description Transform a number into a JSON string.
             * @param number - {Number} The number to be serialized.
             * @return {String} A JSON string representing the number.
             */
            'number': function number(_number) {
                return isFinite(_number) ? String(_number) : "null";
            },

            /**
             * @method SuperMap.Format.JSON.serialize.boolean
             * @description Transform a boolean into a JSON string.
             * @param bool - {Boolean} The boolean to be serialized.
             * @return {String} A JSON string representing the boolean.
             */
            'boolean': function boolean(bool) {
                return String(bool);
            },

            /**
             * @method SuperMap.Format.JSON.serialize.object
             * @description Transform a date into a JSON string.
             * @param date - {Date} The date to be serialized.
             * @return {String} A JSON string representing the date.
             */
            'date': function date(_date) {
                function format(number) {
                    // Format integers to have at least two digits.
                    return number < 10 ? '0' + number : number;
                }

                return '"' + _date.getFullYear() + '-' + format(_date.getMonth() + 1) + '-' + format(_date.getDate()) + 'T' + format(_date.getHours()) + ':' + format(_date.getMinutes()) + ':' + format(_date.getSeconds()) + '"';
            }
        }, _this.CLASS_NAME = "SuperMap.Format.JSON", _temp), _possibleConstructorReturn(_this, _ret);
    }

    /**
     * @member SuperMap.Format.JSON.prototype.indent -{String}
     * @description 用于格式化输出，indent字符串会在每次缩进的时候使用一次；
     */


    /**
     * @member SuperMap.Format.JSON.prototype.space -{String}
     * @description 用于格式化输出，space字符串会在名值对的":"后边添加。
     */


    /**
     * @member SuperMap.Format.JSON.prototype.newline -{String}
     * @description 用于格式化输出, newline字符串会用在每一个名值对或数组项末尾。
     */


    /**
     * @member SuperMap.Format.JSON.prototype.level -{Integer}
     * @description 用于格式化输出, 表示的是缩进级别。
     */


    /**
     * @member SuperMap.Format.JSON.prototype.pretty -{Boolean}
     * @description 是否在序列化的时候使用额外的空格控制结构。在 <write> 方法中使用
     *              默认值为false。
     */


    /**
     * @member SuperMap.Format.JSON.prototype.nativeJSON -{Boolean}
     * @description 判断浏览器是否原生支持JSON格式数据；
     */


    _createClass(JSONFormat, [{
        key: 'read',


        /*
         * Constructor: SuperMap.Format.JSON
         * 创建一个新的JSON解析器。
         *
         * Parameters:
         * options - {Object} 选项对象，其属性会被直接设置到JSON实例。
         */

        /**
         * @function SuperMap.Format.JSON.prototype.read
         * @description 将一个符合json结构的字符串进行解析。
         *
         * Parameters:
         * json - {String} 符合json结构的字符串。
         * filter - {Function} 过滤方法，最终结果的每一个键值对都会调用该过滤方法，
         * 并在对应的值的位置替换成该方法返回的值。
         *
         * Returns:
         * {Object} 对象，数组，字符串或数字。
         */
        value: function read(json, filter) {
            var object;
            if (this.nativeJSON) {
                try {
                    object = JSON.parse(json, filter);
                } catch (e) {
                    // Fall through if the regexp test fails.
                }
            }

            if (this.keepData) {
                this.data = object;
            }

            return object;
        }

        /**
         * @function SuperMap.Format.JSON.prototype.write
         * @description 序列化一个对象到一个符合JSON格式的字符串。
         * @param value - {String} 需要被序列化的对象，数组，字符串，数字，布尔值。
         * @return {String} 符合JSON格式的字符串。
         */

    }, {
        key: 'write',
        value: function write(value, pretty) {
            this.pretty = !!pretty;
            var json = null;
            var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
            if (this.serialize[type]) {
                try {
                    json = !this.pretty && this.nativeJSON ? JSON.stringify(value) : this.serialize[type].apply(this, [value]);
                } catch (err) {
                    //SuperMap.Console.error("Trouble serializing: " + err);
                }
            }
            return json;
        }

        /**
         * @function SuperMap.Format.JSON.prototype.writeIndent
         * @description 根据缩进级别输出一个缩进字符串。
         * @return {String} 一个适当的缩进字符串。
         */

    }, {
        key: 'writeIndent',
        value: function writeIndent() {
            var pieces = [];
            if (this.pretty) {
                for (var i = 0; i < this.level; ++i) {
                    pieces.push(this.indent);
                }
            }
            return pieces.join('');
        }

        /**
         * @function SuperMap.Format.JSON.prototype.writeNewline
         * @description 在格式化输出模式情况下输出代表新一行的字符串。
         * @return {String} 代表新的一行的字符串。
         */

    }, {
        key: 'writeNewline',
        value: function writeNewline() {
            return this.pretty ? this.newline : '';
        }

        /**
         * @function SuperMap.Format.JSON.prototype.writeSpace
         * @description 在格式化输出模式情况下输出一个代表空格的字符串。
         * @return {String} A space.
         */

    }, {
        key: 'writeSpace',
        value: function writeSpace() {
            return this.pretty ? this.space : '';
        }

        /**
         * @member SuperMap.Format.JSON.prototype.serialize
         * @description Object with properties corresponding to the serializable data types.
         *              Property values are functions that do the actual serializing.
         */

    }]);

    return JSONFormat;
}(_Format3.default);

exports.default = JSONFormat;


_SuperMap2.default.Format.JSON = JSONFormat;

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _iPortalServiceBase = __webpack_require__(28);

var _iPortalServiceBase2 = _interopRequireDefault(_iPortalServiceBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.iPortalMap
 * @classdesc iPortal地图编辑
 * @extends {SuperMap.iPortalServiceBase}
 *
 */
var IPortalMap = function (_IPortalServiceBase) {
    _inherits(IPortalMap, _IPortalServiceBase);

    /**
     * @method SuperMap.iPortalMap.initialize
     * @param mapUrl
     * @param params
     */
    function IPortalMap(mapUrl, params) {
        _classCallCheck(this, IPortalMap);

        var _this = _possibleConstructorReturn(this, (IPortalMap.__proto__ || Object.getPrototypeOf(IPortalMap)).call(this, mapUrl));

        _this.authorizeSetting = [];
        _this.center = "";
        _this.controls = null;
        _this.checkStatus = "";
        _this.createTime = 0;
        _this.description = "";
        _this.epsgCode = 0;
        _this.extent = "";
        _this.id = 0;
        _this.isDefaultBottomMap = false;
        _this.layers = [];
        _this.level = null;
        _this.nickname = "";
        _this.sourceType = "";
        _this.status = null;
        _this.tags = [];
        _this.thumbnail = "";
        _this.title = "";
        _this.units = null;
        _this.updateTime = 0;
        _this.userName = "";
        _this.visitCount = 0;

        params = params || {};
        _SuperMap2.default.Util.extend(_this, params);
        _this.mapUrl = mapUrl;
        // if (this.id) {
        //     this.mapUrl = mapUrl + "/" + this.id;
        // }
        return _this;
    }

    /**
     * @method SuperMap.iPortalMap.load
     */


    _createClass(IPortalMap, [{
        key: 'load',
        value: function load() {
            var me = this;
            return me.request("GET", me.mapUrl + ".json").then(function (mapInfo) {
                if (mapInfo.error) {
                    return mapInfo;
                }
                for (var key in mapInfo) {
                    me[key] = mapInfo[key];
                }
            });
        }

        /**
         * @method SuperMap.iPortalMap.update
         */

    }, {
        key: 'update',
        value: function update() {
            var mapUpdateParam = {
                units: this.units,
                level: this.level,
                center: this.center,
                controls: this.controls,
                description: this.description,
                epsgCode: this.epsgCode,
                extent: this.extent,
                status: this.status,
                tags: this.tags,
                layers: this.layers,
                title: this.title,
                thumbnail: this.thumbnail,
                sourceType: this.sourceType,
                authorizeSetting: this.authorizeSetting
            };
            var options = {
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }
            };
            return this.request("PUT", this.mapUrl, JSON.stringify(mapUpdateParam), options);
        }
    }]);

    return IPortalMap;
}(_iPortalServiceBase2.default);

exports.default = IPortalMap;


_SuperMap2.default.iPortalMap = IPortalMap;

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.iPortalMapsQueryParam
 * @classdesc iPortal地图资源查询参数
 *
 */
var IPortalMapsQueryParam =

/**
 * @method SuperMap.iPortalMapsQueryParam.initialize
 * @param params
 *
 */
function IPortalMapsQueryParam(params) {
    _classCallCheck(this, IPortalMapsQueryParam);

    this.userNames = '';
    this.tags = [];
    this.suggest = false;
    this.sourceTypes = [];
    this.keywords = [];
    this.epsgCode = "";
    this.orderBy = "";
    this.currentPage = "";
    this.pageSize = 0;
    this.dirIds = [];
    this.isNotInDir = false;
    this.updateStart = 0;
    this.updateEnd = 0;
    this.visitStart = 0;
    this.visitEnd = 0;
    this.filterFields = [];

    params = params || {};
    _SuperMap2.default.Util.extend(this, params);
};

exports.default = IPortalMapsQueryParam;


_SuperMap2.default.iPortalMapsQueryParam = IPortalMapsQueryParam;

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _iPortalServiceBase = __webpack_require__(28);

var _iPortalServiceBase2 = _interopRequireDefault(_iPortalServiceBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.iPortalService
 * @classdesc iPortal服务
 * @extends {SuperMap.iPortalServiceBase}
 *
 */
var IPortalService = function (_IPortalServiceBase) {
    _inherits(IPortalService, _IPortalServiceBase);

    /**
     * @method SuperMap.iPortalService.initialize
     * @param seviceUrl
     * @param params
     */

    function IPortalService(serviceUrl, params) {
        _classCallCheck(this, IPortalService);

        var _this = _possibleConstructorReturn(this, (IPortalService.__proto__ || Object.getPrototypeOf(IPortalService)).call(this, serviceUrl));

        _this.addedMapNames = null;
        _this.addedSceneNames = null;
        _this.authorizeSetting = [];
        _this.checkStatus = "";
        _this.createTime = 0;
        _this.description = "";
        _this.enable = true;
        _this.id = 0;
        _this.isBatch = false;
        _this.isDataItemService = false;
        _this.linkPage = null;
        _this.mapInfos = [];
        _this.metadata = null;
        _this.nickname = "";
        _this.offline = false;
        _this.proxiedUrl = null;
        _this.resTitle = "";
        _this.scenes = [];
        _this.serviceRootUrlId = null;
        _this.tags = [];
        _this.thumbnail = null;
        _this.type = "";
        _this.updateTime = 0;
        _this.userName = "";
        _this.verifyReason = null;
        _this.version = null;
        _this.visitCount = 0;

        params = params || {};
        _SuperMap2.default.Util.extend(_this, params);
        _this.serviceUrl = serviceUrl;
        if (_this.id) {
            _this.serviceUrl = serviceUrl + "/" + _this.id;
        }
        return _this;
    }

    /**
     * @method SuperMap.iPortalService.load
     */

    _createClass(IPortalService, [{
        key: 'load',
        value: function load() {
            var me = this;
            return me.request("GET", me.serviceUrl + ".json").then(function (serviceInfo) {
                if (serviceInfo.error) {
                    return serviceInfo;
                }
                for (var key in serviceInfo) {
                    me[key] = serviceInfo[key];
                }
            });
        }

        /**
         * @method SuperMap.iPortalService.update
         */

    }, {
        key: 'update',
        value: function update() {
            var serviceUpdateParam = {
                authorizeSetting: this.authorizeSetting,
                metadata: this.metadata,
                tags: this.tags,
                thumbnail: this.thumbnail
            };
            var options = {
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }
            };
            return this.request("PUT", this.serviceUrl, JSON.stringify(serviceUpdateParam), options);
        }
    }]);

    return IPortalService;
}(_iPortalServiceBase2.default);

exports.default = IPortalService;


_SuperMap2.default.iPortalService = IPortalService;

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.iPortalServicesQueryParam
 * @classdesc iPortal服务查询参数
 *
 */

var IPortalServicesQueryParam = function IPortalServicesQueryParam(params) {
    _classCallCheck(this, IPortalServicesQueryParam);

    this.tags = [];
    this.userNames = '';
    this.types = [];
    this.checkStatus = '';
    this.offline = false;
    this.orderBy = '';
    this.orderType = '';
    this.keywords = [];
    this.currentPage = 0;
    this.pageSize = 0;
    this.isBatch = false;
    this.dirIds = [];
    this.isNotInDir = false;
    this.filterFields = [];
    this.authorizedOnly = false;

    params = params || {};
    _SuperMap2.default.Util.extend(this, params);
};

exports.default = IPortalServicesQueryParam;


_SuperMap2.default.iPortalServicesQueryParam = IPortalServicesQueryParam;

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _FetchRequest = __webpack_require__(13);

var _GeoCodingParameter = __webpack_require__(147);

var _GeoCodingParameter2 = _interopRequireDefault(_GeoCodingParameter);

var _GeoDecodingParameter = __webpack_require__(148);

var _GeoDecodingParameter2 = _interopRequireDefault(_GeoDecodingParameter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.AddressMatchService
 * @constructs SuperMap.AddressMatchService
 * @classdesc
 * 地址匹配服务，包括正向匹配和反向匹配。
 * @api

 */
var AddressMatchService = function (_CommonServiceBase) {
    _inherits(AddressMatchService, _CommonServiceBase);

    /**
     *
     * @method SuperMap.AddressMatchService.initialize
     * @param options - {Object} 参数。
     * @param url {string}
     */
    function AddressMatchService(url, options) {
        _classCallCheck(this, AddressMatchService);

        var _this = _possibleConstructorReturn(this, (AddressMatchService.__proto__ || Object.getPrototypeOf(AddressMatchService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.AddressMatchService";
        return _this;
    }

    _createClass(AddressMatchService, [{
        key: 'destroy',
        value: function destroy() {
            _get(AddressMatchService.prototype.__proto__ || Object.getPrototypeOf(AddressMatchService.prototype), 'destroy', this).call(this);
        }

        /**
         * @method SuperMap.AddressMatchService.code
         * @param url {string} 正向地址匹配服务地址
         * @param params {object} 正向地址匹配服务参数
         */

    }, {
        key: 'code',
        value: function code(url, params) {
            this.processAsync(url, params);
        }

        /**
         * @method SuperMap.AddressMatchService.decode
         * @param url {string} 反向地址匹配服务地址
         * @param params {object} 反向地址匹配服务参数
         */

    }, {
        key: 'decode',
        value: function decode(url, params) {
            this.processAsync(url, params);
        }
    }, {
        key: 'processAsync',
        value: function processAsync(url, params) {
            var me = this;
            return _FetchRequest.FetchRequest.get(url, params).then(function (response) {
                return response.json();
            }).then(function (result) {
                if (result) {
                    me.serviceProcessCompleted(result);
                } else {
                    me.serviceProcessFailed(result);
                }
            }).catch(function (e) {
                me.eventListeners.processFailed({ error: e });
            });
        }
    }, {
        key: 'serviceProcessCompleted',
        value: function serviceProcessCompleted(result) {
            _get(AddressMatchService.prototype.__proto__ || Object.getPrototypeOf(AddressMatchService.prototype), 'serviceProcessCompleted', this).call(this, result);
        }
    }, {
        key: 'serviceProcessFailed',
        value: function serviceProcessFailed(result) {
            _get(AddressMatchService.prototype.__proto__ || Object.getPrototypeOf(AddressMatchService.prototype), 'serviceProcessFailed', this).call(this, result);
        }
    }]);

    return AddressMatchService;
}(_CommonServiceBase3.default);

exports.default = AddressMatchService;

_SuperMap2.default.AddressMatchService = AddressMatchService;

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.AreaSolarRadiationParameters
 * @constructs SuperMap.AreaSolarRadiationParameters
 * @classdesc
 * 地区太阳辐射参数类。
 * @api
 */
var AreaSolarRadiationParameters = function () {

    /**
     * @method SuperMap.AreaSolarRadiationParameters.initialize
     * @param options - {Object} 参数。
     *
     * Allowed options properties:</br>
     * dataset - {String} 要用来做地区太阳辐射数据源中数据集的名称。该名称用形如"数据集名称@数据源别名"形式来表示，例如：JingjinTerrain@Jingjin。（必设参数）。
     * targetDatasourceName - {String}  指定的存储结果数据集的数据源名称（必设参数）, 例如："Jingjin"。</br>
     * totalGridName - {String} 指定地区太阳辐射总辐射量数据集的名称（必设参数）。</br>
     * diffuseDatasetGridName - {String} 指定地区太阳辐射散射辐射量数据集的名称。</br>
     * durationDatasetGridName - {String} 指定地区太阳辐射太阳直射持续时间数据集的名称。</br>
     * directDatasetGridName - {String} 指定地区太阳辐射直射辐射量数据集的名称。</br>
     * latitude - {Number} 待计算区域的纬度值。</br>
     * timeMode - {String} 时间模式。可设置有“WITHINDAY”（单日）和“MULTIDAYS”（多日）；默认值为"MULTIDAYS";</br>
     * dayStart - {Number} 起始日期（年内的第几天）。（必设参数）</br>
     * dayEnd - {Number} 结束日期（年内的第几天）。（必设参数）</br>
     * hourStart - {Number} 起始时间（一天中的第几个小时）。</br>
     * hourEnd - {Number} 结束时间（一天中的第几个小时）。</br>
     * transmittance - {Number} 太阳辐射穿过大气的透射率。</br>
     * hourInterval - {Number} 计算时的小时间隔（设置的越小计算量越大并且计算结果更精确, 默认为0.5小时，如果修改此参数，必须使用整数）</br>
     * dayInterval - {Number} 计算时的天数间隔（设置的越小计算量越大并且计算结果更精确, 默认为5天，必须使用整数）</br>
     * deleteExistResultDataset - {Boolean} 如果用户命名的结果数据集名称与已有的数据集重名，是否删除已有的数据集。默认为 false，即不删除。</br>
     */


    /**
     * APIProperty: dayInterval
     * {Number} 计算时的天数间隔（设置的越小计算量越大并且计算结果更精确, 默认为5天，必须使用整数）
     */


    /**
     * APIProperty: transmittance
     * {Number} 太阳辐射穿过大气的透射率。
     */


    /**
     * APIProperty: hourStart
     * {Number} 起始时间（一天中的第几个小时）。
     */


    /**
     * APIProperty: dayStart
     * {Number} 起始日期（年内的第几天）。（必设参数）
     */


    /**
     * APIProperty: latitude
     * {Number} 待计算区域的纬度值。
     */


    /**
     * APIProperty: durationDatasetGridName
     * {String} 指定地区太阳辐射太阳直射持续时间数据集的名称。
     */


    /**
     * APIProperty: totalGridName
     * {String} 指定地区太阳辐射总辐射量数据集的名称（必设参数）。
     */


    /**
     * APIProperty: dataset
     * {String} 要用来做地区太阳辐射数据源中数据集的名称。
     * 该名称用形如"数据集名称@数据源别名"形式来表示，例如：JingjinTerrain@Jingjin （必设参数）。
     *
     * 注：地区太阳辐射数据必须为栅格数据集。
     */
    function AreaSolarRadiationParameters(options) {
        _classCallCheck(this, AreaSolarRadiationParameters);

        this.dataset = null;
        this.targetDatasourceName = null;
        this.totalGridName = null;
        this.diffuseDatasetGridName = null;
        this.durationDatasetGridName = null;
        this.directDatasetGridName = null;
        this.latitude = null;
        this.timeMode = "MULTIDAYS";
        this.dayStart = null;
        this.dayEnd = null;
        this.hourStart = null;
        this.hourEnd = null;
        this.transmittance = null;
        this.hourInterval = null;
        this.dayInterval = null;
        this.deleteExistResultDataset = false;
        this.CLASS_NAME = "SuperMap.AreaSolarRadiationParameters";

        if (!options) {
            return this;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: deleteExistResultDataset
     * {Boolean} 如果用户命名的结果数据集名称与已有的数据集重名，是否删除已有的数据集。默认为 false，即不删除。
     */


    /**
     * APIProperty: hourInterval
     * {Number} 计算时的小时间隔（设置的越小计算量越大并且计算结果更精确, 默认为0.5小时，如果修改此参数，必须使用整数）
     */


    /**
     * APIProperty: hourEnd
     * {Number} 结束时间（一天中的第几个小时）。
     */


    /**
     * APIProperty: dayEnd
     * {Number} 结束日期（年内的第几天）。（必设参数）
     */


    /**
     * APIProperty: timeMode
     * {String} 时间模式。可设置有“WITHINDAY”（单日）和“MULTIDAYS”（多日）；默认值为"MULTIDAYS";
     */


    /**
     * APIProperty: directDatasetGridName
     * {String} 指定地区太阳辐射直射辐射量数据集的名称。
     */


    /**
     * APIProperty: diffuseDatasetGridName
     * {String} 指定地区太阳辐射散射辐射量数据集的名称。
     */


    /**
     * APIProperty: targetDatasourceName
     * {String}  指定的存储结果数据集的数据源名称（必设参数）； 例如："Jingjin"。
     */


    _createClass(AreaSolarRadiationParameters, [{
        key: "destroy",
        value: function destroy() {
            var me = this;
            me.dataset = null;
            me.zFactor = 1.0;
            me.averageCurvatureName = null;
            me.profileCurvatureName = null;
            me.planCurvatureName = null;
            me.deleteExistResultDataset = true;
        }
    }], [{
        key: "toObject",
        value: function toObject(derrainCurvatureCalculationParameters, tempObj) {
            var parameter = {};
            for (var name in derrainCurvatureCalculationParameters) {
                if (name !== "dataset") {
                    var name1 = name === "latitude" || name === "timeMode" || name === "dayStart";
                    var name2 = name === "dayEnd" || name === "hourStart" || name === "hourEnd";
                    var name3 = name === "transmittance" || name === "hourInterval" || name === "dayInterval";
                    if (name1 || name2 || name3) {
                        parameter[name] = derrainCurvatureCalculationParameters[name];
                    } else {
                        tempObj[name] = derrainCurvatureCalculationParameters[name];
                    }
                }
            }
            tempObj["parameter"] = parameter;
        }
    }]);

    return AreaSolarRadiationParameters;
}();

exports.default = AreaSolarRadiationParameters;


_SuperMap2.default.AreaSolarRadiationParameters = AreaSolarRadiationParameters;

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _SpatialAnalystBase2 = __webpack_require__(6);

var _SpatialAnalystBase3 = _interopRequireDefault(_SpatialAnalystBase2);

var _AreaSolarRadiationParameters = __webpack_require__(89);

var _AreaSolarRadiationParameters2 = _interopRequireDefault(_AreaSolarRadiationParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.AreaSolarRadiationService
 * @constructs SuperMap.AreaSolarRadiationService
 * @classdesc
 * 地区太阳辐射服务类。
 * @extends {SuperMap.SpatialAnalystBase}
 * @api
 * @example 例如：
 * (start code)
 * var myAreaSolarRadiationService = new SuperMap.AreaSolarRadiationService(url);
 * myAreaSolarRadiationService.on({
     *     "processCompleted": processCompleted,
     *     "processFailed": processFailed
     *     }
 * );
 * (end)
 *
 */
var AreaSolarRadiationService = function (_SpatialAnalystBase) {
    _inherits(AreaSolarRadiationService, _SpatialAnalystBase);

    /**
     *
     *
     * @method SuperMap.AreaSolarRadiationService.initialize
     * @param url - {String} 服务的访问地址。如</br> http://localhost:8090/iserver/services/spatialanalyst-sample/restjsr/spatialanalyst 。
     * @param options - {Object} 参数。
     *
     * Allowed options properties:</br>
     * eventListeners - {Object} 需要被注册的监听器对象。
     */
    function AreaSolarRadiationService(url, options) {
        _classCallCheck(this, AreaSolarRadiationService);

        var _this = _possibleConstructorReturn(this, (AreaSolarRadiationService.__proto__ || Object.getPrototypeOf(AreaSolarRadiationService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.AreaSolarRadiationService";
        return _this;
    }

    /**
     * APIMethod: destroy
     * 释放资源,将引用资源的属性置空。
     */


    _createClass(AreaSolarRadiationService, [{
        key: 'destroy',
        value: function destroy() {
            _get(AreaSolarRadiationService.prototype.__proto__ || Object.getPrototypeOf(AreaSolarRadiationService.prototype), 'destroy', this).call(this);
        }

        /**
         * @method SuperMap.AreaSolarRadiationService.processAsync
         * @description  负责将客户端的查询参数传递到服务端。
         * @param parameter - {AreaSolarRadiationService}
         */

    }, {
        key: 'processAsync',
        value: function processAsync(parameter) {
            var me = this;

            var end = me.url.substr(me.url.length - 1, 1);
            if (end === '/') {} else {
                me.url += "/";
            }

            var parameterObject = {};

            if (parameter instanceof _SuperMap2.default.AreaSolarRadiationParameter) {
                me.url += 'datasets/' + parameter.dataset + '/solarradiation';
            }

            _SuperMap2.default.AreaSolarRadiationParameters.toObject(parameter, parameterObject);
            var jsonParameters = _SuperMap2.default.Util.toJSON(parameterObject);

            if (me.isInTheSameDomain) {
                me.url += '.json?returnContent=true';
            } else {
                me.url += '.jsonp?returnContent=true';
            }

            me.request({
                method: "POST",
                data: jsonParameters,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return AreaSolarRadiationService;
}(_SpatialAnalystBase3.default);

exports.default = AreaSolarRadiationService;

_SuperMap2.default.AreaSolarRadiationService = AreaSolarRadiationService;

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _Graph2 = __webpack_require__(14);

var _Graph3 = _interopRequireDefault(_Graph2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Class: SuperMap.Feature.Theme.Bar
 * 柱状图 。
 *
 * 图表 Bar 配置对象 chartsSetting（<SuperMap.Layer.Graph::chartsSetting>） 可设属性如下：
 *
 * Symbolizer properties:
 * width - {Number} 专题要素（图表）宽度，必设参数。
 * height - {Number} 专题要素（图表）高度，必设参数。
 * codomain - {Array{Number}} 图表允许展示的数据值域，长度为 2 的一维数组，第一个元素表示值域下限，第二个元素表示值域上限，必设参数。
 * XOffset - {Number}  专题要素（图表）在 X 方向上的偏移值，单位像素。
 * YOffset - {Number}  专题要素（图表）在 Y 方向上的偏移值，单位像素。
 * dataViewBoxParameter - {Array{Number}} 数据视图框 dataViewBox 参数，
 * 它是指图表框 chartBox （由图表位置、图表宽度、图表高度构成的图表范围框）在左、下，右，上四个方向上的内偏距值。
 * 当使用坐标轴时 dataViewBoxParameter 的默认值为：[45, 15, 15, 15]；不使用坐标轴时 dataViewBoxParameter 的默认值为：[5, 5, 5, 5]。
 * decimalNumber - {Number} 数据值数组 dataValues 元素值小数位数，数据的小数位处理参数，取值范围：[0, 16]。如果不设置此参数，在取数据值时不对数据做小数位处理。
 *
 * useBackground - {Boolean} 是否使用图表背景框，默认使用。
 * backgroundStyle - {Object} 背景样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Rectangle::style>。
 * backgroundRadius - {Array} 背景框矩形圆角半径，可以用数组分别指定四个角的圆角半径，设：左上、右上、右下、左下角的半径依次为 r1、r2、r3、r4 ,
 * 则 backgroundRadius 为 [r1、r2、r3、r4 ]，默认值[0, 0, 0, 0]。
 *
 * xShapeBlank - {Array{Number}} 水平方向上的图形空白间隔参数。
 * 长度为 3 的数组，第一元素表示第一个图形左端与数据视图框左端的空白间距，第二个元素表示图形间空白间距，
 * 第三个元素表示最后一个图形右端与数据视图框右端端的空白间距 。
 *
 * showShadow - {Boolean} 阴影开关 默认是打开
 * barShadowStyle - {Object} 阴影样式,如：{shadowBlur : 8, shadowOffsetX: 2 , shadowOffsetY : 2,shadowColor : "rgba(100,100,100,0.8)"}
 * barLinearGradient - {Array} 按字段设置柱条样式[渐变开始颜色,渐变终止颜色]  与 themeLayer.themeFields 中的字段一一对应）
 * 如：[["#00FF00","#00CD00"],["#00CCFF","#5E87A2"],["#00FF66","#669985"],["#CCFF00","#94A25E"],["#FF9900","#A2945E"]]
 *
 * useAxis - {Boolean} 是否使用坐标轴，默认使用坐标轴。
 * axisStyle - {Object} 坐标轴样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Line::style> 。
 * axisUseArrow - {Boolean} 坐标轴是否使用箭头，默认值：false，不使用箭头。
 * axisYTick - {Number} y 轴刻度数量，默认值：0 ，不使用刻度。
 * axisYLabels - {Array{String}} y 轴上的标签组内容，标签顺序沿着数据视图框左面条边自上而下，等距排布。例如：["1000", "750", "500", "250", "0"]。
 * axisYLabelsStyle - {Object} y 轴上的标签组样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Label::style> 。
 * axisYLabelsOffset - {Array{Number}} y 轴上的标签组偏移量。长度为 2 的数组，数组第一项表示 y 轴标签组横向上的偏移量，向左为正，默认值：0；
 * 数组第二项表示 y 轴标签组纵向上的偏移量，向下为正，默认值：0。
 * axisXLabels - {Array{String}} x 轴上的标签组内容，标签顺序沿着数据视图框下面条边自左向右排布，例如：["92年", "95年", "99年"]。
 * 标签排布规则：当标签数量与 xShapeInfo 中的属性 xShapeCenter 数量相同（即标签个数与数据个数相等时）, 按照 xShapeCenter 提供的位置排布标签，
 * 否则沿数据视图框下面条边等距排布标签。
 * axisXLabelsStyle - {Object} x 轴上的标签组样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Label::style> 。
 * axisXLabelsOffset - {Array{Number}} x 轴上的标签组偏移量。长度为 2 的数组，数组第一项表示 x 轴标签组横向上的偏移量，向左为正，默认值：0；
 * 数组第二项表示 x 轴标签组纵向上的偏移量，向下为正，默认值：0。
 * useXReferenceLine - {Boolean) 是否使用水平参考线，如果为 true，在 axisYTick 大于 0 时有效，水平参考线是 y 轴刻度在数据视图框里的延伸。
 * xReferenceLineStyle - {Object) 水平参考线样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Line::style> 。
 *
 * barStyle - {Object} 柱状图柱条基础 style，此参数控制柱条基础样式，优先级低于 barStyleByFields 和 barStyleByCodomain。
 * 此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Polygon::style> 。
 * barStyleByFields - {Array{Object}} 按专题字段 themeFields（<SuperMap.Layer.Graph::themeFields>）为柱条赋 style，此参数按字段控制柱条样式，
 * 优先级低于 barStyleByCodomain，高于 barStyle。此数组中的元素是样式对象，其可设属性： <SuperMap.Feature.ShapeParameters.Polygon::style> 。
 * 此参数中的 style 与 themeFields 中的字段一一对应 。例如： themeFields（<SuperMap.Layer.Graph::themeFields>） 为 ["POP_1992", "POP_1995", "POP_1999"],
 * barStyleByFields 为[style1, style2, style3]，则在图表中，字段 POP_1992 对应的柱条使用 style1，字段 POP_1995 对应的柱条使用 style2 ，字段 POP_1999 对应的柱条使用 style3。
 * barStyleByCodomain - {Array{Object}} 按柱条代表的数据值所在值域范围控制柱条样式，优先级高于 barStyle 和 barStyleByFields。
 * (start code)
 * // barStyleByCodomain 的每个元素是个包含值域信息和与值域对应样式信息的对象，该对象（必须）有三个属性：
 * // start: 值域值下限（包含）;
 * // end: 值域值上限（不包含）;
 * // style: 数据可视化图形的 style，这个样式对象的可设属性： <SuperMap.Feature.ShapeParameters.Polygon::style> 。
 * // barStyleByCodomain 数组形如：
 * [
 *   {
 *     start:0,
 *     end:250,
 *     style:{
 *          fillColor:"#00CD00"
 *      }
 *  },
 *   {
 *     start:250,
 *     end:500,
 *     style:{
 *          fillColor:"#00EE00"
 *      }
 *  },
 *   {
 *     start:500,
 *     end:750,
 *     style:{
 *          fillColor:"#00FF7F"
 *      }
 *  },
 *   {
 *     start:750,
 *     end:1500,
 *     style:{
 *          fillColor:"#00FF00"
 *      }
 *  }
 * ]
 * (end)
 * barHoverStyle - {Object} 柱条 hover 状态时的样式，barHoverAble 为 true 时有效。
 * barHoverAble - {Object} 是否允许柱条使用 hover 状态，默认允许。同时设置 barHoverAble 和 barClickAble 为 false，可以直接屏蔽柱条对专题图层事件的响应。
 * barClickAble - {Object} 是否允许柱条被点击，默认允许。同时设置 barHoverAble 和 barClickAble 为 false，可以直接屏蔽柱条对专题图层事件的响应。
 *
 * Inherits:
 *  - <SuperMap.Feature.Theme.Graph>
 */
var Bar = function (_Graph) {
    _inherits(Bar, _Graph);

    /**
     * Constructor: SuperMap.Feature.Theme.Bar
     * 创建一个柱状图表。
     *
     * Parameters:
     * data - {SuperMap.Feature.Vector}  用户数据，必设参数。
     * layer - {SuperMap.Layer.Graph} 此专题要素所在图层，必设参数。
     * fields - {Array{String}} data 属性中的参与此图表生成的属性字段名称，必设参数。
     * setting - {Object} 图表配置对象，必设参数。
     * lonlat - {SuperMap.LonLat} 专题要素地理位置。默认为 data 指代的地理要素 Bounds 中心。
     *
     * Returns:
     * {SuperMap.Feature.Theme.Bar} 返回一个柱状图表对象。
     */
    function Bar(data, layer, fields, setting, lonlat) {
        _classCallCheck(this, Bar);

        var _this = _possibleConstructorReturn(this, (Bar.__proto__ || Object.getPrototypeOf(Bar)).call(this, data, layer, fields, setting, lonlat));

        _this.CLASS_NAME = "SuperMap.Feature.Theme.Bar";
        return _this;
    }

    /**
     * APIMethod: destroy
     * 销毁对象。调用 destroy 后此对象所以属性置为 null。
     */


    _createClass(Bar, [{
        key: 'destroy',
        value: function destroy() {
            _get(Bar.prototype.__proto__ || Object.getPrototypeOf(Bar.prototype), 'destroy', this).call(this);
        }

        /**
         * Method: assembleShapes
         * 图表图形装配函数
         */

    }, {
        key: 'assembleShapes',
        value: function assembleShapes() {
            //默认渐变颜色数组
            var deafaultColors = [["#00FF00", "#00CD00"], ["#00CCFF", "#5E87A2"], ["#00FF66", "#669985"], ["#CCFF00", "#94A25E"], ["#FF9900", "#A2945E"]];

            //默认阴影
            var deafaultShawdow = {
                showShadow: true,
                shadowBlur: 8,
                shadowColor: "rgba(100,100,100,0.8)",
                shadowOffsetX: 2,
                shadowOffsetY: 2
            };

            // 图表配置对象
            var sets = this.setting;

            if (typeof sets.barLinearGradient !== "undifined") sets.barLinearGradient = deafaultColors;

            // 默认数据视图框
            if (!sets.dataViewBoxParameter) {
                if (typeof sets.useAxis === "undefined" || sets.useAxis) {
                    sets.dataViewBoxParameter = [45, 15, 15, 15];
                } else {
                    sets.dataViewBoxParameter = [5, 5, 5, 5];
                }
            }

            // 重要步骤：初始化参数
            if (!this.initBaseParameter()) return;
            // 值域
            var codomain = this.DVBCodomain;
            // 重要步骤：定义图表 Bar 数据视图框中单位值的含义
            this.DVBUnitValue = (codomain[1] - codomain[0]) / this.DVBHeight;

            // 数据视图域
            var dvb = this.dataViewBox;
            // 用户数据值
            var fv = this.dataValues;
            if (fv.length < 1) return; // 没有数据

            // 数据溢出值域范围处理
            for (var i = 0, fvLen = fv.length; i < fvLen; i++) {
                if (fv[i] < codomain[0] || fv[i] > codomain[1]) return;
            }

            // 获取 x 轴上的图形信息
            var xShapeInfo = this.calculateXShapeInfo();
            if (!xShapeInfo) return;
            // 每个柱条 x 位置
            var xsLoc = xShapeInfo.xPositions;
            // 柱条宽度
            var xsWdith = xShapeInfo.width;

            // 背景框，默认启用
            if (typeof sets.useBackground === "undefined" || sets.useBackground) {
                // 将背景框图形添加到模型的 shapes 数组，注意添加顺序，后添加的图形在先添加的图形之上。
                this.shapes.push(_SuperMap2.default.Feature.ShapeFactory.Background(this.shapeFactory, this.chartBox, sets));
            }

            // 坐标轴, 默认启用
            if (typeof sets.useAxis === "undefined" || sets.useAxis) {
                // 添加坐标轴图形数组
                this.shapes = this.shapes.concat(_SuperMap2.default.Feature.ShapeFactory.GraphAxis(this.shapeFactory, dvb, sets, xShapeInfo));
            }

            for (var i = 0; i < fv.length; i++) {
                // 计算柱条 top 边的 y 轴坐标值
                var yPx = dvb[1] - (fv[i] - codomain[0]) / this.DVBUnitValue;

                // 柱条节点数组
                var poiLists = [[xsLoc[i] - xsWdith / 2, dvb[1] - 1], [xsLoc[i] + xsWdith / 2, dvb[1] - 1], [xsLoc[i] + xsWdith / 2, yPx], [xsLoc[i] - xsWdith / 2, yPx]];

                // 柱条参数对象（一个面参数对象）
                var barParams = new _SuperMap2.default.Feature.ShapeParameters.Polygon(poiLists);

                // 柱条 阴影 style
                if (typeof sets.showShadow === "undefined" || sets.showShadow) {
                    if (sets.barShadowStyle) {
                        var sss = sets.barShadowStyle;
                        if (sss.shadowBlur) deafaultShawdow.shadowBlur = sss.shadowBlur;
                        if (sss.shadowColor) deafaultShawdow.shadowColor = sss.shadowColor;
                        if (sss.shadowOffsetX) deafaultShawdow.shadowOffsetX = sss.shadowOffsetX;
                        if (sss.shadowOffsetY) deafaultShawdow.shadowOffsetY = sss.shadowOffsetY;
                    }
                    barParams.style = {};
                    _SuperMap2.default.Util.copyAttributesWithClip(barParams.style, deafaultShawdow);
                }

                // 图形携带的数据信息
                barParams.refDataID = this.data.id;
                barParams.dataInfo = {
                    field: this.fields[i],
                    value: fv[i]
                };

                // 柱条 hover click
                if (typeof sets.barHoverAble !== "undefined") {
                    barParams.hoverable = sets.barHoverAble;
                }
                if (typeof sets.barClickAble !== "undefined") {
                    barParams.clickable = sets.barClickAble;
                }

                // 创建柱条并添加到图表图形数组中
                this.shapes.push(this.shapeFactory.createShape(barParams));
            }

            // 重要步骤：将图形转为由相对坐标表示的图形，以便在地图平移缩放过程中快速重绘图形
            // （统计专题图模块从结构上要求使用相对坐标，assembleShapes() 函数必须在图形装配完成后调用 shapesConvertToRelativeCoordinate() 函数）
            this.shapesConvertToRelativeCoordinate();
        }

        /**
         * Method: calculateXShapeInfo
         * 计算 X 轴方向上的图形信息，此信息是一个对象，包含两个属性，
         * 属性 xPositions 是一个一维数组，该数组元素表示图形在 x 轴方向上的像素坐标值，
         * 如果图形在 x 方向上有一定宽度，通常取图形在 x 方向上的中心点为图形在 x 方向上的坐标值。
         * width 表示图形的宽度（特别注意：点的宽度始终为 0，而不是其直径）。
         *
         * 本函数中图形配置对象 setting 可设属性：
         * Symbolizer properties:
         * xShapeBlank - {Array{Number}} 水平方向上的图形空白间隔参数。
         * 长度为 3 的数组，第一元素表示第一个图形左端与数据视图框左端的空白间距，第二个元素表示图形间空白间距，
         * 第三个元素表示最后一个图形右端与数据视图框右端端的空白间距 。
         *
         * Returns:
         * {Object} 如果计算失败，返回 null；如果计算成功，返回 X 轴方向上的图形信息，此信息是一个对象，包含以下两个属性：
         * Symbolizer properties:
         * xPositions - {Array{Number}} 表示图形在 x 轴方向上的像素坐标值，如果图形在 x 方向上有一定宽度，通常取图形在 x 方向上的中心点为图形在 x 方向上的坐标值。
         * width - {Number} 表示图形的宽度（特别注意：点的宽度始终为 0，而不是其直径）。
         *
         */

    }, {
        key: 'calculateXShapeInfo',
        value: function calculateXShapeInfo() {
            var dvb = this.dataViewBox; // 数据视图框
            var sets = this.setting; // 图表配置对象
            var fvc = this.dataValues.length; // 数组值个数

            if (fvc < 1) return null;

            var xBlank; // x 轴空白间隔参数
            var xShapePositions = []; // x 轴上图形的位置
            var xShapeWidth = 0; // x 轴上图形宽度(自适应)
            var dvbWidth = this.DVBWidth; // 数据视图框宽度

            //  x 轴空白间隔参数处理
            if (sets.xShapeBlank && sets.xShapeBlank.length && sets.xShapeBlank.length == 3) {
                xBlank = sets.xShapeBlank;
                var xsLen = dvbWidth - (xBlank[0] + xBlank[2] + (fvc - 1) * xBlank[1]);
                if (xsLen <= fvc) {
                    return null;
                }
                xShapeWidth = xsLen / fvc;
            } else {
                // 默认使用等距离空白间隔，空白间隔为图形宽度
                xShapeWidth = dvbWidth / (2 * fvc + 1);
                xBlank = [xShapeWidth, xShapeWidth, xShapeWidth];
            }

            // 图形 x 轴上的位置计算
            var xOffset = 0;
            for (var i = 0; i < fvc; i++) {
                if (i == 0) {
                    xOffset = xBlank[0] + xShapeWidth / 2;
                } else {
                    xOffset += xShapeWidth + xBlank[1];
                }

                xShapePositions.push(dvb[0] + xOffset);
            }

            return {
                "xPositions": xShapePositions,
                "width": xShapeWidth
            };
        }

        /**
         * Method: resetLinearGradient
         * 图表的相对坐标存在的时候，重新计算渐变的颜色
         * PS: (目前用于二维柱状图 所以子类实现此方法)
         */

    }, {
        key: 'resetLinearGradient',
        value: function resetLinearGradient() {
            if (this.RelativeCoordinate) {
                var shpelength = this.shapes.length;
                var barLinearGradient = this.setting.barLinearGradient;
                var index = -1;
                for (var i = 0; i < shpelength; i++) {
                    var shape = this.shapes[i];
                    if (shape.CLASS_NAME === "SuperMap.LevelRenderer.Shape.SmicPolygon") {
                        var style = shape.style;
                        //计算出当前的绝对 x y
                        var x1 = this.location[0] + style.pointList[0][0];
                        var x2 = this.location[0] + style.pointList[1][0];

                        //渐变颜色
                        index++;
                        //以防定义的颜色数组不够用
                        if (index >= barLinearGradient.length) index = index % barLinearGradient.length;
                        var color1 = barLinearGradient[index][0];
                        var color2 = barLinearGradient[index][1];

                        //颜色
                        var zcolor = new _SuperMap2.default.LevelRenderer.Tool.Color();
                        var linearGradient = zcolor.getLinearGradient(x1, 0, x2, 0, [[0, color1], [1, color2]]);

                        //赋值
                        shape.style.color = linearGradient;
                    }
                }
            }
        }
    }]);

    return Bar;
}(_Graph3.default);

exports.default = Bar;


_SuperMap2.default.Feature.Theme.Bar = Bar;

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _Graph2 = __webpack_require__(14);

var _Graph3 = _interopRequireDefault(_Graph2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Class: SuperMap.Feature.Theme.Bar3D
 * 三维柱状图 。
 *
 * 图表 Bar3D 配置对象 chartsSetting（<SuperMap.Layer.Graph::chartsSetting>） 可设属性如下：
 *
 * Symbolizer properties:
 * width - {Number} 专题要素（图表）宽度，必设参数。
 * height - {Number} 专题要素（图表）高度，必设参数。
 * codomain - {Array{Number}} 图表允许展示的数据值域，长度为 2 的一维数组，第一个元素表示值域下限，第二个元素表示值域上限，必设参数。
 * XOffset - {Number}  专题要素（图表）在 X 方向上的偏移值，单位像素。
 * YOffset - {Number}  专题要素（图表）在 Y 方向上的偏移值，单位像素。
 * dataViewBoxParameter - {Array{Number}} 数据视图框 dataViewBox 参数，
 * 它是指图表框 chartBox （由图表位置、图表宽度、图表高度构成的图表范围框）在左、下，右，上四个方向上的内偏距值。
 * 当使用坐标轴时 dataViewBoxParameter 的默认值为：[45, 25, 20, 20]；不使用坐标轴时 dataViewBoxParameter 的默认值为：[5, 5, 5, 5]。
 * decimalNumber - {Number} 数据值数组 dataValues 元素值小数位数，数据的小数位处理参数，取值范围：[0, 16]。如果不设置此参数，在取数据值时不对数据做小数位处理。
 *
 * useBackground - {Boolean} 是否使用图表背景框，默认使用。
 * backgroundStyle - {Object} 背景样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Rectangle::style>。
 * backgroundRadius - {Array} 背景框矩形圆角半径，可以用数组分别指定四个角的圆角半径，设：左上、右上、右下、左下角的半径依次为 r1、r2、r3、r4 ,
 * 则 backgroundRadius 为 [r1、r2、r3、r4 ]，默认值[0, 0, 0, 0]。
 *
 * xShapeBlank - {Array{Number}} 水平方向上的图形空白间隔参数。
 * 长度为 3 的数组，第一元素表示第一个图形左端与数据视图框左端的空白间距，第二个元素表示图形间空白间距，
 * 第三个元素表示最后一个图形右端与数据视图框右端端的空白间距 。
 *
 * bar3DParameter - {Number} 3D 柱状参数，3d柱形正面相对于背面向 x 轴和 y 轴负方向偏移的绝对值，默认值：10。
 *
 * useAxis - {Boolean} 是否使用坐标轴，默认使用坐标轴。
 * axisStyle - {Object} 坐标轴样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Line::style> 。
 * axisUseArrow - {Boolean} 坐标轴是否使用箭头，默认值：true，使用箭头。
 * axisYTick - {Number} y 轴刻度数量，默认值：0 ，不使用刻度。
 * axisYLabels - {Array{String}} y 轴上的标签组内容，标签顺序沿着数据视图框左面条边自上而下，等距排布。例如：["1000", "750", "500", "250", "0"]。
 * axisYLabelsStyle - {Object} y 轴上的标签组样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Label::style> 。
 * axisYLabelsOffset - {Array{Number}} y 轴上的标签组偏移量。长度为 2 的数组，数组第一项表示 y 轴标签组横向上的偏移量，向左为正，默认值：0；
 * 数组第二项表示 y 轴标签组纵向上的偏移量，向下为正，默认值：0。
 * axisXLabels - {Array{String}} x 轴上的标签组内容，标签顺序沿着数据视图框下面条边自左向右排布，例如：["92年", "95年", "99年"]。
 * 标签排布规则：当标签数量与 xShapeInfo 中的属性 xShapeCenter 数量相同（即标签个数与数据个数相等时）, 按照 xShapeCenter 提供的位置排布标签，
 * 否则沿数据视图框下面条边等距排布标签。
 * axisXLabelsStyle - {Object} x 轴上的标签组样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Label::style> 。
 * axisXLabelsOffset - {Array{Number}} x 轴上的标签组偏移量。长度为 2 的数组，数组第一项表示 x 轴标签组横向上的偏移量，向左为正，默认值：-10；
 * 数组第二项表示 x 轴标签组纵向上的偏移量，向下为正，默认值：10。
 * useXReferenceLine - {Boolean) 是否使用水平参考线，如果为 true，在 axisYTick 大于 0 时有效，水平参考线是 y 轴刻度在数据视图框里的延伸。
 * xReferenceLineStyle - {Object) 水平参考线样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Line::style> 。
 * axis3DParameter - {Number} 3D 坐标轴参数，此属性值在大于等于 15 时有效，默认值：20。
 *
 * barFaceStyle - {Object} 3d 柱状图柱条正面基础 style，此参数控制柱条正面基础样式，优先级低于 barFaceStyleByFields 和 barFaceStyleByCodomain。
 * 此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Polygon::style>。
 * barFaceStyleByFields - {Array{Object}} 按专题字段 themeFields（<SuperMap.Layer.Graph::themeFields>）为柱条正面赋 style，此参数按字段控制柱条正面样式，
 * 优先级低于 barFaceStyleByCodomain，高于 barFaceStyle。此数组中的元素是样式对象，其可设属性： <SuperMap.Feature.ShapeParameters.Polygon::style> 。
 * 此参数中的 style 与 themeFields 中的字段一一对应 。例如： themeFields（<SuperMap.Layer.Graph::themeFields>） 为 ["POP_1992", "POP_1995", "POP_1999"],
 * barFaceStyleByFields 为[style1, style2, style3]，则在图表中，字段 POP_1992 对应的柱条正面使用 style1，字段 POP_1995 对应的柱条正面使用 style2 ，
 * 字段 POP_1999 对应的柱条正面使用 style3。
 * barFaceStyleByCodomain - {Array{Object}} 按柱条正面代表的数据值所在值域范围控制柱条正面样式，优先级高于 barFaceStyle 和 barFaceStyleByFields。
 * (start code)
 * // barFaceStyleByCodomain 的每个元素是个包含值域信息和与值域对应样式信息的对象，该对象（必须）有三个属性：
 * // start: 值域值下限（包含）;
 * // end: 值域值上限（不包含）;
 * // style: 数据可视化图形的 style，这个样式对象的可设属性： <SuperMap.Feature.ShapeParameters.Polygon::style> 。
 * // barFaceStyleByCodomain 数组形如：
 * [
 *   {
 *     start:0,
 *     end:250,
 *     style:{
 *          fillColor:"#00CD00"
 *      }
 *  },
 *   {
 *     start:250,
 *     end:500,
 *     style:{
 *          fillColor:"#00EE00"
 *      }
 *  },
 *   {
 *     start:500,
 *     end:750,
 *     style:{
 *          fillColor:"#00FF7F"
 *      }
 *  },
 *   {
 *     start:750,
 *     end:1500,
 *     style:{
 *          fillColor:"#00FF00"
 *      }
 *  }
 * ]
 * (end)
 *
 * barSideStyle - {Object} 3d 柱状图柱条侧面基础 style，此参数控制柱条侧面基础样式，优先级低于 barSideStyleByFields 和 barSideStyleByCodomain。
 * 此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Polygon::style> ，默认值：barFaceStyle。
 * barSideStyleByFields - {Array{Object}} 按专题字段 themeFields（<SuperMap.Layer.Graph::themeFields>）为柱条侧面赋 style，此参数按字段控制柱条侧面样式，
 * 优先级低于 barSideStyleByCodomain，高于 barSideStyle。此数组中的元素是样式对象，其可设属性： <SuperMap.Feature.ShapeParameters.Polygon::style> 。
 * 此参数中的 style 与 themeFields 中的字段一一对应 。例如： themeFields（<SuperMap.Layer.Graph::themeFields>） 为 ["POP_1992", "POP_1995", "POP_1999"],
 * barSideStyleByFields 为[style1, style2, style3]，则在图表中，字段 POP_1992 对应的柱条侧面使用 style1，字段 POP_1995 对应的柱条侧面使用 style2 ，
 * 字段 POP_1999 对应的柱条侧面使用 style3。默认值：barFaceStyleByFields。
 * barSideStyleByCodomain - {Array{Object}} 按柱条侧面代表的数据值所在值域范围控制柱条侧面样式，优先级高于 barSideStyle 和 barSideStyleByFields。
 * 默认值：barFaceStyleByCodomain。
 * (start code)
 * // barSideStyleByCodomain 的每个元素是个包含值域信息和与值域对应样式信息的对象，该对象（必须）有三个属性：
 * // start: 值域值下限（包含）;
 * // end: 值域值上限（不包含）;
 * // style: 数据可视化图形的 style，这个样式对象的可设属性： <SuperMap.Feature.ShapeParameters.Polygon::style> 。
 * // barSideStyleByCodomain 数组形如：
 * [
 *   {
 *     start:0,
 *     end:250,
 *     style:{
 *          fillColor:"#00CD00"
 *      }
 *  },
 *   {
 *     start:250,
 *     end:500,
 *     style:{
 *          fillColor:"#00EE00"
 *      }
 *  },
 *   {
 *     start:500,
 *     end:750,
 *     style:{
 *          fillColor:"#00FF7F"
 *      }
 *  },
 *   {
 *     start:750,
 *     end:1500,
 *     style:{
 *          fillColor:"#00FF00"
 *      }
 *  }
 * ]
 * (end)
 *
 * barTopStyle - {Object} 3d 柱状图柱条顶面基础 style，此参数控制柱条顶面基础样式，优先级低于 barTopStyleByFields 和 barTopStyleByCodomain。
 * 此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Polygon::style> ，默认值：barFaceStyle。
 * barTopStyleByFields - {Array{Object}} 按专题字段 themeFields（<SuperMap.Layer.Graph::themeFields>）为柱条顶面赋 style，此参数按字段控制柱条顶面样式，
 * 优先级低于 barTopStyleByCodomain，高于 barTopStyle。此数组中的元素是样式对象，其可设属性： <SuperMap.Feature.ShapeParameters.Polygon::style> 。
 * 此参数中的 style 与 themeFields 中的字段一一对应 。例如： themeFields（<SuperMap.Layer.Graph::themeFields>） 为 ["POP_1992", "POP_1995", "POP_1999"],
 * barTopStyleByFields 为[style1, style2, style3]，则在图表中，字段 POP_1992 对应的柱条顶面使用 style1，字段 POP_1995 对应的柱条顶面使用 style2 ，
 * 字段 POP_1999 对应的柱条顶面使用 style3。默认值：barFaceStyleByFields。
 * barTopStyleByCodomain - {Array{Object}} 按柱条顶面代表的数据值所在值域范围控制柱条顶面样式，优先级高于 barTopStyle 和 barTopStyleByFields。
 * 默认值：barFaceStyleByCodomain。
 * (start code)
 * // barTopStyleByCodomain 的每个元素是个包含值域信息和与值域对应样式信息的对象，该对象（必须）有三个属性：
 * // start: 值域值下限（包含）;
 * // end: 值域值上限（不包含）;
 * // style: 数据可视化图形的 style，这个样式对象的可设属性： <SuperMap.Feature.ShapeParameters.Polygon::style> 。
 * // barTopStyleByCodomain 数组形如：
 * [
 *   {
 *     start:0,
 *     end:250,
 *     style:{
 *          fillColor:"#00CD00"
 *      }
 *  },
 *   {
 *     start:250,
 *     end:500,
 *     style:{
 *          fillColor:"#00EE00"
 *      }
 *  },
 *   {
 *     start:500,
 *     end:750,
 *     style:{
 *          fillColor:"#00FF7F"
 *      }
 *  },
 *   {
 *     start:750,
 *     end:1500,
 *     style:{
 *          fillColor:"#00FF00"
 *      }
 *  }
 * ]
 * (end)
 *
 * barFaceHoverStyle - {Object} 3d 柱条正面 hover 状态时的样式，barHoverAble 为 true 时有效。
 * barSideHoverStyle - {Object} 3d 柱条侧面 hover 状态时的样式，barHoverAble 为 true 时有效，默认值：barFaceHoverStyle。
 * barTopHoverStyle - {Object} 3d 柱条顶面 hover 状态时的样式，barHoverAble 为 true 时有效，默认值：barFaceHoverStyle。
 *
 * barHoverAble - {Object} 是否允许柱条使用 hover 状态，默认允许。同时设置 barHoverAble 和 barClickAble 为 false，可以直接屏蔽柱条对专题图层事件的响应。
 * barClickAble - {Object} 是否允许柱条被点击，默认允许。同时设置 barHoverAble 和 barClickAble 为 false，可以直接屏蔽柱条对专题图层事件的响应。
 *
 * Inherits:
 *  - <SuperMap.Feature.Theme.Graph>
 */
var Bar3D = function (_Graph) {
    _inherits(Bar3D, _Graph);

    /**
     * Constructor: SuperMap.Feature.Theme.Bar3D
     * 创建一个三维柱状图表。
     *
     * Parameters:
     * data - {SuperMap.Feature.Vector}  用户数据，必设参数。
     * layer - {SuperMap.Layer.Graph} 此专题要素所在图层，必设参数。
     * fields - {Array{String}} data 中的参与此图表生成的字段名称，必设参数。
     * setting - {Object} 图表配置对象，必设参数。
     * lonlat - {SuperMap.LonLat} 专题要素地理位置。默认为 data 指代的地理要素 Bounds 中心。
     *
     * Returns:
     * {SuperMap.Feature.Theme.Bar3D} 返回一个三维柱状图表对象。
     */
    function Bar3D(data, layer, fields, setting, lonlat) {
        _classCallCheck(this, Bar3D);

        var _this = _possibleConstructorReturn(this, (Bar3D.__proto__ || Object.getPrototypeOf(Bar3D)).call(this, data, layer, fields, setting, lonlat));

        _this.CLASS_NAME = "SuperMap.Feature.Theme.Bar3D";
        return _this;
    }

    /**
     * APIMethod: destroy
     * 销毁此专题要素。调用 destroy 后此对象所以属性置为 null。
     */


    _createClass(Bar3D, [{
        key: 'destroy',
        value: function destroy() {
            _get(Bar3D.prototype.__proto__ || Object.getPrototypeOf(Bar3D.prototype), 'destroy', this).call(this);
        }

        /**
         * Method: assembleShapes
         * 图形装配实现（扩展接口）
         */

    }, {
        key: 'assembleShapes',
        value: function assembleShapes() {
            // 图表配置对象
            var sets = this.setting;

            // 默认数据视图框
            if (!sets.dataViewBoxParameter) {
                if (typeof sets.useAxis === "undefined" || sets.useAxis) {
                    sets.dataViewBoxParameter = [45, 25, 20, 20];
                } else {
                    sets.dataViewBoxParameter = [5, 5, 5, 5];
                }
            }

            // 3d 柱图的坐标轴默认使用坐标轴箭头
            sets.axisUseArrow = typeof sets.axisUseArrow !== "undefined" ? sets.axisUseArrow : true;
            sets.axisXLabelsOffset = typeof sets.axisXLabelsOffset !== "undefined" ? sets.axisXLabelsOffset : [-10, 10];

            // 重要步骤：初始化参数
            if (!this.initBaseParameter()) return;

            // 值域
            var codomain = this.DVBCodomain;
            // 重要步骤：定义图表 Bar 数据视图框中单位值的含义
            this.DVBUnitValue = (codomain[1] - codomain[0]) / this.DVBHeight;
            // 数据视图域
            var dvb = this.dataViewBox;
            // 用户数据值
            var fv = this.dataValues;
            if (fv.length < 1) return; // 没有数据

            // 数据溢出值域范围处理
            for (var i = 0, fvLen = fv.length; i < fvLen; i++) {
                if (fv[i] < codomain[0] || fv[i] > codomain[1]) return;
            }

            // 获取 x 轴上的图形信息
            var xShapeInfo = this.calculateXShapeInfo(dvb, sets, "Bar3D", fv.length);
            if (!xShapeInfo) return;
            // 每个柱条 x 位置
            var xsLoc = xShapeInfo.xPositions;
            // 柱条宽度
            var xsWdith = xShapeInfo.width;

            // 坐标轴, 默认启用
            if (typeof sets.useBackground === "undefined" || sets.useBackground) {
                this.shapes.push(_SuperMap2.default.Feature.ShapeFactory.Background(this.shapeFactory, this.chartBox, sets));
            }

            // 坐标轴
            if (!sets.axis3DParameter || isNaN(sets.axis3DParameter) || sets.axis3DParameter < 15) {
                sets.axis3DParameter = 20;
            }
            if (typeof sets.useAxis === "undefined" || sets.useAxis) {
                this.shapes = this.shapes.concat(_SuperMap2.default.Feature.ShapeFactory.GraphAxis(this.shapeFactory, dvb, sets, xShapeInfo));
            }

            // 3d 偏移量, 默认值 10;
            var offset3d = sets.bar3DParameter && !isNaN(sets.bar3DParameter) ? sets.bar3DParameter : 10;

            for (var i = 0; i < fv.length; i++) {
                // 无 3d 偏移量时的柱面顶部 y 坐标
                var yPx = dvb[1] - (fv[i] - codomain[0]) / this.DVBUnitValue;
                // 无 3d 偏移量时的柱面的左、右端 x 坐标
                var iPoiL = xsLoc[i] - xsWdith / 2;
                var iPoiR = xsLoc[i] + xsWdith / 2;

                // 3d 柱顶面节点
                var bar3DTopPois = [[iPoiL, yPx], [iPoiR, yPx], [iPoiR - offset3d, yPx + offset3d], [iPoiL - offset3d, yPx + offset3d]];

                // 3d 柱侧面节点
                var bar3DSidePois = [[iPoiR, yPx], [iPoiR - offset3d, yPx + offset3d], [iPoiR - offset3d, dvb[1] + offset3d], [iPoiR, dvb[1]]];

                // 3d 柱正面节点
                var bar3DFacePois = [[iPoiL - offset3d, dvb[1] + offset3d], [iPoiR - offset3d, dvb[1] + offset3d], [iPoiR - offset3d, yPx + offset3d], [iPoiL - offset3d, yPx + offset3d]];
                if (offset3d <= 0) {
                    // offset3d <= 0 时正面不偏移
                    bar3DFacePois = [[iPoiL, dvb[1]], [iPoiR, dvb[1]], [iPoiR, yPx], [iPoiL, yPx]];
                }

                // 新建 3d 柱面顶面、侧面、正面图形参数对象
                var polyTopSP = new _SuperMap2.default.Feature.ShapeParameters.Polygon(bar3DTopPois);
                var polySideSP = new _SuperMap2.default.Feature.ShapeParameters.Polygon(bar3DSidePois);
                var polyFaceSP = new _SuperMap2.default.Feature.ShapeParameters.Polygon(bar3DFacePois);

                // 侧面、正面图形 style 默认值
                sets.barSideStyle = sets.barSideStyle ? sets.barSideStyle : sets.barFaceStyle;
                sets.barSideStyleByFields = sets.barSideStyleByFields ? sets.barSideStyleByFields : sets.barFaceStyleByFields;
                sets.barSideStyleByCodomain = sets.barSideStyleByCodomain ? sets.barSideStyleByCodomain : sets.barFaceStyleByCodomain;
                sets.barTopStyle = sets.barTopStyle ? sets.barTopStyle : sets.barFaceStyle;
                sets.barTopStyleByFields = sets.barTopStyleByFields ? sets.barTopStyleByFields : sets.barFaceStyleByFields;
                sets.barTopStyleByCodomain = sets.barTopStyleByCodomain ? sets.barTopStyleByCodomain : sets.barFaceStyleByCodomain;
                // 顶面、侧面、正面图形 style
                polyFaceSP.style = _SuperMap2.default.Feature.ShapeFactory.ShapeStyleTool({ stroke: true, strokeColor: "#ffffff", fillColor: "#ee9900" }, sets.barFaceStyle, sets.barFaceStyleByFields, sets.barFaceStyleByCodomain, i, fv[i]);
                polySideSP.style = _SuperMap2.default.Feature.ShapeFactory.ShapeStyleTool({ stroke: true, strokeColor: "#ffffff", fillColor: "#ee9900" }, sets.barSideStyle, sets.barSideStyleByFields, sets.barSideStyleByCodomain, i, fv[i]);
                polyTopSP.style = _SuperMap2.default.Feature.ShapeFactory.ShapeStyleTool({ stroke: true, strokeColor: "#ffffff", fillColor: "#ee9900" }, sets.barTopStyle, sets.barTopStyleByFields, sets.barTopStyleByCodomain, i, fv[i]);

                // 3d 柱条高亮样式
                sets.barSideHoverStyle = sets.barSideHoverStyle ? sets.barSideHoverStyle : sets.barFaceHoverStyle;
                sets.barTopHoverStyle = sets.barTopHoverStyle ? sets.barTopHoverStyle : sets.barFaceHoverStyle;
                polyFaceSP.highlightStyle = _SuperMap2.default.Feature.ShapeFactory.ShapeStyleTool({ stroke: true }, sets.barFaceHoverStyle);
                polySideSP.highlightStyle = _SuperMap2.default.Feature.ShapeFactory.ShapeStyleTool({ stroke: true }, sets.barSideHoverStyle);
                polyTopSP.highlightStyle = _SuperMap2.default.Feature.ShapeFactory.ShapeStyleTool({ stroke: true }, sets.barTopHoverStyle);

                // 图形携带的数据 id 信息 & 高亮模式
                polyTopSP.refDataID = polySideSP.refDataID = polyFaceSP.refDataID = this.data.id;
                // hover 模式（组合）
                polyTopSP.isHoverByRefDataID = polySideSP.isHoverByRefDataID = polyFaceSP.isHoverByRefDataID = true;
                // 高亮组(当鼠标 hover 到组内任何一个图形，整个组的图形都会高亮。refDataHoverGroup 在 isHoverByRefDataID 为 true 时有效)
                polyTopSP.refDataHoverGroup = polySideSP.refDataHoverGroup = polyFaceSP.refDataHoverGroup = _SuperMap2.default.Util.createUniqueID("lr_shg");
                // 图形携带的数据信息
                polyTopSP.dataInfo = polySideSP.dataInfo = polyFaceSP.dataInfo = {
                    field: this.fields[i],
                    value: fv[i]
                };

                // 3d 柱条顶面、侧面、正面图形 hover click 设置
                if (typeof sets.barHoverAble !== "undefined") {
                    polyTopSP.hoverable = polySideSP.hoverable = polyFaceSP.hoverable = sets.barHoverAble;
                }
                if (typeof sets.barClickAble !== "undefined") {
                    polyTopSP.clickable = polySideSP.clickable = polyFaceSP.clickable = sets.barClickAble;
                }

                // 创建3d 柱条的顶面、侧面、正面图形并添加到图表的图形列表数组
                this.shapes.push(this.shapeFactory.createShape(polySideSP));
                this.shapes.push(this.shapeFactory.createShape(polyTopSP));
                this.shapes.push(this.shapeFactory.createShape(polyFaceSP));
            }

            // 重要步骤：将图形转为由相对坐标表示的图形，以便在地图平移缩放过程中快速重绘图形
            // （统计专题图模块从结构上要求使用相对坐标，assembleShapes() 函数必须在图形装配完成后调用 shapesConvertToRelativeCoordinate() 函数）
            this.shapesConvertToRelativeCoordinate();
        }

        /**
         * Method: calculateXShapeInfo
         * 计算 X 轴方向上的图形信息，此信息是一个对象，包含两个属性，
         * 属性 xPositions 是一个一维数组，该数组元素表示图形在 x 轴方向上的像素坐标值，
         * 如果图形在 x 方向上有一定宽度，通常取图形在 x 方向上的中心点为图形在 x 方向上的坐标值。
         * width 表示图形的宽度（特别注意：点的宽度始终为 0，而不是其直径）。
         *
         * 本函数中图形配置对象 setting 可设属性：
         * Symbolizer properties:
         * xShapeBlank - {Array{Number}} 水平方向上的图形空白间隔参数。
         * 长度为 3 的数组，第一元素表示第一个图形左端与数据视图框左端的空白间距，第二个元素表示图形间空白间距，
         * 第三个元素表示最后一个图形右端与数据视图框右端端的空白间距 。
         *
         * Returns:
         * {Object} 如果计算失败，返回 null；如果计算成功，返回 X 轴方向上的图形信息，此信息是一个对象，包含以下两个属性：
         * Symbolizer properties:
         * xPositions - {Array{Number}} 表示图形在 x 轴方向上的像素坐标值，如果图形在 x 方向上有一定宽度，通常取图形在 x 方向上的中心点为图形在 x 方向上的坐标值。
         * width - {Number} 表示图形的宽度（特别注意：点的宽度始终为 0，而不是其直径）。
         *
         */

    }, {
        key: 'calculateXShapeInfo',
        value: function calculateXShapeInfo() {
            var dvb = this.dataViewBox; // 数据视图框
            var sets = this.setting; // 图表配置对象
            var fvc = this.dataValues.length; // 数组值个数

            if (fvc < 1) return null;

            var xBlank; // x 轴空白间隔参数
            var xShapePositions = []; // x 轴上图形的位置
            var xShapeWidth = 0; // x 轴上图形宽度(自适应)
            var dvbWidth = this.DVBWidth; // 数据视图框宽度

            //  x 轴空白间隔参数处理
            if (sets.xShapeBlank && sets.xShapeBlank.length && sets.xShapeBlank.length == 3) {
                xBlank = sets.xShapeBlank;
                var xsLen = dvbWidth - (xBlank[0] + xBlank[2] + (fvc - 1) * xBlank[1]);
                if (xsLen <= fvc) {
                    return null;
                }
                xShapeWidth = xsLen / fvc;
            } else {
                // 默认使用等距离空白间隔，空白间隔为图形宽度
                xShapeWidth = dvbWidth / (2 * fvc + 1);
                xBlank = [xShapeWidth, xShapeWidth, xShapeWidth];
            }

            // 图形 x 轴上的位置计算
            var xOffset = 0;
            for (var i = 0; i < fvc; i++) {
                if (i == 0) {
                    xOffset = xBlank[0] + xShapeWidth / 2;
                } else {
                    xOffset += xShapeWidth + xBlank[1];
                }

                xShapePositions.push(dvb[0] + xOffset);
            }

            return {
                "xPositions": xShapePositions,
                "width": xShapeWidth
            };
        }
    }]);

    return Bar3D;
}(_Graph3.default);

exports.default = Bar3D;


_SuperMap2.default.Feature.Theme.Bar3D = Bar3D;

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _SpatialAnalystBase2 = __webpack_require__(6);

var _SpatialAnalystBase3 = _interopRequireDefault(_SpatialAnalystBase2);

var _DatasetBufferAnalystParameters = __webpack_require__(109);

var _DatasetBufferAnalystParameters2 = _interopRequireDefault(_DatasetBufferAnalystParameters);

var _GeometryBufferAnalystParameters = __webpack_require__(151);

var _GeometryBufferAnalystParameters2 = _interopRequireDefault(_GeometryBufferAnalystParameters);

var _GeoJSON = __webpack_require__(5);

var _GeoJSON2 = _interopRequireDefault(_GeoJSON);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.BufferAnalystService
 * @constructs SuperMap.BufferAnalystService
 * @classdesc
 * 缓冲区分析服务类
 * 该类负责将客户设置的缓冲区分析参数传递给服务端，并接收服务端返回的缓冲区分析结果数据。
 * 缓冲区分析结果通过该类支持的事件的监听函数参数获取
 * @extends {SuperMap.SpatialAnalystBase}
 * @api
 * @example 例如：
 * (start code)
 * var myBufferAnalystService = new SuperMap.BufferAnalystService(url, {
     *     eventListeners: {
     *           "processCompleted": bufferCompleted,
     *           "processFailed": bufferFailed
     *           }
     *    });
 * (end)
 *
 *
 */
var BufferAnalystService = function (_SpatialAnalystBase) {
    _inherits(BufferAnalystService, _SpatialAnalystBase);

    /**
     * @method SuperMap.BufferAnalystService.initialize
     * @param url - {String} 服务的访问地址。如 http://localhost:8090/iserver/services/spatialanalyst-changchun/restjsr/spatialanalyst 。
     * @param options - {Object} 参数。
     *
     * Allowed options properties:</br>
     * eventListeners - {Object} 需要被注册的监听器对象。
     */
    function BufferAnalystService(url, options) {
        _classCallCheck(this, BufferAnalystService);

        var _this = _possibleConstructorReturn(this, (BufferAnalystService.__proto__ || Object.getPrototypeOf(BufferAnalystService)).call(this, url, options));

        _this.mode = null;
        _this.CLASS_NAME = "SuperMap.BufferAnalystService";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /**
     * APIMethod: destroy
     * 释放资源,将引用资源的属性置空。
     */


    /**
     * Property: mode
     * {String} 缓冲区分析类型
     */


    _createClass(BufferAnalystService, [{
        key: 'destroy',
        value: function destroy() {
            _get(BufferAnalystService.prototype.__proto__ || Object.getPrototypeOf(BufferAnalystService.prototype), 'destroy', this).call(this);
            this.mode = null;
        }

        /**
         * @method SuperMap.BufferAnalystService.processAsync
         * @description 负责将客户端的查询参数传递到服务端。
         * @param parameter - {BufferAnalystParameters}
         */

    }, {
        key: 'processAsync',
        value: function processAsync(parameter) {
            var parameterObject = {};
            var me = this;

            var end = me.url.substr(me.url.length - 1, 1);
            if (end === '/') {} else {
                me.url += "/";
            }

            if (parameter instanceof _DatasetBufferAnalystParameters2.default) {
                me.mode = "datasets";
                me.url += 'datasets/' + parameter.dataset + '/buffer';
                _DatasetBufferAnalystParameters2.default.toObject(parameter, parameterObject);
            } else if (parameter instanceof _GeometryBufferAnalystParameters2.default) {
                me.mode = "geometry";
                me.url += 'geometry/buffer';
                _GeometryBufferAnalystParameters2.default.toObject(parameter, parameterObject);
            }

            var jsonParameters = _SuperMap2.default.Util.toJSON(parameterObject);

            if (me.isInTheSameDomain) {
                me.url += '.json?returnContent=true';
            } else {
                me.url += '.jsonp?returnContent=true';
            }

            me.request({
                method: "POST",
                data: jsonParameters,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }

        /**
         *
         * @method SuperMap.BufferAnalystService.toGeoJSONResult
         * @description 将含有geometry的数据转换为geojson格式。
         * @param result - {Object} 服务器返回的结果对象。
         *
         */

    }, {
        key: 'toGeoJSONResult',
        value: function toGeoJSONResult(result) {
            if (!result) {
                return result;
            }

            var analystResult = _get(BufferAnalystService.prototype.__proto__ || Object.getPrototypeOf(BufferAnalystService.prototype), 'toGeoJSONResult', this).call(this, result);
            if (analystResult.resultGeometry) {
                var geoJSONFormat = new _GeoJSON2.default();
                result = JSON.parse(geoJSONFormat.write(analystResult.resultGeometry));
            }
            return result;
        }
    }]);

    return BufferAnalystService;
}(_SpatialAnalystBase3.default);

exports.default = BufferAnalystService;

_SuperMap2.default.BufferAnalystService = BufferAnalystService;

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.BufferDistance
 * @constructs SuperMap.BufferDistance
 * @classdesc
 * 缓冲区分析的缓冲距离类
 * 通过该类可以设置缓冲区分析的缓冲距离，距离可以是数值也可以是数值型的字段表达式。
 * @api
 */
var BufferDistance = function () {

    /**
     * @method SuperMap.BufferDistance.initialize
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * exp - {String} 以数值型的字段表达式作为缓冲区分析的距离值。</br>
     * value - {Number} 以数值作为缓冲区分析的距离值。默认为100，单位：米。</br>
     */


    /**
     * APIProperty: exp
     * {String} 以数值型的字段表达式作为缓冲区分析的距离值。
     */
    function BufferDistance(options) {
        _classCallCheck(this, BufferDistance);

        this.exp = null;
        this.value = 100;
        this.CLASS_NAME = "SuperMap.BufferDistance";

        if (!options) {
            return this;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: value
     * {Number} 以数值作为缓冲区分析的距离值。默认为100，单位：米。
     */


    _createClass(BufferDistance, [{
        key: "destroy",
        value: function destroy() {
            this.exp = null;
            this.value = null;
        }
    }]);

    return BufferDistance;
}();

exports.default = BufferDistance;

_SuperMap2.default.BufferDistance = BufferDistance;

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

var _BufferDistance = __webpack_require__(94);

var _BufferDistance2 = _interopRequireDefault(_BufferDistance);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.BufferSetting
 * @constructs SuperMap.BufferSetting
 * @classdesc
 * 缓冲区分析通用设置类
 * @api
 */
var BufferSetting = function () {

    /**
       * @method SuperMap.BufferSetting.initialize
     * @param options - {Object} 参数。
     *
     * Allowed options properties:</br>
     * endType - {SuperMap.BufferEndType} 缓冲区端点枚举值。</br>
     * leftDistance - {BufferDistance} 左侧缓冲距离。</br>
     * rightDistance - {BufferDistance} 右侧缓冲距离。</br>
     * semicircleLineSegment - {Number} 圆头缓冲圆弧处线段的个数。</br>
     */


    /**
     * APIProperty: semicircleLineSegment
     * {Number} 圆头缓冲圆弧处线段的个数。
     * 即用多少个线段来模拟一个半圆，默认值为4。
     */


    /**
     * APIProperty: leftDistance
     * {BufferDistance} 左侧缓冲距离。
     * 默认为100。当为GeometryBufferAnalyst时，单位为默认地图的投影系的单位（如3857为米，4326为度），
     * 当为DatasetBufferAnalyst时，单位通过BufferSetting.radiusUnit设置（默认全部为米）。
     */
    function BufferSetting(options) {
        _classCallCheck(this, BufferSetting);

        this.endType = _REST.BufferEndType.FLAT;
        this.leftDistance = null;
        this.rightDistance = null;
        this.semicircleLineSegment = 4;
        this.radiusUnit = _REST.Unit.METER;
        this.CLASS_NAME = "SuperMap.BufferSetting";

        var me = this;
        me.leftDistance = new _BufferDistance2.default();
        me.rightDistance = new _BufferDistance2.default();
        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: radiusUnit
     * [Enum] 缓冲半径单位，默认值为SuperMap.Unit.METER，还可以是SuperMap.Unit.MILIMETER、
     * SuperMap.Unit.CENTIMETER、SuperMap.Unit.DECIMETER、SuperMap.Unit.KILOMETER、
     * SuperMap.Unit.FOOT、SuperMap.Unit.INCH、SuperMap.Unit.MILE、
     * SuperMap.Unit.YARD。仅对DatasetBufferAnalyst有效
     */


    /**
     * APIProperty: rightDistance
     * {BufferDistance} 右侧缓冲距离。
     * 默认为100。当为GeometryBufferAnalyst时，单位为默认地图的投影系的单位（如3857为米，4326为度），
     * 当为DatasetBufferAnalyst时，单位通过BufferSetting.radiusUnit设置（默认全部为米）。
     */


    /**
     * APIProperty: endType
     * {SuperMap.BufferEndType} 缓冲区端点枚举值。
     * 分为平头和圆头两种，默认为平头，即 SuperMap.BufferEndType.FLAT 。
     */


    _createClass(BufferSetting, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.endType = null;
            if (me.leftDistance) {
                me.leftDistance.destroy();
                me.leftDistance = null;
            }
            if (me.rightDistance) {
                me.rightDistance.destroy();
                me.rightDistance = null;
            }
            me.semicircleLineSegment = null;
            me.radiusUnit = null;
        }
    }]);

    return BufferSetting;
}();

exports.default = BufferSetting;

_SuperMap2.default.BufferSetting = BufferSetting;

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.BuildCacheJobParameter
 * @description 地图缓存参数类
 * @param options - {Object} 可选参数。如：<br>
 *         datasetName - {String} 数据集名称。<br>
 *         cacheName - {String} 缓存名称。<br>
 *         cacheType - {String} 存储类型。<br>
 *         serverAdresses - {String} MongoDB地址。<br>
 *         database -- {String} 数据库。<br>
 *         version -{String} 版本。<br>
 *         bounds -{SuperMap.Bounds} 缓存范围。<br>
 *         imageType -{number} 缓存类型.<br>
 *         level -{number} 缓存比例尺级别。
 */
var BuildCacheJobParameter = function () {

    /**
     * APIProperty: imageType
     * @member SuperMap.BuildCacheJobParameter.prototype.imageType -{number}
     * @description 缓存类型。
     */

    /**
     * APIProperty: version
     * @member SuperMap.BuildCacheJobParameter.prototype.version -{String}
     * @description 版本。
     */

    /**
     * APIProperty: serverAddresses
     * @member SuperMap.BuildCacheJobParameter.prototype.serverAddresses -{String}
     * @description MongoDB地址。
     */

    /**
     * APIProperty: cacheName
     * @member SuperMap.BuildCacheJobParameter.prototype.cacheName -{String}
     * @description 缓存名称。
     */
    function BuildCacheJobParameter(options) {
        _classCallCheck(this, BuildCacheJobParameter);

        this.datasetName = "";
        this.cacheName = "";
        this.cacheType = "";
        this.serverAdresses = "";
        this.database = "";
        this.version = "";
        this.bounds = "";
        this.imageType = 'Heatmap';
        this.level = null;

        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: level
     * @member SuperMap.BuildCacheJobParameter.prototype.level -{number}
     * @description 缓存比例尺级别。
     */


    /**
     * APIProperty: bounds
     * @member SuperMap.BuildCacheJobParameter.prototype.bounds -{SuperMap.Bounds}
     * @description 缓存范围。
     */

    /**
     * APIProperty: database
     * @member SuperMap.BuildCacheJobParameter.prototype.database -{String}
     * @description 数据库。
     */

    /**
     * APIProperty: cacheType
     * @member SuperMap.BuildCacheJobParameter.prototype.cacheType -{String}
     * @description 存储类型。
     */

    /**
     * APIProperty: datasetName
     * @member SuperMap.BuildCacheJobParameter.prototype.datasetName -{String}
     * @description 数据集名称。
     */


    _createClass(BuildCacheJobParameter, [{
        key: "destroy",
        value: function destroy() {
            this.datasetName = null;
            this.cacheName = null;
            this.cacheType = null;
            this.serverAdresses = null;
            this.database = null;
            this.version = null;
            this.bounds = null;
            this.imageType = null;
            this.level = null;
        }
    }], [{
        key: "toObject",
        value: function toObject(buildCacheJobParameter, tempObj) {
            for (var name in buildCacheJobParameter) {
                if (name === "datasetName") {
                    tempObj['input'] = tempObj['input'] || {};
                    tempObj['input'][name] = buildCacheJobParameter[name];
                    continue;
                }
                if (_SuperMap2.default.Util.indexOf(["cacheName", "cacheType", "serverAdresses", "database", "version"], name) > -1) {
                    tempObj['output'] = tempObj['output'] || {};
                    tempObj['output'][name] = buildCacheJobParameter[name];
                    continue;
                }
                tempObj['drawing'] = tempObj['drawing'] || {};
                tempObj['drawing'][name] = buildCacheJobParameter[name];
            }
        }
    }]);

    return BuildCacheJobParameter;
}();

exports.default = BuildCacheJobParameter;


_SuperMap2.default.BuildCacheJobParameter = BuildCacheJobParameter;

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ProcessingServiceBase = __webpack_require__(16);

var _ProcessingServiceBase2 = _interopRequireDefault(_ProcessingServiceBase);

var _BuildCacheJobParameter = __webpack_require__(96);

var _BuildCacheJobParameter2 = _interopRequireDefault(_BuildCacheJobParameter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.BuildCacheJobsService
 * @description 创建大数据缓存服务类
 * @augments SuperMap.ProcessingServiceBase
 * @param url -{String} 大数据缓存服务地址。
 * @param options - {Object} 交互服务时所需可选参数。
 */

var BuildCacheJobsService = function (_ProcessingServiceBas) {
    _inherits(BuildCacheJobsService, _ProcessingServiceBas);

    /**
     * @function SuperMap.BuildCacheJobsService.constructor
     * @description SuperMap.BuildCacheJobsService 的构造函数
     * @param url -{String} 大数据缓存服务地址。
     * @param options - {Object} 交互服务时所需可选参数。
     */
    function BuildCacheJobsService(url, options) {
        _classCallCheck(this, BuildCacheJobsService);

        var _this = _possibleConstructorReturn(this, (BuildCacheJobsService.__proto__ || Object.getPrototypeOf(BuildCacheJobsService)).call(this, url, options));

        _this.url += "/mapping/buildCache";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(BuildCacheJobsService, [{
        key: 'destroy',
        value: function destroy() {
            _get(BuildCacheJobsService.prototype.__proto__ || Object.getPrototypeOf(BuildCacheJobsService.prototype), 'destory', this).call(this);
        }

        /**
         * @function SuperMap.BuildCacheJobsService.getBuildCacheJobs
         * @description 获取创建的大数据缓存
         */

    }, {
        key: 'getBuildCacheJobs',
        value: function getBuildCacheJobs() {
            return _get(BuildCacheJobsService.prototype.__proto__ || Object.getPrototypeOf(BuildCacheJobsService.prototype), 'getJobs', this).call(this, this.url);
        }

        /**
         * @function SuperMap.BuildCacheJobsService.getBuildCacheJob
         * @description 获取指定 id的大数据缓存
         * @param id - {String} 大数据缓存id
         */

    }, {
        key: 'getBuildCacheJob',
        value: function getBuildCacheJob(id) {
            return _get(BuildCacheJobsService.prototype.__proto__ || Object.getPrototypeOf(BuildCacheJobsService.prototype), 'getJobs', this).call(this, this.url + '/' + id);
        }

        /**
         * @function SuperMap.BuildCacheJobsService.addBuildCacheJob
         * @description 新建大数据缓存服务
         * @param params - {BuildCacheJobParameter}地图缓存参数类
         * @param seconds - {String} 开始创建后，获取创建成功结果的时间间隔
         */

    }, {
        key: 'addBuildCacheJob',
        value: function addBuildCacheJob(params, seconds) {
            _get(BuildCacheJobsService.prototype.__proto__ || Object.getPrototypeOf(BuildCacheJobsService.prototype), 'addJob', this).call(this, this.url, params, _BuildCacheJobParameter2.default, seconds);
        }
    }]);

    return BuildCacheJobsService;
}(_ProcessingServiceBase2.default);

exports.default = BuildCacheJobsService;


_SuperMap2.default.BuildCacheJobsService = BuildCacheJobsService;

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.BurstPipelineAnalystParameters
 * @description 爆管分析参数类。
 * @param options - {Object} 可选参数。如：<br>
 *         sourceNodeIDs - {Array<Number>} 指定的设施点ID数组。<br>
 *         edgeID - {Number} 指定的弧段ID（注：edgeID 与 nodeID 不能同时使用）。<br>
 *         nodeID - {Number} 指定的结点ID （注：edgeID 与 nodeID 不能同时使用）。<br>
 *         isUncertainDirectionValid - {Boolean} 指定不确定流向是否有效；默认false，无效。
 */
var BurstPipelineAnalystParameters = function () {

    /*
     * Constructor: BurstPipelineAnalystParameters
     * 爆管分析参数类构造函数。
     */


    /**
     * @member SuperMap.BurstPipelineAnalystParameters.prototype.nodeID -{Number}
     * @description 指定的结点ID （注：edgeID 与 nodeID 不能同时使用）。
     */


    /**
     * @member SuperMap.BurstPipelineAnalystParameters.prototype.sourceNodeIDs -{Array(Number)}
     * @description 指定的设施点ID数组,可以为空。
     */
    function BurstPipelineAnalystParameters(options) {
        _classCallCheck(this, BurstPipelineAnalystParameters);

        this.sourceNodeIDs = null;
        this.edgeID = null;
        this.nodeID = null;
        this.isUncertainDirectionValid = false;
        this.CLASS_NAME = "SuperMap.BurstPipelineAnalystParameters";

        var me = this;
        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(me, options);
    }

    /**
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * @member SuperMap.BurstPipelineAnalystParameters.prototype.isUncertainDirectionValid -{Boolean}
     * @description 指定不确定流向是否有效，默认为false。指定为 true，表示不确定流向有效，遇到不确定流向时分析继续进行；<br>
     *               指定为 false，表示不确定流向无效，遇到不确定流向将停止在该方向上继续查找。
     */


    /**
     * @member SuperMap.BurstPipelineAnalystParameters.prototype.edgeID -{Number}
     * @description指定的弧段ID（注：edgeID 与 nodeID 不能同时使用）。
     */


    _createClass(BurstPipelineAnalystParameters, [{
        key: "destroy",
        value: function destroy() {
            var me = this;
            me.sourceNodeIDs = null;
            me.edgeID = null;
            me.nodeID = null;
            me.isUncertainDirectionValid = null;
        }
    }]);

    return BurstPipelineAnalystParameters;
}();

exports.default = BurstPipelineAnalystParameters;

_SuperMap2.default.BurstPipelineAnalystParameters = BurstPipelineAnalystParameters;

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _NetworkAnalystServiceBase = __webpack_require__(8);

var _NetworkAnalystServiceBase2 = _interopRequireDefault(_NetworkAnalystServiceBase);

var _BurstPipelineAnalystParameters = __webpack_require__(98);

var _BurstPipelineAnalystParameters2 = _interopRequireDefault(_BurstPipelineAnalystParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.BurstPipelineAnalystService
 * @description 爆管分析服务类;即将给定弧段或节点作为爆管点来进行分析，返回关键结点 ID 数组，普通结点 ID 数组及其上下游弧段 ID 数组。
 * @augments SuperMap.NetworkAnalystServiceBase
 * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
 *                       http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
 *                       例如: "http://localhost:8090/iserver/services/test/rest/networkanalyst/WaterNet@FacilityNet";
 * @param options - {Object} 互服务时所需可选参数。如：<br>
 *        eventListeners - {Object} 需要被注册的监听器对象。
 */
var BurstPipelineAnalystService = function (_NetworkAnalystServic) {
    _inherits(BurstPipelineAnalystService, _NetworkAnalystServic);

    /*
     * @function SuperMap.BurstPipelineAnalystService.prototype.initialize
     * @description 爆管分析服务类构造函数。
     * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
     *                       http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
     *                       例如: "http://localhost:8090/iserver/services/test/rest/networkanalyst/WaterNet@FacilityNet";
     * @param options - {Object} 互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。。
     */
    function BurstPipelineAnalystService(url, options) {
        _classCallCheck(this, BurstPipelineAnalystService);

        var _this = _possibleConstructorReturn(this, (BurstPipelineAnalystService.__proto__ || Object.getPrototypeOf(BurstPipelineAnalystService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.BurstPipelineAnalystService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(BurstPipelineAnalystService, [{
        key: 'destroy',
        value: function destroy() {
            _get(BurstPipelineAnalystService.prototype.__proto__ || Object.getPrototypeOf(BurstPipelineAnalystService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.BurstPipelineAnalystService.prototype.processAsync
         * @description 负责将客户端的查询参数传递到服务端。
         * @params params - {BurstPipelineAnalystParameters} 爆管分析参数类
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                jsonObject;
            var end = me.url.substr(me.url.length - 1, 1);
            me.url = me.url + (end === "/" ? "burstAnalyse" : "/burstAnalyse") + (this.isInTheSameDomain ? ".json?" : ".jsonp?");

            jsonObject = {
                sourceNodeIDs: params.sourceNodeIDs,
                isUncertainDirectionValid: params.isUncertainDirectionValid
            };

            //必传参数不正确，就终止
            if (params.edgeID !== null && params.nodeID !== null) return;
            if (params.edgeID === null && params.nodeID === null) return;
            if (params.edgeID !== null) jsonObject.edgeID = params.edgeID;else jsonObject.nodeID = params.nodeID;

            me.request({
                method: "GET",
                params: jsonObject,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return BurstPipelineAnalystService;
}(_NetworkAnalystServiceBase2.default);

exports.default = BurstPipelineAnalystService;


_SuperMap2.default.BurstPipelineAnalystService = BurstPipelineAnalystService;

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.ChartFeatureInfoSpecsService
 * @description 海图物标信息服务类，通过该服务类可以查询到服务端支持的所有海图物标信息。<br>
 *              用户可以通过两种方式获取查询结果：<br>
 *              一种是通过监听 ChartFeatureInfoSpecsEvent.PROCESS_COMPLETE 事件；<br>
 *              另一种是使用 AsyncResponder 类实现异步处理。
 * @augments SuperMap.CommonServiceBase
 * @param url - {String} 地图（特指海图）服务地址。<br>
 *        如："http://localhost:8090/iserver/services/map-ChartW/rest/maps/海图"。<br>
 *        发送请求格式类似于："http://localhost:8090/iserver/services/map-ChartW/rest/maps/海图/chartFeatureInfoSpecs.json"
 * @param options - {Object} 交互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var ChartFeatureInfoSpecsService = function (_CommonServiceBase) {
    _inherits(ChartFeatureInfoSpecsService, _CommonServiceBase);

    /*
     * @function SuperMap.ChartFeatureInfoSpecsService.prototype.initialize
     * @description 使用地图（特指海图）服务地址 URL 初始化 ChartFeatureInfoSpecsService类的新实例。
     * @param url - {String} 地图（特指海图）服务地址。<br>
     *        如："http://localhost:8090/iserver/services/map-ChartW/rest/maps/海图"。<br>
     *        发送请求格式类似于："http://localhost:8090/iserver/services/map-ChartW/rest/maps/海图/chartFeatureInfoSpecs.json"
     * @param options - {Object} 交互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */
    function ChartFeatureInfoSpecsService(url, options) {
        _classCallCheck(this, ChartFeatureInfoSpecsService);

        var _this = _possibleConstructorReturn(this, (ChartFeatureInfoSpecsService.__proto__ || Object.getPrototypeOf(ChartFeatureInfoSpecsService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.ChartFeatureInfoSpecsService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(ChartFeatureInfoSpecsService, [{
        key: 'destroy',
        value: function destroy() {
            _get(ChartFeatureInfoSpecsService.prototype.__proto__ || Object.getPrototypeOf(ChartFeatureInfoSpecsService.prototype), 'destroy', this).call(this);
            _SuperMap2.default.Util.reset(this);
        }

        /**
         * @function SuperMap.ChartFeatureInfoSpecsService.prototype.processAsync
         * @description 根据地图（特指海图）服务地址与服务端完成异步通讯，获取物标信息。<br>
         *               当查询物标信息成功时，将触发 ChartFeatureInfoSpecsEvent.PROCESS_COMPLETE <br>
         *               事件。用可以通过户两种方式获取图层信息: <br>
         *                 1. 通过 AsyncResponder 类获取（推荐使用）；<br>
         *                 2. 通过监听 ChartFeatureInfoSpecsEvent.PROCESS_COMPLETE 事件获取。
         */

    }, {
        key: 'processAsync',
        value: function processAsync() {
            var me = this,
                method = "GET",
                end = me.url.substr(me.url.length - 1, 1);
            if (!me.isTempLayers) {
                me.url += end === "/" ? '' : '/';
                me.url += me.isInTheSameDomain ? "chartFeatureInfoSpecs.json?" : "chartFeatureInfoSpecs.jsonp?";
            } else {
                me.url += me.isInTheSameDomain ? ".json?" : ".jsonp?";
            }
            me.request({
                method: method,
                params: null,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return ChartFeatureInfoSpecsService;
}(_CommonServiceBase3.default);

exports.default = ChartFeatureInfoSpecsService;


_SuperMap2.default.ChartFeatureInfoSpecsService = ChartFeatureInfoSpecsService;

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ChartQueryFilterParameter
 * @description 海图查询过滤参数类，用于设置海图查询的过滤参数。包括：物标代码、物标可应用对象的选择（是否查询点、线或面）、属性字段过滤条件。
 * @param options - {Object} 可选参数。如：<br>
 *        isQueryPoint - {Boolean} 是否查询点。
 *        isQueryLine  - {Boolean} 是否查询线。
 *        isQueryRegion  - {Boolean} 是否查询面。
 *        attributeFilter - {String} 属性字段过滤条件。
 *        chartFeatureInfoSpecCode - {Number} 查询的物标代号。
 */
var ChartQueryFilterParameter = function () {

    /*
     * Constructor: ChartQueryFilterParameter
     * 初始化 ChartQueryFilterParameter 类的新实例。
     */


    /**
     * @member SuperMap.ChartQueryFilterParameter.prototype.attributeFilter -{String}
     * @description 属性字段过滤条件。
     */


    /**
     * @member SuperMap.ChartQueryFilterParameter.prototype.isQueryLine -{Boolean}
     * @description 是否查询线。
     */
    function ChartQueryFilterParameter(options) {
        _classCallCheck(this, ChartQueryFilterParameter);

        this.isQueryPoint = null;
        this.isQueryLine = null;
        this.isQueryRegion = null;
        this.attributeFilter = null;
        this.chartFeatureInfoSpecCode = null;
        this.CLASS_NAME = "SuperMap.ChartQueryFilterParameter";

        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * @member SuperMap.ChartQueryFilterParameter.prototype.chartFeatureInfoSpecCode -{Number}
     * @description 查询的物标代号。
     */


    /**
     * @member SuperMap.ChartQueryFilterParameter.prototype.isQueryRegion -{Boolean}
     * @description 是否查询面。
     */


    /**
     * @member SuperMap.ChartQueryFilterParameter.prototype.isQueryPoint -{Boolean}
     * @description 是否查询点。
     */


    _createClass(ChartQueryFilterParameter, [{
        key: "destroy",
        value: function destroy() {
            var me = this;
            me.isQueryPoint = null;
            me.isQueryLine = null;
            me.isQueryRegion = null;
            me.attributeFilter = null;
            me.chartFeatureInfoSpecCode = null;
        }

        /**
         * @function  SuperMap.ChartQueryFilterParameter.prototype.toJson
         * @description 将属性信息转化成JSON格式字符串。
         */

    }, {
        key: "toJson",
        value: function toJson() {
            var json = "";
            json += "\"isQueryPoint\":" + this.isQueryPoint + ",";
            json += "\"isQueryLine\":" + this.isQueryLine + ",";
            json += "\"isQueryRegion\":" + this.isQueryRegion + ",";
            if (this.attributeFilter) {
                json += "\"attributeFilter\": \"" + this.attributeFilter + "\",";
            }
            json += "\"chartFeatureInfoSpecCode\":" + this.chartFeatureInfoSpecCode;
            json = "{" + json + "}";
            return json;
        }
    }]);

    return ChartQueryFilterParameter;
}();

exports.default = ChartQueryFilterParameter;

_SuperMap2.default.ChartQueryFilterParameter = ChartQueryFilterParameter;

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ChartQueryFilterParameter = __webpack_require__(101);

var _ChartQueryFilterParameter2 = _interopRequireDefault(_ChartQueryFilterParameter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ChartQueryParameters
 * @description 海图查询参数类，该类用于设置海图查询时的相关参数，海图查询分为海图属性<br>
 *               查询和海图范围查询两类，通过属性queryMode指定查询模式。必设属性有：<br>
 *               queryMode、chartLayerNames、chartQueryFilterParameters。当进行海图范围查询时，必设属性还包括bounds。
 * @param options - {Object} 可选参数。如：<br>
 *         queryMode - {String} 海图查询模式类型，SuperMap iClient for JavaScript对
 *                              海图支持两种查询方式：海图属性查询（"ChartAttributeQuery"）和海图空间查询（"ChartBoundsQuery"） 。<br>
 *         bounds - {SuperMap.Bounds}  海图查询范围。<br>
 *         chartLayerNames - {Array(String)} 查询的海图图层的名称。<br>
 *         chartQueryFilterParameters - {Array <ChartQueryFilterParameter} 海图查询过滤参数。包括：物标代码、
 *                                                                         物标可应用对象的选择（是否查询点、线或面）、属性字段过滤条件。<br>
 *         returnContent - {Boolean} 获取或设置是返回查询结果记录集 recordsets，还
 *                                   是返回查询结果的资源 resourceInfo。默认为 true，表示返回 recordsets。<br>
 *         startRecord - {Number} 查询起始记录位置，默认为0。<br>
 *         expectCount - {Number} 期望查询结果返回的记录数，该值大于0。
 */
var ChartQueryParameters = function () {

    /*
     * Constructor: ChartQueryParameters
     *  初始化 ChartQueryParameters 类的新实例。
     */


    /**
     * @member SuperMap.ChartQueryParameters.prototype.startRecord -{Number}
     * @description 查询起始记录位置，默认为0。
     */


    /**
     * @member SuperMap.ChartQueryParameters.prototype.chartQueryFilterParameters -{Array(ChartQueryFilterParameter)}
     * @description 海图查询过滤参数。<br>
     *               包括：物标代码、物标可应用对象的选择（是否查询点、线或面）、属性字段过滤条件。
     */


    /**
     * @member SuperMap.ChartQueryParameters.prototype.bounds -{SuperMap.Bounds}
     * @description 海图查询范围。
     */
    function ChartQueryParameters(options) {
        _classCallCheck(this, ChartQueryParameters);

        this.queryMode = null;
        this.bounds = null;
        this.chartLayerNames = null;
        this.chartQueryFilterParameters = null;
        this.returnContent = true;
        this.startRecord = 0;
        this.expectCount = null;
        this.CLASS_NAME = "SuperMap.ChartQueryParameters";

        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * @member SuperMap.ChartQueryParameters.prototype.expectCount -{Number}
     * @description 期望查询结果返回的记录数，该值大于0。
     */


    /**
     * @member SuperMap.ChartQueryParameters.prototype.returnContent -{Boolean}
     * @description 获取或设置是返回查询结果记录集 recordsets，还是返回查询结果的
     *      资源 resourceInfo。默认为 true，表示返回 recordsets。
     * @example
     *  Recordsets 和 ResourceInfo 都存储在查询结果类 QueryResult 中。当:
     *  (start code)
     *  ReturnContent = true
     *  (end)
     *  表示返回查询记录集，这时查询结果存储在:
     *  (start code)
     *      QueryResult.Recordsets
     *  (end)
     *  中，而
     *  (start code)
     *      QueryResult.ResourceInfo
     *  (end)
     *  为空；当:
     *  (start code)
     *      ReturnContent = false
     *  (end)
     *  时，表示返回查询结果资源，这时查询结果存储在:
     *  (start code)
     *      QueryResult.ResourceInfo
     *  (end)
     *  中，而
     *  (start code)
     *      QueryResult.Recordsets
     *  (end)
     *  为空。
     */


    /**
     * @member SuperMap.ChartQueryParameters.prototype.chartLayerNames -{Array(String)}
     * @description 查询的海图图层的名称。
     */


    /**
     * @member SuperMap.ChartQueryParameters.prototype.queryMode -{String}
     * @description 海图查询模式类型，SuperMap iClient for JavaScript对海图支持两种<br>
     *              查询方式：海图属性查询（"ChartAttributeQuery"）和海图空间查询（"ChartBoundsQuery"） 。
     */


    _createClass(ChartQueryParameters, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.queryMode = null;
            me.bounds = null;
            me.chartLayerNames = null;
            me.chartQueryFilterParameters = null;
            me.returnContent = true;
            me.startRecord = 0;
            me.expectCount = null;
        }

        /**
         * Method: getVariablesJson
         * @function @member SuperMap.ChartQueryParameters.prototype.getVariablesJson
         * @description 将属性信息转换成能够被服务识别的JSON格式字符串。
         */

    }, {
        key: 'getVariablesJson',
        value: function getVariablesJson() {
            var json = "";

            json += "\"queryMode\":\"" + this.queryMode + "\",";

            if (this.chartLayerNames && this.chartLayerNames.length) {
                var chartLayersArray = [];
                var layerLength = this.chartLayerNames.length;
                for (var i = 0; i < layerLength; i++) {
                    chartLayersArray.push("\"" + this.chartLayerNames[i] + "\"");
                }
                var layerNames = "[" + chartLayersArray.join(",") + "]";
                json += "\"chartLayerNames\":" + layerNames + ",";
            }

            if (this.queryMode === "ChartBoundsQuery" && this.bounds) {
                json += "\"bounds\":" + "{" + "\"leftBottom\":" + "{" + "\"x\":" + this.bounds.left + "," + "\"y\":" + this.bounds.bottom + "}" + "," + "\"rightTop\":" + "{" + "\"x\":" + this.bounds.right + "," + "\"y\":" + this.bounds.top + "}" + "},";
            }

            if (this.chartQueryFilterParameters && this.chartQueryFilterParameters.length) {
                var chartParamArray = [];
                var chartLength = this.chartQueryFilterParameters.length;
                for (var j = 0; j < chartLength; j++) {
                    var chartQueryFilterParameter = new _ChartQueryFilterParameter2.default();
                    chartQueryFilterParameter = this.chartQueryFilterParameters[j];
                    chartParamArray.push(chartQueryFilterParameter.toJson());
                }
                var chartParamsJson = "[" + chartParamArray.join(",") + "]";
                chartParamsJson = "\"chartQueryParams\":" + chartParamsJson + ",";
                chartParamsJson += "\"startRecord\":" + this.startRecord + ",";
                chartParamsJson += "\"expectCount\":" + this.expectCount;
                chartParamsJson = "{" + chartParamsJson + "}";
                json += "\"chartQueryParameters\":" + chartParamsJson;
            }
            json = "{" + json + "}";
            return json;
        }
    }]);

    return ChartQueryParameters;
}();

exports.default = ChartQueryParameters;

_SuperMap2.default.ChartQueryParameters = ChartQueryParameters;

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _QueryParameters = __webpack_require__(17);

var _QueryParameters2 = _interopRequireDefault(_QueryParameters);

var _ChartQueryParameters = __webpack_require__(102);

var _ChartQueryParameters2 = _interopRequireDefault(_ChartQueryParameters);

var _GeoJSON = __webpack_require__(5);

var _GeoJSON2 = _interopRequireDefault(_GeoJSON);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Class: SuperMap.ChartQueryService
海图查询服务类。该类负责将海图查询所需参数（ChartQueryParameters）传递至服务端，并获取服务端的返回结果。
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *      用户可以通过两种方式获取查询结果:
通过 AsyncResponder 类获取（推荐使用）；
通过监听 QueryEvent.PROCESS_COMPLETE 事件获取。
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Inherits from:
uperMap.CommonServiceBase>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


/**
 * @class SuperMap.ChartQueryService
 * @description 海图查询服务类。该类负责将海图查询所需参数（ChartQueryParameters）传递至服务端，并获取服务端的返回结果。<br>
 *      用户可以通过两种方式获取查询结果:<br>
 *      1.通过 AsyncResponder 类获取（推荐使用）；<br>
 *      2.通过监听 QueryEvent.PROCESS_COMPLETE 事件获取。<br>
 * @augments  SuperMap.CommonServiceBase
 * @param url - {String} 地图查询服务访问地址。如："http://192.168.168.35:8090/iserver/services/map-ChartW/rest/maps/海图"。
 * @param options - {Object} 服务交互时所需的可选参数。
 * @example
 * 下面示例显示了如何进行海图属性查询：
 * (start code)
 * var nameArray = ["GB4X0000_52000"];
 * var chartQueryFilterParameter = new ChartQueryFilterParameter({
 *       isQueryPoint:true,
 *        isQueryLine:true,
 *        isQueryRegion:true,
 *        attributeFilter:"SmID<10",
 *        chartFeatureInfoSpecCode:1
 *    });
 *
 * var chartQueryParameters = new SuperMap.ChartQueryParameters({
 *        queryMode:"ChartAttributeQuery",
 *        chartLayerNames:nameArray,
 *        returnContent:true,
 *        chartQueryFilterParameters:[chartQueryFilterParameter]
 *    });
 *
 * var chartQueryService = new SuperMap.ChartQueryService(url);
 *
 * chartQueryService.events.on({
 *        "processCompleted":processCompleted,
 *        "processFailed":processFailed
 *    });
 * chartQueryService.processAsync(chartQueryParameters);
 * (end)
 */
var ChartQueryService = function (_CommonServiceBase) {
    _inherits(ChartQueryService, _CommonServiceBase);

    /**
     * @function SuperMap.ChartQueryService.initialize
     * @description 获取图层信息服务类构造函数。
     *
     * Parameters:
     * @param url - {String} 地图查询服务访问地址。如："http://192.168.168.35:8090/iserver/services/map-ChartW/rest/maps/海图"。
     * @param options - {Object} 查询服务可选参数。
     */


    /*
     * Property: returnContent
     * {Boolean} 是否立即返回新创建资源的表述还是返回新资源的URI。
     */
    function ChartQueryService(url, options) {
        _classCallCheck(this, ChartQueryService);

        var _this = _possibleConstructorReturn(this, (ChartQueryService.__proto__ || Object.getPrototypeOf(ChartQueryService)).call(this, url, options));

        _this.returnContent = null;
        _this.format = _REST.DataFormat.GEOJSON;
        _this.CLASS_NAME = "SuperMap.ChartQueryService";

        options = options || {};
        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        var me = _this,
            end;
        if (options && options.format) {
            me.format = options.format.toUpperCase();
        }

        if (!me.url) {
            return _possibleConstructorReturn(_this);
        }
        end = me.url.substr(me.url.length - 1, 1);

        // TODO 待iServer featureResul资源GeoJSON表述bug修复当使用以下注释掉的逻辑
        // if (me.format==="geojson" && me.isInTheSameDomain) {
        //     me.url += (end == "/") ? "featureResults.geojson?" : "/featureResults.geojson?";
        // } else {
        //     me.url += (end == "/") ? "featureResults.jsonp?" : "/featureResults.jsonp?";
        // }
        if (me.isInTheSameDomain) {
            me.url += end === "/" ? "queryResults.json?" : "/queryResults.json?";
        } else {
            me.url += end === "/" ? "queryResults.jsonp?" : "/queryResults.jsonp?";
        }
        return _this;
    }

    /**
     * @inheritDoc
     */


    /*
     *  Property: format
     *  {String} 查询结果返回格式，目前支持iServerJSON 和GeoJSON两种格式
     *  参数格式为"ISERVER","GEOJSON",GEOJSON
     */


    _createClass(ChartQueryService, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            _SuperMap2.default.CommonServiceBase.prototype.destroy.apply(this, arguments);
            me.returnContent = null;
            me.format = null;
        }

        /**
         * @function SuperMap.ChartQueryService.processAsync
         * @description APIMethod:使用服务地址 URL 实例化 ChartQueryService 对象。
         * Parameters:
         * @param params - {ChartQueryParameters} 查询参数。
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            //todo重点需要添加代码的地方
            if (!params) {
                return;
            }
            var me = this,
                jsonParameters;
            me.returnContent = params.returnContent;
            jsonParameters = params.getVariablesJson();
            if (me.returnContent) {
                me.url += "returnContent=" + me.returnContent;
            }
            me.request({
                method: "POST",
                data: jsonParameters,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }

        /*
         * Method: queryComplete
         * 查询完成，执行此方法。
         *
         * Parameters:
         * result - {Object} 服务器返回的结果对象。
         */

    }, {
        key: 'serviceProcessCompleted',
        value: function serviceProcessCompleted(result) {
            var me = this;
            result = _SuperMap2.default.Util.transformResult(result);
            if (result && result.recordsets && me.format === _REST.DataFormat.GEOJSON) {
                for (var i = 0, recordsets = result.recordsets, len = recordsets.length; i < len; i++) {
                    if (recordsets[i].features) {
                        var geoJSONFormat = new _GeoJSON2.default();
                        recordsets[i].features = JSON.parse(geoJSONFormat.write(recordsets[i].features));
                    }
                }
            }
            me.events.triggerEvent("processCompleted", { result: result });
        }

        /*
         * @function  getQueryParameters
         * @description 将 JSON 对象表示的查询参数转化为 QueryParameters 对象。
         *
         * Parameters:
         * @param params - {Object} JSON 字符串表示的查询参数。
         *
         * Returns:
         * @return {chartQueryFilterParameters} 返回查询结果
         */

    }, {
        key: 'getQueryParameters',
        value: function getQueryParameters(params) {
            return new _QueryParameters2.default({
                queryMode: params.queryMode,
                bounds: params.bounds,
                chartLayerNames: params.chartLayerNames,
                chartQueryFilterParameters: params.chartQueryFilterParameters,
                returnContent: params.returnContent
            });
        }
    }]);

    return ChartQueryService;
}(_CommonServiceBase3.default);

exports.default = ChartQueryService;

_SuperMap2.default.ChartQueryService = ChartQueryService;

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _RankSymbol2 = __webpack_require__(202);

var _RankSymbol3 = _interopRequireDefault(_RankSymbol2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Class: SuperMap.Feature.Theme.Circle
 * 圆
 *
 * 符号 Circle 配置对象 symbolSetting（<SuperMap.Layer.RankSymbol::setting>） 可设属性如下：
 *
 * Symbolizer properties:
 * codomain - {Array{Number}} 图表允许展示的数据值域，长度为 2 的一维数组，第一个元素表示值域下限，第二个元素表示值域上限，必设参数。
 * maxR - {Number} 圆形的最大半径。
 * minR - {Number} 圆形的最小半径。
 * fillColor - {String} 圆形的填充色，如：fillColor: "#FFB980"。
 * circleStyle - {Object} 圆形的基础 style，此参数控制圆形基础样式，优先级低于 circleStyleByFields 和 circleStyleByCodomain。
 * decimalNumber - {Number} 数据值数组 dataValues 元素值小数位数，数据的小数位处理参数，取值范围：[0, 16]。如果不设置此参数，在取数据值时不对数据做小数位处理。
 * circleHoverStyle - {Object} 圆 形 hover 状态时的样式，circleHoverAble 为 true 时有效。
 * circleHoverAble - {Object} 是否允许圆形使用 hover 状态，默认允许。同时设置 circleHoverAble 和 circleClickAble 为 false，可以直接屏蔽图形对专题图层事件的响应。
 * circleClickAble - {Object} 是否允许圆形被点击，默认允许。同时设置 circleHoverAble 和 circleClickAble 为 false，可以直接屏蔽图形对专题图层事件的响应。
 *
 * Inherits:
 *  - <SuperMap.Feature.Theme.RankSymbol>
 */
var Circle = function (_RankSymbol) {
    _inherits(Circle, _RankSymbol);

    /**
     * Constructor: SuperMap.Feature.Theme.Circle
     * 创建一个圆形。
     *
     * Parameters:
     * data - {SuperMap.Feature.Vector}  用户数据，必设参数。
     * layer - {SuperMap.Layer.RankSymbol} 此专题要素所在图层，必设参数。
     * fields - {Array{String}} data 中的参与此图表生成的字段名称，必设参数。
     * setting - {Object} 图表配置对象，必设参数。
     * lonlat - {SuperMap.LonLat} 专题要素地理位置。默认为 data 指代的地理要素 Bounds 中心。
     *
     * Returns:
     * {SuperMap.Feature.Theme.Circle} 返回一个圆图。
     */
    function Circle(data, layer, fields, setting, lonlat) {
        _classCallCheck(this, Circle);

        var _this = _possibleConstructorReturn(this, (Circle.__proto__ || Object.getPrototypeOf(Circle)).call(this, data, layer, fields, setting, lonlat));

        _this.CLASS_NAME = "SuperMap.Feature.Theme.Circle";
        return _this;
    }

    /**
     * APIMethod: destroy
     * 销毁此专题要素。调用 destroy 后此对象所以属性置为 null。
     */


    _createClass(Circle, [{
        key: 'destroy',
        value: function destroy() {
            _get(Circle.prototype.__proto__ || Object.getPrototypeOf(Circle.prototype), 'destroy', this).call(this);
        }

        //装配图形（扩展接口）

    }, {
        key: 'assembleShapes',
        value: function assembleShapes() {
            //默认填充颜色
            var defaultFillColor = "#ff9277";

            // setting 属性是否已成功赋值
            if (!this.setting) return false;
            var sets = this.setting;
            // 检测 setting 的必设参数
            if (!sets.codomain) return false;

            // 数据
            var decimalNumber = typeof sets.decimalNumber !== "undefined" && !isNaN(sets.decimalNumber) ? sets.decimalNumber : -1;
            var dataEffective = _SuperMap2.default.Feature.Theme.getDataValues(this.data, this.fields, decimalNumber);
            this.dataValues = dataEffective ? dataEffective : [];

            // 数据值数组
            var fv = this.dataValues;
            //if(fv.length != 1) return;       // 没有数据 或者数据不唯一
            //if(fv[0] < 0) return;            //数据为负值

            //用户应该定义最大 最小半径  默认最大半径MaxR:100 最小半径MinR:0;
            if (!sets.maxR) sets.maxR = 100;
            if (!sets.minR) sets.minR = 0;

            // 值域范围
            var codomain = this.DVBCodomain;

            // 重要步骤：定义Circle数据视图框中单位值的含义，单位值：1所代表的长度
            // 用户定义了值域范围
            if (codomain && codomain[1] - codomain[0] > 0) {
                this.DVBUnitValue = sets.maxR / (codomain[1] - codomain[0]);
            } else {
                //this.DVBUnitValue = sets.maxR / maxValue;
                this.DVBUnitValue = sets.maxR;
            }

            var uv = this.DVBUnitValue;
            //圆半径
            var r = fv[0] * uv + sets.minR;
            this.width = 2 * r;
            this.height = 2 * r;

            // 重要步骤：初始化参数
            if (!this.initBaseParameter()) return;

            //假如用户设置了值域范围 没有在值域范围直接返回
            if (codomain) {
                if (fv[0] < codomain[0] || fv[0] > codomain[1]) {
                    return;
                }
            }

            var dvbCenter = this.DVBCenterPoint; // 数据视图框中心作为圆心

            //圆形对象参数
            var circleSP = new _SuperMap2.default.Feature.ShapeParameters.Circle(dvbCenter[0], dvbCenter[1], r);

            //circleSP.sytle 初始化
            circleSP.style = _SuperMap2.default.Feature.ShapeFactory.ShapeStyleTool(null, sets.circleStyle, null, null, 0);
            //图形的填充颜色
            if (typeof sets.fillColor !== "undefined") {
                //用户自定义
                circleSP.style.fillColor = sets.fillColor;
            } else {
                //当前默认
                circleSP.style.fillColor = defaultFillColor;
            }
            //圆形 Hover样式
            circleSP.highlightStyle = _SuperMap2.default.Feature.ShapeFactory.ShapeStyleTool(null, sets.circleHoverStyle);
            //圆形 Hover 与 click 设置
            if (typeof sets.circleHoverAble !== "undefined") {
                circleSP.hoverable = sets.circleHoverAble;
            }
            if (typeof sets.circleClickAble !== "undefined") {
                circleSP.clickable = sets.circleClickAble;
            }

            //图形携带的数据信息
            circleSP.refDataID = this.data.id;
            circleSP.dataInfo = {
                field: this.fields[0],
                r: r,
                value: fv[0]
            };

            // 创建扇形并把此扇形添加到图表图形数组
            this.shapes.push(this.shapeFactory.createShape(circleSP));

            // 重要步骤：将图形转为由相对坐标表示的图形，以便在地图平移缩放过程中快速重绘图形
            // （统计专题图模块从结构上要求使用相对坐标，assembleShapes() 函数必须在图形装配完成后调用 shapesConvertToRelativeCoordinate() 函数）
            this.shapesConvertToRelativeCoordinate();
        }
    }]);

    return Circle;
}(_RankSymbol3.default);

exports.default = Circle;


_SuperMap2.default.Feature.Theme.Circle = Circle;

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServerColor = __webpack_require__(11);

var _ServerColor2 = _interopRequireDefault(_ServerColor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Class: SuperMap.ColorDictionary
 * 颜色对照表类。
 *
 * 颜色对照表中的键名为具体的高程值，键值表示该高程值要显示的颜色。
 * 对于栅格图层中高程值小于颜色对照表中高程最小值的点使用颜色对照表中高程最小值对应的颜色，
 * 对于栅格图层中高程值大于颜色对照表中高程最大值的点使用颜色对照表中高程最大值对应的颜色，
 * 对于栅格图层中高程值在颜色对照表中没有对应颜色的点，则查找颜色对照表中与当前高程值相邻的两个高程对应的颜色，
 * 然后通过渐变运算要显示的颜色。如果设置了颜色对照表的话，则颜色表设置无效。
 */
var ColorDictionary = function () {

    /**
     * APIProperty: elevation
     * {Number} 高程值。
     */
    function ColorDictionary(options) {
        _classCallCheck(this, ColorDictionary);

        this.elevation = null;
        this.color = null;
        this.CLASS_NAME = "SuperMap.ColorDictionary";

        options = options || {};
        _SuperMap2.default.Util.extend(this, options);

        var me = this,
            c = me.color;
        if (c) {
            me.color = new _ServerColor2.default(c.red, c.green, c.blue);
        }
    }

    /**
     * APIMethod: destroy
     * 释放资源,将引用资源的属性置空。
     */


    /**
     * APIProperty: color
     * {SuperMap.ServerColor} 服务端颜色类。
     */


    _createClass(ColorDictionary, [{
        key: 'destroy',
        value: function destroy() {
            _SuperMap2.default.Util.reset(this);
        }

        /**
         * Method: toServerJSONObject
         * 转换成对应的 JSON 格式对象。
         */

    }, {
        key: 'toServerJSONObject',
        value: function toServerJSONObject() {
            var dataObj = {};
            dataObj = _SuperMap2.default.Util.copyAttributes(dataObj, this);
            return dataObj;
        }
    }]);

    return ColorDictionary;
}();

exports.default = ColorDictionary;


_SuperMap2.default.ColorDictionary = ColorDictionary;

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _TransportationAnalystParameter = __webpack_require__(19);

var _TransportationAnalystParameter2 = _interopRequireDefault(_TransportationAnalystParameter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ComputeWeightMatrixParameters
 * @description 耗费矩阵分析参数类。<br>
 *               根据交通网络分析参数中的耗费字段返回一个耗费矩阵。该矩阵是一个二维数组，用来存储任意两点间的资源消耗。
 * @param options - {Object} 可选参数。如：<br>
 *         isAnalyzeById - {Boolean} 是否通过节点 ID 指定路径分析的结点。<br>
 *         nodes - {Array<{SuperMap.Point}|Number>} 要计算耗费矩阵的点数组，必设字段。<br>
 *         parameter - {SuperMap.TransportationAnalystParameter} 交通网络分析通用参数。
 */
var ComputeWeightMatrixParameters = function () {

    /*
     * Constructor: SuperMap.ComputeWeightMatrixParameters
     * 耗费矩阵分析参数类构造函数。
     *
     */


    /**
     * APIProperty: nodes
     * @member SuperMap.ComputeWeightMatrixParameters.prototype.nodes {Array(Point/Number)}
     * @description 要计算耗费矩阵的点数组，必设字段。<br>
     *               当 SuperMap.ComputeWeightMatrixParameters.isAnalyzeById = false 时，nodes 应为点的坐标数组；<br>
     *               当 SuperMap.ComputeWeightMatrixParameters.isAnalyzeById = true 时，nodes 应为点的 ID 数组。
     */
    function ComputeWeightMatrixParameters(options) {
        _classCallCheck(this, ComputeWeightMatrixParameters);

        this.isAnalyzeById = false;
        this.nodes = null;
        this.parameter = null;
        this.CLASS_NAME = "SuperMap.ComputeWeightMatrixParameters";

        var me = this;
        me.parameter = new _TransportationAnalystParameter2.default();
        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: parameter
     * @member SuperMap.ComputeWeightMatrixParameters.prototype.parameter {SuperMap.TransportationAnalystParameter}
     * @description 交通网络分析通用参数。
     */


    /**
     * APIProperty: isAnalyzeById
     * @member SuperMap.ComputeWeightMatrixParameters.prototype.isAnalyzeById {Boolean}
     * @description 是否通过节点 ID 指定路径分析的结点，默认为 false，即通过坐标点指定。
     */


    _createClass(ComputeWeightMatrixParameters, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.isAnalyzeById = null;
            me.nodes = null;
            if (me.parameter) {
                me.parameter.destroy();
                me.parameter = null;
            }
        }
    }]);

    return ComputeWeightMatrixParameters;
}();

exports.default = ComputeWeightMatrixParameters;

_SuperMap2.default.ComputeWeightMatrixParameters = ComputeWeightMatrixParameters;

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ComputeWeightMatrixParameters = __webpack_require__(106);

var _ComputeWeightMatrixParameters2 = _interopRequireDefault(_ComputeWeightMatrixParameters);

var _NetworkAnalystServiceBase = __webpack_require__(8);

var _NetworkAnalystServiceBase2 = _interopRequireDefault(_NetworkAnalystServiceBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.ComputeWeightMatrixService
 * @description 耗费矩阵分析服务类。<br>
 *               耗费矩阵是根据交通网络分析参数中的耗费字段来计算一个二维数组，
 *               用来存储指定的任意两点间的资源消耗。
 *               耗费矩阵分析结果通过该类支持的事件的监听函数参数获取
 * @augments SuperMap.NetworkAnalystServiceBase
 * @example
 * (start code)
 * var mycomputeWeightMatrixService = new SuperMap.ComputeWeightMatrixService(url,{
 *     eventListeners: {
 *	       "processCompleted": computeWeightMatrixCompleted,
 *		   "processFailed": computeWeightMatrixnError
 *		   }
 * });
 * (end)
 * @param url - {String} 耗费矩阵分析服务地址。请求服务的URL应为：<br>
 *                        http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
 *                        例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。
 * @param options - {Object} 互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var ComputeWeightMatrixService = function (_NetworkAnalystServic) {
    _inherits(ComputeWeightMatrixService, _NetworkAnalystServic);

    /**
     * @function SuperMap.ComputeWeightMatrixService.prototype.initialize
     * @description 耗费矩阵分析服务类构造函数。
     * @param url - {String} 耗费矩阵分析服务地址。请求服务的URL应为：<br>
     *                        http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
     *                        例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。
     * @param options - {Object} 互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */
    function ComputeWeightMatrixService(url, options) {
        _classCallCheck(this, ComputeWeightMatrixService);

        var _this = _possibleConstructorReturn(this, (ComputeWeightMatrixService.__proto__ || Object.getPrototypeOf(ComputeWeightMatrixService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.ComputeWeightMatrixService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(ComputeWeightMatrixService, [{
        key: 'destroy',
        value: function destroy() {
            _get(ComputeWeightMatrixService.prototype.__proto__ || Object.getPrototypeOf(ComputeWeightMatrixService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.ComputeWeightMatrixService.prototype.processAsync
         * @description 负责将客户端的查询参数传递到服务端。
         * @param params - {ComputeWeightMatrixParameters} 耗费矩阵分析参数类
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                jsonObject,
                end = me.url.substr(me.url.length - 1, 1);
            me.url = me.url + (end === "/" ? "weightmatrix" : "/weightmatrix") + (this.isInTheSameDomain ? ".json?" : ".jsonp?");
            jsonObject = {
                parameter: _SuperMap2.default.Util.toJSON(params.parameter),
                nodes: me.getJson(params.isAnalyzeById, params.nodes)
            };
            me.request({
                method: "GET",
                params: jsonObject,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }

        /*
         * Method: getJson
         * 将对象转化为JSON字符串。
         *
         * Parameters:
         * isAnalyzeById - {Boolean}
         * params - {Array}
         *
         * Returns:
         * {Object} 转化后的JSON字符串。
         */

    }, {
        key: 'getJson',
        value: function getJson(isAnalyzeById, params) {
            var jsonString = "[",
                len = params ? params.length : 0;

            if (isAnalyzeById === false) {
                for (var i = 0; i < len; i++) {
                    if (i > 0) jsonString += ",";
                    jsonString += '{"x":' + params[i].x + ',"y":' + params[i].y + '}';
                }
            } else if (isAnalyzeById == true) {
                for (var i = 0; i < len; i++) {
                    if (i > 0) jsonString += ",";
                    jsonString += params[i];
                }
            }
            jsonString += ']';
            return jsonString;
        }
    }]);

    return ComputeWeightMatrixService;
}(_NetworkAnalystServiceBase2.default);

exports.default = ComputeWeightMatrixService;

_SuperMap2.default.ComputeWeightMatrixService = ComputeWeightMatrixService;

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 *@class SuperMap.DataFlowService
 */
var DataFlowService = function (_CommonServiceBase) {
    _inherits(DataFlowService, _CommonServiceBase);

    function DataFlowService(url, options) {
        _classCallCheck(this, DataFlowService);

        options = options || {};
        options.EVENT_TYPES = ["broadcastSocketConnected", "broadcastSocketError", "broadcastFailed", "broadcastSuccessed", "subscribeSocketConnected", "subscribeSocketError", "messageSuccessed", "setFilterParamSuccessed"];

        var _this = _possibleConstructorReturn(this, (DataFlowService.__proto__ || Object.getPrototypeOf(DataFlowService)).call(this, url, options));

        _this.geometry = null;
        _this.prjCoordSys = null;
        _this.excludeField = null;
        _this.CLASS_NAME = "SuperMap.DataFlowService";


        var me = _this;
        var end = me.url.substr(me.url.length - 1, 1);
        if (end === '/') {} else {
            me.url += "/";
        }
        if (options) {
            _SuperMap2.default.Util.extend(me, options);
        }
        return _this;
    }

    /**
     * 初始化广播
     * @returns {SuperMap.DataFlowService}
     */

    /**
     * Constant: EVENT_TYPES
     * {Array(String)}
     * 此类支持的事件类型
     */
    //EVENT_TYPES = ["broadcastSocketConnected", "broadcastSocketError", "broadcastFailed", "broadcastSuccessed", "subscribeSocketConnected", "subscribeSocketError", "messageSuccessed", "setFilterParamSuccessed"];

    _createClass(DataFlowService, [{
        key: 'initBroadcast',
        value: function initBroadcast() {
            var me = this;
            this.broadcastWebSocket = this._connect(me.url + 'broadcast');
            this.broadcastWebSocket.onopen = function (e) {
                me.broadcastWebSocket.isOpen = true;
                e.eventType = 'broadcastSocketConnected';
                me.events.triggerEvent('broadcastSocketConnected', e);
            };
            this.broadcastWebSocket.onclose = function (e) {
                me.broadcastWebSocket.isOpen = false;
                e.eventType = 'broadcastSocketConnected';
                me.events.triggerEvent('broadcastSocketConnected', e);
            };
            this.broadcastWebSocket.onerror = function (e) {
                e.eventType = 'broadcastSocketError';
                me.events.triggerEvent('broadcastSocketError', e);
            };
            return this;
        }
    }, {
        key: 'broadcast',
        value: function broadcast(geoJSONFeature) {
            if (!this.broadcastWebSocket.isOpen) {
                this.events.triggerEvent('broadcastFailed');
                return;
            }
            this.broadcastWebSocket.send(JSON.stringify(geoJSONFeature));
            this.events.triggerEvent('broadcastSuccessed');
        }
    }, {
        key: 'initSubscribe',
        value: function initSubscribe() {
            var me = this;
            this.subscribeWebSocket = this._connect(this.url + 'subscribe');
            this.subscribeWebSocket.onopen = function (e) {
                me.subscribeWebSocket.send(me._getFilterParams());
                e.eventType = 'subscribeSocketConnected';
                me.events.triggerEvent('subscribeSocketConnected', e);
            };
            this.subscribeWebSocket.onerror = function (e) {
                e.eventType = 'subscribeSocketError';
                me.events.triggerEvent('subscribeSocketError', e);
            };
            this.subscribeWebSocket.onmessage = function (e) {
                me._onMessage(e);
            };
            return this;
        }
    }, {
        key: 'setPrjCoordSys',
        value: function setPrjCoordSys(prjCoordSys) {
            this.prjCoordSys = prjCoordSys;
            this.subscribeWebSocket.send(this._getFilterParams());
            return this;
        }
    }, {
        key: 'setExcludeField',
        value: function setExcludeField(excludeField) {
            this.excludeField = excludeField;
            this.subscribeWebSocket.send(this._getFilterParams());
            return this;
        }
    }, {
        key: 'setGeometry',
        value: function setGeometry(geometry) {
            this.geometry = geometry;
            this.subscribeWebSocket.send(this._getFilterParams());
            return this;
        }
    }, {
        key: 'unSubscribe',
        value: function unSubscribe() {
            if (!this.subscribeWebSocket) {
                return;
            }
            this.subscribeWebSocket.close();
            this.subscribeWebSocket = null;
        }
    }, {
        key: 'unBroadcast',
        value: function unBroadcast() {
            if (this.broadcastWebSocket) {
                return;
            }
            this.broadcastWebSocket.close();
            this.broadcastWebSocket = null;
        }
    }, {
        key: 'destroy',
        value: function destroy() {
            _SuperMap2.default.CommonServiceBase.prototype.destroy.apply(this, arguments);
            var me = this;
            me.geometry = null;
            me.prjCoordSys = null;
            me.excludeField = null;
            this.unBroadcast();
            this.unSubscribe();
        }
    }, {
        key: '_getFilterParams',
        value: function _getFilterParams() {
            var filter = {
                filterParam: {
                    prjCoordSys: this.prjCoordSys,
                    excludeField: this.excludeField,
                    geometry: this.geometry
                }
            };
            return _SuperMap2.default.Util.toJSON(filter);
        }
    }, {
        key: '_onMessage',
        value: function _onMessage(e) {
            if (e.data && e.data.indexOf("filterParam") > 0) {
                var filterParam = JSON.parse(e.data);
                e.filterParam = filterParam;
                e.eventType = 'setFilterParamSuccessed';
                this.events.triggerEvent('setFilterParamSuccessed', e);
                return;
            }
            var feature = JSON.parse(e.data);
            e.featureResult = feature;
            e.eventType = 'messageSuccessed';
            this.events.triggerEvent('messageSuccessed', e);
        }
    }, {
        key: '_connect',
        value: function _connect(url) {
            if ("WebSocket" in window) {
                return new WebSocket(url);
            } else if ("MozWebSocket" in window) {
                return new MozWebSocket(url);
            } else {
                console.log("no WebSocket");
                return null;
            }
        }
    }]);

    return DataFlowService;
}(_CommonServiceBase3.default);

exports.default = DataFlowService;


_SuperMap2.default.DataFlowService = DataFlowService;

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _BufferAnalystParameters = __webpack_require__(37);

var _BufferAnalystParameters2 = _interopRequireDefault(_BufferAnalystParameters);

var _DataReturnOption = __webpack_require__(20);

var _DataReturnOption2 = _interopRequireDefault(_DataReturnOption);

var _FilterParameter = __webpack_require__(10);

var _FilterParameter2 = _interopRequireDefault(_FilterParameter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.DatasetBufferAnalystParameters
 * @constructs SuperMap.DatasetBufferAnalystParameters
 * @classdesc
 * 数据集缓冲区分析参数类
 * @extends {SuperMap.BufferAnalystParameters}
 * @api
 */
var DatasetBufferAnalystParameters = function (_BufferAnalystParamet) {
    _inherits(DatasetBufferAnalystParameters, _BufferAnalystParamet);

    /**
     * @method SuperMap.DatasetBufferAnalystParameters.initialize
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * dataset - {String} 要用来做缓冲区分析的数据源中数据集的名称。该名称用形如"数据集名称@数据源别名"形式来表示。</br>
     * filterQueryParameter - {SuperMap.FilterParameter} 设置数据集中几何对象的过滤条件。只有满足此条件的几何对象才参与缓冲区分析。</br>
     * resultSetting - {SuperMap.DataReturnOption} 结果返回设置类。</br>
     * isAttributeRetained - {Boolean} 是否保留进行缓冲区分析的对象的字段属性，默认为 true。当 isUnion 字段为 false 时该字段有效。</br>
     * isUnion - {Boolean} 是否将缓冲区与源记录集中的对象合并后返回。对于面对象而言，要求源数据集中的面对象不相交。默认为 false。</br>
     * bufferSetting - {SuperMap.BufferSetting} 设置缓冲区通用参数。</br>
     */


    /**
     * APIProperty: isAttributeRetained
     * {Boolean} 是否保留进行缓冲区分析的对象的字段属性，默认为 true。当 isUnion 字段为 false 时该字段有效。
     */


    /**
     * APIProperty: filterQueryParameter
     * {SuperMap.FilterParameter} 设置数据集中几何对象的过滤条件。只有满足此条件的几何对象才参与缓冲区分析。
     */
    function DatasetBufferAnalystParameters(options) {
        _classCallCheck(this, DatasetBufferAnalystParameters);

        var _this = _possibleConstructorReturn(this, (DatasetBufferAnalystParameters.__proto__ || Object.getPrototypeOf(DatasetBufferAnalystParameters)).call(this, options));

        _this.dataset = null;
        _this.filterQueryParameter = null;
        _this.resultSetting = null;
        _this.isAttributeRetained = true;
        _this.isUnion = false;
        _this.CLASS_NAME = "SuperMap.DatasetBufferAnalystParameters";

        var me = _this;
        me.filterQueryParameter = new _FilterParameter2.default();
        me.resultSetting = new _DataReturnOption2.default();
        if (!options) {
            return _possibleConstructorReturn(_this);
        }
        _SuperMap2.default.Util.extend(_this, options);
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: isUnion
     * {Boolean} 是否将缓冲区与源记录集中的对象合并后返回。对于面对象而言，要求源数据集中的面对象不相交。默认为 false。
     */


    /**
     * APIProperty: resultSetting
     * {SuperMap.DataReturnOption} 结果返回设置类。
     */

    /**
     * APIProperty: dataset
     * {String} 要用来做缓冲区分析的数据源中数据集的名称。该名称用形如"数据集名称@数据源别名"形式来表示。
     */


    _createClass(DatasetBufferAnalystParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(DatasetBufferAnalystParameters.prototype.__proto__ || Object.getPrototypeOf(DatasetBufferAnalystParameters.prototype), 'destroy', this).call(this);
            var me = this;
            me.dataset = null;
            if (me.filterQueryParameter) {
                me.filterQueryParameter.destroy();
                me.filterQueryParameter = null;
            }
            if (me.resultSetting) {
                me.resultSetting.destroy();
                me.resultSetting = null;
            }
            me.isAttributeRetained = null;
            me.isUnion = null;
        }
    }], [{
        key: 'toObject',
        value: function toObject(datasetBufferAnalystParameters, tempObj) {
            for (var name in datasetBufferAnalystParameters) {
                if (name === "bufferSetting") {
                    datasetBufferAnalystParameters.bufferSetting.radiusUnit = datasetBufferAnalystParameters.bufferSetting.radiusUnit.toUpperCase();
                    tempObj.bufferAnalystParameter = datasetBufferAnalystParameters.bufferSetting;
                } else if (name === "resultSetting") {
                    tempObj.dataReturnOption = datasetBufferAnalystParameters.resultSetting;
                } else if (name === "dataset") {} else {
                    tempObj[name] = datasetBufferAnalystParameters[name];
                }
            }
        }
    }]);

    return DatasetBufferAnalystParameters;
}(_BufferAnalystParameters2.default);

exports.default = DatasetBufferAnalystParameters;


_SuperMap2.default.DatasetBufferAnalystParameters = DatasetBufferAnalystParameters;

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Class: SuperMap.DatasetInfo
 * 数据集信息类。
 * 数据集一般为存储在一起的相关数据的集合；根据数据类型的不同，分为矢量数据集、栅格数据集(grid
 * dataset)和影像数据集(image dataset)，以及为了处理特定问题而设计的数据集，如拓扑数据集，网络数据集等。
 *
 * 数据集是 GIS 数据组织的最小单位。其中矢量数据集是由同种类型空间要素组成的集合，
 * 所以也可以称为要素集。根据要素的空间特征的不同，矢量数据集又分为点数据集，
 * 线数据集，面数据集等，各矢量数据集是空间特征和性质相同的数据组织起来的集合。
 *
 * 目前版本支持的数据集主要有点数据集，线数据集，面数据集，文本数据集，复合数据集（CAD
 * 数据集）、网络数据集，栅格数据集(grid dataset)和影像数据集(image dataset)。
 */
var DatasetInfo = function () {

    /**
     * Constructor: SuperMap.DatasetInfo
     * 数据集信息类构造函数。
     *
     * Parameters:
     * options - {Object} 参数。
     *
     * Allowed options properties:
     * bounds - {SuperMap.Bounds} 数据集范围，该字段只读。
     * dataSourceName - {String} 数据源名称，该字段只读。
     * description - {String} 数据集的描述信息。
     * encodeType - {String} 数据集存储时的压缩编码方式，该字段只读。
     * isReadOnly - {Boolean} 数据集是否为只读。
     * name - {String} 数据集名称，该字段必须且只读。
     * prjCoordSys - {SuperMap.Projection} 数据集的投影信息。
     * tableName - {String} 表名，该字段只读。
     * type - {String} 数据集类型，该字段必设。主要有点数据集，线数据集，面数据集，文本数据集，复合数据集（CAD
     * 数据集）、网络数据集，栅格数据集(grid dataset)和影像数据集(image dataset)。
     */


    /**
     * APIProperty: tableName
     * {String} 表名，该字段只读。
     */


    /**
     * APIProperty: name
     * {String} 数据集名称，该字段必须且只读。
     */


    /**
     * APIProperty: encodeType
     * {String} 数据集存储时的压缩编码方式，该字段只读。
     */


    /**
     * APIProperty: dataSourceName
     * {String} 数据源名称，该字段只读。
     */
    function DatasetInfo(options) {
        _classCallCheck(this, DatasetInfo);

        this.bounds = null;
        this.dataSourceName = null;
        this.description = null;
        this.encodeType = null;
        this.isReadOnly = null;
        this.name = null;
        this.prjCoordSys = null;
        this.tableName = null;
        this.type = null;
        this.CLASS_NAME = "SuperMap.DatasetInfo";

        options = options || {};
        _SuperMap2.default.Util.extend(this, options);
        var b = this.bounds;
        if (b) {
            this.bounds = new _SuperMap2.default.Bounds(b.leftBottom.x, b.leftBottom.y, b.rightTop.x, b.rightTop.y);
        }
    }

    /**
     * APIMethod: destroy
     * 释放资源,将引用资源的属性置空。
     */


    /**
     * APIProperty: type
     * {String} 数据集类型，该字段必设。主要有点数据集，线数据集，面数据集，文本数据集，复合数据集（CAD
     * 数据集）、网络数据集，栅格数据集(grid dataset)和影像数据集(image dataset)。
     */


    /**
     * APIProperty: prjCoordSys
     * {SuperMap.Projection} 数据集的投影信息。
     */


    /**
     * APIProperty: isReadOnly
     * {Boolean} 数据集是否为只读。
     */


    /**
     * APIProperty: description
     * {String} 数据集的描述信息。
     */


    /**
     * APIProperty: bounds
     * {SuperMap.Bounds} 数据集范围，该字段只读。
     */


    _createClass(DatasetInfo, [{
        key: "destroy",
        value: function destroy() {
            _SuperMap2.default.Util.reset(this);
        }

        /**
         * Method: toServerJSONObject
         * 转换成对应的 JSON 格式对象。
         */

    }, {
        key: "toServerJSONObject",
        value: function toServerJSONObject() {
            var dataObj = {};
            dataObj = _SuperMap2.default.Util.copyAttributes(dataObj, this);
            if (dataObj.bounds) {
                if (dataObj.bounds.toServerJSONObject) {
                    dataObj.bounds = dataObj.bounds.toServerJSONObject();
                }
            }
            return dataObj;
        }
    }]);

    return DatasetInfo;
}();

exports.default = DatasetInfo;

_SuperMap2.default.DatasetInfo = DatasetInfo;

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _DataReturnOption = __webpack_require__(20);

var _DataReturnOption2 = _interopRequireDefault(_DataReturnOption);

var _FilterParameter = __webpack_require__(10);

var _FilterParameter2 = _interopRequireDefault(_FilterParameter);

var _OverlayAnalystParameters = __webpack_require__(38);

var _OverlayAnalystParameters2 = _interopRequireDefault(_OverlayAnalystParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.DatasetOverlayAnalystParameters
 * @constructs SuperMap.DatasetOverlayAnalystParameters
 * @classdesc
 * 数据集叠加分析参数类。
 * @extends {SuperMap.GetFeaturesParametersBase}
 * @api
 */
var DatasetOverlayAnalystParameters = function (_OverlayAnalystParame) {
    _inherits(DatasetOverlayAnalystParameters, _OverlayAnalystParame);

    /**
     * @method SuperMap.DatasetOverlayAnalystParameters.initialize
     * @param options - {Object} 参数。
     *
     * Allowed options properties:</br>
     * operateDataset - {String} 叠加分析中操作数据集的名称。必设字段。</br>
     * operateDatasetFields - {Array(String} 叠加分析中操作数据集保留在结果数据集中的字段名列表。</br>
     * operateDatasetFilter - {SuperMap.FilterParameter} 设置操作数据集中空间对象过滤条件。</br>
     * operateRegions - {Array(<SuperMap.Geometry>)} 操作区域。设置了操作区域后，仅对该区域内的对象进行分析。</br>
     * sourceDataset - {String} 叠加分析中源数据集的名称。必设字段。</br>
     * sourceDatasetFields - {Array(String} 叠加分析中源数据集保留在结果数据集中的字段名列表。</br>
     * sourceDatasetFilter - {SuperMap.FilterParameter} 设置源数据集中空间对象过滤条件。</br>
     * tolerance - {Integer} 容限。</br>
     * operation - {SuperMap.OverlayOperationType} 叠加操作枚举值。</br>
     * resultSetting - {SuperMap.DataReturnOption} 结果返回设置类。</br>
     */


    /**
     * APIProperty: tolerance
     * {Integer} 容限。
     */


    /**
     * APIProperty: sourceDatasetFields
     * {Array(String} 叠加分析中源数据集保留在结果数据集中的字段名列表。
     */


    /**
     * APIProperty: operateRegions
     * {Array(<SuperMap.Geometry>)}操作面对象集合，表示与这些面对象进行叠加分析。
     * 与 operateDataset 参数互斥，冲突时以operateDataset 为准。
     */


    /**
     * APIProperty: operateDatasetFields
     * {Array(String} 叠加分析中操作数据集保留在结果数据集中的字段名列表。
     */
    function DatasetOverlayAnalystParameters(options) {
        _classCallCheck(this, DatasetOverlayAnalystParameters);

        var _this = _possibleConstructorReturn(this, (DatasetOverlayAnalystParameters.__proto__ || Object.getPrototypeOf(DatasetOverlayAnalystParameters)).call(this, options));

        _this.operateDataset = null;
        _this.operateDatasetFields = null;
        _this.operateDatasetFilter = null;
        _this.operateRegions = null;
        _this.sourceDataset = null;
        _this.sourceDatasetFields = null;
        _this.sourceDatasetFilter = null;
        _this.tolerance = 0;
        _this.resultSetting = null;
        _this.CLASS_NAME = "SuperMap.DatasetOverlayAnalystParameters";

        var me = _this;
        me.operateDatasetFields = [];
        me.operateDatasetFilter = new _FilterParameter2.default();
        me.operateRegions = [];
        me.sourceDatasetFields = [];
        me.sourceDatasetFilter = new _FilterParameter2.default();
        me.resultSetting = new _DataReturnOption2.default();
        if (!options) {
            var _ret;

            return _ret = _this, _possibleConstructorReturn(_this, _ret);
        }
        _SuperMap2.default.Util.extend(_this, options);
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: resultSetting
     * {SuperMap.DataReturnOption} 结果返回设置类。
     */


    /**
     * APIProperty: filterQueryParameter
     * {SuperMap.FilterParameter} 设置源数据集中空间对象过滤条件。
     */


    /**
     * APIProperty: sourceDataset
     * {String} 叠加分析中源数据集的名称。必设字段。
     */


    /**
     * APIProperty: operateDatasetFilter
     * {SuperMap.FilterParameter} 设置操作数据集中空间对象过滤条件。
     */


    /**
     * APIProperty: operateDataset
     * {String} 叠加分析中操作数据集的名称。
     */


    _createClass(DatasetOverlayAnalystParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(DatasetOverlayAnalystParameters.prototype.__proto__ || Object.getPrototypeOf(DatasetOverlayAnalystParameters.prototype), 'destroy', this).call(this);

            var me = this;
            me.operateDataset = null;
            me.operateDatasetFields = null;
            if (me.operateDatasetFilter) {
                me.operateDatasetFilter.destroy();
                me.operateDatasetFilter = null;
            }
            if (me.operateRegions) {
                for (var i = 0, opRegions = me.operateRegions, len = opRegions.length; i < len; i++) {
                    opRegions[i].destroy();
                }
                me.operateRegions = null;
            }
            me.sourceDataset = null;
            me.sourceDatasetFields = null;
            if (me.sourceDatasetFilter) {
                me.sourceDatasetFilter.destroy();
                me.sourceDatasetFilter = null;
            }
            me.tolerance = null;
            if (me.resultSetting) {
                me.resultSetting.destroy();
                me.resultSetting = null;
            }
        }
    }], [{
        key: 'toObject',
        value: function toObject(datasetOverlayAnalystParameters, tempObj) {
            for (var name in datasetOverlayAnalystParameters) {
                if (name === "sourceDataset") {} else if (name === "operateRegions") {
                    tempObj.operateRegions = [];
                    var ors = datasetOverlayAnalystParameters.operateRegions;
                    for (var index in ors) {
                        if (ors.hasOwnProperty(index)) {
                            //icl542
                            tempObj.operateRegions[index] = _SuperMap2.default.REST.ServerGeometry.fromGeometry(ors[index]);
                        }
                    }
                } else if (name === "resultSetting") {
                    tempObj.dataReturnOption = datasetOverlayAnalystParameters.resultSetting;
                } else {
                    tempObj[name] = datasetOverlayAnalystParameters[name];
                }
            }
        }
    }]);

    return DatasetOverlayAnalystParameters;
}(_OverlayAnalystParameters2.default);

exports.default = DatasetOverlayAnalystParameters;


_SuperMap2.default.DatasetOverlayAnalystParameters = DatasetOverlayAnalystParameters;

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _FilterParameter = __webpack_require__(10);

var _FilterParameter2 = _interopRequireDefault(_FilterParameter);

var _SurfaceAnalystParameters = __webpack_require__(40);

var _SurfaceAnalystParameters2 = _interopRequireDefault(_SurfaceAnalystParameters);

var _DataReturnOption = __webpack_require__(20);

var _DataReturnOption2 = _interopRequireDefault(_DataReturnOption);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.DatasetSurfaceAnalystParameters
 * @constructs SuperMap.DatasetSurfaceAnalystParameters
 * @classdesc
 * 数据集表面分析参数类。
 * 该类对数据集表面分析所用到的参数进行设置。
 * @extends {SuperMap.SurfaceAnalystParameters}
 * @api
 */
var DatasetSurfaceAnalystParameters = function (_SurfaceAnalystParame) {
    _inherits(DatasetSurfaceAnalystParameters, _SurfaceAnalystParame);

    /**
     * @method SuperMap.GetFeaturesByBufferService.initialize
     * @param options - {Object} 可选参数。
     * Allowed options properties:</br>
     * dataset - {String} 要用来做数据集表面分析的数据源中数据集的名称。</br>
     * filterQueryParameter - {SuperMap.FilterParameter} 获取或设置查询过滤条件参数。</br>
     * zValueFieldName - {String} 获取或设置用于提取操作的字段名称。</br>
     * extractParameter - {SuperMap.SurfaceAnalystParametersSetting} 表面分析参数设置类。获取或设置表面分析参数。</br>
     * resolution - {Integer} 获取或设置指定中间结果（栅格数据集）的分辨率。</br>
     * resultSetting - {SuperMap.DataReturnOption} 结果返回设置类。</br>
     * surfaceAnalystMethod - {SuperMap.SurfaceAnalystMethod} 获取或设置表面分析的提取方法，提取等值线和提取等值面。</br>
     */


    /**
     * APIProperty: filterQueryParameter
     * {SuperMap.FilterParameter} 获取或设置查询过滤条件参数。
     */
    function DatasetSurfaceAnalystParameters(options) {
        _classCallCheck(this, DatasetSurfaceAnalystParameters);

        var _this = _possibleConstructorReturn(this, (DatasetSurfaceAnalystParameters.__proto__ || Object.getPrototypeOf(DatasetSurfaceAnalystParameters)).call(this, options));

        _this.dataset = null;
        _this.filterQueryParameter = null;
        _this.zValueFieldName = null;
        _this.CLASS_NAME = "SuperMap.DatasetSurfaceAnalystParameters";

        var me = _this;
        me.filterQueryParameter = new _FilterParameter2.default();
        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: zValueFieldName
     * {String} 获取或设置用于提取操作的字段名称。
     * 提取等值线时，将使用该字段中的值，对点记录集中的点数据进行插值分析，得到栅格数据集（中间结果），接着从栅格数据集提取等值线。
     */

    /**
     * APIProperty: dataset
     * {String} 要用来做数据集表面分析的数据源中数据集的名称。
     * 该名称用形如"数据集名称@数据源别名"形式来表示，例如：Country@World。必设字段。
     */


    _createClass(DatasetSurfaceAnalystParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(DatasetSurfaceAnalystParameters.prototype.__proto__ || Object.getPrototypeOf(DatasetSurfaceAnalystParameters.prototype), 'destroy', this).call(this);
            var me = this;
            me.dataset = null;
            if (me.filterQueryParameter) {
                me.filterQueryParameter.destroy();
                me.filterQueryParameter = null;
            }
            me.zValueFieldName = null;
        }
    }], [{
        key: 'toObject',
        value: function toObject(datasetSurfaceAnalystParameters, tempObj) {
            for (var name in datasetSurfaceAnalystParameters) {
                if (name === "filterQueryParameter") {
                    tempObj.filterQueryParameter = datasetSurfaceAnalystParameters.filterQueryParameter;
                }
                if (name === "extractParameter") {
                    tempObj.extractParameter = datasetSurfaceAnalystParameters.extractParameter;
                } else if (name === "dataset") {} else if (name === "surfaceAnalystMethod") {} else {
                    tempObj[name] = datasetSurfaceAnalystParameters[name];
                }
            }
        }
    }]);

    return DatasetSurfaceAnalystParameters;
}(_SurfaceAnalystParameters2.default);

exports.default = DatasetSurfaceAnalystParameters;


_SuperMap2.default.DatasetSurfaceAnalystParameters = DatasetSurfaceAnalystParameters;

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ThiessenAnalystParameters = __webpack_require__(34);

var _ThiessenAnalystParameters2 = _interopRequireDefault(_ThiessenAnalystParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Class: SuperMap.DatasetThiessenAnalystParameters
 * 数据集泰森多边形分析参数类
 *
 * Inherits from:
 *  - <SuperMap.ThiessenAnalystParameters>
 */
var DatasetThiessenAnalystParameters = function (_ThiessenAnalystParam) {
    _inherits(DatasetThiessenAnalystParameters, _ThiessenAnalystParam);

    /**
     * Constructor: DatasetThiessenAnalystParameters
     * 数据集泰森多边形分析参数类构造函数。
     *
     * Parameters:
     * options - {Object} 参数。
     *
     * Allowed options properties:
     * filterQueryParameter - {SuperMap.FilterParameter} 对待分析数据集中的点进行过滤，不设置时默认为null，即对数据集中的所有点进行分析。
     */


    /**
     * APIProperty: filterQueryParameter
     * {SuperMap.FilterParameter} 过滤条件，
     * 对待分析数据集中的点进行过滤，不设置时默认为null，即对数据集中的所有点进行分析。
     * (start code)
     * filterQueryParameter的使用方法如：
     *  filterQueryParameter = new SuperMap.FilterParameter({
     *   name: "Countries@World",
     *   attributeFilter: "SmID>100"
     *  });
     * (end)
     */
    function DatasetThiessenAnalystParameters(options) {
        _classCallCheck(this, DatasetThiessenAnalystParameters);

        var _this = _possibleConstructorReturn(this, (DatasetThiessenAnalystParameters.__proto__ || Object.getPrototypeOf(DatasetThiessenAnalystParameters)).call(this, options));

        _this.filterQueryParameter = null;
        _this.dataset = null;
        _this.CLASS_NAME = "SuperMap.DatasetThiessenAnalystParameters";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /**
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: dataset
     * {String} 数据集名称
     * 待分析的数据集名称，请使用‘datasetName@datasourceName’格式来表示。
     */


    _createClass(DatasetThiessenAnalystParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(DatasetThiessenAnalystParameters.prototype.__proto__ || Object.getPrototypeOf(DatasetThiessenAnalystParameters.prototype), 'destroy', this).call(this);
            var me = this;
            if (me.filterQueryParameter) {
                me.filterQueryParameter.destroy();
                me.filterQueryParameter = null;
            }
        }
    }], [{
        key: 'toObject',
        value: function toObject(datasetThiessenAnalystParameters, tempObj) {
            for (var name in datasetThiessenAnalystParameters) {
                if (name === "clipRegion") {
                    tempObj.clipRegion = _SuperMap2.default.REST.ServerGeometry.fromGeometry(datasetThiessenAnalystParameters.clipRegion);
                } else {
                    tempObj[name] = datasetThiessenAnalystParameters[name];
                }
            }
        }
    }]);

    return DatasetThiessenAnalystParameters;
}(_ThiessenAnalystParameters2.default);

exports.default = DatasetThiessenAnalystParameters;


_SuperMap2.default.DatasetThiessenAnalystParameters = DatasetThiessenAnalystParameters;

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.DatasourceConnectionInfo
 * @constructs SuperMap.DatasourceConnectionInfo
 * @classdesc
 * 数据源连接信息类。
 * 该类包括了进行数据源连接的所有信息，如所要连接的服务器名称、数据库名称、用户名以及密码等。
 * 当保存为工作空间时， 工作空间中的数据源的连接信息都将存储到工作空间文件中。对于不同类型的
 * 数据源，其连接信息有所区别。所以在使 用该类所包含的成员时，请注意该成员所适用的数据源类型。
 * 对于从数据源对象中返回的数据连接信息对象，只有 connect 方法可以被修改，其 他内容是不可以被修改的。
 * 对于用户创建的数据源连接信息对象，其内容都可以修改。
 * @api
 */
var DatasourceConnectionInfo = function () {

    /**
     *
     * @method SuperMap.DatasourceConnectionInfo.initialize
     * @description 数据源连接信息类构造函数。
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * alias - {String} 数据源别名。</br>
     * connect - {Boolean} 数据源是否自动连接数据。</br>
     * dataBase - {String} 数据源连接的数据库名。</br>
     * driver - {String} 使用 ODBC(Open Database Connectivity，开放数据库互连)的数据库的驱动程序名。</br>
     * engineType - {EngineType} 数据源连接的引擎类型。</br>
     * exclusive - {Boolean} 是否以独占方式打开数据源。</br>
     * OpenLinkTable - {Boolean} 是否把数据库中的其他非 SuperMap 数据表作为 LinkTable 打开。</br>
     * password - {String} 登录数据源连接的数据库或文件的密码。</br>
     * readOnly - {Boolean} 是否以只读方式打开数据源。</br>
     * server - {String} 数据库服务器名或 SDB 文件名。</br>
     * user - {String} 登录数据库的用户名。</br>
     */


    /**
     * APIProperty: server
     * {String} 数据库服务器名、文件名或服务地址。
     * 1.对于SDB和UDB文件，为其文件的绝对路径。注意：当绝对路径的长度超过UTF-8编码格式的260字节长度，该数据源无法打开。
     * 2.对于Oracle数据库，其服务器名为其TNS服务名称。
     * 3.对于SQL Server数据库，其服务器名为其系统的DSN(Database Source Name)名称。
     * 4.对于PostgreSQL数据库，其服务器名为“IP:端口号”，默认的端口号是 5432。
     * 5.对于DB2数据库，已经进行了编目，所以不需要进行服务器的设置。
     * 6.对于 Kingbase 数据库，其服务器名为其 IP 地址。
     * 7.对于GoogleMaps数据源，其服务器地址，默认设置为“http://maps.google.com”，且不可更改。
     * 8.对于SuperMapCould数据源，为其服务地址。
     * 9.对于MAPWORLD数据源，为其服务地址，默认设置为“http://www.tianditu.cn”，且不可更改。
     * 10.对于OGC和REST数据源，为其服务地址。
     */


    /**
     * APIProperty: password
     * {String} 登录数据源连接的数据库或文件的密码。
     */


    /**
     * APIProperty: exclusive
     * {Boolean} 是否以独占方式打开数据源。
     */


    /**
     * APIProperty: driver
     * {String} 使用 ODBC(Open Database Connectivity，开放数据库互连)的数据库的驱动程序名。
     * 其中，对于SQL Server 数据库与 iServer 发布的 WMTS 服务，此为必设参数。
     * 对于SQL Server 数据库，它使用 ODBC 连接，所设置的驱动程序名为 "SQL Server" 或 "SQL Native Client"；
     * 对于 iServer 发布的 WMTS 服务，设置的驱动名称为 "WMTS"。
     */


    /**
     * APIProperty: connect
     * {Boolean} 数据源是否自动连接数据。
     */
    function DatasourceConnectionInfo(options) {
        _classCallCheck(this, DatasourceConnectionInfo);

        this.alias = null;
        this.connect = null;
        this.dataBase = null;
        this.driver = null;
        this.engineType = null;
        this.exclusive = null;
        this.OpenLinkTable = null;
        this.password = null;
        this.readOnly = null;
        this.server = null;
        this.user = null;
        this.CLASS_NAME = "SuperMap.DatasourceConnectionInfo";

        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: user
     * {String} 登录数据库的用户名。
     */


    /**
     * APIProperty: readOnly
     * {Boolean} 是否以只读方式打开数据源。
     */


    /**
     * APIProperty: OpenLinkTable
     * {Boolean} 是否把数据库中的其他非 SuperMap 数据表作为 LinkTable 打开。
     */


    /**
     * APIProperty: engineType
     * {EngineType} 数据源连接的引擎类型。
     */


    /**
     * APIProperty: dataBase
     * {String} 数据源连接的数据库名。
     */


    /**
     * APIProperty: alias
     * {String} 数据源别名。
     */


    _createClass(DatasourceConnectionInfo, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.alias = null;
            me.connect = null;
            me.dataBase = null;
            me.driver = null;
            me.engineType = null;
            me.exclusive = null;
            me.OpenLinkTable = null;
            me.password = null;
            me.readOnly = null;
            me.server = null;
            me.user = null;
        }
    }]);

    return DatasourceConnectionInfo;
}();

exports.default = DatasourceConnectionInfo;

_SuperMap2.default.DatasourceConnectionInfo = DatasourceConnectionInfo;

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _SpatialAnalystBase2 = __webpack_require__(6);

var _SpatialAnalystBase3 = _interopRequireDefault(_SpatialAnalystBase2);

var _DensityKernelAnalystParameters = __webpack_require__(116);

var _DensityKernelAnalystParameters2 = _interopRequireDefault(_DensityKernelAnalystParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.DensityAnalystService
 * @constructs SuperMap.DensityAnalystService
 * @classdesc
 *  密度分析服务类，密度分析可计算每个输出栅格像元周围圆形邻域内输入的点或线对象的密度。
 *  密度分析，在某种意义上来说，相当于在表面上将输入的点线对象的测量值散开来，将每个点或线对象的测量量分布在整个研究区域，并计算输出栅格中每个像元的密度值。目前提供1种密度分析：核密度分析（Kernel）。
 * @extends {SuperMap.SpatialAnalystBase}
 * @api
 * @example  例如：
 *
 * (start code)
 * var myDensityAnalystService = new SuperMap.DensityAnalystService(url);
 * myDensityAnalystService.on({
     *     "processCompleted": processCompleted,
     *     "processFailed": processFailed
     *     }
 * );
 * (end)
 *
 */
var DensityAnalystService = function (_SpatialAnalystBase) {
    _inherits(DensityAnalystService, _SpatialAnalystBase);

    /**
     * @method SuperMap.DensityAnalystService.initialize
     * @param  url - {String} 服务的访问地址。如 http://localhost:8090/iserver/services/spatialanalyst-changchun/restjsr/spatialanalyst 。
     * @param options - {Object} 参数。
     *
     * Allowed options properties:</br>
     * eventListeners - {Object} 需要被注册的监听器对象。
     */
    function DensityAnalystService(url, options) {
        _classCallCheck(this, DensityAnalystService);

        var _this = _possibleConstructorReturn(this, (DensityAnalystService.__proto__ || Object.getPrototypeOf(DensityAnalystService)).call(this, url, options));

        _this.mode = null;
        _this.CLASS_NAME = "SuperMap.DensityAnalystService";

        var me = _this;
        if (options) {
            _SuperMap2.default.Util.extend(me, options);
        }
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源,将引用资源的属性置空。
     */


    /**
     * Property: mode
     * {String} 密度分析类型。
     */


    _createClass(DensityAnalystService, [{
        key: 'destroy',
        value: function destroy() {
            _get(DensityAnalystService.prototype.__proto__ || Object.getPrototypeOf(DensityAnalystService.prototype), 'destroy', this).call(this);
            this.mode = null;
        }

        /**
         * @method SuperMap.DensityAnalystService.processAsync
         * @description 负责将客户端的查询参数传递到服务端。
         * @param parameter - {DensityKernelAnalystParameters}
         */

    }, {
        key: 'processAsync',
        value: function processAsync(parameter) {
            var me = this;

            var end = me.url.substr(me.url.length - 1, 1);
            if (end === '/') {} else {
                me.url += "/";
            }

            var parameterObject = new Object();

            if (parameter instanceof _SuperMap2.default.DensityKernelAnalystParameters) {
                me.url += 'datasets/' + parameter.dataset + '/densityanalyst/kernel';
                me.mode = "kernel";
            }

            _DensityKernelAnalystParameters2.default.toObject(parameter, parameterObject);
            var jsonParameters = _SuperMap2.default.Util.toJSON(parameterObject);

            if (me.isInTheSameDomain) {
                me.url += '.json?returnContent=true';
            } else {
                me.url += '.jsonp?returnContent=true';
            }

            me.request({
                method: "POST",
                data: jsonParameters,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return DensityAnalystService;
}(_SpatialAnalystBase3.default);

exports.default = DensityAnalystService;

_SuperMap2.default.DensityAnalystService = DensityAnalystService;

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.DensityKernelAnalystParameters
 * @constructs SuperMap.DensityKernelAnalystParameters
 * @classdesc
 * 核密度分析参数类
 * @api
 */
var DensityKernelAnalystParameters = function () {

    /**
     * @method SuperMap.DensityKernelAnalystParameters.initialize
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * dataset - {String} 要用来做核密度分析数据源中数据集的名称。该名称用形如"数据集名称@数据源别名"形式来表示，例如：BaseMap_P@Jingjin。必设字段。</br>
     * bounds - {SuperMap.Bounds} 核密度分析的范围，用于确定结果栅格数据集的范围。 如果缺省，则默认为原数据集的范围。</br>
     * searchRadius - {Number} 栅格邻域内用于计算密度的查找半径，单位与当前数据集相同。默认值为当前数据集的长宽中的最大值除30。</br>
     * fieldName - {String} 用于进行核密度分析的测量值的字段名称，核密度分析不支持文本类型的字段，必设字段。</br>
     * resultGridDatasetResolution - {Number} 密度分析结果栅格数据的分辨率，单位与当前数据集相同。默认值为当前数据集的长宽中的最小值除500。</br>
     * targetDatasource - {String} 指定的存储结果数据集的数据源，默认为当前分析的数据集所在的数据源。</br>
     * resultGridName - {Number} 指定结果数据集名称，必设字段。</br>
     * deleteExistResultDataset - {Boolean} 如果用户命名的结果数据集名称与已有的数据集重名，是否删除已有的数据集。默认为 false，即不删除。</br>
     */


    /**
     * APIProperty: resultGridName
     * {String} 指定结果数据集名称，必设字段。
     */


    /**
     * APIProperty: searchRadius
     * {Number} 栅格邻域内用于计算密度的查找半径，单位与当前数据集相同。默认值为当前数据集的长宽中的最大值除30。
     */


    /**
     * APIProperty: fieldName
     * {String} 用于进行核密度分析的测量值的字段名称，核密度分析不支持文本类型的字段，必设字段。
     */


    /**
     * APIProperty: dataset
     * {String} 要用来做核密度分析数据源中数据集的名称。
     * 该名称用形如"数据集名称@数据源别名"形式来表示，例如：Railway@Changchun。必设字段。
     *
     * 注：核密度分析支持点数据集和线数据集。
     */
    function DensityKernelAnalystParameters(options) {
        _classCallCheck(this, DensityKernelAnalystParameters);

        this.dataset = null;
        this.bounds = null;
        this.fieldName = null;
        this.resultGridDatasetResolution = null;
        this.searchRadius = null;
        this.targetDatasource = null;
        this.resultGridName = null;
        this.deleteExistResultDataset = false;
        this.CLASS_NAME = "SuperMap.DensityKernelAnalystParameters";

        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: deleteExistResultDataset
     * {Boolean} 如果用户命名的结果数据集名称与已有的数据集重名，是否删除已有的数据集。默认为 false，即不删除。
     */


    /**
     * APIProperty: targetDatasource
     * {String}  指定的存储结果数据集的数据源，默认为当前分析的数据集所在的数据源。
     */


    /**
     * APIProperty: resultGridDatasetResolution
     * {Number} 密度分析结果栅格数据的分辨率，单位与当前数据集相同。默认值为当前数据集的长宽中的最小值除500。
     */


    /**
     * APIProperty: bounds
     * {SuperMap.Bounds} 核密度分析的范围，用于确定结果栅格数据集的范围。
     * 如果缺省，则默认为原数据集的范围。
     */


    _createClass(DensityKernelAnalystParameters, [{
        key: "destroy",
        value: function destroy() {
            var me = this;
            me.dataset = null;
            me.bounds = null;
            me.fieldName = null;
            me.resultGridDatasetResolution = null;
            me.searchRadius = null;

            me.targetDatasource = null;
            me.resultGridName = null;
            me.deleteExistResultDataset = null;
        }
    }], [{
        key: "toObject",
        value: function toObject(densityKernelAnalystParameters, tempObj) {
            for (var name in densityKernelAnalystParameters) {
                if (name !== "dataset") {
                    tempObj[name] = densityKernelAnalystParameters[name];
                }
            }
        }
    }]);

    return DensityKernelAnalystParameters;
}();

exports.default = DensityKernelAnalystParameters;


_SuperMap2.default.DensityKernelAnalystParameters = DensityKernelAnalystParameters;

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.EditFeaturesParameters
 * @constructs SuperMap.EditFeaturesParameters
 * @classdesc
 * 数据服务中数据集添加、修改、删除参数类。
 * @api
 */
var EditFeaturesParameters = function () {

    /**
     * @method SuperMap.EditFeaturesParameters.initialize
     * @description 数据服务中数据集添加、修改、删除参数类构造函数。
     * @param options - {Object} 参数。
     *
     * Allowed options properties:</br>
     * features - {Array(Object)} 当前需要创建或者是修改的要素集。</br>
     * returnContent - {Boolean} 是返回创建要素的ID数组还是返回featureResult资源的URI。</br>
     * editType - {SuperMap.EditType} POST动作类型(ADD、UPDATE、DELETE)，默认为 SuperMap.EditType.ADD。</br>
     * IDs - {Array(String) 或 Array(Integer)} 删除要素时的要素的ID数组。</br>
     */


    /**
     * APIProperty: returnContent
     * {Boolean} 要素添加时，isUseBatch 不传或传为 false 的情况下有效。
     *           true 表示直接返回新创建的要素的 ID 数组;false 表示返回创建的 featureResult 资源的 URI。默认不传时为 false。
     */


    /**
     * APIProperty: editType
     * {EditType} 要素集更新类型(add、update、delete)，默认为 SuperMap.EditType.ADD.
     */

    /**
     * APIProperty: dataSetName
     * {String} 当前需要创建或者是修改的要素的数据集。
     */
    function EditFeaturesParameters(options) {
        _classCallCheck(this, EditFeaturesParameters);

        this.dataSourceName = null;
        this.dataSetName = null;
        this.features = null;
        this.editType = _REST.EditType.ADD;
        this.IDs = null;
        this.returnContent = false;
        this.isUseBatch = false;
        this.CLASS_NAME = "SuperMap.EditFeaturesParameters";

        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: isUseBatch
     * {Boolean} 是否使用批量添加要素功能，要素添加时有效。
     *           批量添加能够提高要素编辑效率。
     *           true 表示批量添加；false 表示不使用批量添加。默认不传时为 false。
     */


    /**
     * APIProperty: IDs
     * {Array(String) 或 Array(Integer)} 执行删除时要素集ID集合。
     */

    /**
     * APIProperty: features
     * {Array<SuperMap.Feature.Vector|GeoJSON Feature>} 当前需要创建或者是修改的要素集。
     */


    /**
     * APIProperty: dataSourceName
     * {String} 当前需要创建或者是修改的要素的数据源
     */


    _createClass(EditFeaturesParameters, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.dataSourceName = null;
            me.dataSetName = null;
            me.features = null;
            me.editType = null;
            me.IDs = null;
            me.returnContent = null;
        }

        /**
         * @method SuperMap.EditFeaturesParameters.toJsonParameters
         * @description 将 <EditFeaturesParameters> 对象参数转换为 json 字符串。
         * @param params - {SuperMap.EditFeaturesParameters} 地物编辑参数。
         * return {String} 转化后的 json字符串。
         */

    }], [{
        key: 'toJsonParameters',
        value: function toJsonParameters(params) {
            var geometry,
                feature,
                len,
                features,
                editType = params.editType;

            if (editType === _SuperMap2.default.EditType.DELETE) {
                if (params.IDs === null) return;

                features = { ids: params.IDs };
            } else {
                if (params.features === null) return;

                len = params.features.length;
                features = [];
                for (var i = 0; i < len; i++) {
                    feature = params.features[i];
                    feature.geometry = _SuperMap2.default.REST.ServerGeometry.fromGeometry(feature.geometry);
                    features.push(feature);
                }
            }

            return _SuperMap2.default.Util.toJSON(features);
        }
    }]);

    return EditFeaturesParameters;
}();

exports.default = EditFeaturesParameters;


_SuperMap2.default.EditFeaturesParameters = EditFeaturesParameters;

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _EditFeaturesParameters = __webpack_require__(117);

var _EditFeaturesParameters2 = _interopRequireDefault(_EditFeaturesParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.EditFeaturesService
 * @constructs SuperMap.EditFeaturesService
 * @classdesc
 * 数据服务中数据集添加、更新、删除服务类。。
 * @extends {SuperMap.CommonServiceBase}
 * @api
 * @example 例如：
 * (start code)
 * var myService = new SuperMap.EditFeaturesService(url, {eventListeners: {
     *     "processCompleted": editFeatureCompleted,
     *     "processFailed": editFeatureError
     *       }
     * };
 * (end)
 *
 */
var EditFeaturesService = function (_CommonServiceBase) {
    _inherits(EditFeaturesService, _CommonServiceBase);

    /**
     * @method SuperMap.EditFeaturesService.initialize
     * @description 数据集编辑服务基类构造函数。
     * @param url - {String} 服务端的数据服务资源地址。请求数据服务中数据集编辑服务，URL 应为：</br>
     * http://{服务器地址}:{服务端口号}/iserver/services/{数据服务名}/rest/data/datasources/name/{数据源名}/datasets/name/{数据集名} 。</br>
     * 例如：http://localhost:8090/iserver/services/data-jingjin/rest/data/datasources/name/Jingjin/datasets/name/Landuse_R
     * @param options - {Object} 参数。
     *
     * Allowed options properties:</br>
     * eventListeners - {Object} 需要被注册的监听器对象。
     */


    /**
     * Property: returnContent
     * {Boolean} 要素添加时，isUseBatch 不传或传为 false 的情况下有效。
     *           true 表示直接返回新创建的要素的 ID 数组;false 表示返回创建的 featureResult 资源的 URI。默认不传时为 false。
     */
    function EditFeaturesService(url, options) {
        _classCallCheck(this, EditFeaturesService);

        var _this = _possibleConstructorReturn(this, (EditFeaturesService.__proto__ || Object.getPrototypeOf(EditFeaturesService)).call(this, url, options));

        _this.returnContent = false;
        _this.isUseBatch = false;
        _this.CLASS_NAME = "SuperMap.EditFeaturesService";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        var me = _this,
            end;
        end = me.url.substr(me.url.length - 1, 1);
        if (me.isInTheSameDomain) {
            me.url += end == "/" ? "features.json?" : "/features.json?";
        } else {
            me.url += end == "/" ? "features.jsonp?" : "/features.jsonp?";
        }
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源,将引用资源的属性置空。
     */


    /**
     * Property: isUseBatch
     * {Boolean} 是否使用批量添加要素功能，要素添加时有效。
     *           批量添加能够提高要素编辑效率。
     *           true 表示批量添加；false 表示不使用批量添加。默认不传时为 false。
     */


    _createClass(EditFeaturesService, [{
        key: 'destroy',
        value: function destroy() {
            _get(EditFeaturesService.prototype.__proto__ || Object.getPrototypeOf(EditFeaturesService.prototype), 'destroy', this).call(this);
            var me = this;
            me.returnContent = null;
            me.isUseBatch = null;
            me.fromIndex = null;
            me.toIndex = null;
        }

        /*
         * APIMethod: processAsync
         * 负责将客户端的更新参数传递到服务端。
         *
         * Parameters:
         * params - {SuperMap.EditFeaturesParameters} 编辑要素参数。
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                method = "POST",
                ids = "",
                editType = params.editType,
                jsonParameters = null;

            me.returnContent = params.returnContent;
            me.isUseBatch = params.isUseBatch;
            jsonParameters = _EditFeaturesParameters2.default.toJsonParameters(params);
            if (editType === _REST.EditType.DELETE) {
                ids = _SuperMap2.default.Util.toJSON(params.IDs);
                me.url += "ids=" + ids;
                method = "DELETE";
                jsonParameters = ids;
            } else if (editType === _REST.EditType.UPDATE) {
                method = "PUT";
            } else {
                if (me.isUseBatch) {
                    me.url += "isUseBatch=" + me.isUseBatch;
                    me.returnContent = false;
                }
                if (me.returnContent) {
                    me.url += "returnContent=" + me.returnContent;
                    method = "POST";
                }
            }

            me.request({
                method: method,
                data: jsonParameters,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return EditFeaturesService;
}(_CommonServiceBase3.default);

exports.default = EditFeaturesService;

_SuperMap2.default.EditFeaturesService = EditFeaturesService;

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _FacilityAnalyst3DParameters = __webpack_require__(21);

var _FacilityAnalyst3DParameters2 = _interopRequireDefault(_FacilityAnalyst3DParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.FacilityAnalystSinks3DParameters
 * @description 最近设施分析参数类(汇查找资源)<br>
 *               最近设施分析是指在网络上给定一个事件点和一组设施点，查找从事件点到设施点(或从设施点到事件点)以最小耗费能到达的最佳路径。<br>
 *               设施点一般为学校、超市、加油站等服务设施；事件点为需要服务设施的事件位置。<br>
 *               例如事件发生点是一起交通事故，要求查找在10分钟内能到达的最近医院，超过10分钟能到达的都不予考虑。此例中，事故发生地即是一个事件点，周边的医院则是设施点。<br>
 *               最近设施查找实际上也是一种路径分析，因此对路径分析起作用的障碍边、障碍点、转向表、耗费等属性在最近设施分析时同样可设置。
 * @augments SuperMap.FacilityAnalyst3DParameters
 * @param options - {Object} 可选参数。如：<br>
 *         edgeID - {Number} 指定的弧段ID。<br>
 *         nodeID - {Integer} 指定的结点ID。<br>
 *         weightName -{String} 指定的权值字段信息对象的名称。<br>
 *         isUncertainDirectionValid -{Boolean} 指定不确定流向是否有效。指定为 true，表示不确定流向有效，遇到不确定流向时分析继续进行；<br>
 *                                              指定为 false，表示不确定流向无效，遇到不确定流向将停止在该方向上继续查找
 */
var FacilityAnalystSinks3DParameters = function (_FacilityAnalyst3DPar) {
    _inherits(FacilityAnalystSinks3DParameters, _FacilityAnalyst3DPar);

    /*
     * Constructor: SuperMap.FacilityAnalystSinks3DParameters
     * 最近设施分析参数类构造函数。
     */
    function FacilityAnalystSinks3DParameters(options) {
        _classCallCheck(this, FacilityAnalystSinks3DParameters);

        var _this = _possibleConstructorReturn(this, (FacilityAnalystSinks3DParameters.__proto__ || Object.getPrototypeOf(FacilityAnalystSinks3DParameters)).call(this, options));

        _this.CLASS_NAME = "SuperMap.FacilityAnalystSinks3DParameters";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(FacilityAnalystSinks3DParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(FacilityAnalystSinks3DParameters.prototype.__proto__ || Object.getPrototypeOf(FacilityAnalystSinks3DParameters.prototype), 'destroy', this).call(this);
        }
    }]);

    return FacilityAnalystSinks3DParameters;
}(_FacilityAnalyst3DParameters2.default);

exports.default = FacilityAnalystSinks3DParameters;

_SuperMap2.default.FacilityAnalystSinks3DParameters = FacilityAnalystSinks3DParameters;

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _FacilityAnalystSinks3DParameters = __webpack_require__(119);

var _FacilityAnalystSinks3DParameters2 = _interopRequireDefault(_FacilityAnalystSinks3DParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.FacilityAnalystSinks3DService
 * @description  最近设施分析服务类(汇查找资源)<br>
 *                最近设施分析是指在网络上给定一个事件点和一组设施点，
 *                查找从事件点到设施点(或从设施点到事件点)以最小耗费能到达的最佳路径。
 *                该类负责将客户端指定的最近设施分析参数传递给服务端，并接收服务端返回的结果数据。
 *                最近设施分析结果通过该类支持的事件的监听函数参数获取
 * @augments SuperMap.CommonServiceBase
 * @example
 * (start code)
 * var myFacilityAnalystSinks3DService = new SuperMap.FacilityAnalystSinks3DService(url, {
 *     eventListeners: {
 *	       "processCompleted": facilityAnalystSinks3DCompleted,
 *		   "processFailed": facilityAnalystSinks3DError
 *		   }
 * });
 * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
 *               http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
 *              例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。<br>
 * @param options - {Object} 互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var FacilityAnalystSinks3DService = function (_CommonServiceBase) {
    _inherits(FacilityAnalystSinks3DService, _CommonServiceBase);

    /**
     * @function SuperMap.FacilityAnalystSinks3DService.initialize
     * @description 最近设施分析服务类构造函数。
     * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
     *               http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
     *              例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。<br>
     * @param options - {Object} 互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */
    function FacilityAnalystSinks3DService(url, options) {
        _classCallCheck(this, FacilityAnalystSinks3DService);

        var _this = _possibleConstructorReturn(this, (FacilityAnalystSinks3DService.__proto__ || Object.getPrototypeOf(FacilityAnalystSinks3DService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.FacilityAnalystSinks3DService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(FacilityAnalystSinks3DService, [{
        key: 'destroy',
        value: function destroy() {
            _SuperMap2.default.CommonServiceBase.prototype.destroy.apply(this, arguments);
        }

        /**
         * @function SuperMap.FacilityAnalystSinks3DService.processAsync
         * @description 负责将客户端的查询参数传递到服务端。
         * @param params - {SuperMap.FacilityAnalystSinks3DParameters} 最近设施分析参数类(汇查找资源)
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                jsonObject,
                end = me.url.substr(me.url.length - 1, 1);
            me.url = me.url + (end === "/" ? "sinks" : "/sinks") + (this.isInTheSameDomain ? ".json?" : ".jsonp?");
            jsonObject = {
                edgeID: params.edgeID,
                nodeID: params.nodeID,
                weightName: params.weightName,
                isUncertainDirectionValid: params.isUncertainDirectionValid
            };
            me.request({
                method: "GET",
                params: jsonObject,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return FacilityAnalystSinks3DService;
}(_CommonServiceBase3.default);

exports.default = FacilityAnalystSinks3DService;


_SuperMap2.default.FacilityAnalystSinks3DService = FacilityAnalystSinks3DService;

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _FacilityAnalyst3DParameters = __webpack_require__(21);

var _FacilityAnalyst3DParameters2 = _interopRequireDefault(_FacilityAnalyst3DParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.FacilityAnalystSources3DParameters
 * @description 最近设施分析参数类(源查找资源)<br>
 *               最近设施分析是指在网络上给定一个事件点和一组设施点，查找从事件点到设施点(或从设施点到事件点)以最小耗费能到达的最佳路径。<br>
 *               设施点一般为学校、超市、加油站等服务设施；事件点为需要服务设施的事件位置。<br>
 *               例如事件发生点是一起交通事故，要求查找在10分钟内能到达的最近医院，超过10分钟能到达的都不予考虑。此例中，事故发生地即是一个事件点，周边的医院则是设施点。<br>
 *               最近设施查找实际上也是一种路径分析，因此对路径分析起作用的障碍边、障碍点、转向表、耗费等属性在最近设施分析时同样可设置。
 * @augments SuperMap.FacilityAnalyst3DParameters
 * @param options - {Object} 可选参数。如：<br>
 *         edgeID - {Number} 指定的弧段ID。<br>
 *         nodeID - {Integer} 指定的结点ID。<br>
 *         weightName -{String} 指定的权值字段信息对象的名称。<br>
 *         isUncertainDirectionValid -{Boolean} 指定不确定流向是否有效。指定为 true，表示不确定流向有效，遇到不确定流向时分析继续进行；<br>
 *                                              指定为 false，表示不确定流向无效，遇到不确定流向将停止在该方向上继续查找
 */
var FacilityAnalystSources3DParameters = function (_FacilityAnalyst3DPar) {
    _inherits(FacilityAnalystSources3DParameters, _FacilityAnalyst3DPar);

    /*
     * Constructor: SuperMap.FacilityAnalystSources3DParameters
     * 最近设施分析参数类构造函数。
     */
    function FacilityAnalystSources3DParameters(options) {
        _classCallCheck(this, FacilityAnalystSources3DParameters);

        var _this = _possibleConstructorReturn(this, (FacilityAnalystSources3DParameters.__proto__ || Object.getPrototypeOf(FacilityAnalystSources3DParameters)).call(this, options));

        _this.CLASS_NAME = "SuperMap.FacilityAnalystSources3DParameters";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(FacilityAnalystSources3DParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(FacilityAnalystSources3DParameters.prototype.__proto__ || Object.getPrototypeOf(FacilityAnalystSources3DParameters.prototype), 'destroy', this).call(this);
        }
    }]);

    return FacilityAnalystSources3DParameters;
}(_FacilityAnalyst3DParameters2.default);

exports.default = FacilityAnalystSources3DParameters;


_SuperMap2.default.FacilityAnalystSources3DParameters = FacilityAnalystSources3DParameters;

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _FacilityAnalystSources3DParameters = __webpack_require__(121);

var _FacilityAnalystSources3DParameters2 = _interopRequireDefault(_FacilityAnalystSources3DParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.FacilityAnalystSources3DService
 * @description 最近设施分析服务类(源查找资源) <br>
 *               最近设施分析是指在网络上给定一个事件点和一组设施点，
 *               查找从事件点到设施点(或从设施点到事件点)以最小耗费能到达的最佳路径。
 *               该类负责将客户端指定的最近设施分析参数传递给服务端，并接收服务端返回的结果数据。
 *               最近设施分析结果通过该类支持的事件的监听函数参数获取
 * @augments SuperMap.CommonServiceBase
 * @param  url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
 *                        http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
 *                        例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。
 * @param options - {Object} 互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var FacilityAnalystSources3DService = function (_CommonServiceBase) {
    _inherits(FacilityAnalystSources3DService, _CommonServiceBase);

    /**
     * @function SuperMap.FacilityAnalystSources3DService.initialize
     * @description 最近设施分析服务类构造函数。
     * @param  url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
     *                        http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
     *                        例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。
     * @param options - {Object} 互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */
    function FacilityAnalystSources3DService(url, options) {
        _classCallCheck(this, FacilityAnalystSources3DService);

        var _this = _possibleConstructorReturn(this, (FacilityAnalystSources3DService.__proto__ || Object.getPrototypeOf(FacilityAnalystSources3DService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.FacilityAnalystSources3DService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(FacilityAnalystSources3DService, [{
        key: 'destroy',
        value: function destroy() {
            _get(FacilityAnalystSources3DService.prototype.__proto__ || Object.getPrototypeOf(FacilityAnalystSources3DService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.FacilityAnalystSources3DService.processAsync
         * @description 负责将客户端的查询参数传递到服务端。
         * @param params - {SuperMap.FacilityAnalystSources3DParameters} 最近设施分析参数类(源查找资源)
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                jsonObject,
                end = me.url.substr(me.url.length - 1, 1);
            me.url = me.url + (end === "/" ? "sources" : "/sources") + (this.isInTheSameDomain ? ".json?" : ".jsonp?");
            jsonObject = {
                edgeID: params.edgeID,
                nodeID: params.nodeID,
                weightName: params.weightName,
                isUncertainDirectionValid: params.isUncertainDirectionValid
            };
            me.request({
                method: "GET",
                params: jsonObject,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return FacilityAnalystSources3DService;
}(_CommonServiceBase3.default);

exports.default = FacilityAnalystSources3DService;


_SuperMap2.default.FacilityAnalystSources3DService = FacilityAnalystSources3DService;

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.FacilityAnalystStreamParameters
 * @description 上游/下游关键设施查找资源参数类。
 * @param options - {Object} 可选参数。如：
 *        sourceNodeIDs - {Array（Number）} 指定的设施点ID数组，可以为空。
 *        edgeID - {Number} 指定的弧段ID（注：edgeID 与 nodeID 不能同时使用）。
 *        nodeID - {Number} 指定的结点ID （注：edgeID 与 nodeID 不能同时使用）。
 *        isUncertainDirectionValid - {Boolean} 指定不确定流向是否有效；默认false，无效。
 *        queryType - {Number} 分析类型，只能是 0 (上游关键设施查询) 或者是 1（下游关键设施查询）
 */
var FacilityAnalystStreamParameters = function () {

    /*
     * Constructor: SuperMap.FacilityAnalystStreamParameters
     * 最近设施分析参数类构造函数。
     */


    /**
     * APIProperty: isUncertainDirectionValid
     * @member SuperMap.FacilityAnalystStreamParameters.prototype.isUncertainDirectionValid -{Boolean}
     * @description 指定不确定流向是否有效，默认为false。指定为 true，表示不确定流向有效，遇到不确定流向时分析继续进行；<br>
     *               指定为 false，表示不确定流向无效，遇到不确定流向将停止在该方向上继续查找。
     */


    /**
     * APIProperty: edgeID
     * @member SuperMap.FacilityAnalystStreamParameters.prototype.edgeID -{Number}
     * @description 指定的弧段ID（注：edgeID 与 nodeID 不能同时使用）。
     */
    function FacilityAnalystStreamParameters(options) {
        _classCallCheck(this, FacilityAnalystStreamParameters);

        this.sourceNodeIDs = null;
        this.edgeID = null;
        this.nodeID = null;
        this.isUncertainDirectionValid = false;
        this.queryType = null;
        this.CLASS_NAME = "SuperMap.FacilityAnalystStreamParameters";

        var me = this;
        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(me, options);
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: type
     * @member SuperMap.FacilityAnalystStreamParameters.prototype.queryType -{Number}
     * @description 分析类型，只能是 0 (上游关键设施查询) 或者是 1（下游关键设施查询）。
     */


    /**
     * APIProperty: nodeID
     * @member SuperMap.FacilityAnalystStreamParameters.prototype.nodeID -{Number}
     * @description 指定的结点ID （注：edgeID 与 nodeID 不能同时使用）。
     */


    /**
     * APIProperty: sourceNodeIDs
     * @member SuperMap.FacilityAnalystStreamParameters.prototype.sourceNodeIDs -{Array<Number>}
     * @description 指定的设施点ID数组,可以为空。
     */


    _createClass(FacilityAnalystStreamParameters, [{
        key: "destroy",
        value: function destroy() {
            var me = this;
            me.edgeID = null;
            me.nodeID = null;
            me.weightName = null;
            me.isUncertainDirectionValid = null;
            me.type = null;
        }
    }]);

    return FacilityAnalystStreamParameters;
}();

exports.default = FacilityAnalystStreamParameters;


_SuperMap2.default.FacilityAnalystStreamParameters = FacilityAnalystStreamParameters;

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _NetworkAnalystServiceBase = __webpack_require__(8);

var _NetworkAnalystServiceBase2 = _interopRequireDefault(_NetworkAnalystServiceBase);

var _FacilityAnalystStreamParameters = __webpack_require__(123);

var _FacilityAnalystStreamParameters2 = _interopRequireDefault(_FacilityAnalystStreamParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.FacilityAnalystStreamService
 * @description 上游/下游 关键设施查找资源服务类;即查找给定弧段或节点的上游/下游中的关键设施结点，返回关键结点 ID 数组及其下游弧段 ID 数组。
 * @augments SuperMap.NetworkAnalystServiceBase
 * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
 *                        http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
 *                        例如: "http://localhost:8090/iserver/services/test/rest/networkanalyst/WaterNet@FacilityNet";
 * @param options - {Object} 互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var FacilityAnalystStreamService = function (_NetworkAnalystServic) {
    _inherits(FacilityAnalystStreamService, _NetworkAnalystServic);

    /**
     * @function SuperMap.FacilityAnalystStreamService.prototype.initialize
     * @description 上游/下游关键设施查找资源服务类构造函数。
     * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
     *                        http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
     *                        例如: "http://localhost:8090/iserver/services/test/rest/networkanalyst/WaterNet@FacilityNet";
     * @param options - {Object} 互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */
    function FacilityAnalystStreamService(url, options) {
        _classCallCheck(this, FacilityAnalystStreamService);

        var _this = _possibleConstructorReturn(this, (FacilityAnalystStreamService.__proto__ || Object.getPrototypeOf(FacilityAnalystStreamService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.FacilityAnalystStreamService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(FacilityAnalystStreamService, [{
        key: 'destroy',
        value: function destroy() {
            _get(FacilityAnalystStreamService.prototype.__proto__ || Object.getPrototypeOf(FacilityAnalystStreamService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.FacilityAnalystStreamService.prototype. processAsync
         * @description 负责将客户端的查询参数传递到服务端。
         * @param params - {SuperMap.FacilityAnalystStreamParameters} 上游/下游关键设施查找资源参数类。
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                jsonObject;
            var end = me.url.substr(me.url.length - 1, 1);

            //URL 通过参数类型来判断是 上游 还是下游 查询
            if (params.queryType === 0) {
                me.url = me.url + (end === "/" ? "upstreamcirticalfaclilities" : "/upstreamcirticalfaclilities") + (this.isInTheSameDomain ? ".json?" : ".jsonp?");
            } else if (params.queryType === 1) {
                me.url = me.url + (end === "/" ? "downstreamcirticalfaclilities" : "/downstreamcirticalfaclilities") + (this.isInTheSameDomain ? ".json?" : ".jsonp?");
            } else return;

            jsonObject = {
                sourceNodeIDs: params.sourceNodeIDs,
                isUncertainDirectionValid: params.isUncertainDirectionValid
            };

            if (params.edgeID !== null && params.nodeID !== null) return;
            if (params.edgeID === null && params.nodeID === null) return;
            if (params.edgeID !== null) jsonObject.edgeID = params.edgeID;else jsonObject.nodeID = params.nodeID;

            me.request({
                method: "GET",
                params: jsonObject,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return FacilityAnalystStreamService;
}(_NetworkAnalystServiceBase2.default);

exports.default = FacilityAnalystStreamService;


_SuperMap2.default.FacilityAnalystStreamService = FacilityAnalystStreamService;

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _FacilityAnalyst3DParameters = __webpack_require__(21);

var _FacilityAnalyst3DParameters2 = _interopRequireDefault(_FacilityAnalyst3DParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.FacilityAnalystTracedown3DParameters
 * @description 下游追踪资源参数类
 * @augments SuperMap.FacilityAnalyst3DParameters
 * @param options - {Object} 可选参数。如：<br>
 *         edgeID - {Number} 指定的弧段ID。<br>
 *         nodeID - {Integer} 指定的结点ID。<br>
 *         weightName -{String} 指定的权值字段信息对象的名称。<br>
 *         isUncertainDirectionValid -{Boolean} 指定不确定流向是否有效。指定为 true，表示不确定流向有效，遇到不确定流向时分析继续进行；<br>
 *                                              指定为 false，表示不确定流向无效，遇到不确定流向将停止在该方向上继续查找。

 */
var FacilityAnalystTracedown3DParameters = function (_FacilityAnalyst3DPar) {
    _inherits(FacilityAnalystTracedown3DParameters, _FacilityAnalyst3DPar);

    /*
     * Constructor: SuperMap.FacilityAnalystTracedown3DParameters
     * 下游追踪资源参数类构造函数。
     */
    function FacilityAnalystTracedown3DParameters(options) {
        _classCallCheck(this, FacilityAnalystTracedown3DParameters);

        var _this = _possibleConstructorReturn(this, (FacilityAnalystTracedown3DParameters.__proto__ || Object.getPrototypeOf(FacilityAnalystTracedown3DParameters)).call(this, options));

        _this.CLASS_NAME = "SuperMap.FacilityAnalystTracedown3DParameters";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(FacilityAnalystTracedown3DParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(FacilityAnalystTracedown3DParameters.prototype.__proto__ || Object.getPrototypeOf(FacilityAnalystTracedown3DParameters.prototype), 'destroy', this).call(this);
        }
    }]);

    return FacilityAnalystTracedown3DParameters;
}(_FacilityAnalyst3DParameters2.default);

exports.default = FacilityAnalystTracedown3DParameters;


_SuperMap2.default.FacilityAnalystTracedown3DParameters = FacilityAnalystTracedown3DParameters;

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _FacilityAnalystTracedown3DParameters = __webpack_require__(125);

var _FacilityAnalystTracedown3DParameters2 = _interopRequireDefault(_FacilityAnalystTracedown3DParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.FacilityAnalystTracedown3DService
 * @description 下游追踪资源服务类
 * @augments SuperMap.CommonServiceBase
 * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
 *                        http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
 *                        例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。
 * @param options - {Object} 互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var FacilityAnalystTracedown3DService = function (_CommonServiceBase) {
    _inherits(FacilityAnalystTracedown3DService, _CommonServiceBase);

    /**
     * @function SuperMap.FacilityAnalystTracedown3DService.initialize
     * @description 下游追踪资源服务类构造函数
     * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
     *                        http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
     *                        例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。
     * @param options - {Object} 互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */

    function FacilityAnalystTracedown3DService(url, options) {
        _classCallCheck(this, FacilityAnalystTracedown3DService);

        var _this = _possibleConstructorReturn(this, (FacilityAnalystTracedown3DService.__proto__ || Object.getPrototypeOf(FacilityAnalystTracedown3DService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.FacilityAnalystTracedown3DService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(FacilityAnalystTracedown3DService, [{
        key: 'destroy',
        value: function destroy() {
            _get(FacilityAnalystTracedown3DService.prototype.__proto__ || Object.getPrototypeOf(FacilityAnalystTracedown3DService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.FacilityAnalystTracedown3DService.processAsync
         * @description负责将客户端的查询参数传递到服务端。
         * @param params - {SuperMap.FacilityAnalystTracedown3DParameters} 下游追踪资源参数类
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                jsonObject,
                end = me.url.substr(me.url.length - 1, 1);
            me.url = me.url + (end === "/" ? "tracedownresult" : "/tracedownresult") + (this.isInTheSameDomain ? ".json?" : ".jsonp?");
            jsonObject = {
                edgeID: params.edgeID,
                nodeID: params.nodeID,
                weightName: params.weightName,
                isUncertainDirectionValid: params.isUncertainDirectionValid
            };
            me.request({
                method: "GET",
                params: jsonObject,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return FacilityAnalystTracedown3DService;
}(_CommonServiceBase3.default);

exports.default = FacilityAnalystTracedown3DService;


_SuperMap2.default.FacilityAnalystTracedown3DService = FacilityAnalystTracedown3DService;

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _FacilityAnalyst3DParameters = __webpack_require__(21);

var _FacilityAnalyst3DParameters2 = _interopRequireDefault(_FacilityAnalyst3DParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.FacilityAnalystTraceup3DParameters
 * @description 上游追踪资源参数类
 * @augments SuperMap.FacilityAnalyst3DParameters
 * @param options - {Object} 可选参数。如：<br>
 *         edgeID - {Number} 指定的弧段ID。<br>
 *         nodeID - {Integer} 指定的结点ID。<br>
 *         weightName -{String} 指定的权值字段信息对象的名称。<br>
 *         isUncertainDirectionValid -{Boolean} 指定不确定流向是否有效。指定为 true，表示不确定流向有效，遇到不确定流向时分析继续进行；<br>
 *                                              指定为 false，表示不确定流向无效，遇到不确定流向将停止在该方向上继续查找。
 */
var FacilityAnalystTraceup3DParameters = function (_FacilityAnalyst3DPar) {
    _inherits(FacilityAnalystTraceup3DParameters, _FacilityAnalyst3DPar);

    /*
     * Constructor: SuperMap.FacilityAnalystTraceup3DParameters
     * 上游追踪资源参数类构造函数。
     */
    function FacilityAnalystTraceup3DParameters(options) {
        _classCallCheck(this, FacilityAnalystTraceup3DParameters);

        var _this = _possibleConstructorReturn(this, (FacilityAnalystTraceup3DParameters.__proto__ || Object.getPrototypeOf(FacilityAnalystTraceup3DParameters)).call(this, options));

        _this.CLASS_NAME = "SuperMap.FacilityAnalystTraceup3DParameters";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(FacilityAnalystTraceup3DParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(FacilityAnalystTraceup3DParameters.prototype.__proto__ || Object.getPrototypeOf(FacilityAnalystTraceup3DParameters.prototype), 'destroy', this).call(this);
        }
    }]);

    return FacilityAnalystTraceup3DParameters;
}(_FacilityAnalyst3DParameters2.default);

exports.default = FacilityAnalystTraceup3DParameters;


_SuperMap2.default.FacilityAnalystTraceup3DParameters = FacilityAnalystTraceup3DParameters;

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _FacilityAnalystTraceup3DParameters = __webpack_require__(127);

var _FacilityAnalystTraceup3DParameters2 = _interopRequireDefault(_FacilityAnalystTraceup3DParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.FacilityAnalystTraceup3DService
 * @description 上游追踪资源服务类
 * @augments SuperMap.CommonServiceBase
 * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
 *                        http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
 *                        例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。
 * @param options - {Object} 互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var FacilityAnalystTraceup3DService = function (_CommonServiceBase) {
    _inherits(FacilityAnalystTraceup3DService, _CommonServiceBase);

    /**
     * @function SuperMap.FacilityAnalystTraceup3DService.initialize
     * @description 上游追踪资源服务类构造函数。
     * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
     *                        http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
     *                        例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。
     * @param options - {Object} 互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */
    function FacilityAnalystTraceup3DService(url, options) {
        _classCallCheck(this, FacilityAnalystTraceup3DService);

        var _this = _possibleConstructorReturn(this, (FacilityAnalystTraceup3DService.__proto__ || Object.getPrototypeOf(FacilityAnalystTraceup3DService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.FacilityAnalystTraceup3DService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(FacilityAnalystTraceup3DService, [{
        key: 'destroy',
        value: function destroy() {
            _get(FacilityAnalystTraceup3DService.prototype.__proto__ || Object.getPrototypeOf(FacilityAnalystTraceup3DService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.FacilityAnalystTraceup3DService.processAsync
         * @description 负责将客户端的查询参数传递到服务端。
         * @param params - {SuperMap.FacilityAnalystTraceup3DParameters} 上游追踪资源参数类
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                jsonObject,
                end = me.url.substr(me.url.length - 1, 1);
            me.url = me.url + (end === "/" ? "traceupresult" : "/traceupresult") + (this.isInTheSameDomain ? ".json?" : ".jsonp?");
            jsonObject = {
                edgeID: params.edgeID,
                nodeID: params.nodeID,
                weightName: params.weightName,
                isUncertainDirectionValid: params.isUncertainDirectionValid
            };
            me.request({
                method: "GET",
                params: jsonObject,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return FacilityAnalystTraceup3DService;
}(_CommonServiceBase3.default);

exports.default = FacilityAnalystTraceup3DService;


_SuperMap2.default.FacilityAnalystTraceup3DService = FacilityAnalystTraceup3DService;

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _FacilityAnalyst3DParameters = __webpack_require__(21);

var _FacilityAnalyst3DParameters2 = _interopRequireDefault(_FacilityAnalyst3DParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.FacilityAnalystUpstream3DParameters
 * @description 上游关键设施查找资源参数类
 * @augments SuperMap.FacilityAnalyst3DParameters
 * @param options - {Object} 可选参数。如：<br>
 *        edgeID - {Number} 指定的弧段ID。<br>
 *        nodeID - {Integer} 指定的结点ID。<br>
 *        weightName -{String} 指定的权值字段信息对象的名称。<br>
 *        isUncertainDirectionValid -{Boolean} 指定不确定流向是否有效。指定为 true，表示不确定流向有效，遇到不确定流向时分析继续进行；
 *                                              指定为 false，表示不确定流向无效，遇到不确定流向将停止在该方向上继续查找。<br>
 *        sourceNodeIDs - {Array(Number)} 指定的设施点ID数组
 */
var FacilityAnalystUpstream3DParameters = function (_FacilityAnalyst3DPar) {
    _inherits(FacilityAnalystUpstream3DParameters, _FacilityAnalyst3DPar);

    /*
     * Constructor: SuperMap.FacilityAnalystUpstream3DParameters
     * 上游关键设施查找资源参数类构造函数。
     *
     */
    function FacilityAnalystUpstream3DParameters(options) {
        _classCallCheck(this, FacilityAnalystUpstream3DParameters);

        var _this = _possibleConstructorReturn(this, (FacilityAnalystUpstream3DParameters.__proto__ || Object.getPrototypeOf(FacilityAnalystUpstream3DParameters)).call(this, options));

        _this.sourceNodeIDs = null;
        _this.CLASS_NAME = "SuperMap.FacilityAnalystUpstream3DParameters";

        options = options || {};
        _SuperMap2.default.Util.extend(_this, options);
        return _this;
    }

    /**
     * @inheritDoc
     */


    /**
     * APIProperty: sourceNodeIDs
     * @member SuperMap.FacilityAnalystUpstream3DParameters.prototype.sourceNodeIDs -{Array<Number>}
     * @description 指定的设施点ID数组
     * @api
     */


    _createClass(FacilityAnalystUpstream3DParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(FacilityAnalystUpstream3DParameters.prototype.__proto__ || Object.getPrototypeOf(FacilityAnalystUpstream3DParameters.prototype), 'destroy', this).call(this);
            this.sourceNodeIDs = null;
        }
    }]);

    return FacilityAnalystUpstream3DParameters;
}(_FacilityAnalyst3DParameters2.default);

exports.default = FacilityAnalystUpstream3DParameters;


_SuperMap2.default.FacilityAnalystUpstream3DParameters = FacilityAnalystUpstream3DParameters;

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _FacilityAnalystUpstream3DParameters = __webpack_require__(129);

var _FacilityAnalystUpstream3DParameters2 = _interopRequireDefault(_FacilityAnalystUpstream3DParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.FacilityAnalystUpstream3DService
 * @description 上游关键设施查找资源服务类
 * @augments SuperMap.CommonServiceBase
 * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
 *                        http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
 *                        例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。
 * @param options - {Object} 互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var FacilityAnalystUpstream3DService = function (_CommonServiceBase) {
    _inherits(FacilityAnalystUpstream3DService, _CommonServiceBase);

    /**
     * @function  SuperMap.FacilityAnalystUpstream3DService.initialize
     * @description 上游关键设施查找资源服务类构造函数。
     * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
     *                        http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
     *                        例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。
     * @param options - {Object} 互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */

    function FacilityAnalystUpstream3DService(url, options) {
        _classCallCheck(this, FacilityAnalystUpstream3DService);

        var _this = _possibleConstructorReturn(this, (FacilityAnalystUpstream3DService.__proto__ || Object.getPrototypeOf(FacilityAnalystUpstream3DService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.FacilityAnalystUpstream3DService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(FacilityAnalystUpstream3DService, [{
        key: 'destroy',
        value: function destroy() {
            _get(FacilityAnalystUpstream3DService.prototype.__proto__ || Object.getPrototypeOf(FacilityAnalystUpstream3DService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.FacilityAnalystUpstream3DService.processAsync
         * @description 负责将客户端的查询参数传递到服务端。
         * @param params - {SuperMap.FacilityAnalystUpstream3DParameters} 上游关键设施查找资源参数类
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                jsonObject,
                end = me.url.substr(me.url.length - 1, 1);
            me.url = me.url + (end === "/" ? "upstreamcirticalfaclilities" : "/upstreamcirticalfaclilities") + (this.isInTheSameDomain ? ".json?" : ".jsonp?");
            jsonObject = {
                sourceNodeIDs: params.sourceNodeIDs,
                edgeID: params.edgeID,
                nodeID: params.nodeID,
                isUncertainDirectionValid: params.isUncertainDirectionValid
            };
            me.request({
                method: "GET",
                params: jsonObject,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return FacilityAnalystUpstream3DService;
}(_CommonServiceBase3.default);

exports.default = FacilityAnalystUpstream3DService;


_SuperMap2.default.FacilityAnalystUpstream3DService = FacilityAnalystUpstream3DService;

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _FieldStatisticsParameters = __webpack_require__(132);

var _FieldStatisticsParameters2 = _interopRequireDefault(_FieldStatisticsParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.FieldStatisticService
 * @constructs SuperMap.FieldStatisticService
 * @classdesc
 * 字段查询统计服务类。用来完成对指定数据集指定字段的查询统计分析，即求平均值，最大值等。
 * @extends {SuperMap.CommonServiceBase}
 * @api
 * @param url - {String} 服务的访问地址。如访问World Map服务，只需将url设为: http://localhost:8090/iserver/services/data-world/rest/data 即可。
 * @param options - {Object} 参数。
 *
 * Allowed options properties:
 * eventListeners - {Object} 需要被注册的监听器对象。</br>
 * datasource - {String} 数据集所在的数据源名称。</br>
 * dataset - {String} 数据集名称。</br>
 * field - {String} 查询统计的目标字段名称。</br>
 * statisticMode - {StatisticMode} 字段查询统计的方法类型。</br>
 * @example
 * (start code)
 * var myService = new SuperMap.FieldStatisticService(url, {eventListeners: {
     *     "processCompleted": fieldStatisticCompleted,
     *     "processFailed": fieldStatisticError
     *     }，
     *     datasource: "World",
     *     dataset: "Countries",
     *     field: "SmID",
     *     statisticMode: StatisticMode.AVERAGE
     * };
 * (end)
 */

var FieldStatisticService = function (_CommonServiceBase) {
    _inherits(FieldStatisticService, _CommonServiceBase);

    /**
     * @method SuperMap.FieldStatisticService.initialize
     * @param url - {string}
     * @param options - {Object} 参数。
     */

    /**
     * @property {String} APIProperty: field
     *  查询统计的目标字段名称。
     */


    /**
     * @property {String} APIProperty: datasource
     * 数据集所在的数据源名称。
     */
    function FieldStatisticService(url, options) {
        _classCallCheck(this, FieldStatisticService);

        var _this = _possibleConstructorReturn(this, (FieldStatisticService.__proto__ || Object.getPrototypeOf(FieldStatisticService)).call(this, url, options));

        _this.datasource = null;
        _this.dataset = null;
        _this.field = null;
        _this.statisticMode = null;
        _this.CLASS_NAME = "SuperMap.FieldStatisticService";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源,将引用资源的属性置空。
     */


    /**
     * @property {StatisticMode} APIProperty: statisticMode
     *  字段查询统计的方法类型。
     */


    /**
     *@property {String}  APIProperty: dataset
     *  数据集名称。
     */


    _createClass(FieldStatisticService, [{
        key: 'destroy',
        value: function destroy() {
            _get(FieldStatisticService.prototype.__proto__ || Object.getPrototypeOf(FieldStatisticService.prototype), 'destroy', this).call(this);
            var me = this;
            me.datasource = null;
            me.dataset = null;
            me.field = null;
            me.statisticMode = null;
        }

        /**
         * @description 执行服务，进行指定字段的查询统计。
         * @method APIMethod: processAsync
         *
         */

    }, {
        key: 'processAsync',
        value: function processAsync() {
            var me = this,
                end = me.url.substr(me.url.length - 1, 1),
                fieldStatisticURL = "datasources/" + me.datasource + "/datasets/" + me.dataset + "/fields/" + me.field + "/" + me.statisticMode;
            if (me.isInTheSameDomain) {
                me.url += end == "/" ? fieldStatisticURL + ".json?" : "/" + fieldStatisticURL + ".json?";
            } else {
                me.url += end == "/" ? fieldStatisticURL + ".jsonp?" : "/" + fieldStatisticURL + ".jsonp?";
            }

            me.request({
                method: "GET",
                data: null,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return FieldStatisticService;
}(_CommonServiceBase3.default);

exports.default = FieldStatisticService;


_SuperMap2.default.FieldStatisticService = FieldStatisticService;

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.FieldStatisticsParameters
 * @constructs SuperMap.FieldStatisticsParameters
 * @classdesc
 * 字段统计信息查询参数类。
 * @api
 */

var FieldStatisticsParameters = function () {

    /**
     * @method SuperMap.FieldStatisticsParameters.initialize
     * @param options - {Object} 参数。
     */

    /**
     * @property {String} APIProperty: fieldName
     * 字段名
     */
    function FieldStatisticsParameters(options) {
        _classCallCheck(this, FieldStatisticsParameters);

        this.fieldName = null;
        this.statisticMode = null;
        this.CLASS_NAME = "SuperMap.FieldStatisticsParameters";

        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /*
     * APIMethod: destroy
     * 释放资源,将引用资源的属性置空。
     */

    /**
     * @property {String<SuperMap.StatisticMode>}|{Array<String<SuperMap.StatisticMode>} APIProperty: statisticMode
     * 字段统计方法类型
     */


    _createClass(FieldStatisticsParameters, [{
        key: "destroy",
        value: function destroy() {
            var me = this;
            me.fieldName = null;
            me.statisticMode = null;
        }
    }]);

    return FieldStatisticsParameters;
}();

exports.default = FieldStatisticsParameters;


_SuperMap2.default.FieldStatisticsParameters = FieldStatisticsParameters;

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _TransportationAnalystParameter = __webpack_require__(19);

var _TransportationAnalystParameter2 = _interopRequireDefault(_TransportationAnalystParameter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.FindClosestFacilitiesParameters
 * @description 最近设施分析参数类。
 * @param options - {Object} 可选参数。
 *         event - {Point>/Integer} 事件点，一般为需要获得服务设施服务的事件位置，必设字段。
 *         expectFacilityCount - {Integer} 要查找的设施点数量。默认值为1。
 *         facilities - {Array<{SuperMap.Point}|Number>} 设施点集合，一般为提供服务的服务设施位置，必设字段。
 *         fromEvent - {Boolean} 是否从事件点到设施点进行查找。
 *         isAnalyzeById - {Boolean} 事件点和设施点是否通过节点 ID 号来指定，默认为 false，即通过坐标点指定事件点和设施点。
 *         maxWeight - {Number} 查找半径。单位与该类中 parameter 字段（交通网络分析通用参数）中设置的耗费字段一致。默认值为0，表示查找全网络。
 *         parameter - {SuperMap.TransportationAnalystParameter} 交通网络分析通用参数。
 */
var FindClosestFacilitiesParameters = function () {

    /*
     * Constructor: SuperMap.FindClosestFacilitiesParameters
     * 最近设施分析参数类构造函数。
     */

    /**
     * APIProperty: maxWeight
     * @member SuperMap.FindClosestFacilitiesParameters.prototype.maxWeight -{Number}
     * @description 查找半径。单位与该类中 parameter 字段（交通网络分析通用参数）中设置的耗费字段一致。默认值为0，表示查找全网络。
     *               例如事件发生点是一起交通事故，要求查找在10分钟内能到达的最近医院，超过10分钟能到达的都不予考虑。
     *               那么需要将网络分析参数中 parameter.weightFieldName 设置为表示时间的字段，然后设置查找范围的半径值为10。
     */


    /**
     * APIProperty: fromEvent
     * @member SuperMap.FindClosestFacilitiesParameters.prototype.fromEvent -{Boolean}
     * @description 是否从事件点到设施点进行查找。
     *               最近设施分析主要是通过设施点和事件点之间最优的路线来分析在一定范围内哪个或哪些设施与事件点有最优路线的关系。
     *               这个行走线路是通过网络图层进行网络分析算法计算出来的两点间的最优路线。
     *               由于存在从 A 点到 B 点与从 B 点到 A 点的耗费不一样的情况，因此起止点不同可能会得到不同的最优路线。
     *               因此在进行最近设施分析之前，需要设置获取的最优路线的方向，即是以事件点作为起点到最近设施点的方向分析，还是以最近设施点为起点到事件点的方向分析。
     *               如果需要以事件点作为起点到设施点方向进行查找，设置该字段值为 true；默认为 false，表示从设施点到事件点进行查找。
     */


    /**
     * APIProperty: expectFacilityCount
     * @member SuperMap.FindClosestFacilitiesParameters.prototype.expectFacilityCount -{Number}
     * @description 要查找的设施点数量。默认值为1。
     */
    function FindClosestFacilitiesParameters(options) {
        _classCallCheck(this, FindClosestFacilitiesParameters);

        this.event = null;
        this.expectFacilityCount = 1;
        this.facilities = null;
        this.fromEvent = false;
        this.isAnalyzeById = false;
        this.maxWeight = 0;
        this.parameter = null;
        this.CLASS_NAME = "SuperMap.FindClosestFacilitiesParameters";

        var me = this;
        me.parameter = new _TransportationAnalystParameter2.default();
        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: parameter
     * @member SuperMap.FindClosestFacilitiesParameters.prototype.parameter {SuperMap.TransportationAnalystParameter}
     * @description 交通网络分析通用参数。
     *               通过本类可以设置障碍边、障碍点、权值字段信息的名称标识、转向权值字段等信息。
     *               它为 SuperMap.TransportationAnalystParameter 类型，虽然为可选参数，但是如果不设置其中的 resultSetting 字段，则返回结果空间信息等都为空。
     */


    /**
     * APIProperty: isAnalyzeById
     * @member SuperMap.FindClosestFacilitiesParameters.prototype.isAnalyzeById -{Boolean}
     * @description 事件点和设施点是否通过节点 ID 号来指定，默认为 false，即通过坐标点指定事件点和设施点。
     */


    /**
     * APIProperty: facilities
     * @member SuperMap.FindClosestFacilitiesParameters.prototype.facilities -{Array(Point/Number)}
     * @description 设施点集合，一般为提供服务的服务设施位置，必设字段。
     *                可以通过两种方式赋予设施点：当该类中字段 isAnalyzeById = true 时，应输入设施点 ID 号；当 isAnalyzeById = false 时，应输入设施点坐标。
     */


    /**
     * APIProperty: event
     * @member SuperMap.FindClosestFacilitiesParameters.prototype.event -{Point/Integer}
     * @description 事件点，一般为需要获得服务设施服务的事件位置，必设字段。
     *                可以通过两种方式赋予事件点：当该类中字段 isAnalyzeById = true 时，应输入事件点 ID 号；当 isAnalyzeById = false 时，应输入事件点坐标。
     */


    _createClass(FindClosestFacilitiesParameters, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.event = null;
            me.expectFacilityCount = null;
            me.facilities = null;
            me.fromEvent = null;
            me.isAnalyzeById = null;
            me.maxWeight = null;
            if (me.parameter) {
                me.parameter.destroy();
                me.parameter = null;
            }
        }
    }]);

    return FindClosestFacilitiesParameters;
}();

exports.default = FindClosestFacilitiesParameters;


_SuperMap2.default.FindClosestFacilitiesParameters = FindClosestFacilitiesParameters;

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _GeoJSON = __webpack_require__(5);

var _GeoJSON2 = _interopRequireDefault(_GeoJSON);

var _NetworkAnalystServiceBase = __webpack_require__(8);

var _NetworkAnalystServiceBase2 = _interopRequireDefault(_NetworkAnalystServiceBase);

var _FindClosestFacilitiesParameters = __webpack_require__(133);

var _FindClosestFacilitiesParameters2 = _interopRequireDefault(_FindClosestFacilitiesParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.FindClosestFacilitiesService
 * @description 最近设施分析服务类。<br>
 *               最近设施分析是指在网络上给定一个事件点和一组设施点，
 *               查找从事件点到设施点(或从设施点到事件点)以最小耗费能到达的最佳路径。
 *               该类负责将客户端指定的最近设施分析参数传递给服务端，并接收服务端返回的结果数据。
 *              最近设施分析结果通过该类支持的事件的监听函数参数获取
 * @augments SuperMap.NetworkAnalystServiceBase
 * @example
 * (start code)
 * var myfindClosestFacilitiesService = new SuperMap.FindClosestFacilitiesService(url, {
 *     eventListeners: {
 *	       "processCompleted": findClosestFacilitiesCompleted,
 *		   "processFailed": findClosestFacilitiesError
 *		   }
 * });
 * (end)
 * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
 *                        http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
 *                        例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。
 * @param options - {Object} 互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var FindClosestFacilitiesService = function (_NetworkAnalystServic) {
    _inherits(FindClosestFacilitiesService, _NetworkAnalystServic);

    /**
     * @function SuperMap.FindClosestFacilitiesService.prototype.initialize
     * @description 最近设施分析服务类构造函数。
     * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
     *                        http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
     *                        例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。
     * @param options - {Object} 互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */
    function FindClosestFacilitiesService(url, options) {
        _classCallCheck(this, FindClosestFacilitiesService);

        var _this = _possibleConstructorReturn(this, (FindClosestFacilitiesService.__proto__ || Object.getPrototypeOf(FindClosestFacilitiesService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.FindClosestFacilitiesService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(FindClosestFacilitiesService, [{
        key: 'destroy',
        value: function destroy() {
            _get(FindClosestFacilitiesService.prototype.__proto__ || Object.getPrototypeOf(FindClosestFacilitiesService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.FindClosestFacilitiesService.prototype. processAsync
         * @description 负责将客户端的查询参数传递到服务端。
         * @param params - {SuperMap.FindClosestFacilitiesParameters} 最近设施分析服务参数类
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                jsonObject,
                end = me.url.substr(me.url.length - 1, 1);
            me.url = me.url + (end === "/" ? "closestfacility" : "/closestfacility") + (this.isInTheSameDomain ? ".json?" : ".jsonp?");
            jsonObject = {
                expectFacilityCount: params.expectFacilityCount,
                fromEvent: params.fromEvent,
                maxWeight: params.maxWeight,
                parameter: _SuperMap2.default.Util.toJSON(params.parameter),
                event: _SuperMap2.default.Util.toJSON(params.event),
                facilities: me.getJson(params.isAnalyzeById, params.facilities)
            };
            me.request({
                method: "GET",
                params: jsonObject,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }

        /*
         * Method: getJson
         * 将对象转化为JSON字符串。
         *
         * Parameters:
         * isAnalyzeById - {Boolean}
         * params - {Array}
         *
         * Returns:
         * {Object} 转化后的JSON字符串。
         */

    }, {
        key: 'getJson',
        value: function getJson(isAnalyzeById, params) {
            var jsonString = "[",
                len = params ? params.length : 0;

            if (isAnalyzeById === false) {
                for (var i = 0; i < len; i++) {
                    if (i > 0) jsonString += ",";
                    jsonString += '{"x":' + params[i].x + ',"y":' + params[i].y + '}';
                }
            } else if (isAnalyzeById == true) {
                for (var i = 0; i < len; i++) {
                    if (i > 0) jsonString += ",";
                    jsonString += params[i];
                }
            }
            jsonString += ']';
            return jsonString;
        }

        /*
         * Method: toGeoJSONResult
         * 将含有geometry的数据转换为geojson格式。
         *
         * Parameters:
         * result - {Object} 服务器返回的结果对象。
         */

    }, {
        key: 'toGeoJSONResult',
        value: function toGeoJSONResult(result) {
            if (!result || !result.facilityPathList) {
                return result;
            }

            var geoJSONFormat = new _GeoJSON2.default();
            result.facilityPathList.map(function (path) {
                if (path.route) {
                    path.route = JSON.parse(geoJSONFormat.write(path.route));
                }
                if (path.pathGuideItems) {
                    path.pathGuideItems = JSON.parse(geoJSONFormat.write(path.pathGuideItems));
                }
                if (path.edgeFeatures) {
                    path.edgeFeatures = JSON.parse(geoJSONFormat.write(path.edgeFeatures));
                }
                if (path.nodeFeatures) {
                    path.nodeFeatures = JSON.parse(geoJSONFormat.write(path.nodeFeatures));
                }
            });
            return result;
        }
    }]);

    return FindClosestFacilitiesService;
}(_NetworkAnalystServiceBase2.default);

exports.default = FindClosestFacilitiesService;


_SuperMap2.default.FindClosestFacilitiesService = FindClosestFacilitiesService;

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _SupplyCenter = __webpack_require__(223);

var _SupplyCenter2 = _interopRequireDefault(_SupplyCenter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.FindLocationParameters
 * @description 选址分区分析参数类。
 * @param options - {Object} 参数。
 *        Allowed options properties:
 *        expectedSupplyCenterCount - {Integer} 期望用于最终设施选址的资源供给中心数量，必设字段。
 *        isFromCenter - {Boolean} 是否从中心点开始分配资源。默认为 false。
 *        supplyCenters - {Array(<SupplyCenter>)} 资源供给中心集合，必设字段。
 *        turnWeightField - {String} 转向权值字段的名称。
 *        weightName - {String} 阻力字段的名称，标识了进行网络分析时所使用的阻力字段，必设字段。
 */
var FindLocationParameters = function () {

    /*
     * Constructor: SuperMap.FindLocationParameters
     * 服务区分析参数类构造函数。
     */


    /**
     * APIProperty: turnWeightField
     * @member SuperMap.FindLocationParameters.prototype.turnWeightField -{String}
     * @description 转向权值字段的名称。
     */


    /**
     * APIProperty: isFromCenter
     * @member SuperMap.FindLocationParameters.prototype.isFromCenter -{Boolean}
     * @description 是否从中心点开始分配资源。默认为 false。
     *                由于网路数据中的弧段具有正反阻力，即弧段的正向阻力值与其反向阻力值可能不同，
     *                因此，在进行分析时，从资源供给中心开始分配资源到需求点与从需求点向资源供给中心分配这两种分配形式下，所得的分析结果会不同。
     */
    function FindLocationParameters(options) {
        _classCallCheck(this, FindLocationParameters);

        this.expectedSupplyCenterCount = null;
        this.isFromCenter = false;
        this.supplyCenters = null;
        this.turnWeightField = null;
        this.weightName = null;
        this.CLASS_NAME = "SuperMap.FindLocationParameters";

        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: weightName
     * @member SuperMap.FindLocationParameters.prototype.weightName -{String}
     * @description 阻力字段的名称，标识了进行网络分析时所使用的阻力字段，必设字段。
     */


    /**
     * APIProperty: supplyCenters
     * @member SuperMap.FindLocationParameters.prototype.supplyCenters -{Array<SupplyCenter>}
     * @description 资源供给中心集合，必设字段。
     *               资源供给中心是提供资源和服务的设施，对应于网络结点，
     *               资源供给中心的相关信息包括资源量、最大阻力值、资源供给中心类型，资源供给中心在网络中所处结点的 ID 等，以便在进行选址分区分析时使用。
     */


    /**
     * APIProperty: expectedSupplyCenterCount
     * @member SuperMap.FindLocationParameters.prototype.expectedSupplyCenterCount -{Number}
     * @description 期望用于最终设施选址的资源供给中心数量，必设字段。
     *               当输入值为0时，最终设施选址的资源供给中心数量默认为覆盖分析区域内的所需最少的供给中心数。
     */


    _createClass(FindLocationParameters, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.expectedSupplyCenterCount = null;
            me.isFromCenter = null;
            me.turnWeightField = null;
            me.weightName = null;
            if (me.supplyCenters) {
                for (var i = 0, supplyCenters = me.supplyCenters, len = supplyCenters.length; i < len; i++) {
                    supplyCenters[i].destroy();
                }
                me.supplyCenters = null;
            }
        }
    }]);

    return FindLocationParameters;
}();

exports.default = FindLocationParameters;


_SuperMap2.default.FindLocationParameters = FindLocationParameters;

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _NetworkAnalystServiceBase = __webpack_require__(8);

var _NetworkAnalystServiceBase2 = _interopRequireDefault(_NetworkAnalystServiceBase);

var _FindLocationParameters = __webpack_require__(135);

var _FindLocationParameters2 = _interopRequireDefault(_FindLocationParameters);

var _GeoJSON = __webpack_require__(5);

var _GeoJSON2 = _interopRequireDefault(_GeoJSON);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.FindLocationService
 * @description 选址分区分析服务类。
 *               选址分区分析是为了确定一个或多个待建设施的最佳或最优位置，使得设施可以用一种最经济有效的方式为需求方提供服务或者商品。
 *               选址分区不仅仅是一个选址过程，还要将需求点的需求分配到相应的新建设施的服务区中，因此称之为选址与分区。
 *               选址分区分析结果通过该类支持的事件的监听函数参数获取
 * @augments SuperMap.NetworkAnalystServiceBase
 * @example
 * (start code)
 * var findLocationService = new SuperMap.FindLocationService(url, {
 *     eventListeners: {
 *         "processCompleted": findLocationCompleted,
 *		   "processFailed": findLocationError
 *		   }
 * });
 * (end)
 * @param url - {String} 服务的访问地址。<br>
 *                        如 http://localhost:8090/iserver/services/transportationanalyst-sample/rest/networkanalyst/RoadNet@Changchun 。
 * @param options - {Object} 互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var FindLocationService = function (_NetworkAnalystServic) {
    _inherits(FindLocationService, _NetworkAnalystServic);

    /**
     * @function SuperMap.FindLocationService.prototype.initialize
     * @description 选址分区分析服务类构造函数。
     * @param url - {String} 服务的访问地址。<br>
     *                        如 http://localhost:8090/iserver/services/transportationanalyst-sample/rest/networkanalyst/RoadNet@Changchun 。
     * @param options - {Object} 互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */
    function FindLocationService(url, options) {
        _classCallCheck(this, FindLocationService);

        var _this = _possibleConstructorReturn(this, (FindLocationService.__proto__ || Object.getPrototypeOf(FindLocationService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.FindLocationService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(FindLocationService, [{
        key: 'destroy',
        value: function destroy() {
            _get(FindLocationService.prototype.__proto__ || Object.getPrototypeOf(FindLocationService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.FindLocationService.prototype.processAsync
         * @description 负责将客户端的查询参数传递到服务端。
         * @param params - {SuperMap.FindLocationParameters} 选址分区分析服务参数类
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                jsonObject,
                end = me.url.substr(me.url.length - 1, 1);
            me.url = me.url + (end === "/" ? "location" : "/location") + (this.isInTheSameDomain ? ".json?" : ".jsonp?");
            jsonObject = {
                isFromCenter: params.isFromCenter,
                expectedSupplyCenterCount: params.expectedSupplyCenterCount,
                weightName: params.weightName,
                turnWeightField: params.turnWeightField,
                returnEdgeFeature: true,
                returnEdgeGeometry: true,
                returnNodeFeature: true,
                mapParameter: _SuperMap2.default.Util.toJSON(params.mapParameter),
                supplyCenters: me.getCentersJson(params.supplyCenters)
            };
            me.request({
                method: "GET",
                params: jsonObject,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }

        /*
         * Method: getCentersJson
         * 将数组对象转化为JSON字符串。
         *
         * Parameters:
         * params - {Array}
         *
         * Returns:
         * {Object} 转化后的JSON字符串。
         */

    }, {
        key: 'getCentersJson',
        value: function getCentersJson(params) {
            var json = "[",
                len = params ? params.length : 0;
            for (var i = 0; i < len; i++) {
                if (i > 0) json += ",";
                json += _SuperMap2.default.Util.toJSON(params[i]);
            }
            json += "]";
            return json;
        }

        /*
         * Method: toGeoJSONResult
         * 将含有geometry的数据转换为geojson格式。
         *
         * Parameters:
         * result - {Object} 服务器返回的结果对象。
         */

    }, {
        key: 'toGeoJSONResult',
        value: function toGeoJSONResult(result) {
            if (!result) {
                return null;
            }
            var geoJSONFormat = new _GeoJSON2.default();
            if (result.demandResults) {
                result.demandResults = JSON.parse(geoJSONFormat.write(result.demandResults));
            }
            if (result.supplyResults) {
                result.supplyResults = JSON.parse(geoJSONFormat.write(result.supplyResults));
            }

            return result;
        }
    }]);

    return FindLocationService;
}(_NetworkAnalystServiceBase2.default);

exports.default = FindLocationService;


_SuperMap2.default.FindLocationService = FindLocationService;

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _TransportationAnalystParameter = __webpack_require__(19);

var _TransportationAnalystParameter2 = _interopRequireDefault(_TransportationAnalystParameter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.FindMTSPPathsParameters
 * @description 多旅行商分析参数类
 * @param options - {Object} 可选参数。如：
 *        centers - {Point>/Integer} 配送中心集合，必设字段。<br>
 *        hasLeastTotalCost - {Boolean} 配送模式是否为总花费最小方案。默认为 false。<br>
 *        isAnalyzeById - {Boolean} 是否通过节点 ID 号来指定配送中心点和配送目的点，默认为 false，即通过坐标点指定。<br>
 *        nodes - {Array<{SuperMap.Point}|Number>} 配送目标集合，必设字段。<br>
 *        parameter - {SuperMap.TransportationAnalystParameter} 交通网络分析通用参数。
 */
var FindMTSPPathsParameters = function () {

    /*
     * Constructor: SuperMap.FindMTSPPathsParameters
     * 多旅行商分析参数类构造函数。
     */


    /**
     * APIProperty: nodes
     * @member SuperMap.FindMTSPPathsParameters.prototype.nodes -{Array<{SuperMap.Point}|Number>}
     * @description 配送目标集合，必设字段。<br>
     *               当 SuperMap.FindMTSPPathsParameters.isAnalyzeById = false 时，nodes 应为点的坐标数组；<br>
     *               当 SuperMap.FindMTSPPathsParameters.isAnalyzeById = true 时，nodes 应为点的 ID 数组。
     */


    /**
     * APIProperty: hasLeastTotalCost
     * @member SuperMap.FindMTSPPathsParameters.prototype.hasLeastTotalCost -{Boolean}
     * @description 配送模式是否为总花费最小方案。默认为 false。<br>
     *               若为 true，则按照总花费最小的模式进行配送，此时可能会出现某几个配送中心点配送的花费较多而其他配送中心点的花费很少的情况。<br>
     *               若为 false，则为局部最优，此方案会控制每个配送中心点的花费，使各个中心点花费相对平均，此时总花费不一定最小。
     */
    function FindMTSPPathsParameters(options) {
        _classCallCheck(this, FindMTSPPathsParameters);

        this.centers = null;
        this.hasLeastTotalCost = false;
        this.isAnalyzeById = false;
        this.nodes = null;
        this.parameter = null;
        this.CLASS_NAME = "SuperMap.FindMTSPPathsParameters";

        var me = this;
        me.parameter = new _TransportationAnalystParameter2.default();
        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: parameter
     * @member SuperMap.FindMTSPPathsParameters.prototype.parameter -{SuperMap.TransportationAnalystParameter}
     * @description 交通网络分析通用参数。<br>
     *               通过本类可以设置障碍边、障碍点、权值字段信息的名称标识、转向权值字段等信息。<br>
     *               SuperMap.TransportationAnalystParameter 类型，它虽然为可选参数，但是如果不设置其中的 resultSetting 字段，则返回结果空间信息等都为空。
     */


    /**
     * APIProperty: isAnalyzeById
     * @member SuperMap.FindMTSPPathsParameters.prototype.isAnalyzeById -{Boolean}
     * @description 是否通过节点 ID 号来指定配送中心点和配送目的点，默认为 false，即通过坐标点指定。
     */


    /**
     * APIProperty: centers
     * @member SuperMap.FindMTSPPathsParameters.prototype.centers -{Point/Integer}
     * @description 配送中心集合，必设字段。<br>
     *               当 SuperMap.FindMTSPPathsParameters.isAnalyzeById = false 时，centers 应为点的坐标数组；<br>
     *               当 SuperMap.FindMTSPPathsParameters.isAnalyzeById = true 时，centers 应为点的 ID 数组。
     */


    _createClass(FindMTSPPathsParameters, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.centers = null;
            me.hasLeastTotalCost = null;
            me.isAnalyzeById = null;
            me.nodes = null;
            me.maxWeight = null;
            if (me.parameter) {
                me.parameter.destroy();
                me.parameter = null;
            }
        }
    }]);

    return FindMTSPPathsParameters;
}();

exports.default = FindMTSPPathsParameters;


_SuperMap2.default.FindMTSPPathsParameters = FindMTSPPathsParameters;

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _NetworkAnalystServiceBase = __webpack_require__(8);

var _NetworkAnalystServiceBase2 = _interopRequireDefault(_NetworkAnalystServiceBase);

var _FindMTSPPathsParameters = __webpack_require__(137);

var _FindMTSPPathsParameters2 = _interopRequireDefault(_FindMTSPPathsParameters);

var _GeoJSON = __webpack_require__(5);

var _GeoJSON2 = _interopRequireDefault(_GeoJSON);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.FindMTSPPathsService
 * @description 多旅行商分析服务类<br>
 *               多旅行商分析也称为物流配送，是指在网络数据集中，给定 M 个配送中心点和 N 个配送目的地（M，N 为大于零的整数）。<br>
 *               查找经济有效的配送路径，并给出相应的行走路线。<br>
 *               物流配送功能就是解决如何合理分配配送次序和送货路线，使配送总花费达到最小或每个配送中心的花费达到最小。<br>
 *               该类负责将客户端指定的多旅行商分析参数传递给服务端，并接收服务端返回的结果数据。<br>
 *               多旅行商分析结果通过该类支持的事件的监听函数参数获取
 * @augments SuperMap.NetworkAnalystServiceBase
 * @example
 * (start code)
 * var myFindMTSPPathsService = new SuperMap.FindMTSPPathsService(url, {
 *     eventListeners: {
 *         "processCompleted": findMTSPPathsCompleted,
 *		   "processFailed": findMTSPPathsError
 *		   }
 * });
 * (end)
 * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
 *                       http://{服务器地址}:{服务端口号}/iserver/services/网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
 *                       例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。
 * @param options - {Object} 互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var FindMTSPPathsService = function (_NetworkAnalystServic) {
    _inherits(FindMTSPPathsService, _NetworkAnalystServic);

    /**
     * @function SuperMap.FindMTSPPathsService..prototype.initialize
     * @description 最佳路径分析服务类构造函数。
     * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
     *                       http://{服务器地址}:{服务端口号}/iserver/services/网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
     *                       例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。
     * @param options - {Object} 互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */
    function FindMTSPPathsService(url, options) {
        _classCallCheck(this, FindMTSPPathsService);

        var _this = _possibleConstructorReturn(this, (FindMTSPPathsService.__proto__ || Object.getPrototypeOf(FindMTSPPathsService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.FindMTSPPathsService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(FindMTSPPathsService, [{
        key: 'destroy',
        value: function destroy() {
            _get(FindMTSPPathsService.prototype.__proto__ || Object.getPrototypeOf(FindMTSPPathsService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.FindMTSPPathsService..prototype.processAsync
         * @description 负责将客户端的查询参数传递到服务端。
         *@param params - {SuperMap.FindMTSPPathsParameters} 多旅行商分析服务参数类
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                jsonObject,
                end = me.url.substr(me.url.length - 1, 1),
                centers = me.getJson(params.isAnalyzeById, params.centers),
                nodes = me.getJson(params.isAnalyzeById, params.nodes);
            me.url = me.url + "/mtsppath" + (this.isInTheSameDomain ? ".json?" : ".jsonp?");
            jsonObject = {
                centers: centers,
                nodes: nodes,
                parameter: _SuperMap2.default.Util.toJSON(params.parameter),
                hasLeastTotalCost: params.hasLeastTotalCost
            };
            me.request({
                method: "GET",
                params: jsonObject,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }

        /*
         * Method: getJson
         * 将对象转化为JSON字符串。
         *
         * Parameters:
         * isAnalyzeById - {Boolean}
         * params - {Array}
         *
         * Returns:
         * {Object} 转化后的JSON字符串。
         */

    }, {
        key: 'getJson',
        value: function getJson(isAnalyzeById, params) {
            var jsonString = "[",
                len = params ? params.length : 0;

            if (isAnalyzeById === false) {
                for (var i = 0; i < len; i++) {
                    if (i > 0) jsonString += ",";
                    jsonString += '{"x":' + params[i].x + ',"y":' + params[i].y + '}';
                }
            } else if (isAnalyzeById == true) {
                for (var i = 0; i < len; i++) {
                    if (i > 0) jsonString += ",";
                    jsonString += params[i];
                }
            }
            jsonString += ']';
            return jsonString;
        }

        /*
         * Method: toGeoJSONResult
         * 将含有geometry的数据转换为geojson格式。
         *
         * Parameters:
         * result - {Object} 服务器返回的结果对象。
         */

    }, {
        key: 'toGeoJSONResult',
        value: function toGeoJSONResult(result) {
            if (!result || !result.pathList) {
                return null;
            }
            var geoJSONFormat = new _GeoJSON2.default();
            result.pathList.map(function (path) {
                if (path.route) {
                    path.route = JSON.parse(geoJSONFormat.write(path.route));
                }
                if (path.pathGuideItems) {
                    path.pathGuideItems = JSON.parse(geoJSONFormat.write(path.pathGuideItems));
                }
                if (path.edgeFeatures) {
                    path.edgeFeatures = JSON.parse(geoJSONFormat.write(path.edgeFeatures));
                }
                if (path.nodeFeatures) {
                    path.nodeFeatures = JSON.parse(geoJSONFormat.write(path.nodeFeatures));
                }
            });
            return result;
        }
    }]);

    return FindMTSPPathsService;
}(_NetworkAnalystServiceBase2.default);

exports.default = FindMTSPPathsService;


_SuperMap2.default.FindMTSPPathsService = FindMTSPPathsService;

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _TransportationAnalystParameter = __webpack_require__(19);

var _TransportationAnalystParameter2 = _interopRequireDefault(_TransportationAnalystParameter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.FindPathParameters
 * @description 最佳路径分析参数类<br>
 *              最佳路径是在网络数据集中指定一些结点，按照顺序访问结点从而求解起止点之间阻抗最小的路径。<br>
 *              例如如果要顺序访问1、2、3、4四个结点，则需要分别找到1、2结点间的最佳路径 R1—2，2、3间的最佳路径 R2—3和3、4结点间的最佳路径 R3—4，<br>
 *              顺序访问1、2、3、4四个结点的最佳路径就是 R= R1—2 + R2—3 + R3—4。<br>
 *              阻抗就是指从一点到另一点的耗费，在实际应用中我们可以将距离、时间、花费等作为阻抗条件。<br>
 *              阻抗最小也就可以理解为从一点到另一点距离最短、时间最少、花费最低等。当两点间距离最短时为最短路径，它是最佳路径问题的一个特例。<br>
 *              阻抗值通过 SuperMap.TransportationAnalystParameter.weightFieldName 设置。<br>
 *              计算最佳路径除了受阻抗影响外，还受转向字段的影响。转向值通过 SuperMap.TransportationAnalystParameter.turnWeightField 设置。<br>
 *
 * @param options - {Object} 可选参数。如：<br>
 *        isAnalyzeById - {Boolean} 是否通过节点 ID 指定路径分析的结点。<br>
 *        hasLeastEdgeCount - {Boolean} 是否按照弧段数最少的进行最佳路径分析。<br>
 *        nodes - {Array()} 最佳路径分析经过的结点或设施点数组，必设字段。该字段至少包含两个点。<br>
 *        parameter - {SuperMap.TransportationAnalystParameter} 交通网络分析通用参数。
 */
var FindPathParameters = function () {

    /*
     * Constructor: SuperMap.FindPathParameters
     * 最佳路径分析参数类构造函数。
     */


    /**
     * APIProperty: nodes
     * @member SuperMap.FindPathParameters.prototype.nodes -{Array<{SuperMap.Point}|Number>}
     * @description 最佳路径分析经过的结点或设施点数组，必设字段。该字段至少包含两个点。<br>
     *               当 SuperMap.FindPathParameters.isAnalyzeById = false 时，nodes 应为点的坐标数组；<br>
     *               当 SuperMap.FindPathParameters.isAnalyzeById = true 时，nodes 应为点的 ID 数组。
     */


    /**
     * APIProperty: isAnalyzeById
     * @member SuperMap.FindPathParameters.prototype.isAnalyzeById -{Boolean}
     * @description 是否通过节点 ID 指定路径分析的结点，默认为 false。<br>
     *               指定路径分析经过的结点或设施点有两种方式：输入结点 ID 号或直接输入点坐标。<br>
     *               当该字段为 true 时，表示通过结点 ID 指定途经点，即 SuperMap.FindPathParameters.nodes = [ID1,ID2,...]；<br>
     *               反之表示通过结点坐标指定途经点，即 SuperMap.FindPathParameters.nodes = [{x1,y1},{x2,y2},...] 。
     */
    function FindPathParameters(options) {
        _classCallCheck(this, FindPathParameters);

        this.isAnalyzeById = false;
        this.hasLeastEdgeCount = null;
        this.nodes = null;
        this.parameter = null;
        this.CLASS_NAME = "SuperMap.FindPathParameters";

        var me = this;
        me.parameter = new _TransportationAnalystParameter2.default();
        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: parameter
     * @member SuperMap.FindPathParameters.prototype.parameter -{SuperMap.TransportationAnalystParameter}
     * @description 交通网络分析通用参数。
     */


    /**
     * APIProperty: hasLeastEdgeCount
     * @member SuperMap.FindPathParameters.prototype.hasLeastEdgeCount -{Boolean}
     * @description 是否按照弧段数最少的进行最佳路径分析。<br>
     *               true 表示按照弧段数最少进行分析，返回弧段数最少的路径中一个阻抗最小的最佳路径；<br>
     *               false表示直接返回阻抗最小的路径，而不考虑弧段的多少。
     */


    _createClass(FindPathParameters, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.isAnalyzeById = null;
            me.hasLeastEdgeCount = null;
            me.nodes = null;
            if (me.parameter) {
                me.parameter.destroy();
                me.parameter = null;
            }
        }
    }]);

    return FindPathParameters;
}();

exports.default = FindPathParameters;


_SuperMap2.default.FindPathParameters = FindPathParameters;

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _NetworkAnalystServiceBase = __webpack_require__(8);

var _NetworkAnalystServiceBase2 = _interopRequireDefault(_NetworkAnalystServiceBase);

var _FindPathParameters = __webpack_require__(139);

var _FindPathParameters2 = _interopRequireDefault(_FindPathParameters);

var _GeoJSON = __webpack_require__(5);

var _GeoJSON2 = _interopRequireDefault(_GeoJSON);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.FindPathService
 * @description 最佳路径分析服务类。<br>
 *               最佳路径是在网络数据集中指定一些节点，按照节点的选择顺序，<br>
 *               顺序访问这些节点从而求解起止点之间阻抗最小的路经。<br>
 *               该类负责将客户端指定的最佳路径分析参数传递给服务端，并接收服务端返回的结果数据。<br>
 *               最佳路径分析结果通过该类支持的事件的监听函数参数获取
 * @augments SuperMap.NetworkAnalystServiceBase
 * @example
 * (start code)
 * var myFindPathService = new SuperMap.FindPathService(url, {
 *     eventListeners: {
 *	       "processCompleted": findPathCompleted,
 *		   "processFailed": findPathError
 *		   }
 * });
 * (end)
 * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
 *               http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
 *               例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。
 * @param options - {Object} 互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var FindPathService = function (_NetworkAnalystServic) {
    _inherits(FindPathService, _NetworkAnalystServic);

    /**
     * @function SuperMap.FindPathService.prototype.initialize
     * @description 最佳路径分析服务类构造函数。
     * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
     *               http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
     *               例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。
     * @param options - {Object} 互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */
    function FindPathService(url, options) {
        _classCallCheck(this, FindPathService);

        var _this = _possibleConstructorReturn(this, (FindPathService.__proto__ || Object.getPrototypeOf(FindPathService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.FindPathService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(FindPathService, [{
        key: 'destroy',
        value: function destroy() {
            _get(FindPathService.prototype.__proto__ || Object.getPrototypeOf(FindPathService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.FindPathService.prototype.processAsync
         * @description 负责将客户端的查询参数传递到服务端。
         * @param params - {SuperMap.FindPathParameters} 最佳路径分析服务参数类
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                jsonObject,
                end = me.url.substr(me.url.length - 1, 1);
            me.url = me.url + (end === "/" ? "path" : "/path") + (this.isInTheSameDomain ? ".json?" : ".jsonp?");
            jsonObject = {
                hasLeastEdgeCount: params.hasLeastEdgeCount,
                parameter: _SuperMap2.default.Util.toJSON(params.parameter),
                nodes: me.getJson(params.isAnalyzeById, params.nodes)
            };
            me.request({
                method: "GET",
                params: jsonObject,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }

        /*
         * Method: getJson
         * 将对象转化为JSON字符串。
         *
         * Parameters:
         * isAnalyzeById - {Boolean}
         * params - {Array}
         *
         * Returns:
         * {Object} 转化后的JSON字符串。
         */

    }, {
        key: 'getJson',
        value: function getJson(isAnalyzeById, params) {
            var jsonString = "[",
                len = params ? params.length : 0;

            if (isAnalyzeById === false) {
                for (var i = 0; i < len; i++) {
                    if (i > 0) jsonString += ",";
                    jsonString += '{"x":' + params[i].x + ',"y":' + params[i].y + '}';
                }
            } else if (isAnalyzeById == true) {
                for (var i = 0; i < len; i++) {
                    if (i > 0) jsonString += ",";
                    jsonString += params[i];
                }
            }
            jsonString += ']';
            return jsonString;
        }

        /*
         * Method: toGeoJSONResult
         * 将含有geometry的数据转换为geojson格式。
         *
         * Parameters:
         * result - {Object} 服务器返回的结果对象。
         */

    }, {
        key: 'toGeoJSONResult',
        value: function toGeoJSONResult(result) {
            if (!result || !result.pathList || result.pathList.length < 1) {
                return null;
            }
            var geoJSONFormat = new _GeoJSON2.default();
            result.pathList.forEach(function (path) {
                if (path.route) {
                    path.route = JSON.parse(geoJSONFormat.write(path.route));
                }
                if (path.pathGuideItems) {
                    path.pathGuideItems = JSON.parse(geoJSONFormat.write(path.pathGuideItems));
                }
                if (path.edgeFeatures) {
                    path.edgeFeatures = JSON.parse(geoJSONFormat.write(path.edgeFeatures));
                }
                if (path.nodeFeatures) {
                    path.nodeFeatures = JSON.parse(geoJSONFormat.write(path.nodeFeatures));
                }
            });
            return result;
        }
    }]);

    return FindPathService;
}(_NetworkAnalystServiceBase2.default);

exports.default = FindPathService;


_SuperMap2.default.FindPathService = FindPathService;

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _TransportationAnalystParameter = __webpack_require__(19);

var _TransportationAnalystParameter2 = _interopRequireDefault(_TransportationAnalystParameter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.FindServiceAreasParameters
 * @description 服务区分析参数类.<br>
 *              服务区分析是以指定服务站点为中心，在一定服务范围内查找网络上服务站点能够提供服务的区域范围。<br>
 *              例如：计算某快餐店能够在30分钟内送达快餐的区域。<br>
 * @param options - {Object} 可选参数。<br>
 *        isAnalyzeById - {Boolean} 是否通过节点 ID 指定路径分析的结点。<br>
 *        isCenterMutuallyExclusive - {Boolean} 是否中心点互斥。<br>
 *        centers - {Array()} 服务站点数组，必设字段。<br>
 *        isFromCenter - {Boolean} 是否从中心点开始分析。<br>
 *        weights - {Array()} 每个服务站点提供服务的阻力半径，超过这个阻力半径的区域不予考虑，其单位与阻力字段一致，必设字段。<br>
 *        parameter - {SuperMap.TransportationAnalystParameter} 交通网络分析通用参数。
 */
var FindServiceAreasParameters = function () {

    /*
     * Constructor: SuperMap.FindServiceAreasParameters
     * 服务区分析参数类构造函数。
     */


    /**
     * APIProperty: weights
     * @member SuperMap.FindServiceAreasParameters.prototype.weights -{Array(Number)}
     * @description 每个服务站点提供服务的阻力半径，即超过这个阻力半径的区域不予考虑，其单位与阻力字段一致，必设字段。<br>
     *               该字段为一个数组，数组长度跟服务中心个数一致，按照索引顺序与站点一一对应，每个元素表示了在对每个服务中心进行服务区分析时，所用的服务半径。
     */


    /**
     * APIProperty: centers
     * @member SuperMap.FindServiceAreasParameters.prototype.centers -{Array<{SuperMap.Point}|Number>}
     * @description 服务站点数组，必设字段。<br>
     *               当该类的 iSAnalyzeById = true 时，通过结点 ID 号指定服务站点；<br>
     *               当 iSAnalyzeById = false 时，通过点坐标指定服务站点。
     */


    /**
     * APIProperty: isAnalyzeById
     * @member SuperMap.FindServiceAreasParameters.prototype.isAnalyzeById -{Boolean}
     * @description 是否通过节点 ID 指定路径分析的结点，默认为 false。<br>
     *               指定路径分析经过的结点或设施点有两种方式：输入结点 ID 号或直接输入点坐标。<br>
     *               当该字段为 true 时，表示通过结点 ID 指定途经点，即 SuperMap.FindServiceAreasParameters.centers = [ID1,ID2,...]；<br>
     *               反之表示通过结点坐标指定途经点，即 SuperMap.FindServiceAreasParameters.centers = [{x1,y1},{x2,y2},...]。
     */
    function FindServiceAreasParameters(options) {
        _classCallCheck(this, FindServiceAreasParameters);

        this.isAnalyzeById = false;
        this.isCenterMutuallyExclusive = false;
        this.centers = null;
        this.isFromCenter = false;
        this.weights = null;
        this.parameter = null;
        this.CLASS_NAME = "SuperMap.FindServiceAreasParameters";

        var me = this;
        me.parameter = new _TransportationAnalystParameter2.default();
        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: parameter
     * @member SuperMap.FindServiceAreasParameters.prototype.parameter -{SuperMap.TransportationAnalystParameter}
     * @description 交通网络分析通用参数。
     */


    /**
     * APIProperty: isFromCenter
     * @member SuperMap.FindServiceAreasParameters.prototype.isFromCenter -{Boolean}
     * @description 是否从中心点开始分析。默认为 false。<br>
     *               从中心点开始分析和不从中心点开始分析，体现了服务中心和需要该服务的需求地的关系模式。<br>
     *               从中心点开始分析，是一个服务中心向服务需求地提供服务；<br>
     *               而不从中心点开始分析，是一个服务需求地主动到服务中心获得服务。
     */


    /**
     * APIProperty: isCenterMutuallyExclusive
     * @member SuperMap.FindServiceAreasParameters.prototype.isCenterMutuallyExclusive -{Boolean}
     * @description 是否中心点互斥，即按照中心点的距离进行判断是否要进行互斥处理，默认为 false。<br>
     *               若分析出的服务区有重叠的部分，则通过设置该参数进行互斥处理。
     */


    _createClass(FindServiceAreasParameters, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.isAnalyzeById = null;
            me.isCenterMutuallyExclusive = null;
            me.centers = null;
            me.isFromCenter = null;
            me.weights = null;
            if (me.parameter) {
                me.parameter.destroy();
                me.parameter = null;
            }
        }
    }]);

    return FindServiceAreasParameters;
}();

exports.default = FindServiceAreasParameters;


_SuperMap2.default.FindServiceAreasParameters = FindServiceAreasParameters;

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _NetworkAnalystServiceBase = __webpack_require__(8);

var _NetworkAnalystServiceBase2 = _interopRequireDefault(_NetworkAnalystServiceBase);

var _FindServiceAreasParameters = __webpack_require__(141);

var _FindServiceAreasParameters2 = _interopRequireDefault(_FindServiceAreasParameters);

var _GeoJSON = __webpack_require__(5);

var _GeoJSON2 = _interopRequireDefault(_GeoJSON);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.FindServiceAreasService
 * @description 服务区分析服务类。<br>
 *               服务区分析是以指定服务站点为中心，<br>
 *               在一定服务范围内查找网络上服务站点能够提供服务的区域范围。<br>
 *               该类负责将客户端指定的服务区分析参数传递给服务端，并接收服务端返回的结果数据。<br>
 *               服务区分析结果通过该类支持的事件的监听函数参数获取
 * @augments SuperMap.NetworkAnalystServiceBase
 * @example
 * (start code)
 * var myFindServiceAreasService = new SuperMap.FindServiceAreasService(url, {
 *          eventListeners: {
 *              "processCompleted": findServiceAreasCompleted,
 *              "processFailed": findServiceAreasError
 *          }
 * });
 * (end)
 * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
 *                        http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
 *                        例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。
 * @param options - {Object} 互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象
 */
var FindServiceAreasService = function (_NetworkAnalystServic) {
    _inherits(FindServiceAreasService, _NetworkAnalystServic);

    /**
     * @function SuperMap.FindServiceAreasService.prototype.initialize
     * @description 服务区分析服务类构造函数。
     * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：<br>
     *                        http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；<br>
     *                        例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。
     * @param options - {Object} 互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象
     */
    function FindServiceAreasService(url, options) {
        _classCallCheck(this, FindServiceAreasService);

        var _this = _possibleConstructorReturn(this, (FindServiceAreasService.__proto__ || Object.getPrototypeOf(FindServiceAreasService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.FindServiceAreasService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(FindServiceAreasService, [{
        key: 'destroy',
        value: function destroy() {
            _get(FindServiceAreasService.prototype.__proto__ || Object.getPrototypeOf(FindServiceAreasService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.FindServiceAreasService.prototype.processAsync
         * @description 负责将客户端的查询参数传递到服务端。
         * @param params - {SuperMap.FindServiceAreasParameters} 服务区分析服务参数类
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                jsonObject,
                end = me.url.substr(me.url.length - 1, 1);
            me.url = me.url + (end === "/" ? "servicearea" : "/servicearea") + (this.isInTheSameDomain ? ".json?" : ".jsonp?");
            jsonObject = {
                isFromCenter: params.isFromCenter,
                isCenterMutuallyExclusive: params.isCenterMutuallyExclusive,
                parameter: _SuperMap2.default.Util.toJSON(params.parameter),
                centers: me.getJson(params.isAnalyzeById, params.centers),
                weights: me.getJson(true, params.weights)
            };
            me.request({
                method: "GET",
                params: jsonObject,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }

        /*
         * Method: getJson
         * 将对象转化为JSON字符串。
         *
         * Parameters:
         * isAnalyzeById - {Boolean}
         * params - {Array}
         *
         * Returns:
         * {Object} 转化后的JSON字符串。
         */

    }, {
        key: 'getJson',
        value: function getJson(isAnalyzeById, params) {
            var jsonString = "[",
                len = params ? params.length : 0;

            if (isAnalyzeById === false) {
                for (var i = 0; i < len; i++) {
                    if (i > 0) jsonString += ",";
                    jsonString += '{"x":' + params[i].x + ',"y":' + params[i].y + '}';
                }
            } else if (isAnalyzeById == true) {
                for (var i = 0; i < len; i++) {
                    if (i > 0) jsonString += ",";
                    jsonString += params[i];
                }
            }
            jsonString += ']';
            return jsonString;
        }

        /*
         * Method: toGeoJSONResult
         * 将含有geometry的数据转换为geojson格式。
         *
         * Parameters:
         * result - {Object} 服务器返回的结果对象。
         */

    }, {
        key: 'toGeoJSONResult',
        value: function toGeoJSONResult(result) {
            if (!result || !result.serviceAreaList) {
                return result;
            }
            var geoJSONFormat = new _GeoJSON2.default();
            result.serviceAreaList.map(function (serviceArea) {
                if (serviceArea.serviceRegion) {
                    serviceArea.serviceRegion = JSON.parse(geoJSONFormat.write(serviceArea.serviceRegion));
                }
                if (serviceArea.edgeFeatures) {
                    serviceArea.edgeFeatures = JSON.parse(geoJSONFormat.write(serviceArea.edgeFeatures));
                }
                if (serviceArea.nodeFeatures) {
                    serviceArea.nodeFeatures = JSON.parse(geoJSONFormat.write(serviceArea.nodeFeatures));
                }
                if (serviceArea.routes) {
                    serviceArea.routes = JSON.parse(geoJSONFormat.write(serviceArea.routes));
                }
            });

            return result;
        }
    }]);

    return FindServiceAreasService;
}(_NetworkAnalystServiceBase2.default);

exports.default = FindServiceAreasService;


_SuperMap2.default.FindServiceAreasService = FindServiceAreasService;

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _TransportationAnalystParameter = __webpack_require__(19);

var _TransportationAnalystParameter2 = _interopRequireDefault(_TransportationAnalystParameter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.FindTSPPathsParameters
 * @description 旅行商分析参数类<br>
 *              旅行商分析是路径分析的一种，它从起点开始（默认为用户指定的第一点）查找能够遍历所有途经点且花费最小的路径。
 *              旅行商分析也可以指定到达的终点，这时查找从起点能够遍历所有途经点最后到达终点，且花费最小的路径。<br>
 *              旅行商分析和最佳路径分析都是在网络中寻找遍历所有站点的最经济的路径，区别是在遍历网络所有站点的过程中对结点访问顺序不同<br>
 *              最佳路径分析必须按照指定顺序对站点进行访问，而旅行商分析是无序的路径分析。<br>
 * @param options - {Object} 可选参数。如：<br>
 *        endNodeAssigned - {Boolean} 是否指定终止点，将指定的途经点的最后一个点作为终止点。<br>
 *        true 表示指定终止点，则旅行商必须最后一个访问终止点。默认为 false。<br>
 *        isAnalyzeById - {Boolean} 是否通过节点 ID 号来指定配送中心点和配送目的点，默认为 false，即通过坐标点指定。<br>
 *        nodes - {Array<{SuperMap.Point}|Number>} 配送目标集合，必设字段。<br>
 *        parameter - {SuperMap.TransportationAnalystParameter} 交通网络分析通用参数。<br>
 */
var FindTSPPathsParameters = function () {

    /*
     * Constructor: SuperMap.FindTSPPathsParameters
     * 旅行商分析参数类构造函数。
     */

    /**
     * APIProperty: nodes
     * @member SuperMap.FindTSPPathsParameters.prototype.nodes -{Array<{SuperMap.Point}|Number>}
     * @description 旅行商分析途经点数组，必设字段。<br>
     *               当 SuperMap.FindTSPPathsParameters.isAnalyzeById = false 时，nodes 应为点的坐标数组；<br>
     *               当 SuperMap.FindTSPPathsParameters.isAnalyzeById = true 时，nodes 应为点的 ID 数组。
     */

    /**
     * APIProperty: endNodeAssigned
     * @member SuperMap.FindTSPPathsParameters.prototype.endNodeAssigned -{Boolean}
     * @description 是否指定终止点，将指定的途经点的最后一个点作为终止点。<br>
     *               true 表示指定终止点，则旅行商必须最后一个访问终止点。默认为 false。
     */
    function FindTSPPathsParameters(options) {
        _classCallCheck(this, FindTSPPathsParameters);

        this.endNodeAssigned = false;
        this.isAnalyzeById = false;
        this.nodes = null;
        this.parameter = null;
        this.CLASS_NAME = "SuperMap.FindTSPPathsParameters";

        var me = this;
        me.parameter = new _TransportationAnalystParameter2.default();
        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: parameter
     * @member SuperMap.FindTSPPathsParameters.prototype.parameter -{SuperMap.TransportationAnalystParameter}
     * @description 交通网络分析通用参数。通过本类可以设置障碍边、障碍点、<br>
     *               权值字段信息的名称标识、转向权值字段等信息。<br>
     *               SuperMap.TransportationAnalystParameter 类型，它虽然为可选参数，但是如果不设置其中的 resultSetting<br>
     *              字段，则返回结果空间信息等都为空。
     */


    /**
     * APIProperty: isAnalyzeById
     * @member SuperMap.FindTSPPathsParameters.prototype.isAnalyzeById -{Boolean}
     * @description 是否通过节点 ID 号来指定途经点，默认为 false，即通过坐标点指定。
     */


    _createClass(FindTSPPathsParameters, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.endNodeAssigned = null;
            me.isAnalyzeById = null;
            me.nodes = null;
            if (me.parameter) {
                me.parameter.destroy();
                me.parameter = null;
            }
        }
    }]);

    return FindTSPPathsParameters;
}();

exports.default = FindTSPPathsParameters;


_SuperMap2.default.FindTSPPathsParameters = FindTSPPathsParameters;

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _NetworkAnalystServiceBase = __webpack_require__(8);

var _NetworkAnalystServiceBase2 = _interopRequireDefault(_NetworkAnalystServiceBase);

var _FindTSPPathsParameters = __webpack_require__(143);

var _FindTSPPathsParameters2 = _interopRequireDefault(_FindTSPPathsParameters);

var _GeoJSON = __webpack_require__(5);

var _GeoJSON2 = _interopRequireDefault(_GeoJSON);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.FindTSPPathsService
 * @description 旅行商分析服务类<br>
 *               旅行商分析是路径分析的一种，它从起点开始（默认为用户指定的第一点）查找能够遍历所有途经点且花费最小的路径。
 *               旅行商分析也可以指定到达的终点，这时查找从起点能够遍历所有途经点最后到达终点，且花费最小的路径。
 *               该类负责将客户端指定的旅行商分析参数传递给服务端，并接收服务端返回的结果数据。
 *               旅行商分析结果通过该类支持的事件的监听函数参数获取
 * @augments SuperMap.NetworkAnalystServiceBase
 * @example
 * (start code)
 * var myFindTSPPathsService = new SuperMap.FindTSPPathsService(url, {
 *     eventListeners: {
 *	      "processCompleted": findTSPPathsCompleted,
 *		  "processFailed": findTSPPathsError
 *		  }
 *  });
 * (end)
 * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：
 *                        http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；
 *                       例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。
 * @param options - {Object} 互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var FindTSPPathsService = function (_NetworkAnalystServic) {
    _inherits(FindTSPPathsService, _NetworkAnalystServic);

    /**
     * @function SuperMap.FindTSPPathsService.prototype.initialize
     * @description 最佳路径分析服务类构造函数。
     * @param url - {String} 网络分析服务地址。请求网络分析服务，URL应为：
     *                        http://{服务器地址}:{服务端口号}/iserver/services/{网络分析服务名}/rest/networkanalyst/{网络数据集@数据源}；
     *                       例如:"http://localhost:8090/iserver/services/components-rest/rest/networkanalyst/RoadNet@Changchun"。
     * @param options - {Object} 互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */
    function FindTSPPathsService(url, options) {
        _classCallCheck(this, FindTSPPathsService);

        var _this = _possibleConstructorReturn(this, (FindTSPPathsService.__proto__ || Object.getPrototypeOf(FindTSPPathsService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.FindTSPPathsService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(FindTSPPathsService, [{
        key: 'destroy',
        value: function destroy() {
            _get(FindTSPPathsService.prototype.__proto__ || Object.getPrototypeOf(FindTSPPathsService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.FindTSPPathsService.prototype.processAsync
         * @description 负责将客户端的查询参数传递到服务端。
         * @param params - {SuperMap.FindTSPPathsParameters} 旅行商分析服务参数类
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                jsonObject,
                end = me.url.substr(me.url.length - 1, 1);
            me.url = me.url + (end === "/" ? "tsppath" : "/tsppath") + (this.isInTheSameDomain ? ".json?" : ".jsonp?");
            jsonObject = {
                parameter: _SuperMap2.default.Util.toJSON(params.parameter),
                endNodeAssigned: params.endNodeAssigned,
                nodes: me.getNodesJson(params)
            };
            me.request({
                method: "GET",
                params: jsonObject,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }

        /*
         * Method: getNodesJson
         * 将节点对象转化为JSON字符串。
         *
         * Parameters:
         * params - {SuperMap.FindTSPPathsParameters}
         *
         * Returns:
         * {Object} 转化后的JSON字符串。
         */

    }, {
        key: 'getNodesJson',
        value: function getNodesJson(params) {
            var jsonParameters = "",
                nodesString,
                i,
                len,
                nodes;
            if (params.isAnalyzeById === false) {
                for (nodesString = "[", i = 0, nodes = params.nodes, len = nodes.length; i < len; i++) {
                    if (i > 0) nodesString += ",";
                    nodesString += '{"x":' + nodes[i].x + ',"y":' + nodes[i].y + '}';
                }
                nodesString += ']';
                jsonParameters += nodesString;
            } else if (params.isAnalyzeById == true) {
                for (var nodeIDsString = "[", i = 0, nodes = params.nodes, len = nodes.length; i < len; i++) {
                    if (i > 0) nodeIDsString += ",";
                    nodeIDsString += nodes[i];
                }
                nodeIDsString += ']';
                jsonParameters += nodeIDsString;
            }
            return jsonParameters;
        }

        /*
         * Method: toGeoJSONResult
         * 将含有geometry的数据转换为geojson格式。
         *
         * Parameters:
         * result - {Object} 服务器返回的结果对象。
         */

    }, {
        key: 'toGeoJSONResult',
        value: function toGeoJSONResult(result) {
            if (!result || !result.tspPathList) {
                return null;
            }
            var geoJSONFormat = new _GeoJSON2.default();
            result.tspPathList.forEach(function (path) {
                if (path.route) {
                    path.route = JSON.parse(geoJSONFormat.write(path.route));
                }
                if (path.pathGuideItems) {
                    path.pathGuideItems = JSON.parse(geoJSONFormat.write(path.pathGuideItems));
                }
                if (path.edgeFeatures) {
                    path.edgeFeatures = JSON.parse(geoJSONFormat.write(path.edgeFeatures));
                }
                if (path.nodeFeatures) {
                    path.nodeFeatures = JSON.parse(geoJSONFormat.write(path.nodeFeatures));
                }
            });
            return result;
        }
    }]);

    return FindTSPPathsService;
}(_NetworkAnalystServiceBase2.default);

exports.default = FindTSPPathsService;


_SuperMap2.default.FindTSPPathsService = FindTSPPathsService;

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _DataReturnOption = __webpack_require__(20);

var _DataReturnOption2 = _interopRequireDefault(_DataReturnOption);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.GenerateSpatialDataParameters
 * @constructs SuperMap.GenerateSpatialDataParameters
 * @classdesc
 * 动态分段操作参数类。
 * 通过该类可以为动态分段提供参数信息。
 * @api
 */
var GenerateSpatialDataParameters = function () {

    /**
     *
     * @method SuperMap.GenerateSpatialDataParameters.initialize
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * routeTable - {Sting} 路由数据集。</br>
     * routeIDField - {Sting} 路由数据集的标识字段。</br>
     * eventTable - {Sting} 用于生成空间数据的事件表名。</br>
     * eventRouteIDField - {Sting} 用于生成空间数据的事件表的路由标识字段。</br>
     * measureField - {Sting} 用于生成空间数据的事件表的刻度字段，只有当事件为点事件的时候该属性才有意义
     * measureStartField - {Sting} 用于生成空间数据的事件表的起始刻度字段，只有当事件为线事件的时候该属性才有意义。</br>
     * measureEndField - {Sting} 用于生成空间数据的事件表的终止刻度字段，只有当事件为线事件的时候该属性才有意义。</br>
     * measureOffsetField - {Sting} 刻度偏移量字段。</br>
     * errorInfoField - {Sting} 错误信息字段，直接写入原事件表，用于描述事件未能生成对应的点或线时的错误信息。</br>
     * retainedFields - {Array(String)} 欲保留到结果空间数据中的字段集合（系统字段除外）。</br>
     * dataReturnOption - {SuperMap.DataReturnOption} 设置数据返回的最大记录。</br>
     */


    /**
     * APIProperty: retainedFields
     * {Array(String)} 欲保留到结果空间数据中的字段集合（系统字段除外）。
     *  生成空间数据时，无论是否指定保留字段，路由 ID 字段、刻度偏移量字段、刻度值字段（点事件为刻度字段，线事件是起始和终止刻度字段）都会保留到结果空间数据中；
     *  如果没有指定 retainedFields 参数或者retainedFields 参数数组长度为0，则返回所有用户字段。
     */


    /**
     * APIProperty: measureOffsetField
     * {Sting} 刻度偏移量字段。
     */


    /**
     * APIProperty: measureStartField
     * {Sting} 用于生成空间数据的事件表的起始刻度字段，只有当事件为线事件的时候该属性才有意义。
     */


    /**
     * APIProperty: eventRouteIDField
     * {Sting} 用于生成空间数据的事件表的路由标识字段。
     */


    /**
     * APIProperty: routeIDField
     * {Sting} 路由数据集的标识字段。
     */
    function GenerateSpatialDataParameters(options) {
        _classCallCheck(this, GenerateSpatialDataParameters);

        this.routeTable = null;
        this.routeIDField = null;
        this.eventTable = null;
        this.eventRouteIDField = null;
        this.measureField = null;
        this.measureStartField = null;
        this.measureEndField = null;
        this.measureOffsetField = null;
        this.errorInfoField = null;
        this.retainedFields = null;
        this.dataReturnOption = null;
        this.CLASS_NAME = "SuperMap.GenerateSpatialDataParameters";

        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: dataReturnOption
     * {SuperMap.DataReturnOption} 设置数据返回的选项。
     */


    /**
     * APIProperty: errorInfoField
     * {Sting} 错误信息字段，直接写入原事件表，用于描述事件未能生成对应的点或线时的错误信息。
     */


    /**
     * APIProperty: measureEndField
     * {Sting} 用于生成空间数据的事件表的终止刻度字段，只有当事件为线事件的时候该属性才有意义。
     */


    /**
     * APIProperty: measureField
     * {Sting} 用于生成空间数据的事件表的刻度字段，只有当事件为点事件的时候该属性才有意义
     */


    /**
     * APIProperty: eventTable
     * {Sting} 用于生成空间数据的事件表名。
     */


    /**
     * APIProperty: routeTable
     * {Sting} 路由数据集。
     */


    _createClass(GenerateSpatialDataParameters, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            if (me.routeTable) {
                me.routeTable = null;
            }
            me.routeIDField = null;
            me.eventTable = null;
            me.eventRouteIDField = null;
            me.measureField = null;
            me.measureStartField = null;
            me.measureEndField = null;
            me.measureOffsetField = null;
            me.errorInfoField = null;
            if (me.dataReturnOption) {
                me.dataReturnOption.destroy();
                me.dataReturnOption = null;
            }
        }
    }]);

    return GenerateSpatialDataParameters;
}();

exports.default = GenerateSpatialDataParameters;


_SuperMap2.default.GenerateSpatialDataParameters = GenerateSpatialDataParameters;

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _SpatialAnalystBase2 = __webpack_require__(6);

var _SpatialAnalystBase3 = _interopRequireDefault(_SpatialAnalystBase2);

var _GenerateSpatialDataParameters = __webpack_require__(145);

var _GenerateSpatialDataParameters2 = _interopRequireDefault(_GenerateSpatialDataParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.GenerateSpatialDataService
 * @constructs SuperMap.GenerateSpatialDataService
 * @classdesc
 * 动态分段分析服务类。
 * 该类负责将客户设置的动态分段分析服务参数传递给服务端，并接收服务端返回的动态分段分析结果数据。
 * 获取的结果数据包括 originResult 、result 两种，其中，originResult 为服务端返回的用 JSON 对象表示的动态分段分析结果数据，result 为服务端返回的动态分段分析结果数据。
 * @extends {SuperMap.SpatialAnalystBase}
 * @api
 * @example 实例化该类如下例所示：
 * (start code)
 *  function GenerateSpatialData(){
     *
     *  //配置数据返回选项(option)
     *  var option = new SuperMap.DataReturnOption({
     *      expectCount: 1000,
     *      dataset: "generateSpatialData",
     *      deleteExistResultDataset: true,
     *      dataReturnMode: SuperMap.DataReturnMode.DATASET_ONLY
     *  }),
     *  //配置动态分段参数(Parameters)
     *  parameters = new SuperMap.GenerateSpatialDataParameters({
     *      routeTable: "RouteDT_road@Changchun",
     *      routeIDField: "RouteID",
     *      eventTable: "LinearEventTabDT@Changchun",
     *      eventRouteIDField: "RouteID",
     *      measureField: "",
     *      measureStartField: "LineMeasureFrom",
     *      measureEndField: "LineMeasureTo",
     *      measureOffsetField: "",
     *      errorInfoField: "",
     *      retainedFields:[],
     *      dataReturnOption: option
     *  }),
     *  //配置动态分段iService
     *  iService = new SuperMap.GenerateSpatialDataService(Changchun_spatialanalyst, {
     *      eventListeners: {
     *          processCompleted: generateCompleted,
     *          processFailed: generateFailded
     *      }
     *  });
     *  //执行
     *  iService.processAsync(parameters);
     *  function Completed(generateSpatialDataEventArgs){//todo};
     *  function Error(generateSpatialDataEventArgs){//todo};
     * (end)
     */
var GenerateSpatialDataService = function (_SpatialAnalystBase) {
    _inherits(GenerateSpatialDataService, _SpatialAnalystBase);

    /**
     * @method SuperMap.GenerateSpatialDataService.initialize
     * @param url - {String} 服务的访问地址。如 http://localhost:8090/iserver/services/spatialanalyst-changchun/restjsr/spatialanalyst 。
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * eventListeners - {Object} 需要被注册的监听器对象。
     */
    function GenerateSpatialDataService(url, options) {
        _classCallCheck(this, GenerateSpatialDataService);

        var _this = _possibleConstructorReturn(this, (GenerateSpatialDataService.__proto__ || Object.getPrototypeOf(GenerateSpatialDataService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.GenerateSpatialDataService";
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源,将引用的资源属性置空。
     */


    _createClass(GenerateSpatialDataService, [{
        key: 'destroy',
        value: function destroy() {
            _get(GenerateSpatialDataService.prototype.__proto__ || Object.getPrototypeOf(GenerateSpatialDataService.prototype), 'destroy', this).call(this);
        }

        /**
         * @method SuperMap.GenerateSpatialDataService.processAsync
         * @description 负责将客户端的动态分段服务参数传递到服务端。
         * @param params - {SuperMap.GenerateSpatialDataParameters}
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                jsonParameters;

            jsonParameters = me.getJsonParameters(params);

            me.request({
                method: "POST",
                data: jsonParameters,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }

        /**
         * @method SuperMap.GenerateSpatialDataService.getJsonParameters
         * @description 将参数转化为 JSON 字符串。
         * @param params -  {SuperMap.GenerateSpatialDataParameters}
         * @return {Object} 转化后的JSON字符串。
         */

    }, {
        key: 'getJsonParameters',
        value: function getJsonParameters(params) {
            var jsonParameters = "",
                jsonStr = "datasets/" + params.routeTable + "/linearreferencing/generatespatialdata",
                me = this,
                end;

            end = me.url.substr(me.url.length - 1, 1);
            if (me.isInTheSameDomain) {
                me.url += end === "/" ? jsonStr + ".json" : "/" + jsonStr + ".json";
            } else {
                me.url += end === "/" ? jsonStr + ".jsonp" : "/" + jsonStr + ".jsonp";
            }

            me.url += "?returnContent=true";
            jsonParameters = _SuperMap2.default.Util.toJSON(params);
            return jsonParameters;
        }
    }]);

    return GenerateSpatialDataService;
}(_SpatialAnalystBase3.default);

exports.default = GenerateSpatialDataService;


_SuperMap2.default.GenerateSpatialDataService = GenerateSpatialDataService;

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/*
 * Class: SuperMap.GeoCodingParameter
 * 地理正向匹配参数类。
 */

/**
 * @class SuperMap.GeoCodingParameter
 * @constructs SuperMap.GeoCodingParameter
 * @classdesc
 * 地理正向匹配参数类。
 * @api
 */

var GeoCodingParameter = function () {

    /**
     * @method SuperMap.GeoCodingParameter.initialize
     * @param options - {Object} 参数。
     */


    /**
     * APIProperty: filters
     * String 查询结果的坐标系。
     */


    /**
     * APIProperty: toIndex
     * {number} 设置返回对象的结束索引值。
     */


    /**
     * APIProperty: address
     * {String} 地点关键词。
     */
    function GeoCodingParameter(options) {
        _classCallCheck(this, GeoCodingParameter);

        this.address = null;
        this.fromIndex = null;
        this.toIndex = null;
        this.filters = null;
        this.prjCoordSys = null;
        this.maxReturn = null;

        if (!options) {
            return;
        }
        if (options.filters) {
            var strs = [];
            var fields = options.filters.split(',');
            fields.map(function (field) {
                strs.push("\"" + field + "\"");
            });
            options.filters = strs;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: maxReturn
     * String 最大返回结果数。
     */


    /**
     * APIProperty: filters
     * {Array} 过滤字段，限定查询区域。
     */


    /**
     * APIProperty: fromIndex
     * {number} 设置返回对象的起始索引值。
     */


    _createClass(GeoCodingParameter, [{
        key: 'destroy',
        value: function destroy() {
            this.address = null;
            this.fromIndex = null;
            this.toIndex = null;
            this.filters = null;
            this.prjCoordSys = null;
            this.maxReturn = null;
        }
    }]);

    return GeoCodingParameter;
}();

exports.default = GeoCodingParameter;

_SuperMap2.default.GeoCodingParameter = GeoCodingParameter;

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Class: SuperMap.GeoDecodingParameter
 * 地理反向匹配参数类。
 */
/**
 * @class SuperMap.GeoDecodingParameter
 * @constructs SuperMap.GeoDecodingParameter
 * @classdesc
 * 地理反向匹配参数类。
 * @api
 */
var GeoDecodingParameter = function () {

    /**
     *
     * @method SuperMap.GeoDecodingParameter.initialize
     * @param options - {Object} 参数。
     */


    /**
     * APIProperty: maxReturn
     * {number} 最大返回结果数。
     */


    /**
     * APIProperty: filters
     * {Array} 过滤字段，限定查询区域。
     */


    /**
     * APIProperty: fromIndex
     * {number} 设置返回对象的起始索引值。
     */


    /**
     * APIProperty: x
     * {number} 查询位置的横坐标。
     */
    function GeoDecodingParameter(options) {
        _classCallCheck(this, GeoDecodingParameter);

        this.x = null;
        this.y = null;
        this.fromIndex = null;
        this.toIndex = null;
        this.filters = null;
        this.prjCoordSys = null;
        this.maxReturn = null;
        this.geoDecodingRadius = null;

        if (!options) {
            return;
        }
        if (options.filters) {
            var strs = [];
            var fields = options.filters.split(',');
            fields.map(function (field) {
                strs.push("\"" + field + "\"");
            });
            options.filters = strs;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: geoDecodingRadius
     * {number} 查询半径。
     */


    /**
     * APIProperty: prjCoordSys
     * {String} 查询结果的坐标系。
     */


    /**
     * APIProperty: toIndex
     * {number} 设置返回对象的结束索引值。
     */


    /**
     * APIProperty: y
     * {number} 查询位置的纵坐标。
     */


    _createClass(GeoDecodingParameter, [{
        key: 'destroy',
        value: function destroy() {
            this.x = null;
            this.y = null;
            this.fromIndex = null;
            this.toIndex = null;
            this.filters = null;
            this.prjCoordSys = null;
            this.maxReturn = null;
            this.geoDecodingRadius = null;
        }
    }]);

    return GeoDecodingParameter;
}();

exports.default = GeoDecodingParameter;


_SuperMap2.default.GeoDecodingParameter = GeoDecodingParameter;

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

var _FilterParameter = __webpack_require__(10);

var _FilterParameter2 = _interopRequireDefault(_FilterParameter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.GeoRelationAnalystParameters
 * @constructs SuperMap.GeoRelationAnalystParameters
 * @classdesc
 * 空间关系分析服务参数类。
 * 使用该类可以为空间关系分析服务提供所需的参数信息。
 * @api
 */
var GeoRelationAnalystParameters = function () {

    /**
     * @method SuperMap.GeoRelationAnalystParameters.initialize
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * sourceFilter - {SuperMap.FilterParameter} 空间关系分析中的参考数据集查询参数。仅 name, ids,attributeFilter 和 fields 字段有效。</br>
     * referenceFilter - {SuperMap.FilterParameter} 空间关系分析中的参考数据集查询参数。仅 name, ids,attributeFilter 和 fields 字段有效。</br>
     * spatialRelationType - {SuperMap.SpatialRelationType} 指定的空间关系类型。</br>
     * isBorderInside - {Boolean} 边界处理方式，即位于面边线上的点是否被面包含。此参数仅用于空间关系为包含或被包含的情况。</br>
     * returnFeature - {Boolean} 是否返回Feature信息。</br>
     * returnGeoRelatedOnly - {Boolean} 仅返回满足指定空间关系的空间对象，默认为 True。</br>
     * startRecord - {Integer} 分析结果起始记录位置，默认为0。</br>
     * expectCount - {Integer} 空间关系分析期望返回结果记录数，默认为500条，如果实际不足500条结果则返回所有分析结果。</br>
     */


    /**
     * APIProperty: startRecord
     * {Integer} 分析结果起始记录位置，默认为0。
     */


    /**
     * APIProperty: returnFeature
     * {Boolean} 是否返回Feature信息。
     */


    /**
     * APIProperty: spatialRelationType
     * {SuperMap.SpatialRelationType} 指定的空间关系类型。
     */


    /**
     * APIProperty: sourceFilter
     * {SuperMap.FilterParameter} 空间关系分析中的源数据集查询参数。仅 ids、attributeFilter 和 fields 字段有效。
     */
    function GeoRelationAnalystParameters(options) {
        _classCallCheck(this, GeoRelationAnalystParameters);

        this.dataset = null;
        this.sourceFilter = null;
        this.referenceFilter = null;
        this.spatialRelationType = null;
        this.isBorderInside = null;
        this.returnFeature = null;
        this.returnGeoRelatedOnly = null;
        this.startRecord = 0;
        this.expectCount = 500;
        this.CLASS_NAME = "SuperMap.GeoRelationAnalystParameters";

        var me = this;
        if (options) {
            _SuperMap2.default.Util.extend(me, options);
        }
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * Property: expectCount
     * {Integer} 空间关系分析期望返回结果记录数，默认为500条，如果实际不足500条结果则返回所有分析结果。
     */


    /**
     * APIProperty: returnGeoRelatedOnly
     * {Boolean} 是否仅返回满足指定空间关系的空间对象，默认为 True。
     */


    /**
     * APIProperty: isBorderInside
     * {Boolean} 边界处理方式，即位于面边线上的点是否被面包含。此参数仅用于空间关系为包含或被包含的情况。
     */


    /**
     * APIProperty: referenceFilter
     * {SuperMap.FilterParameter} 空间关系分析中的参考数据集查询参数。仅 name, ids, attributeFilter
     * 和 fields 字段有效。
     */


    /**
     * APIProperty: dataset
     * {String} 源数据集名称。
     */


    _createClass(GeoRelationAnalystParameters, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            if (me.sourceFilter) {
                me.sourceFilter.destroy();
            }
            me.sourceFilter = null;

            if (me.referenceFilter) {
                me.referenceFilter.destroy();
            }
            me.referenceFilter = null;

            me.dataset = null;
            me.spatialRelationType = null;
            me.isBorderInside = null;
            me.returnFeature = null;
            me.returnGeoRelatedOnly = null;
            me.startRecord = null;
            me.expectCount = null;
        }
    }]);

    return GeoRelationAnalystParameters;
}();

exports.default = GeoRelationAnalystParameters;


_SuperMap2.default.GeoRelationAnalystParameters = GeoRelationAnalystParameters;

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _SpatialAnalystBase2 = __webpack_require__(6);

var _SpatialAnalystBase3 = _interopRequireDefault(_SpatialAnalystBase2);

var _GeoRelationAnalystParameters = __webpack_require__(149);

var _GeoRelationAnalystParameters2 = _interopRequireDefault(_GeoRelationAnalystParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.GeoRelationAnalystService
 * @constructs SuperMap.GeoRelationAnalystService
 * @classdesc
 * 空间关系分析服务类。
 * 该类负责将客户设置的空间关系分析服务参数传递给服务端，并接收服务端返回的空间关系分析结果数据。
 * @api
 * @extends {SuperMap.SpatialAnalystBase}
 * @example 实例化该类如下例所示：
 * (start code)
 *  function datasetGeoRelationAnalystProcess() {
     *      var referenceFilter = new SuperMap.FilterParameter({
     *                              name:"Frame_R@Changchun",
     *                              attributeFilter:"SmID>0"});
     *      var sourceFilter = new SuperMap.FilterParameter({
     *                          attributeFilter:"SmID>0"});
     *      //初始化服务类
     *      var datasetGeoRelationService = new SuperMap.GeoRelationAnalystService(
     *          "http://localhost:8090/iserver/services/spatialanalyst-changchun/restjsr/spatialanalyst/"),
     *      //构建参数类
     *      datasetGeoRelationParameters = new SuperMap.GeoRelationAnalystParameters({
     *          dataset: "Park@Changchun",
     *          startRecord: 0,
     *          expectCount: 20,
     *          sourceFilter: sourceFilter,
     *          referenceFilter: referenceFilter,
     *          spatialRelationType: SuperMap.SpatialRelationType.INTERSECT,
     *          isBorderInside: true,
     *          returnFeature: true,
     *          returnGeoRelatedOnly: true
     *      });
     *      datasetGeoRelationService.events.on({
     *          "processCompleted": datasetGeoRelationAnalystCompleted,
     *          "processFailed": datasetGeoRelationAnalystFailed});
     *      //执行
     *      datasetGeoRelationService.processAsync(datasetGeoRelationParameters);
     *  }
 *  function Completed(datasetGeoRelationAnalystCompleted){//todo};
 *  function Error(datasetGeoRelationAnalystFailed){//todo};
 * (end)
 *
 */
var GeoRelationAnalystService = function (_SpatialAnalystBase) {
    _inherits(GeoRelationAnalystService, _SpatialAnalystBase);

    /**
     * @method SuperMap.GeoRelationAnalystService.initialize
     * @param url - {String} 服务的访问地址。如 http://localhost:8090/iserver/services/spatialanalyst-changchun/restjsr/spatialanalyst 。
     * @param options - {Object} 可选参数。
     *
     * Allowed options properties:</br>
     * eventListeners - {Object} 需要被注册的监听器对象。
     */
    function GeoRelationAnalystService(url, options) {
        _classCallCheck(this, GeoRelationAnalystService);

        var _this = _possibleConstructorReturn(this, (GeoRelationAnalystService.__proto__ || Object.getPrototypeOf(GeoRelationAnalystService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.GeoRelationAnalystService";
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源,将引用的资源属性置空。
     */


    _createClass(GeoRelationAnalystService, [{
        key: 'destroy',
        value: function destroy() {
            _get(GeoRelationAnalystService.prototype.__proto__ || Object.getPrototypeOf(GeoRelationAnalystService.prototype), 'destroy', this).call(this);
        }

        /**
         * @method SuperMap.GeoRelationAnalystService.processAsync
         * @description 负责将客户端的空间关系分析参数传递到服务端
         * @param parameter - {GeoRelationAnalystParameters} 空间关系分析所需的参数信息。
         */

    }, {
        key: 'processAsync',
        value: function processAsync(parameter) {
            var me = this;
            var end = me.url.substr(me.url.length - 1, 1);
            if (end === '/') {
                me.url += 'datasets/' + parameter.dataset + '/georelation';
            } else {
                me.url += '/datasets/' + parameter.dataset + '/georelation';
            }

            var jsonParameters = _SuperMap2.default.Util.toJSON(parameter);

            if (me.isInTheSameDomain) {
                me.url += '.json?returnContent=true';
            } else {
                me.url += '.jsonp?returnContent=true';
            }

            me.request({
                method: "POST",
                data: jsonParameters,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return GeoRelationAnalystService;
}(_SpatialAnalystBase3.default);

exports.default = GeoRelationAnalystService;


_SuperMap2.default.GeoRelationAnalystService = GeoRelationAnalystService;

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _BufferAnalystParameters = __webpack_require__(37);

var _BufferAnalystParameters2 = _interopRequireDefault(_BufferAnalystParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Class:  SuperMap.GeometryBufferAnalystParameters
 * 几何对象缓冲区分析参数类
 * 对指定的某个几何对象做缓冲区分析。通过该类可以指定要做缓冲区分析的几何对象、缓冲区参数等。
 *
 * Inherits from:
 *  - <SuperMap.BufferAnalystParameters>
 */
var GeometryBufferAnalystParameters = function (_BufferAnalystParamet) {
    _inherits(GeometryBufferAnalystParameters, _BufferAnalystParamet);

    /**
     * Constructor:  SuperMap.GeometryBufferAnalystParameters
     * 几何对象缓冲区分析参数类构造函数。
     *
     * Parameters:
     * options - {Object} 参数。
     *
     * Allowed options properties:
     * sourceGeometry - {Object} 要做缓冲区分析的几何对象。必设字段。
     * bufferSetting - {SuperMap.BufferSetting} 设置缓冲区通用参数。
     */
    function GeometryBufferAnalystParameters(options) {
        _classCallCheck(this, GeometryBufferAnalystParameters);

        var _this = _possibleConstructorReturn(this, (GeometryBufferAnalystParameters.__proto__ || Object.getPrototypeOf(GeometryBufferAnalystParameters)).call(this, options));

        _this.sourceGeometry = null;
        _this.CLASS_NAME = " SuperMap.GeometryBufferAnalystParameters";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /**
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * Property: sourceGeometry
     * {Object} 要做缓冲区分析的几何对象(支持Point、LineString、LinearRing、Polygon)。必设字段。
     */


    _createClass(GeometryBufferAnalystParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(GeometryBufferAnalystParameters.prototype.__proto__ || Object.getPrototypeOf(GeometryBufferAnalystParameters.prototype), 'destroy', this).call(this);
            var me = this;
            if (me.sourceGeometry) {
                me.sourceGeometry.destroy();
                me.sourceGeometry = null;
            }
        }
    }], [{
        key: 'toObject',
        value: function toObject(geometryBufferAnalystParameters, tempObj) {
            for (var name in geometryBufferAnalystParameters) {
                if (name === "bufferSetting") {
                    var tempBufferSetting = {};
                    for (var key in geometryBufferAnalystParameters.bufferSetting) {
                        tempBufferSetting[key] = geometryBufferAnalystParameters.bufferSetting[key];
                    }
                    delete tempBufferSetting.radiusUnit;
                    tempObj.analystParameter = tempBufferSetting;
                } else if (name === "sourceGeometry") {
                    tempObj.sourceGeometry = _SuperMap2.default.REST.ServerGeometry.fromGeometry(geometryBufferAnalystParameters.sourceGeometry);
                } else {
                    tempObj[name] = geometryBufferAnalystParameters[name];
                }
            }
        }
    }]);

    return GeometryBufferAnalystParameters;
}(_BufferAnalystParameters2.default);

exports.default = GeometryBufferAnalystParameters;


_SuperMap2.default.GeometryBufferAnalystParameters = GeometryBufferAnalystParameters;

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _OverlayAnalystParameters = __webpack_require__(38);

var _OverlayAnalystParameters2 = _interopRequireDefault(_OverlayAnalystParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.GeometryOverlayAnalystParameters
 * @constructs SuperMap.GeometryOverlayAnalystParameters
 * @classdesc
 * 几何对象叠加分析参数类
 * 对指定的某两个几何对象做叠加分析。通过该类可以指定要做叠加分析的几何对象、叠加操作类型。
 * @extends {SuperMap.OverlayAnalystParameters}
 * @api
 */
var GeometryOverlayAnalystParameters = function (_OverlayAnalystParame) {
    _inherits(GeometryOverlayAnalystParameters, _OverlayAnalystParame);

    /**
     * @method SuperMap.GeometryOverlayAnalystParameters.initialize
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * operateGeometry - {SuperMap.Geometry} 叠加分析的操作几何对象。必设字段。</br>
     * sourceGeometry - {SuperMap.Geometry} 叠加分析的源几何对象。必设字段。</br>
     * operation - {SuperMap.OverlayOperationType} 叠加操作枚举值。</br>
     */


    /**
     * Property: operateGeometry
     * {SuperMap.Geometry} 叠加分析的操作几何对象。必设字段。
     */
    function GeometryOverlayAnalystParameters(options) {
        _classCallCheck(this, GeometryOverlayAnalystParameters);

        var _this = _possibleConstructorReturn(this, (GeometryOverlayAnalystParameters.__proto__ || Object.getPrototypeOf(GeometryOverlayAnalystParameters)).call(this, options));

        _this.operateGeometry = null;
        _this.sourceGeometry = null;
        _this.CLASS_NAME = "SuperMap.GeometryOverlayAnalystParameters";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * Property: sourceGeometry
     * {SuperMap.Geometry} 叠加分析的源几何对象。必设字段。
     */


    _createClass(GeometryOverlayAnalystParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(GeometryOverlayAnalystParameters.prototype.__proto__ || Object.getPrototypeOf(GeometryOverlayAnalystParameters.prototype), 'destroy', this).call(this);
            var me = this;
            if (me.sourceGeometry) {
                me.sourceGeometry.destroy();
                me.sourceGeometry = null;
            }

            if (me.operateGeometry) {
                me.operateGeometry.destroy();
                me.operateGeometry = null;
            }
        }
    }], [{
        key: 'toObject',
        value: function toObject(geometryOverlayAnalystParameters, tempObj) {
            for (var name in geometryOverlayAnalystParameters) {
                if (name === "sourceGeometry") {
                    tempObj.sourceGeometry = _SuperMap2.default.REST.ServerGeometry.fromGeometry(geometryOverlayAnalystParameters.sourceGeometry);
                } else if (name === "operateGeometry") {
                    tempObj.operateGeometry = _SuperMap2.default.REST.ServerGeometry.fromGeometry(geometryOverlayAnalystParameters.operateGeometry);
                } else {
                    tempObj[name] = geometryOverlayAnalystParameters[name];
                }
            }
        }
    }]);

    return GeometryOverlayAnalystParameters;
}(_OverlayAnalystParameters2.default);

exports.default = GeometryOverlayAnalystParameters;


_SuperMap2.default.GeometryOverlayAnalystParameters = GeometryOverlayAnalystParameters;

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _SurfaceAnalystParameters = __webpack_require__(40);

var _SurfaceAnalystParameters2 = _interopRequireDefault(_SurfaceAnalystParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.GeometrySurfaceAnalystParameters
 * @constructs SuperMap.GeometrySurfaceAnalystParameters
 * @classdesc
 * 几何对象表面分析参数类。
 * 该类对几何对象表面分析所用到的参数进行设置。
 * @extends {SuperMap.SurfaceAnalystParameters}
 * @api
 */
var GeometrySurfaceAnalystParameters = function (_SurfaceAnalystParame) {
    _inherits(GeometrySurfaceAnalystParameters, _SurfaceAnalystParame);

    /**
     *
     * @method SuperMap.GetFeaturesByBufferService.initialize
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * points - {Array(<SuperMap.Geometry.Point>)} 表面分析的坐标点数组。</br>
     * zValues - {Array(Number)} 表面分析的坐标点的 Z 值数组。</br>
     * resolution - {Number} 获取或设置指定中间结果（栅格数据集）的分辨率。</br>
     * resultSetting - {SuperMap.DataReturnOption} 结果返回设置类。</br>
     * extractParameter - {SuperMap.SurfaceAnalystParametersSetting} 获取或设置表面分析参数。</br>
     * surfaceAnalystMethod - {SuperMap.SurfaceAnalystMethod} 获取或设置表面分析的提取方法，提取等值线和提取等值面。</br>
     */


    /**
     * APIProperty: points
     * {Array(<SuperMap.Geometry.Point>)} 获取或设置用于表面分析的坐标点数组。
     */
    function GeometrySurfaceAnalystParameters(options) {
        _classCallCheck(this, GeometrySurfaceAnalystParameters);

        var _this = _possibleConstructorReturn(this, (GeometrySurfaceAnalystParameters.__proto__ || Object.getPrototypeOf(GeometrySurfaceAnalystParameters)).call(this, options));

        _this.points = null;
        _this.zValues = null;
        _this.CLASS_NAME = "SuperMap.GeometrySurfaceAnalystParameters";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: zValues
     * {Array(Number)} 获取或设置用于提取操作的值。提取等值线时，将使用该数组中的值，
     * 对几何对象中的坐标点数组进行插值分析，得到栅格数据集（中间结果），接着从栅格数据集提取等值线。
     */


    _createClass(GeometrySurfaceAnalystParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(GeometrySurfaceAnalystParameters.prototype.__proto__ || Object.getPrototypeOf(GeometrySurfaceAnalystParameters.prototype), 'destroy', this).call(this);
            var me = this;
            if (me.points) {
                for (var i = 0, points = me.points, len = points.length; i < len; i++) {
                    points[i].destroy();
                }
                me.points = null;
            }
            me.zValues = null;
        }
    }]);

    return GeometrySurfaceAnalystParameters;
}(_SurfaceAnalystParameters2.default);

exports.default = GeometrySurfaceAnalystParameters;


_SuperMap2.default.GeometrySurfaceAnalystParameters = GeometrySurfaceAnalystParameters;

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ThiessenAnalystParameters = __webpack_require__(34);

var _ThiessenAnalystParameters2 = _interopRequireDefault(_ThiessenAnalystParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.GeometryThiessenAnalystParameters
 * @constructs SuperMap.GeometryThiessenAnalystParameters
 * @classdesc
 * 几何对象泰森多边形分析参数类
 * 对指定的某个几何对象做泰森多边形分析。通过该类可以指定要做泰森多边形分析的几何对象、返回数据集名称等。
 * @extends {SuperMap.ThiessenAnalystParameters}
 * @api
 */

var GeometryThiessenAnalystParameters = function (_ThiessenAnalystParam) {
    _inherits(GeometryThiessenAnalystParameters, _ThiessenAnalystParam);

    /**
     * @method SuperMap.GetFeaturesByBufferService.initialize
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * points - {Array(<Point||Array>)} 使用点数组进行分析时使用的几何对象。
     */
    function GeometryThiessenAnalystParameters(options) {
        _classCallCheck(this, GeometryThiessenAnalystParameters);

        var _this = _possibleConstructorReturn(this, (GeometryThiessenAnalystParameters.__proto__ || Object.getPrototypeOf(GeometryThiessenAnalystParameters)).call(this, options));

        _this.points = null;
        _this.CLASS_NAME = "SuperMap.GeometryThiessenAnalystParameters";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * Property: points
     * {Array(<Point||Array>)}
     * 使用点数组进行分析时使用的几何对象。
     */


    _createClass(GeometryThiessenAnalystParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(GeometryThiessenAnalystParameters.prototype.__proto__ || Object.getPrototypeOf(GeometryThiessenAnalystParameters.prototype), 'destroy', this).call(this);
            var me = this;
            if (me.points) {
                for (var i = me.points.length - 1; i >= 0; i--) {
                    me.points[i].destroy();
                }
                me.points = null;
            }
        }
    }], [{
        key: 'toObject',
        value: function toObject(geometryThiessenAnalystParameters, tempObj) {
            for (var name in geometryThiessenAnalystParameters) {
                if (name === "clipRegion") {
                    tempObj.clipRegion = _SuperMap2.default.REST.ServerGeometry.fromGeometry(geometryThiessenAnalystParameters.clipRegion);
                } else {
                    tempObj[name] = geometryThiessenAnalystParameters[name];
                }
            }
        }
    }]);

    return GeometryThiessenAnalystParameters;
}(_ThiessenAnalystParameters2.default);

exports.default = GeometryThiessenAnalystParameters;


_SuperMap2.default.GeometryThiessenAnalystParameters = GeometryThiessenAnalystParameters;

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

var _FilterParameter = __webpack_require__(10);

var _FilterParameter2 = _interopRequireDefault(_FilterParameter);

var _GetFeaturesParametersBase = __webpack_require__(22);

var _GetFeaturesParametersBase2 = _interopRequireDefault(_GetFeaturesParametersBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.GetFeaturesByBoundsParameters
 * @constructs  SuperMap.GetFeaturesByBoundsParameters
 * @classdesc
 * 数据集范围查询参数类。
 * 该类用于设置数据集范围查询的相关参数。
 * @extends {SuperMap.GetFeaturesParametersBase}
 * @api
 */

var GetFeaturesByBoundsParameters = function (_GetFeaturesParameter) {
    _inherits(GetFeaturesByBoundsParameters, _GetFeaturesParameter);

    /**
     * Constructor: SuperMap.GetFeaturesByBoundsParameters
     * 范围空间查询参数类构造函数。
     *@method SuperMap.GetFeaturesByBoundsParameters.initialize
     *
     * @param options - {Object} 参数。
     *
     * Allowed options properties:
     *
     * bounds - {SuperMap.Bounds} 用于查询的范围对象。</br>
     * attributeFilter - {String} 范围查询属性过滤条件。</br>
     * fields - {Array(String)} 设置查询结果返回字段。默认返回所有字段。</br>
     * spatialQueryMode - {SuperMap.SpatialQueryMode} 空间查询模式常量,必设参数。</br>
     * queryParameter - {SuperMap.FilterParameter} 查询过滤条件参数。</br>
     * datasetNames - {Array(String)} 数据集集合中的数据集名称列表。</br>
     * returnContent - {Boolean} 是否直接返回查询结果。</br>
     * fromIndex - {Integer} 查询结果的最小索引号。</br>
     * toIndex - {Integer} 查询结果的最大索引号。</br>
     */


    /**
     * APIProperty: spatialQueryMode
     * {SuperMap.SpatialQueryMode} 空间查询模式常量，必设参数，默认为CONTAIN。
     */


    /**
     * APIProperty: fields
     * {Array(String)} 设置查询结果返回字段。
     *                 当指定了返回结果字段后，则 GetFeaturesResult 中的 features 的属性字段只包含所指定的字段。
     *                 不设置即返回全部字段。
     */


    /**
     * @property {String} getFeatureMode
     * @description数据集查询模式。
     * 范围查询有"BOUNDS"，"BOUNDS_ATTRIBUTEFILTER"两种,当用户设置attributeFilter时会自动切换到BOUNDS_ATTRIBUTEFILTER访问服务。
     */
    function GetFeaturesByBoundsParameters(options) {
        _classCallCheck(this, GetFeaturesByBoundsParameters);

        var _this = _possibleConstructorReturn(this, (GetFeaturesByBoundsParameters.__proto__ || Object.getPrototypeOf(GetFeaturesByBoundsParameters)).call(this, options));

        _this.getFeatureMode = null;
        _this.bounds = null;
        _this.fields = null;
        _this.attributeFilter = null;
        _this.spatialQueryMode = _REST.SpatialQueryMode.CONTAIN;
        _this.CLASS_NAME = "SuperMap.GetFeaturesByBoundsParameters";

        _this.getFeatureMode = GetFeaturesByBoundsParameters.getFeatureMode.BOUNDS;
        if (!options) {
            return _possibleConstructorReturn(_this);
        }
        _SuperMap2.default.Util.extend(_this, options);
        return _this;
    }

    /* @method SuperMap.GetFeaturesByBoundsParameters.destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: attributeFilter
     * {String} 范围查询属性过滤条件。
     */


    /**
     * APIProperty: bounds
     * {SuperMap.Bounds} 用于查询的范围对象。
     */


    _createClass(GetFeaturesByBoundsParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(GetFeaturesByBoundsParameters.prototype.__proto__ || Object.getPrototypeOf(GetFeaturesByBoundsParameters.prototype), 'destroy', this).call(this);
            var me = this;
            if (me.bounds) {
                me.bounds.destroy();
                me.bounds = null;
            }
            if (me.fields) {
                while (me.fields.length > 0) {
                    me.fields.pop();
                }
                me.fields = null;
            }
            me.attributeFilter = null;
            me.spatialQueryMode = null;
            me.getFeatureMode = null;
        }

        /**
         * @method: SuperMap.GetFeaturesByBoundsParameters.toJsonParameters
         * @description 将<SuperMap.GetFeaturesByBoundsParameters>对象参数转换为json字符串。
         *
         * @param params - {SuperMap.GetFeaturesByBoundsParameters} 范围查询参数。
         * @return  {String} 转化后的 json字符串。
         *
         */

    }], [{
        key: 'toJsonParameters',
        value: function toJsonParameters(params) {
            var filterParameter, bounds, parasByBounds;

            bounds = {
                "leftBottom": { "x": params.bounds.left, "y": params.bounds.bottom },
                "rightTop": { "x": params.bounds.right, "y": params.bounds.top }
            };
            parasByBounds = {
                datasetNames: params.datasetNames,
                getFeatureMode: GetFeaturesByBoundsParameters.getFeatureMode.BOUNDS,
                bounds: bounds,
                spatialQueryMode: params.spatialQueryMode
            };
            if (params.fields) {
                filterParameter = new _FilterParameter2.default();
                filterParameter.name = params.datasetNames;
                filterParameter.fields = params.fields;
                parasByBounds.queryParameter = filterParameter;
            }
            if (params.attributeFilter) {
                parasByBounds.attributeFilter = params.attributeFilter;
                parasByBounds.getFeatureMode = GetFeaturesByBoundsParameters.getFeatureMode.BOUNDS_ATTRIBUTEFILTER;
            }
            if (params.maxFeatures && !isNaN(params.maxFeatures)) {
                parasByBounds.maxFeatures = params.maxFeatures;
            }

            return _SuperMap2.default.Util.toJSON(parasByBounds);
        }
    }]);

    return GetFeaturesByBoundsParameters;
}(_GetFeaturesParametersBase2.default);

GetFeaturesByBoundsParameters.getFeatureMode = {
    "BOUNDS": "BOUNDS",
    "BOUNDS_ATTRIBUTEFILTER": "BOUNDS_ATTRIBUTEFILTER"
};
exports.default = GetFeaturesByBoundsParameters;


_SuperMap2.default.GetFeaturesByBoundsParameters = GetFeaturesByBoundsParameters;

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _GetFeaturesServiceBase = __webpack_require__(23);

var _GetFeaturesServiceBase2 = _interopRequireDefault(_GetFeaturesServiceBase);

var _GetFeaturesByBoundsParameters = __webpack_require__(155);

var _GetFeaturesByBoundsParameters2 = _interopRequireDefault(_GetFeaturesByBoundsParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.GetFeaturesByBoundsService
 * @constructs  SuperMap.GetFeaturesByBoundsService
 * @classdesc
 * 数据集范围查询服务类</br>
 * 查询与指定范围对象符合一定空间关系的矢量要素。
 * @description 数据集范围查询服务类构造函数。
 * @extends {SuperMap.GetFeaturesServiceBase}
 * @api
 * @param url - {String} 数据查询结果资源地址。请求数据服务中数据集查询服务，
 *  URL 应为：http://{服务器地址}:{服务端口号}/iserver/services/{数据服务名}/rest/data/；
 * @example："http://localhost:8090/iserver/services/data-jingjin/rest/data/"
 *@param options - {Object} 参数。
 *
 * Allowed options properties:
 * eventListeners - {Object} 需要被注册的监听器对象。</br>
 * @example
 * (start code)
 * var myGetFeaturesByBoundsService = new SuperMap.GetFeaturesByBoundsService(url, {
     *     eventListeners: {
     *           "processCompleted": getFeatureCompleted,
     *           "processFailed": getFeatureError
     *           }
     * });
 * function getFeatureCompleted(object){//todo};
 * function getFeatureError(object){//todo}
 * (end)
 */

var GetFeaturesByBoundsService = function (_GetFeaturesServiceBa) {
    _inherits(GetFeaturesByBoundsService, _GetFeaturesServiceBa);

    /**
     * @method SuperMap.GetFeaturesByBoundsService.initialize
     * @param url - {string}
     * @param options - {Object} 参数。
     */

    function GetFeaturesByBoundsService(url, options) {
        _classCallCheck(this, GetFeaturesByBoundsService);

        var _this = _possibleConstructorReturn(this, (GetFeaturesByBoundsService.__proto__ || Object.getPrototypeOf(GetFeaturesByBoundsService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.GetFeaturesByBoundsService";
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    _createClass(GetFeaturesByBoundsService, [{
        key: 'destroy',
        value: function destroy() {
            _get(GetFeaturesByBoundsService.prototype.__proto__ || Object.getPrototypeOf(GetFeaturesByBoundsService.prototype), 'destroy', this).call(this);
        }

        /**
         * @method SuperMap.GetFeaturesByBoundsService.getJsonParameters
         * @description 将查询参数转化为 JSON 字符串。
         * 在本类中重写此方法，可以实现不同种类的查询（ID, SQL, Buffer, Geometry,Bounds等）。
         *
         * @param params  {SuperMap.GetFeaturesByBoundsParameters}
         *
         * @return {Object} 转化后的 JSON 字符串。
         *
         */

    }, {
        key: 'getJsonParameters',
        value: function getJsonParameters(params) {
            return _GetFeaturesByBoundsParameters2.default.toJsonParameters(params);
        }
    }]);

    return GetFeaturesByBoundsService;
}(_GetFeaturesServiceBase2.default);

exports.default = GetFeaturesByBoundsService;


_SuperMap2.default.GetFeaturesByBoundsService = GetFeaturesByBoundsService;

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _GetFeaturesParametersBase = __webpack_require__(22);

var _GetFeaturesParametersBase2 = _interopRequireDefault(_GetFeaturesParametersBase);

var _FilterParameter = __webpack_require__(10);

var _FilterParameter2 = _interopRequireDefault(_FilterParameter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.GetFeaturesByBufferParameters
 * @constructs SuperMap.GetFeaturesByBufferParameters
 * @classdesc
 * 数据服务中数据集缓冲区查询参数类。
 * @extends {SuperMap.GetFeaturesParametersBase}
 * @api
 */
var GetFeaturesByBufferParameters = function (_GetFeaturesParameter) {
    _inherits(GetFeaturesByBufferParameters, _GetFeaturesParameter);

    /**
     * @constructor: SuperMap.GetFeaturesByBufferParameters
     * @classdesc 缓冲区查询参数类构造函数。
     * @method SuperMap.GetFeaturesByBufferParameters.initialize
     * @param options - {Object} 参数。
     *
     * Allowed options properties:
     * bufferDistance - {Number} buffer 距离，单位与所查询图层对应的数据集单位相同。</br>
     * attributeFilter - {String} 属性查询条件。 </br>
     * fields - {Array(String)} 设置查询结果返回字段。默认返回所有字段。</br>
     * geometry - {Object} 空间查询条件。</br>
     * dataSetNames - {Array(String)} 数据集集合中的数据集名称列表。</br>
     * returnContent - {Boolean} 是否直接返回查询结果。</br>
     * fromIndex - {Integer} 查询结果的最小索引号。</br>
     * toIndex - {Integer} 查询结果的最大索引号。</br>
     */


    /**
     * APIProperty: geometry
     * {Object} 空间查询条件。
     */


    /**
     * APIProperty: bufferDistance
     * {Number} buffer距离,单位与所查询图层对应的数据集单位相同。
     */
    function GetFeaturesByBufferParameters(options) {
        _classCallCheck(this, GetFeaturesByBufferParameters);

        var _this = _possibleConstructorReturn(this, (GetFeaturesByBufferParameters.__proto__ || Object.getPrototypeOf(GetFeaturesByBufferParameters)).call(this, options));

        _this.bufferDistance = null;
        _this.attributeFilter = null;
        _this.geometry = null;
        _this.fields = null;
        _this.CLASS_NAME = "SuperMap.GetFeaturesByBufferParameters";

        if (!options) {
            return _possibleConstructorReturn(_this);
        }
        _SuperMap2.default.Util.extend(_this, options);
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: fields
     * {Array(String)} 设置查询结果返回字段。
     *                 当指定了返回结果字段后，则 GetFeaturesResult 中的 features 的属性字段只包含所指定的字段。
     *                 不设置即返回全部字段。
     */


    /**
     * APIProperty: queryParameter
     * {String} 属性查询条件。
     */


    _createClass(GetFeaturesByBufferParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(GetFeaturesByBufferParameters.prototype.__proto__ || Object.getPrototypeOf(GetFeaturesByBufferParameters.prototype), 'destroy', this).call(this);
            var me = this;
            me.bufferDistance = null;
            me.attributeFilter = null;
            if (me.fields) {
                while (me.fields.length > 0) {
                    me.fields.pop();
                }
                me.fields = null;
            }
            if (me.geometry) {
                me.geometry.destroy();
                me.geometry = null;
            }
        }

        /**
         * @method SuperMap.GetFeaturesByBufferParameters.toJsonParameters
         * @description 对象参数转换为json字符串。
         * @param params -{SuperMap.GetFeaturesByBufferParameters} SQL查询参数。
         * @return {String} 转化后的 json字符串。
         */

    }], [{
        key: 'toJsonParameters',
        value: function toJsonParameters(params) {
            var filterParameter, paramsBySql, geometry;
            geometry = _SuperMap2.default.REST.ServerGeometry.fromGeometry(params.geometry);
            paramsBySql = {
                datasetNames: params.datasetNames,
                getFeatureMode: "BUFFER",
                bufferDistance: params.bufferDistance,
                geometry: geometry
            };
            if (params.fields) {
                filterParameter = new _FilterParameter2.default();
                filterParameter.name = params.datasetNames;
                filterParameter.fields = params.fields;
                paramsBySql.queryParameter = filterParameter;
            }
            if (params.attributeFilter) {
                paramsBySql.attributeFilter = params.attributeFilter;
                paramsBySql.getFeatureMode = "BUFFER_ATTRIBUTEFILTER";
            }
            if (params.maxFeatures && !isNaN(params.maxFeatures)) {
                paramsBySql.maxFeatures = params.maxFeatures;
            }
            return _SuperMap2.default.Util.toJSON(paramsBySql);
        }
    }]);

    return GetFeaturesByBufferParameters;
}(_GetFeaturesParametersBase2.default);

exports.default = GetFeaturesByBufferParameters;


_SuperMap2.default.GetFeaturesByBufferParameters = GetFeaturesByBufferParameters;

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _GetFeaturesServiceBase = __webpack_require__(23);

var _GetFeaturesServiceBase2 = _interopRequireDefault(_GetFeaturesServiceBase);

var _GetFeaturesByBufferParameters = __webpack_require__(157);

var _GetFeaturesByBufferParameters2 = _interopRequireDefault(_GetFeaturesByBufferParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.GetFeaturesByBufferService
 * @constructs SuperMap.GetFeaturesByBufferService
 * @classdesc
 * 数据服务中数据集缓冲区查询服务类。
 * @extends {SuperMap.GetFeaturesServiceBase}
 * @api
 * @example 例如：
 * (start code)
 * var myGetFeaturesByBufferService = new   SuperMap.GetFeaturesByBufferService(url, {
     *     eventListeners: {
     *           "processCompleted": GetFeaturesCompleted,
     *           "processFailed": GetFeaturesError
     *           }
     * });
 * function GetFeaturesCompleted(object){//todo};
 * function GetFeaturesError(object){//todo};
 * (end)
 *
 */

var GetFeaturesByBufferService = function (_GetFeaturesServiceBa) {
    _inherits(GetFeaturesByBufferService, _GetFeaturesServiceBa);

    /**
     *
     * @method SuperMap.GetFeaturesByBufferService.initialize
     * @param url - {String} 数据查询结果资源地址。请求数据服务中数据集查询服务，
     * URL 应为：http://{服务器地址}:{服务端口号}/iserver/services/{数据服务名}/rest/data/；</br>
     * 例如："http://localhost:8090/iserver/services/data-jingjin/rest/data/"
     * @param options - {Object} 参数。
     *
     * Allowed options properties:</br>
     * eventListeners - {Object} 需要被注册的监听器对象。
     */
    function GetFeaturesByBufferService(url, options) {
        _classCallCheck(this, GetFeaturesByBufferService);

        var _this = _possibleConstructorReturn(this, (GetFeaturesByBufferService.__proto__ || Object.getPrototypeOf(GetFeaturesByBufferService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.GetFeaturesByBufferService";
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    _createClass(GetFeaturesByBufferService, [{
        key: 'destroy',
        value: function destroy() {
            _get(GetFeaturesByBufferService.prototype.__proto__ || Object.getPrototypeOf(GetFeaturesByBufferService.prototype), 'destroy', this).call(this);
        }

        /**
         * @method SuperMap.GetFeaturesByBufferService.getJsonParameters
         * @description 将查询参数转化为 JSON 字符串。
         * 在本类中重写此方法，可以实现不同种类的查询（IDs, SQL, Buffer, Geometry等）。
         *
         * @param params  {SuperMap.GetFeaturesByBufferParameters}
         * @return {Object} 转化后的 JSON 字符串。
         */

    }, {
        key: 'getJsonParameters',
        value: function getJsonParameters(params) {
            return _SuperMap2.default.GetFeaturesByBufferParameters.toJsonParameters(params);
        }
    }]);

    return GetFeaturesByBufferService;
}(_GetFeaturesServiceBase2.default);

exports.default = GetFeaturesByBufferService;


_SuperMap2.default.GetFeaturesByBufferService = GetFeaturesByBufferService;

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

var _FilterParameter = __webpack_require__(10);

var _FilterParameter2 = _interopRequireDefault(_FilterParameter);

var _GetFeaturesParametersBase = __webpack_require__(22);

var _GetFeaturesParametersBase2 = _interopRequireDefault(_GetFeaturesParametersBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.GetFeaturesByGeometryParameters
 * @constructs SuperMap.GetFeaturesByGeometryParameters
 * @classdesc
 * 数据集几何查询参数类。
 * 该类用于设置数据集几何查询的相关参数。
 * @extends {SuperMap.GetFeaturesParametersBase}
 * @api
 */
var GetFeaturesByGeometryParameters = function (_GetFeaturesParameter) {
    _inherits(GetFeaturesByGeometryParameters, _GetFeaturesParameter);

    /**
     * @method SuperMap.GetFeaturesByGeometryParameters.initialize
     * @description 几何空间查询参数类构造函数。
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * geometry - {Object} 用于查询的几何对象。</br>
     * attributeFilter - {String} 几何查询属性过滤条件。</br>
     * fields - {Array(String)} 设置查询结果返回字段。默认返回所有字段。</br>
     * spatialQueryMode - {SuperMap.SpatialQueryMode} 空间查询模式常量,必设参数。</br>
     * queryParameter - {SuperMap.FilterParameter} 查询过滤条件参数。</br>
     * datasetNames - {Array(String)} 数据集集合中的数据集名称列表。</br>
     * returnContent - {Boolean} 是否直接返回查询结果。</br>
     * fromIndex - {Integer} 查询结果的最小索引号。</br>
     * toIndex - {Integer} 查询结果的最大索引号。</br>
     */


    /**
     * APIProperty: attributeFilter
     * {String} 几何查询属性过滤条件。
     */


    /**
     * APIProperty: geometry
     * {Object} 用于查询的几何对象。
     */
    function GetFeaturesByGeometryParameters(options) {
        _classCallCheck(this, GetFeaturesByGeometryParameters);

        var _this = _possibleConstructorReturn(this, (GetFeaturesByGeometryParameters.__proto__ || Object.getPrototypeOf(GetFeaturesByGeometryParameters)).call(this, options));

        _this.getFeatureMode = "SPATIAL";
        _this.geometry = null;
        _this.fields = null;
        _this.attributeFilter = null;
        _this.spatialQueryMode = _REST.SpatialQueryMode.CONTAIN;
        _this.CLASS_NAME = "SuperMap.GetFeaturesByGeometryParameters";

        if (!options) {
            return _possibleConstructorReturn(_this);
        }
        _SuperMap2.default.Util.extend(_this, options);
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: spatialQueryMode
     * {SuperMap.SpatialQueryMode} 空间查询模式常量，必设参数，默认为CONTAIN。
     */


    /**
     * APIProperty: fields
     * {Array(String)} 设置查询结果返回字段。
     *                 当指定了返回结果字段后，则 GetFeaturesResult 中的 features 的属性字段只包含所指定的字段。
     *                 不设置即返回全部字段。
     */


    /**
     * Property: getFeatureMode
     * {String} 数据集查询模式。
     * 几何查询有"SPATIAL"，"SPATIAL_ATTRIBUTEFILTER"两种,当用户设置attributeFilter时会自动切换到SPATIAL_ATTRIBUTEFILTER访问服务。
     */


    _createClass(GetFeaturesByGeometryParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(GetFeaturesByGeometryParameters.prototype.__proto__ || Object.getPrototypeOf(GetFeaturesByGeometryParameters.prototype), 'destroy', this).call(this);
            var me = this;
            if (me.geometry) {
                me.geometry.destroy();
                me.geometry = null;
            }
            if (me.fields) {
                while (me.fields.length > 0) {
                    me.fields.pop();
                }
                me.fields = null;
            }
            me.attributeFilter = null;
            me.spatialQueryMode = null;
            me.getFeatureMode = null;
        }

        /**
         * @method SuperMap.GetFeaturesByGeometryParameters.toJsonParameters
         * @description 将<SuperMap.GetFeaturesByGeometryParameters>对象参数转换为json字符串。
         * @param params - {SuperMap.GetFeaturesByGeometryParameters} 几何查询参数。
         * @return {String} 转化后的 json字符串。
         */

    }], [{
        key: 'toJsonParameters',
        value: function toJsonParameters(params) {
            var filterParameter, geometry, parasByGeometry;

            geometry = _SuperMap2.default.REST.ServerGeometry.fromGeometry(params.geometry);
            parasByGeometry = {
                datasetNames: params.datasetNames,
                getFeatureMode: "SPATIAL",
                geometry: geometry,
                spatialQueryMode: params.spatialQueryMode
            };
            if (params.fields) {
                filterParameter = new _FilterParameter2.default();
                filterParameter.name = params.datasetNames;
                filterParameter.fields = params.fields;
                parasByGeometry.queryParameter = filterParameter;
            }
            if (params.attributeFilter) {
                parasByGeometry.attributeFilter = params.attributeFilter;
                parasByGeometry.getFeatureMode = "SPATIAL_ATTRIBUTEFILTER";
            }
            if (params.maxFeatures && !isNaN(params.maxFeatures)) {
                parasByGeometry.maxFeatures = params.maxFeatures;
            }

            return _SuperMap2.default.Util.toJSON(parasByGeometry);
        }
    }]);

    return GetFeaturesByGeometryParameters;
}(_GetFeaturesParametersBase2.default);

exports.default = GetFeaturesByGeometryParameters;


_SuperMap2.default.GetFeaturesByGeometryParameters = GetFeaturesByGeometryParameters;

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _GetFeaturesServiceBase = __webpack_require__(23);

var _GetFeaturesServiceBase2 = _interopRequireDefault(_GetFeaturesServiceBase);

var _GetFeaturesByGeometryParameters = __webpack_require__(159);

var _GetFeaturesByGeometryParameters2 = _interopRequireDefault(_GetFeaturesByGeometryParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.GetFeaturesByGeometryService
 * @constructs SuperMap.GetFeaturesByGeometryService
 * @classdesc
 * 数据集几何查询服务类
 * 查询与指定几何对象符合一定空间关系的矢量要素。
 * @extends {SuperMap.GetFeaturesServiceBase}
 * @api
 * @example 例如：
 * (start code)
 * var myService = new SuperMap.GetFeaturesByGeometryService(url, {
     *     eventListeners: {
     *           "processCompleted": getFeatureCompleted,
     *           "processFailed": getFeatureError
     *           }
     * });
 * function getFeatureCompleted(object){//todo};
 * function getFeatureError(object){//todo}
 * (end)
 *
 */
var GetFeaturesByGeometryService = function (_GetFeaturesServiceBa) {
    _inherits(GetFeaturesByGeometryService, _GetFeaturesServiceBa);

    /**
     * @method SuperMap.GetFeaturesByGeometryService.initialize
     * @description 数据集几何查询服务类构造函数。
     * @param url - {String} 数据查询结果资源地址。请求数据服务中数据集查询服务，:</br>
     * URL 应为：http://{服务器地址}:{服务端口号}/iserver/services/{数据服务名}/rest/data；:</br>
     * 例如："http://localhost:8090/iserver/services/data-jingjin/rest/data"
     * @param options - {Object} 参数。
     *
     * Allowed options properties:</br>
     * eventListeners - {Object} 需要被注册的监听器对象。</br>
       */
    function GetFeaturesByGeometryService(url, options) {
        _classCallCheck(this, GetFeaturesByGeometryService);

        var _this = _possibleConstructorReturn(this, (GetFeaturesByGeometryService.__proto__ || Object.getPrototypeOf(GetFeaturesByGeometryService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.GetFeaturesByGeometryService";
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    _createClass(GetFeaturesByGeometryService, [{
        key: 'destroy',
        value: function destroy() {
            _get(GetFeaturesByGeometryService.prototype.__proto__ || Object.getPrototypeOf(GetFeaturesByGeometryService.prototype), 'destroy', this).call(this);
        }

        /**
         * @method SuperMap.GetFeaturesByGeometryService.getJsonParameters
         * @param params - {SuperMap.GetFeaturesByGeometryParameters}
         *
         * @description 将查询参数转化为 JSON 字符串。
         * 在本类中重写此方法，可以实现不同种类的查询（ID, SQL, Buffer, Geometry等）。
         * @return {Object} 转化后的 JSON 字符串。
         */

    }, {
        key: 'getJsonParameters',
        value: function getJsonParameters(params) {
            return _GetFeaturesByGeometryParameters2.default.toJsonParameters(params);
        }
    }]);

    return GetFeaturesByGeometryService;
}(_GetFeaturesServiceBase2.default);

exports.default = GetFeaturesByGeometryService;


_SuperMap2.default.GetFeaturesByGeometryService = GetFeaturesByGeometryService;

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _FilterParameter = __webpack_require__(10);

var _FilterParameter2 = _interopRequireDefault(_FilterParameter);

var _GetFeaturesParametersBase = __webpack_require__(22);

var _GetFeaturesParametersBase2 = _interopRequireDefault(_GetFeaturesParametersBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.GetFeaturesByIDsParameters
 * @constructs SuperMap.GetFeaturesByIDsParameters
 * @classdesc
 * ID 查询参数类。
 * @extends {SuperMap.GetFeaturesParametersBase}
 * @api
 */
var GetFeaturesByIDsParameters = function (_GetFeaturesParameter) {
    _inherits(GetFeaturesByIDsParameters, _GetFeaturesParameter);

    /**
     * @method SuperMap.GetFeaturesBySQLParameters.initialize
     * @description SQL 查询参数类构造函数。
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * IDs - {Array(Integer)} 所要查询指定的元素ID信息。</br>
     * fields - {Array(String)} 设置查询结果返回字段。默认返回所有字段。</br>
     * dataSetNames - {Array(String)} 数据集集合中的数据集名称列表。</br>
     * returnContent - {Boolean} 是否直接返回查询结果。</br>
     * fromIndex - {Integer} 查询结果的最小索引号。</br>
     * toIndex - {Integer} 查询结果的最大索引号。</br>
     */


    /**
     * APIProperty: IDs
     * {Array(Integer)} 所要查询指定的元素ID信息。
     */
    function GetFeaturesByIDsParameters(options) {
        _classCallCheck(this, GetFeaturesByIDsParameters);

        var _this = _possibleConstructorReturn(this, (GetFeaturesByIDsParameters.__proto__ || Object.getPrototypeOf(GetFeaturesByIDsParameters)).call(this, options));

        _this.getFeatureMode = "ID";
        _this.IDs = null;
        _this.fields = null;
        _this.CLASS_NAME = "SuperMap.GetFeaturesByIDsParameters";

        if (!options) {
            return _possibleConstructorReturn(_this);
        }
        _SuperMap2.default.Util.extend(_this, options);
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: fields
     * {Array(String)} 设置查询结果返回字段。
     *                 当指定了返回结果字段后，则 GetFeaturesResult 中的 features 的属性字段只包含所指定的字段。
     *                 不设置即返回全部字段。
     */


    /**
     * Property: getFeatureMode
     * {String} 数据集查询模式。
     */


    _createClass(GetFeaturesByIDsParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(GetFeaturesByIDsParameters.prototype.__proto__ || Object.getPrototypeOf(GetFeaturesByIDsParameters.prototype), 'destroy', this).call(this);
            var me = this;
            me.IDs = null;
            me.getFeatureMode = null;
            if (me.fields) {
                while (me.fields.length > 0) {
                    me.fields.pop();
                }
                me.fields = null;
            }
        }

        /**
         * @method SuperMap.GetFeaturesByIDsParameters.toJsonParameters
         * @description 将<SuperMap.GetFeaturesByIDsParameters>对象参数转换为json字符串。
         * @param params - {SuperMap.GetFeaturesByIDsParameters} IDs查询参数。
         * @return {String} 转化后的 json字符串。
         */

    }], [{
        key: 'toJsonParameters',
        value: function toJsonParameters(params) {
            var parasByIDs, filterParameter;

            parasByIDs = {
                datasetNames: params.datasetNames,
                getFeatureMode: "ID",
                ids: params.IDs
            };
            if (params.fields) {
                filterParameter = new _FilterParameter2.default();
                filterParameter.name = params.datasetNames;
                filterParameter.fields = params.fields;
                parasByIDs.queryParameter = filterParameter;
            }
            return _SuperMap2.default.Util.toJSON(parasByIDs);
        }
    }]);

    return GetFeaturesByIDsParameters;
}(_GetFeaturesParametersBase2.default);

exports.default = GetFeaturesByIDsParameters;


_SuperMap2.default.GetFeaturesByIDsParameters = GetFeaturesByIDsParameters;

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _GetFeaturesServiceBase = __webpack_require__(23);

var _GetFeaturesServiceBase2 = _interopRequireDefault(_GetFeaturesServiceBase);

var _GetFeaturesByIDsParameters = __webpack_require__(161);

var _GetFeaturesByIDsParameters2 = _interopRequireDefault(_GetFeaturesByIDsParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.GetFeaturesByIDsService
 * @constructs SuperMap.GetFeaturesByIDsService
 * @classdesc
 * 数据集ID查询服务类。
 * 在数据集集合中查找指定 ID 号对应的空间地物要素。
 * @extends {SuperMap.GetFeaturesServiceBase}
 * @api
 * @example 例如：
 * (start code)
 * var myGetFeaturesByIDsService = new SuperMap.GetFeaturesByIDsService(url, {
     *     eventListeners: {
     *         "processCompleted": getFeatureCompleted,
     *         "processFailed": getFeatureError
     *            }
     *     });
 * function getFeatureCompleted(object){//todo};
 * function getFeatureError(object){//todo}
 * (end)
 *
 *
 */
var GetFeaturesByIDsService = function (_GetFeaturesServiceBa) {
    _inherits(GetFeaturesByIDsService, _GetFeaturesServiceBa);

    /**
     *
     * @method SuperMap.GetFeaturesByIDsService.initialize
     * @description 数据集ID查询服务类构造函数。
     * @param url - {String} 数据查询结果资源地址。请求数据服务中数据集查询服务。
     * URL 应为：http://{服务器地址}:{服务端口号}/iserver/services/{数据服务名}/rest/data/；</br>
     * 例如："http://localhost:8090/iserver/services/data-jingjin/rest/data/"
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * eventListeners - {Object} 需要被注册的监听器对象。</br>
     */
    function GetFeaturesByIDsService(url, options) {
        _classCallCheck(this, GetFeaturesByIDsService);

        var _this = _possibleConstructorReturn(this, (GetFeaturesByIDsService.__proto__ || Object.getPrototypeOf(GetFeaturesByIDsService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.GetFeaturesByIDsService";
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    _createClass(GetFeaturesByIDsService, [{
        key: 'destroy',
        value: function destroy() {
            _get(GetFeaturesByIDsService.prototype.__proto__ || Object.getPrototypeOf(GetFeaturesByIDsService.prototype), 'destroy', this).call(this);
        }

        /**
         * @method SuperMap.GetFeaturesByIDsService.getJsonParameters
         * @description 将查询参数转化为 JSON 字符串。
         * 在本类中重写此方法，可以实现不同种类的查询（ID, SQL, Buffer, Geometry等）。
         * @param  params - {SuperMap.GetFeaturesByIDsParameters}
         * return {Object} 转化后的 JSON 字符串。
         */

    }, {
        key: 'getJsonParameters',
        value: function getJsonParameters(params) {
            return _GetFeaturesByIDsParameters2.default.toJsonParameters(params);
        }
    }]);

    return GetFeaturesByIDsService;
}(_GetFeaturesServiceBase2.default);

exports.default = GetFeaturesByIDsService;


_SuperMap2.default.GetFeaturesByIDsService = GetFeaturesByIDsService;

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _FilterParameter = __webpack_require__(10);

var _FilterParameter2 = _interopRequireDefault(_FilterParameter);

var _GetFeaturesParametersBase = __webpack_require__(22);

var _GetFeaturesParametersBase2 = _interopRequireDefault(_GetFeaturesParametersBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.GetFeaturesBySQLParameters
 * @constructs SuperMap.GetFeaturesBySQLParameters
 * @classdesc
 * 数据服务中数据集SQL查询参数类。
 * @extends {SuperMap.GetFeaturesParametersBase}
 * @api
 */
var GetFeaturesBySQLParameters = function (_GetFeaturesParameter) {
    _inherits(GetFeaturesBySQLParameters, _GetFeaturesParameter);

    /**
     * @method SuperMap.GetFeaturesBySQLParameters.initialize
     * @description  SQL 查询参数类构造函数。
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * queryParameter - {SuperMap.FilterParameter} 查询过滤条件参数。</br>
     * datasetNames - {Array(String)} 数据集集合中的数据集名称列表。</br>
     * returnContent - {Boolean} 是否直接返回查询结果。</br>
     * fromIndex - {Integer} 查询结果的最小索引号。</br>
     * toIndex - {Integer} 查询结果的最大索引号。</br>
     */


    /**
     * Property: getFeatureMode
     * {String} 数据集查询模式。
     */
    function GetFeaturesBySQLParameters(options) {
        _classCallCheck(this, GetFeaturesBySQLParameters);

        var _this = _possibleConstructorReturn(this, (GetFeaturesBySQLParameters.__proto__ || Object.getPrototypeOf(GetFeaturesBySQLParameters)).call(this, options));

        _this.getFeatureMode = "SQL";
        _this.queryParameter = null;
        _this.CLASS_NAME = "SuperMap.GetFeaturesBySQLParameters";

        if (!options) {
            return _possibleConstructorReturn(_this);
        }
        _SuperMap2.default.Util.extend(_this, options);
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */

    /**
     * APIProperty: queryParameter
     * {SuperMap.FilterParameter} 查询过滤条件参数类。
     */


    _createClass(GetFeaturesBySQLParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(GetFeaturesBySQLParameters.prototype.__proto__ || Object.getPrototypeOf(GetFeaturesBySQLParameters.prototype), 'destroy', this).call(this);
            var me = this;
            me.getFeatureMode = null;
            if (me.queryParameter) {
                me.queryParameter.destroy();
                me.queryParameter = null;
            }
        }

        /**
         * @method SuperMap.GetFeaturesBySQLParameters.toJsonParameters
         * @description  将<SuperMap.GetFeaturesBySQLParameters>对象参数转换为json字符串。
         * @param params - {SuperMap.GetFeaturesBySQLParameters} SQL查询参数。
         * @return {String} 转化后的 json字符串。
         */

    }], [{
        key: 'toJsonParameters',
        value: function toJsonParameters(params) {
            var paramsBySql = {
                datasetNames: params.datasetNames,
                getFeatureMode: "SQL",
                queryParameter: params.queryParameter
            };
            if (params.maxFeatures && !isNaN(params.maxFeatures)) {
                paramsBySql.maxFeatures = params.maxFeatures;
            }
            return _SuperMap2.default.Util.toJSON(paramsBySql);
        }
    }]);

    return GetFeaturesBySQLParameters;
}(_GetFeaturesParametersBase2.default);

exports.default = GetFeaturesBySQLParameters;


_SuperMap2.default.GetFeaturesBySQLParameters = GetFeaturesBySQLParameters;

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _GetFeaturesServiceBase = __webpack_require__(23);

var _GetFeaturesServiceBase2 = _interopRequireDefault(_GetFeaturesServiceBase);

var _GetFeaturesBySQLParameters = __webpack_require__(163);

var _GetFeaturesBySQLParameters2 = _interopRequireDefault(_GetFeaturesBySQLParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.GetFeaturesBySQLService
 * @constructs SuperMap.GetFeaturesBySQLService
 * @classdesc
 * 数据服务中数据集 SQL 查询服务类。
 * 在一个或多个指定的图层上查询符合 SQL 条件的空间地物信息。
 * @extends {SuperMap.GetFeaturesServiceBase}
 * @api
 * @example 例如：
 * (start code)
 * var myGetFeaturesBySQLService = new SuperMap.GetFeaturesBySQLService(url, {
     *     eventListeners: {
     *         "processCompleted": GetFeaturesCompleted,
     *         "processFailed": GetFeaturesError
     *         }
     * });
 * function getFeaturesCompleted(object){//todo};
 * function getFeaturesError(object){//todo};
 * (end)
 *
 */
var GetFeaturesBySQLService = function (_GetFeaturesServiceBa) {
    _inherits(GetFeaturesBySQLService, _GetFeaturesServiceBa);

    /**
     * @method SuperMap.GetFeaturesBySQLService.initialize
     * @description  SQL 查询服务类构造函数。
     * @param url - {String} 数据查询结果资源地址。请求数据服务中数据集查询服务，
     * URL 应为：http://{服务器地址}:{服务端口号}/iserver/services/{数据服务名}/rest/data/；
     * 例如："http://localhost:8090/iserver/services/data-jingjin/rest/data/"
     *@param  options - {Object} 参数。
     *
     * Allowed options properties:</br>
     * eventListeners - {Object} 需要被注册的监听器对象。
     */
    function GetFeaturesBySQLService(url, options) {
        _classCallCheck(this, GetFeaturesBySQLService);

        var _this = _possibleConstructorReturn(this, (GetFeaturesBySQLService.__proto__ || Object.getPrototypeOf(GetFeaturesBySQLService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.GetFeaturesBySQLService";
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    _createClass(GetFeaturesBySQLService, [{
        key: 'destroy',
        value: function destroy() {
            _get(GetFeaturesBySQLService.prototype.__proto__ || Object.getPrototypeOf(GetFeaturesBySQLService.prototype), 'destroy', this).call(this);
        }

        /*
         * @method SuperMap.GetFeaturesBySQLService.getJsonParameters
         * @description 将查询参数转化为 JSON 字符串。
         * 在本类中重写此方法，可以实现不同种类的查询（ID, SQL, Buffer, Geometry等）。
         * @param params - {SuperMap.GetFeaturesBySQLParameters}
         * @return {Object} 转化后的 JSON 字符串。
         */

    }, {
        key: 'getJsonParameters',
        value: function getJsonParameters(params) {
            return _GetFeaturesBySQLParameters2.default.toJsonParameters(params);
        }
    }]);

    return GetFeaturesBySQLService;
}(_GetFeaturesServiceBase2.default);

exports.default = GetFeaturesBySQLService;


_SuperMap2.default.GetFeaturesBySQLService = GetFeaturesBySQLService;

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.GetFieldsService
 * @constructs SuperMap.GetFieldsService
 * @classdesc
 * 字段查询服务，支持查询指定数据集的中所有属性字段（field）的集合。
 * @extends {SuperMap.CommonServiceBase}
 * @api
 * @example 例如：
 * (start code)
 * var myService = new SuperMap.GetFieldsService(url, {eventListeners: {
     *     "processCompleted": getFieldsCompleted,
     *     "processFailed": getFieldsError
     *     },
     *     datasource: "World",
     *     dataset: "Countries"
     * };
 * (end)
 *
 */
var GetFieldsService = function (_CommonServiceBase) {
    _inherits(GetFieldsService, _CommonServiceBase);

    /**
     * @method SuperMap.GetFieldsService.initialize
     * @description 字段查询服务构造函数。
     * @param url - {String} 服务的访问地址。如访问World Map服务，只需将url设为: http://localhost:8090/iserver/services/data-world/rest/data 即可。
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * eventListeners - {Object} 需要被注册的监听器对象。</br>
     * datasource - {String}</br>
     * dataset - {String}</br>
     */


    /**
     * APIProperty: datasource
     * {String} 要查询的数据集所在的数据源名称。
     */
    function GetFieldsService(url, options) {
        _classCallCheck(this, GetFieldsService);

        var _this = _possibleConstructorReturn(this, (GetFieldsService.__proto__ || Object.getPrototypeOf(GetFieldsService)).call(this, url, options));

        _this.datasource = null;
        _this.dataset = null;
        _this.CLASS_NAME = "SuperMap.GetFieldsService";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源,将引用资源的属性置空。
     */


    /**
     * APIProperty: dataset
     * {String} 要查询的数据集名称。
     */


    _createClass(GetFieldsService, [{
        key: 'destroy',
        value: function destroy() {
            _get(GetFieldsService.prototype.__proto__ || Object.getPrototypeOf(GetFieldsService.prototype), 'destroy', this).call(this);
            var me = this;
            me.datasource = null;
            me.dataset = null;
        }

        /*
         * APIMethod: processAsync
         * 执行服务，查询指定数据集的字段信息。
         */

    }, {
        key: 'processAsync',
        value: function processAsync() {
            var me = this,
                end = me.url.substr(me.url.length - 1, 1),
                datasetURL = "datasources/" + me.datasource + "/datasets/" + me.dataset;
            if (me.isInTheSameDomain) {
                me.url += end == "/" ? datasetURL + "/fields.json?" : "/" + datasetURL + "/fields.json?";
            } else {
                me.url += end == "/" ? datasetURL + "/fields.jsonp?" : "/" + datasetURL + "/fields.jsonp?";
            }

            me.request({
                method: "GET",
                data: null,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return GetFieldsService;
}(_CommonServiceBase3.default);

exports.default = GetFieldsService;


_SuperMap2.default.GetFieldsService = GetFieldsService;

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.GetGridCellInfosParameters
 * @constructs SuperMap.GetGridCellInfosParameters
 * @classdesc
 * 数据服务栅格查询参数类。。
 * @api
 */
var GetGridCellInfosParameters = function () {

    /**
     * @method SuperMap.GetGridCellInfosParameters.initialize
     * @description SQL 查询参数类构造函数。
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * datasetName - {String} 数据集名称。</br>
     * dataSourceName - {String} 数据源名称</br>
     * X - {Integer} 要查询的地理位置X轴。</br>
     * Y - {Integer} 要查询的地理位置Y轴。</br>
     */


    /**
     * APIProperty: X
     * {Number} 要查询的地理位置X轴
     */


    /**
     * APIProperty: datasetName
     * {String} 数据集名称。
     */
    function GetGridCellInfosParameters(options) {
        _classCallCheck(this, GetGridCellInfosParameters);

        this.datasetName = null;
        this.dataSourceName = null;
        this.X = null;
        this.Y = null;
        this.CLASS_NAME = "SuperMap.GetGridCellInfosParameters";

        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: X
     * {Number} 要查询的地理位置Y轴
     */


    /**
     * APIProperty: dataSourceName
     * {String} 数据源名称。
     */


    _createClass(GetGridCellInfosParameters, [{
        key: "destroy",
        value: function destroy() {
            var me = this;
            me.datasetName = null;
            me.dataSourceName = null;
            me.X = null;
            me.Y = null;
        }
    }]);

    return GetGridCellInfosParameters;
}();

exports.default = GetGridCellInfosParameters;


_SuperMap2.default.GetGridCellInfosParameters = GetGridCellInfosParameters;

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _GetGridCellInfosParameters = __webpack_require__(166);

var _GetGridCellInfosParameters2 = _interopRequireDefault(_GetGridCellInfosParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.GetGridCellInfosService
 * @constructs SuperMap.GetGridCellInfosService
 * @classdesc
 * 数据栅格查询服务，支持查询指定地理位置的栅格信息
 * @extends {SuperMap.CommonServiceBase}
 * @api
 * @example  例如：
 * (start code)
 * var myService = new SuperMap.GetGridCellInfosService(url, {eventListeners: {
     *     "processCompleted": queryCompleted,
     *     "processFailed": queryError
     *     }
     * });
 * (end)
 *
 *
 */
var GetGridCellInfosService = function (_CommonServiceBase) {
    _inherits(GetGridCellInfosService, _CommonServiceBase);

    /**
     * @method SuperMap.GetGridCellInfosService.initialize
     * @description 字段查询服务构造函数。
       * @param url - {String} 查询服务地址。例如: http://localhost:8090/iserver/services/data-jingjin/rest/data
     * @param options - {Object} 参数。
     *
     * Allowed options properties:</br>
     * eventListeners - {Object} 需要被注册的监听器对象。
     */


    /**
     * APIProperty: X
     * {Number} 要查询的地理位置X轴
     */


    /**
     * APIProperty: dataSourceName
     * {String} 数据源名称。
     */
    function GetGridCellInfosService(url, options) {
        _classCallCheck(this, GetGridCellInfosService);

        var _this = _possibleConstructorReturn(this, (GetGridCellInfosService.__proto__ || Object.getPrototypeOf(GetGridCellInfosService)).call(this, url, options));

        _this.datasetName = null;
        _this.dataSourceName = null;
        _this.datasetType = null;
        _this.X = null;
        _this.Y = null;
        _this.CLASS_NAME = "SuperMap.GetGridCellInfosService";

        if (!!options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源,将引用资源的属性置空。
     */


    /**
     * APIProperty: X
     * {Number} 要查询的地理位置Y轴
     */


    /**
     * Property: dataSourceName
     * {String} 数据集类型。
     */


    /**
     * APIProperty: datasetName
     * {String} 数据集名称。
     */


    _createClass(GetGridCellInfosService, [{
        key: 'destroy',
        value: function destroy() {
            _get(GetGridCellInfosService.prototype.__proto__ || Object.getPrototypeOf(GetGridCellInfosService.prototype), 'destroy', this).call(this);
            var me = this;
            me.X = null;
            me.Y = null;
            me.datasetName = null;
            me.dataSourceName = null;
            me.datasetType = null;
        }

        /*
         * APIMethod: processAsync
         * 执行服务，查询数据集信息。
         * Parameters:
         * params - {SuperMap.GetGridCellInfosParameters} 查询参数。
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (params) {
                _SuperMap2.default.Util.extend(this, params);
            }
            var me = this;
            var end = me.url.substr(me.url.length - 1, 1);
            if (me.isInTheSameDomain) {
                me.url += end == "/" ? "datasources/" + me.dataSourceName + "/datasets/" + me.datasetName + ".json" : "/datasources/" + me.dataSourceName + "/datasets/" + me.datasetName + ".json";
            } else {
                me.url += end == "/" ? "datasources/" + me.dataSourceName + "/datasets/" + me.datasetName + ".jsonp" : "/datasources/" + me.dataSourceName + "/datasets/" + me.datasetName + ".jsonp";
            }

            me.queryRequest(me.getDatasetInfoCompleted, me.getDatasetInfoFailed);
        }

        /*
         * Method: queryRequest
         * 执行服务，查询。
         */

    }, {
        key: 'queryRequest',
        value: function queryRequest(successFun, failedFunc) {
            var me = this;
            me.request({
                method: "GET",
                data: null,
                scope: me,
                success: successFun,
                failure: failedFunc
            });
        }

        /**
         * @method SuperMap.GetGridCellInfosService.getDatasetInfoCompleted
         * @description  数据集查询完成，执行此方法。
         * @param result - {Object} 服务器返回的结果对象。
         */

    }, {
        key: 'getDatasetInfoCompleted',
        value: function getDatasetInfoCompleted(result) {
            var me = this;
            result = _SuperMap2.default.Util.transformResult(result);
            me.datasetType = result.datasetInfo.type;
            me.queryGridInfos();
        }

        /**
         * @method SuperMap.GetGridCellInfosService.queryGridInfos
         * @description 执行服务，查询数据集栅格信息信息。
         */

    }, {
        key: 'queryGridInfos',
        value: function queryGridInfos() {
            var me = this,
                re = /\.json/,
                index = re.exec(me.url).index,
                urlBack = me.url.substring(index),
                urlFront = me.url.substring(0, me.url.length - urlBack.length);
            if (me.datasetType == "GRID") {
                me.url = urlFront + "/gridValue" + urlBack;
            } else {
                me.url = urlFront + "/imageValue" + urlBack;
            }

            if (me.X != null && me.Y != null) {
                me.url += '?x=' + me.X + '&y=' + me.Y;
            }
            me.queryRequest(me.serviceProcessCompleted, me.serviceProcessFailed);
        }

        /**
         * @method SuperMap.GetGridCellInfosService.getDatasetInfoFailed
         * @description 数据集查询失败，执行此方法。
         * @param result -  {Object} 服务器返回的结果对象。
         */

    }, {
        key: 'getDatasetInfoFailed',
        value: function getDatasetInfoFailed(result) {
            var me = this;
            me.serviceProcessFailed(result);
        }
    }]);

    return GetGridCellInfosService;
}(_CommonServiceBase3.default);

exports.default = GetGridCellInfosService;


_SuperMap2.default.GetGridCellInfosService = GetGridCellInfosService;

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _ServerTheme = __webpack_require__(208);

var _ServerTheme2 = _interopRequireDefault(_ServerTheme);

var _Grid = __webpack_require__(169);

var _Grid2 = _interopRequireDefault(_Grid);

var _Image = __webpack_require__(170);

var _Image2 = _interopRequireDefault(_Image);

var _Vector = __webpack_require__(261);

var _Vector2 = _interopRequireDefault(_Vector);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.GetLayersInfoService 获取图层信息服务类构造函数。
 * @augments SuperMap.CommonServiceBase
 * @constructs  SuperMap.GetLayersInfoService
 * Parameters:
 * @param url - {String} 与客户端交互的地图服务地址。请求地图服务,URL 应为：<br>
 *         http://{服务器地址}:{服务端口号}/iserver/services/{地图服务名}/rest/maps/{地图名}；<br>
 *         如 http://localhost:8090/iserver/services/map-world/rest/maps/World 。<br>
 *         如果查询临时图层的信息，请指定完成的url，包含临时图层ID信息，如：<br>
 *         http://localhost:8090/iserver/services/map-world/rest/maps/World/tempLayersSet/resourceID
 * @param options - {Object} 交互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 *         isTempLayers - {Boolean} 当前url对应的图层是否是临时图层。
 */
var GetLayersInfoService = function (_CommonServiceBase) {
    _inherits(GetLayersInfoService, _CommonServiceBase);

    /**
     * @function  initialize
     * @description GetLayersInfoService的构造函数
     * Parameters:
     * @param url - {String} 与客户端交互的地图服务地址。请求地图服务,URL 应为：<br>
     *         http://{服务器地址}:{服务端口号}/iserver/services/{地图服务名}/rest/maps/{地图名}；<br>
     *         如 http://localhost:8090/iserver/services/map-world/rest/maps/World 。<br>
     *         如果查询临时图层的信息，请指定完成的url，包含临时图层ID信息，如：<br>
     *         http://localhost:8090/iserver/services/map-world/rest/maps/World/tempLayersSet/resourceID
     * @param options - {Object} 互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。<br>
     *         isTempLayers - {Boolean} 当前url对应的图层是否是临时图层。
     */
    function GetLayersInfoService(url, options) {
        _classCallCheck(this, GetLayersInfoService);

        var _this = _possibleConstructorReturn(this, (GetLayersInfoService.__proto__ || Object.getPrototypeOf(GetLayersInfoService)).call(this, url, options));

        _this.isTempLayers = false;
        _this.CLASS_NAME = "SuperMap.GetLayersInfoService";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /**
     * @inheritDoc
     */


    /*
     * @instance isTempLayers 当前url对应的图层是否是临时图层。{Boolean}
     */


    _createClass(GetLayersInfoService, [{
        key: 'destroy',
        value: function destroy() {
            _get(GetLayersInfoService.prototype.__proto__ || Object.getPrototypeOf(GetLayersInfoService.prototype), 'destroy', this).call(this);
            _SuperMap2.default.Util.reset(this);
        }

        /**
         * @function  processAsync
         * @description APIMethod: 负责将客户端的更新参数传递到服务端。
         */

    }, {
        key: 'processAsync',
        value: function processAsync() {
            var me = this,
                method = "GET",
                end = me.url.substr(me.url.length - 1, 1);
            if (!me.isTempLayers) {
                me.url += end === "/" ? '' : '/';
                me.url += me.isInTheSameDomain ? "layers.json?" : "layers.jsonp?";
            } else {
                me.url += me.isInTheSameDomain ? ".json?" : ".jsonp?";
            }
            me.request({
                method: method,
                params: null,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }

        /*
         * Method: getLayerComplted
         * 编辑完成，执行此方法。
         * result - {Object} 服务器返回的结果对象。
         */

    }, {
        key: 'serviceProcessCompleted',
        value: function serviceProcessCompleted(result) {
            var me = this,
                existRes,
                layers,
                len;
            result = _SuperMap2.default.Util.transformResult(result);

            existRes = !!result && result.length > 0;
            layers = existRes ? result[0].subLayers.layers : null;
            len = layers ? layers.length : 0;
            me.handleLayers(len, layers);
            me.events.triggerEvent("processCompleted", { result: result[0] });
        }

        /*
         * TODO 专题图时候可能会用到
         * Method: handleLayers
         * 处理iserver 新增图层组数据 (subLayers.layers 中可能还会含有 subLayers.layers)
         *
         * len - {Number} subLayers.layers的长度
         * layers - {Array} subLayers.layers
         */

    }, {
        key: 'handleLayers',
        value: function handleLayers(len, layers) {
            var me = this,
                tempLayer;
            if (len) {
                for (var i = 0; i < len; i++) {
                    if (layers[i].subLayers && layers[i].subLayers.layers && layers[i].subLayers.layers.length > 0) {
                        me.handleLayers(layers[i].subLayers.layers.length, layers[i].subLayers.layers);
                    } else {
                        var type = layers[i].ugcLayerType;
                        switch (type) {
                            case 'THEME':
                                tempLayer = new _ServerTheme2.default();
                                tempLayer.fromJson(layers[i]);
                                layers[i] = tempLayer;
                                break;
                            case 'GRID':
                                tempLayer = new _Grid2.default();
                                tempLayer.fromJson(layers[i]);
                                layers[i] = tempLayer;
                                break;
                            case 'IMAGE':
                                tempLayer = new _Image2.default();
                                tempLayer.fromJson(layers[i]);
                                layers[i] = tempLayer;
                                break;
                            case 'VECTOR':
                                tempLayer = new _Vector2.default();
                                tempLayer.fromJson(layers[i]);
                                layers[i] = tempLayer;
                                break;
                            default:
                                break;
                        }
                    }
                }
            }
        }
    }]);

    return GetLayersInfoService;
}(_CommonServiceBase3.default);

exports.default = GetLayersInfoService;


_SuperMap2.default.GetLayersInfoService = GetLayersInfoService;

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _UGCSubLayer2 = __webpack_require__(27);

var _UGCSubLayer3 = _interopRequireDefault(_UGCSubLayer2);

var _ServerColor = __webpack_require__(11);

var _ServerColor2 = _interopRequireDefault(_ServerColor);

var _ServerStyle = __webpack_require__(9);

var _ServerStyle2 = _interopRequireDefault(_ServerStyle);

var _ColorDictionary = __webpack_require__(105);

var _ColorDictionary2 = _interopRequireDefault(_ColorDictionary);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Class: SuperMap.Grid
 * UGC 栅格图层类。
 *
 * Inherits from:
 *  - <SuperMap.UGCSubLayer>
 */
var Grid = function (_UGCSubLayer) {
    _inherits(Grid, _UGCSubLayer);

    /**
     * Constructor: SuperMap.Grid
     * UGC 栅格图层类构造函数。
     *
     * Parameters:
     * options - {Object} 参数。
     *
     * Allowed options properties:
     * colorDictionary - {Array(Object)} 颜色对照表对象。
     * brightness - {Integer} Grid 图层的亮度。
     * colorGradientType - {Boolean} 文本压盖时是否显示压盖的文本对象。
     * colors - {SuperMap.ServerColor} 颜色表对象。
     * contrast - {Integer} Grid 图层的对比度。
     * gridType - {SuperMap.GridType} 格网类型。
     * horizontalSpacing - {Number} 格网水平间隔大小。
     * sizeFixed - {Boolean} 格网是否固定大小，如果不固定大小，则格网随着地图缩放。
     * solidStyle - {SuperMap.ServerStyle} 格网实线的样式。
     * specialColor - {SuperMap.ServerColor} 栅格数据集无值数据的颜色。
     * specialValue - {Number} 图层的特殊值。
     * specialValueTransparent - {Boolean} 图层的特殊值（specialValue）所处区域是否透明。
     * verticalSpacing - {Number} 格网垂直间隔大小。
     */

    /**
     * APIProperty: specialValueTransparent
     * {Boolean} 图层的特殊值（specialValue）所处区域是否透明。
     */


    /**
     * APIProperty: specialColor
     * {SuperMap.ServerColor} 栅格数据集无值数据的颜色。
     */


    /**
     * APIProperty: sizeFixed
     * {Boolean} 格网是否固定大小，如果不固定大小，则格网随着地图缩放。
     */


    /**
     * APIProperty: gridType
     * {SuperMap.GridType} 格网类型。
     */


    /**
     * APIProperty: contrast
     * {Integer} Grid 图层的对比度。
     */


    /**
     * APIProperty: colorGradientType
     * {SuperMap.ColorGradientType}
     */

    /**
     * APIProperty: colorDictionarys
     * {Array(<SuperMap.ColorDictionary>)} 颜色对照表对象。
     */
    function Grid(options) {
        _classCallCheck(this, Grid);

        options = options || {};

        var _this = _possibleConstructorReturn(this, (Grid.__proto__ || Object.getPrototypeOf(Grid)).call(this, options));

        _this.colorDictionarys = null;
        _this.brightness = null;
        _this.colorGradientType = null;
        _this.colors = null;
        _this.contrast = null;
        _this.dashStyle = null;
        _this.gridType = null;
        _this.horizontalSpacing = null;
        _this.sizeFixed = null;
        _this.solidStyle = null;
        _this.specialColor = null;
        _this.specialValue = null;
        _this.specialValueTransparent = null;
        _this.verticalSpacing = null;
        _this.CLASS_NAME = "SuperMap.Grid";
        return _this;
    }

    /**
     * APIMethod: destroy
     * 释放资源,将引用资源的属性置空。
     */


    /**
     * APIProperty: verticalSpacing
     * {Number} 格网垂直间隔大小。
     */


    /**
     * APIProperty: specialValue
     * {Number} 图层的特殊值。
     */


    /**
     * APIProperty: solidStyle
     * {SuperMap.ServerStyle} 格网实线的样式。
     */


    /**
     * APIProperty: horizontalSpacing
     * {Number} 格网水平间隔大小。
     */


    /**
     * APIProperty: dashStyle
     * {SuperMap.ServerStyle} 栅格数据集特殊值数据的颜色。
     */


    /**
     * APIProperty: colors
     * {SuperMap.ServerColor} 颜色表对象。
     */


    /**
     * APIProperty: brightness
     * {Integer} Grid 图层的亮度。
     */


    _createClass(Grid, [{
        key: 'destroy',
        value: function destroy() {
            _get(Grid.prototype.__proto__ || Object.getPrototypeOf(Grid.prototype), 'destroy', this).call(this);
            _SuperMap2.default.Util.reset(this);
        }

        /**
         * Method: fromJson
         * 将服务端JSON对象转换成当前客户端对象
         * Parameters:
         * jsonObject - {Object} 要转换的 JSON 对象。
         */

    }, {
        key: 'fromJson',
        value: function fromJson(jsonObject) {
            _get(Grid.prototype.__proto__ || Object.getPrototypeOf(Grid.prototype), 'fromJson', this).call(this, jsonObject);
            if (this.specialColor) {
                this.specialColor = new _ServerColor2.default(this.specialColor.red, this.specialColor.green, this.specialColor.blue);
            }
            if (this.colors) {
                var colors = [],
                    color;
                for (var i in this.colors) {
                    color = this.colors[i];
                    colors.push(new _ServerColor2.default(color.red, color.green, color.blue));
                }
                this.colors = colors;
            }
            if (this.dashStyle) {
                this.dashStyle = new _ServerStyle2.default(this.dashStyle);
            }
            if (this.solidStyle) {
                this.solidStyle = new _ServerStyle2.default(this.solidStyle);
            }
            if (this.colorDictionary) {
                var colorDics = [],
                    colorDic;
                for (var key in this.colorDictionary) {
                    colorDic = this.colorDictionary[key];
                    colorDics.push(new _ColorDictionary2.default({ elevation: key, color: colorDic }));
                }
                this.colorDictionarys = colorDics;
            }
            delete this.colorDictionary;
        }

        /**
         * APIMethod: toServerJSONObject
         * 转换成对应的 JSON 格式对象。
         */

    }, {
        key: 'toServerJSONObject',
        value: function toServerJSONObject() {
            var jsonObject = _get(Grid.prototype.__proto__ || Object.getPrototypeOf(Grid.prototype), 'toServerJSONObject', this).call(this);

            if (jsonObject.dashStyle) {
                if (jsonObject.dashStyle.toServerJSONObject) {
                    jsonObject.dashStyle = jsonObject.dashStyle.toServerJSONObject();
                }
            }
            if (jsonObject.solidStyle) {
                if (jsonObject.solidStyle.toServerJSONObject) {
                    jsonObject.solidStyle = jsonObject.solidStyle.toServerJSONObject();
                }
            }
            return jsonObject;
        }
    }]);

    return Grid;
}(_UGCSubLayer3.default);

exports.default = Grid;


_SuperMap2.default.Grid = Grid;

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _UGCSubLayer2 = __webpack_require__(27);

var _UGCSubLayer3 = _interopRequireDefault(_UGCSubLayer2);

var _ServerColor = __webpack_require__(11);

var _ServerColor2 = _interopRequireDefault(_ServerColor);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Class: SuperMap.Image
 * UGC 影像图层类。
 *
 * Inherits from:
 *  - <SuperMap.UGCSubLayer>
 */
var UGCImage = function (_UGCSubLayer) {
    _inherits(UGCImage, _UGCSubLayer);

    /**
     * Constructor: SuperMap.Image
     * UGC 影像图层类构造函数。
     *
     * Parameters:
     * options - {Object} 参数。
     *
     * Allowed options properties:
     * colorSpaceType - {SuperMap.ColorSpaceType} 返回影像图层的色彩显示模式。
     * brightness - {Integer} 影像图层的亮度。
     * displayBandIndexes - {Array(Integer)} 返回当前影像图层显示的波段索引。
     * contrast - {Integer} 影像图层的对比度。
     * transparent - {Boolean} 是否背景透明。
     * transparentColor - {SuperMap.ServerColor} 返回背景透明色。
     * transparentColorTolerance - {Integer} 背景透明色容限。
     */

    /**
     * APIProperty: transparentColor
     * {SuperMap.ServerColor} 返回背景透明色。
     */


    /**
     * APIProperty: displayBandIndexes
     * {Array(Integer)} 返回当前影像图层显示的波段索引。
     */


    /**
     * APIProperty: colorSpaceType
     * {SuperMap.ColorSpaceType} 返回影像图层的色彩显示模式。
     */
    function UGCImage(options) {
        _classCallCheck(this, UGCImage);

        options = options || {};

        var _this = _possibleConstructorReturn(this, (UGCImage.__proto__ || Object.getPrototypeOf(UGCImage)).call(this, options));

        _this.brightness = null;
        _this.colorSpaceType = null;
        _this.contrast = null;
        _this.displayBandIndexes = null;
        _this.transparent = null;
        _this.transparentColor = null;
        _this.transparentColorTolerance = null;
        _this.CLASS_NAME = "SuperMap.Image";
        return _this;
    }

    /**
     * APIProperty: transparentColorTolerance
     * {Integer} 背景透明色容限。
     */


    /**
     * APIProperty: transparent
     * {Boolean} 是否背景透明。
     */


    /**
     * APIProperty: contrast
     * {Integer} 影像图层的对比度。
     */


    /**
     * APIProperty: brightness
     * {Integer} 影像图层的亮度。
     */


    _createClass(UGCImage, [{
        key: 'destroy',
        value: function destroy() {
            _get(UGCImage.prototype.__proto__ || Object.getPrototypeOf(UGCImage.prototype), 'destroy', this).call(this);
            _SuperMap2.default.Util.reset(this);
        }

        /**
         * Method: fromJson
         * 将服务端JSON对象转换成当前客户端对象
         * Parameters:
         * jsonObject - {Object} 要转换的 JSON 对象。
         */

    }, {
        key: 'fromJson',
        value: function fromJson(jsonObject) {
            _get(UGCImage.prototype.__proto__ || Object.getPrototypeOf(UGCImage.prototype), 'fromJson', this).call(this, jsonObject);
            if (this.transparentColor) {
                this.transparentColor = new _ServerColor2.default(this.transparentColor.red, this.transparentColor.green, this.transparentColor.blue);
            }
        }

        /**
         * APIMethod: toServerJSONObject
         * 转换成对应的 JSON 格式对象。
         */

    }, {
        key: 'toServerJSONObject',
        value: function toServerJSONObject() {
            return _get(UGCImage.prototype.__proto__ || Object.getPrototypeOf(UGCImage.prototype), 'toServerJSONObject', this).call(this);
        }
    }]);

    return UGCImage;
}(_UGCSubLayer3.default);

exports.default = UGCImage;


_SuperMap2.default.Image = UGCImage;

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _SpatialAnalystBase2 = __webpack_require__(6);

var _SpatialAnalystBase3 = _interopRequireDefault(_SpatialAnalystBase2);

var _InterpolationRBFAnalystParameters = __webpack_require__(175);

var _InterpolationRBFAnalystParameters2 = _interopRequireDefault(_InterpolationRBFAnalystParameters);

var _InterpolationDensityAnalystParameters = __webpack_require__(172);

var _InterpolationDensityAnalystParameters2 = _interopRequireDefault(_InterpolationDensityAnalystParameters);

var _InterpolationIDWAnalystParameters = __webpack_require__(173);

var _InterpolationIDWAnalystParameters2 = _interopRequireDefault(_InterpolationIDWAnalystParameters);

var _InterpolationKrigingAnalystParameters = __webpack_require__(174);

var _InterpolationKrigingAnalystParameters2 = _interopRequireDefault(_InterpolationKrigingAnalystParameters);

var _InterpolationAnalystParameters = __webpack_require__(24);

var _InterpolationAnalystParameters2 = _interopRequireDefault(_InterpolationAnalystParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.InterpolationAnalystService
 * @constructs SuperMap.InterpolationAnalystService
 * @classdesc
 * 插值分析服务类
 * 插值分析可以将有限的采样点数据，通过插值算法对采样点周围的数值情况进行预测，可以掌握研究区域内数据的总体分布状况，从而使采样的离散点不仅仅反映其所在位置的数值情况，还可以反映区域的数值分布。目前SuperMap iServer的插值功能提供从点数据集插值得到栅格数据集的功能，支持以下常用的内插方法，包括：反距离加权插值、克吕金（Kriging）插值法、样条（径向基函数，Radial Basis Function）插值、点密度插值。
 * @extends {SuperMap.SpatialAnalystBase}
 * @api
 * @example 例如：
 * (start code)
 * var myTInterpolationAnalystService = new SuperMap.InterpolationAnalystService(url);
 * myTInterpolationAnalystService.events.on({
     *     "processCompleted": processCompleted,
     *     "processFailed": processFailed
     *     }
 * );
 * (end)
 *
 */
var InterpolationAnalystService = function (_SpatialAnalystBase) {
    _inherits(InterpolationAnalystService, _SpatialAnalystBase);

    /**
     * @method SuperMap.InterpolationAnalystService.initialize
     * @param url - {String} 服务的访问地址。如 http://localhost:8090/iserver/services/spatialanalyst-changchun/restjsr/spatialanalyst 。
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * eventListeners - {Object} 需要被注册的监听器对象。
     */
    function InterpolationAnalystService(url, options) {
        _classCallCheck(this, InterpolationAnalystService);

        var _this = _possibleConstructorReturn(this, (InterpolationAnalystService.__proto__ || Object.getPrototypeOf(InterpolationAnalystService)).call(this, url, options));

        _this.mode = null;
        _this.CLASS_NAME = "SuperMap.InterpolationAnalystService";

        var me = _this;
        if (options) {
            _SuperMap2.default.Util.extend(me, options);
        }
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源,将引用资源的属性置空。
     */


    /**
     * Property: mode
     * {String} 插值分析类型。
     */


    _createClass(InterpolationAnalystService, [{
        key: 'destroy',
        value: function destroy() {
            _get(InterpolationAnalystService.prototype.__proto__ || Object.getPrototypeOf(InterpolationAnalystService.prototype), 'destroy', this).call(this);
            this.mode = null;
        }

        /**
         * @method SuperMap.InterpolationAnalystService.processAsync
         * @description 负责将客户端的查询参数传递到服务端。
         * @param  parameter - {SuperMap.InterpolationAnalystParameters}
         */

    }, {
        key: 'processAsync',
        value: function processAsync(parameter) {
            var parameterObject = {};
            var me = this;

            var end = me.url.substr(me.url.length - 1, 1);
            if (end === '/') {} else {
                me.url += "/";
            }

            if (parameter instanceof _InterpolationDensityAnalystParameters2.default) {
                me.mode = "Density";
                if (parameter.InterpolationAnalystType === "geometry") {
                    me.url += 'geometry/interpolation/density';
                } else {
                    me.url += 'datasets/' + parameter.dataset + '/interpolation/density';
                }
            } else if (parameter instanceof _InterpolationIDWAnalystParameters2.default) {
                me.mode = "IDW";
                if (parameter.InterpolationAnalystType === "geometry") {
                    me.url += 'geometry/interpolation/idw';
                } else {
                    me.url += 'datasets/' + parameter.dataset + '/interpolation/idw';
                }
            } else if (parameter instanceof _InterpolationRBFAnalystParameters2.default) {
                me.mode = "RBF";
                if (parameter.InterpolationAnalystType === "geometry") {
                    me.url += 'geometry/interpolation/rbf';
                } else {
                    me.url += 'datasets/' + parameter.dataset + '/interpolation/rbf';
                }
            } else if (parameter instanceof _InterpolationKrigingAnalystParameters2.default) {
                me.mode = "Kriging";
                if (parameter.InterpolationAnalystType === "geometry") {
                    me.url += 'geometry/interpolation/kriging';
                } else {
                    me.url += 'datasets/' + parameter.dataset + '/interpolation/kriging';
                }
            }
            _InterpolationAnalystParameters2.default.toObject(parameter, parameterObject);
            var jsonParameters = _SuperMap2.default.Util.toJSON(parameterObject);

            if (me.isInTheSameDomain) {
                me.url += '.json?returnContent=true';
            } else {
                me.url += '.jsonp?returnContent=true';
            }

            me.request({
                method: "POST",
                data: jsonParameters,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return InterpolationAnalystService;
}(_SpatialAnalystBase3.default);

exports.default = InterpolationAnalystService;


_SuperMap2.default.InterpolationAnalystService = InterpolationAnalystService;

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _InterpolationAnalystParameters = __webpack_require__(24);

var _InterpolationAnalystParameters2 = _interopRequireDefault(_InterpolationAnalystParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.InterpolationDensityAnalystParameters
 * @constructs SuperMap.InterpolationDensityAnalystParameters
 * @classdesc
 * 点密度差值分析参数类
 * @extends {SuperMap.InterpolationAnalystParameters}
 * @api
 * @example 例如：
 * (start code)
 * var myInterpolationDensityAnalystParameters = new SuperMap.InterpolationDensityAnalystParameters({
     *      dataset: "SamplesP@Interpolation",
     *      searchRadius: "100000",
     *      pixelFormat: "BIT16",
     *      zValueFieldName: "AVG_TMP",
     *      resolution: 3000,
     *      filterQueryParameter: {
     *          attributeFilter: ""
     *      },
     *      outputDatasetName: "myDensity"
     * });
 * (end)
 */
var InterpolationDensityAnalystParameters = function (_InterpolationAnalyst) {
    _inherits(InterpolationDensityAnalystParameters, _InterpolationAnalyst);

    /**
     *
     * @method SuperMap.InterpolationDensityAnalystParameters.initialize
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * bounds - {SuperMap.Bounds} 插值分析的范围，用于确定结果栅格数据集的范围。</br>
     * searchRadius - {Number} 查找半径，即参与运算点的查找范围，与点数据集单位相同，默认值为0。</br>
     * zValueFieldName - {String} 存储用于进行插值分析的字段名称，插值分析不支持文本类型的字段。当插值分析类型( SuperMap.InterpolationAnalystType)为 dataset 时，必设参数。</br>
     * zValueScale - {Number} 用于进行插值分析值的缩放比率，默认值为1。</br>
     * resolution - {Number} 插值结果栅格数据集的分辨率，即一个像元所代表的实地距离，与点数据集单位相同。</br>
     * filterQueryParameter - {SuperMap.FilterParameter} 属性过滤条件。</br>
     * outputDatasetName - {String} 插值分析结果数据集的名称。必设参数</br>
     * outputDatasourceName - {String} 插值分析结果数据源的名称。必设参数</br>
     * pixelFormat - {String} 指定结果栅格数据集存储的像素格式。</br>
     * dataset - {String} 用来做插值分析的数据源中数据集的名称，该名称用形如"数据集名称@数据源别名"形式来表示。当插值分析类型( SuperMap.InterpolationAnalystType)为 dataset 时，必设参数。</br>
     * inputPoints - {Array <SuperMap.Geometry.Point} 用于做插值分析的离散点集合。当插值分析类型（ SuperMap.InterpolationAnalystType）为 geometry 时，必设参数。</br>
     */
    function InterpolationDensityAnalystParameters(options) {
        _classCallCheck(this, InterpolationDensityAnalystParameters);

        var _this = _possibleConstructorReturn(this, (InterpolationDensityAnalystParameters.__proto__ || Object.getPrototypeOf(InterpolationDensityAnalystParameters)).call(this, options));

        _this.CLASS_NAME = "SuperMap.InterpolationDensityAnalystParameters";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    _createClass(InterpolationDensityAnalystParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(InterpolationDensityAnalystParameters.prototype.__proto__ || Object.getPrototypeOf(InterpolationDensityAnalystParameters.prototype), 'destroy', this).call(this);
        }
    }]);

    return InterpolationDensityAnalystParameters;
}(_InterpolationAnalystParameters2.default);

exports.default = InterpolationDensityAnalystParameters;


_SuperMap2.default.InterpolationDensityAnalystParameters = InterpolationDensityAnalystParameters;

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _InterpolationAnalystParameters = __webpack_require__(24);

var _InterpolationAnalystParameters2 = _interopRequireDefault(_InterpolationAnalystParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.InterpolationIDWAnalystParameters
 * @constructs SuperMap.InterpolationIDWAnalystParameters
 * @classdesc
 * 反距离加权插值（IDW）分析参数类
 * @extends {SuperMap.InterpolationAnalystParameters}
 * @api
 * @example 例如：
 * (start code)
 * var myInterpolationIDWAnalystParameters = new SuperMap.InterpolationIDWAnalystParameters({
     *      dataset:"SamplesP@Interpolation",
     *      power: 2,
     *      searchMode: "KDTREE_FIXED_COUNT",
     *      expectedCount: 12,
     *      pixelFormat: "BIT16",
     *      zValueFieldName: "AVG_TMP",
     *      resolution: 3000,
     *      filterQueryParameter: {
     *          attributeFilter: ""
     *      },
     *      outputDatasetName: "myIDW"
     * });
 * (end)
 *
 */
var InterpolationIDWAnalystParameters = function (_InterpolationAnalyst) {
    _inherits(InterpolationIDWAnalystParameters, _InterpolationAnalyst);

    /**
     * @method SuperMap.InterpolationIDWAnalystParameters.initialize
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * power - {Number} 距离权重计算的幂次。</br>
     * bounds - {SuperMap.Bounds} 插值分析的范围，用于确定结果栅格数据集的范围。</br>
     * searchMode - {String} 插值运算时，查找参与运算点的方式，支持固定点数查找、定长查找。必设参数</br>
     * expectedCount - {Number} 【固定点数查找】方式下，设置待查找的点数，即参与差值运算的点数，默认值为12。</br>
     * searchRadius - {Number} 【定长查找】方式下，设置查找半径，即参与运算点的查找范围，与点数据集单位相同，默认值为0。</br>
     * zValueFieldName - {String} 存储用于进行插值分析的字段名称，插值分析不支持文本类型的字段。当插值分析类型(SuperMap.InterpolationAnalystType)为 dataset 时，必设参数。</br>
     * zValueScale - {Number} 用于进行插值分析值的缩放比率，默认为1。</br>
     * resolution - {Number} 插值结果栅格数据集的分辨率，即一个像元所代表的实地距离，与点数据集单位相同。</br>
     * filterQueryParameter - {SuperMap.FilterParameter} 属性过滤条件。</br>
     * outputDatasetName - {String} 插值分析结果数据集的名称。必设参数</br>
     * outputDatasourceName - {String} 插值分析结果数据源的名称。必设参数</br>
     * pixelFormat - {String} 指定结果栅格数据集存储的像素格式。</br>
     * dataset - {String} 要用来做插值分析的数据源中数据集的名称。该名称用形如”数据集名称@数据源别名”形式来表示。当插值分析类型(SuperMap.InterpolationAnalystType)为 dataset 时，必设参数。</br>
     * inputPoints - {Array <SuperMap.Geometry.Point} 用于做插值分析的离散点集合。当插值分析类型（SuperMap.InterpolationAnalystType）为 geometry 时，必设参数。</br>
     */


    /**
     * APIProperty: searchMode
     * {SuperMap.SearchMode} 插值运算时，查找参与运算点的方式，支持固定点数查找、定长查找。必设参数
     * 具体如下：
     * {KDTREE_FIXED_COUNT} 使用 KDTREE 的固定点数方式查找参与内插分析的点。
     * {KDTREE_FIXED_RADIUS} 使用 KDTREE 的定长方式查找参与内插分析的点。
     */
    function InterpolationIDWAnalystParameters(options) {
        _classCallCheck(this, InterpolationIDWAnalystParameters);

        var _this = _possibleConstructorReturn(this, (InterpolationIDWAnalystParameters.__proto__ || Object.getPrototypeOf(InterpolationIDWAnalystParameters)).call(this, options));

        _this.power = 2;
        _this.searchMode = null;
        _this.expectedCount = 12;
        _this.CLASS_NAME = "SuperMap.InterpolationIDWAnalystParameters";

        var me = _this;
        me.power = 2;
        me.searchMode = null;
        me.expectedCount = 12;
        if (options) {
            _SuperMap2.default.Util.extend(me, options);
        }
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: expectedCount
     * {Number} 【固定点数查找】方式下，设置待查找的点数，即参与差值运算的点数，默认值为12。
     */


    /**
     * APIProperty: power
     * {Number} 距离权重计算的幂次，默认值为2。
     * 该值决定了权值下降的速度，幂次越大，随距离的增大权值下降越快，距离预测点越远的点的权值也越小。
     * 理论上，参数值必须大于0，但是0.5到3之间时运算结果更合理，因此推荐值为0.5~3。
     */


    _createClass(InterpolationIDWAnalystParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(InterpolationIDWAnalystParameters.prototype.__proto__ || Object.getPrototypeOf(InterpolationIDWAnalystParameters.prototype), 'destroy', this).call(this);
            var me = this;
            me.power = null;
            me.searchMode = null;
            me.expectedCount = null;
        }
    }]);

    return InterpolationIDWAnalystParameters;
}(_InterpolationAnalystParameters2.default);

exports.default = InterpolationIDWAnalystParameters;


_SuperMap2.default.InterpolationIDWAnalystParameters = InterpolationIDWAnalystParameters;

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

var _ThiessenAnalystParameters = __webpack_require__(34);

var _ThiessenAnalystParameters2 = _interopRequireDefault(_ThiessenAnalystParameters);

var _InterpolationAnalystParameters = __webpack_require__(24);

var _InterpolationAnalystParameters2 = _interopRequireDefault(_InterpolationAnalystParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.InterpolationKrigingAnalystParameters
 * @constructs SuperMap.InterpolationKrigingAnalystParameters
 * @classdesc
 * 克吕金插值分析参数类。 通过该类可以设置克吕金插值分析所需的参数。
 *
 * 克吕金（Kriging）法为地统计学上一种空间数据内插处理方法，主要的目的是利用各数据点间变异数（variance）的大小来推求某一未知点与各已知点的权重关系，
 * 再由各数据点的值和其与未知点的权重关系推求未知点的值。Kriging 法最大的特色不仅是提供一个最小估计误差的预测值，并且可明确的指出误差值的大小。
 * 一般而言，许多地质参数，如地形面，本身即具有连续性，故在一段距离内的任两点必有空间上的关系。反之，在一不规则面上的两点若相距甚远，
 * 则在统计意义上可视为互为独立 (stastically indepedent)。这种随距离而改变的空间上连续性，可用半变异图 (semivariogram) 来表现。
 *
 * 因此，若想由已知的散乱点来推求某一未知点的值，则可利用半变异图推求各已知点与未知点的空间关系，即以下四个参数。
 * 然后，由此空间参数推求半变异数，由各数据点间的半变异数可推求未知点与已知点间的权重关系，进而推求出未知点的值。
 *
 * · 块金值（nugget）：当采样点间距为0时，理论上半变异函数值为0，但时间上两采样点非常接近时半变异函数值并不为0，即产生了上图所示的块金效应，
 * 对应的半变异函数值为块金值。块金值可能由于测量误差或者空间变异产生。
 *
 * · 基台值（sill）：随着采样点间距的不断增大，半变异函数的值趋向一个稳定的常数，该常数成为基台值。到达基台值后，半变异函数的值不再随采样点间距而改变，
 *   即大于此间距的采样点不再具有空间相关性。
 *
 * · 偏基台值：基台值与块金值的差值。
 *
 * · 自相关阈值（range）：也称变程，是半变异函数值达到基台值时，采样点的间距。超过自相关阈值的采样点不再具有空间相关性，将不对预测结果产生影响。
 *
 * 由上述可知，半变异函数是克吕金插值的关键，因此选择合适的半变异函数模型非常重要，SuperMap提供了以下三种半变异函数模型：
 *
 * · 指数型（EXPONENTIAL）：适用于空间相关关系随样本间距的增加成指数递减的情况，其空间自相关关系在样本间距的无穷远处完全消失。
 *
 * · 球型（SPHERICAL）：适用于空间自相关关系随样本间距的增加而逐渐减少，直到超出一定的距离时空间自相关关系消失的情况。
 *
 * · 高斯型（GAUSSIAN）：适用于半变异函数值渐进地逼近基台值的情况。
 *
 * 半变异函数中，有一个关键参数即插值的字段值的期望（平均值），由于对于此参数的不同处理方法而衍生出了不同的Kriging方法。SuperMap的差值功能基于以下三种常用Kriging算法：
 *
 * １.　简单克吕金（Simple Kriging）：该方法假定用于插值的字段值的期望（平均值）已知的某一常数。
 *
 * ２.　普通克吕金（Kriging）：该方法假定用于插值的字段值的期望（平均值）未知且恒定。它利用一定的数学函数，通过对给定的空间点进行拟合来估算单元格的值，
 *      生成格网数据集。它不仅可以生成一个表面，还可以给出预测结果的精度或者确定性的度量。因此，此方法计算精度较高，常用于地学领域。
 *
 * ３.　泛克吕金（Universal Kriging）：该方法假定用于插值的字段值的期望（平均值）是未知的变量。在样点数据中存在某种主导趋势且该趋势可以通过某一个确定
 *      的函数或者多项式进行拟合的情况下，适用泛克吕金插值法。
 *
 * 克吕金法的优点是以空间统计学作为其坚实的理论基础，物理含义明确；不但能估计测定参数的空间变异分布，而且还可以估算参数的方差分布。克吕金法的缺点是计算步骤较烦琐，
 * 计算量大，且变异函数有时需要根据经验人为选定。
 *
 * @extends {SuperMap.InterpolationAnalystParameters}
 * @api
 * @example 例如：
 * (start code)
 * var myInterpolationKrigingAnalystParameters = new SuperMap.InterpolationKrigingAnalystParameters({
     *     dataset:"SamplesP@Interpolation",
     *     type: "KRIGING",
     *     angle: 0,
     *     mean: 5,
     *     nugget: 30,
     *     range: 50,
     *     sill: 300,
     *     variogramMode: "EXPONENTIAL",
     *     searchMode: "QUADTREE",
     *     maxPointCountForInterpolation: 20,
     *     maxPointCountInNode: 5,
     *     pixelFormat: "BIT16",
     *     zValueFieldName: "AVG_TMP",
     *     resolution: 30000,
     *     filterQueryParameter: {
     *         attributeFilter: ""
     *     },
     *     outputDatasetName: "myKriging"
     * });
 * (end)
 *
 */
var InterpolationKrigingAnalystParameters = function (_InterpolationAnalyst) {
    _inherits(InterpolationKrigingAnalystParameters, _InterpolationAnalyst);

    /**
     *
     *
       *
     * @method SuperMap.InterpolationKrigingAnalystParameters.initialize
     * @param options - {Object} 参数。
       * Allowed options properties:</br>
     * type - {String} 克吕金插值的类型。必设参数。</br>
     * mean - {Number} 【简单克吕金】类型下,插值字段的平均值。</br>
     * angle - {Number} 克吕金算法中旋转角度值，默认值为0。</br>
     * nugget - {Number} 克吕金算法中块金效应值，默认值为0。</br>
     * range - {Number} 克吕金算法中自相关阈值，单位与原数据集单位相同，默认值为0。</br>
     * sill - {Number} 克吕金算法中基台值，默认值为0。</br>
     * variogramMode - {String} 克吕金插值时的半变函数类型，默认为球型（SPHERICAL）。</br>
     * exponent - {String} 【泛克吕金】类型下，用于插值的样点数据中趋势面方程的阶数，可选值为exp1、exp2，默认值为exp1。</br>
     * bounds - {SuperMap.Bounds} 插值分析的范围，用于确定结果栅格数据集的范围。</br>
     * searchMode - {String} 插值运算时，查找参与运算点的方式，有固定点数查找、定长查找、块查找，必设参数。</br>
     * expectedCount - {Number} 【固定点数查找】方式下，设置待查找的点数，默认值为12；【定长查找】方式下，设置查找的最小点数，默认值为12。</br>
     * searchRadius - {Number} 【定长查找】方式下，设置参与运算点的查找范围，默认值为0。</br>
     * maxPointCountForInterpolation - {Number} 【块查找】方式下，设置最多参与插值的点数，默认值为200。</br>
     * maxPointCountInNode - {Number} 【块查找】方式下，设置单个块内最多参与运算点数，默认值为50。</br>
     * zValueFieldName - {String} 存储用于进行插值分析的字段名称，插值分析不支持文本类型的字段。当插值分析类型(SuperMap.InterpolationAnalystType)为 dataset 时，必设参数。</br>
     * zValueScale - {Number} 用于进行插值分析值的缩放比率，默认值为1。</br>
     * resolution - {Number} 插值结果栅格数据集的分辨率，即一个像元所代表的实地距离，与点数据集单位相同。</br>
     * filterQueryParameter - {SuperMap.FilterParameter} 属性过滤条件。</br>
     * outputDatasetName - {String} 插值分析结果数据集的名称，必设参数。</br>
     * outputDatasourceName - {String} 插值分析结果数据源的名称。必设参数</br>
     * pixelFormat - {String} 指定结果栅格数据集存储的像素格式。</br>
     * dataset - {String} 要用来做插值分析的数据源中数据集的名称。该名称用形如”数据集名称@数据源别名”形式来表示。</br>
     * 当插值分析类型(SuperMap.InterpolationAnalystType)为 dataset 时，必设参数。</br>
     * inputPoints - {Array <SuperMap.Geometry.Point} 用于做插值分析的离散点集合。当插值分析类型（InterpolationAnalystType）为 geometry 时，必设参数。</br>
     */


    /**
     * APIProperty: maxPointCountForInterpolation
     * {Number} 【块查找】方式下，最多参与插值的点数。默认值为200。
     * 仅用于普通克吕金插值，简单克吕金和泛克吕金不支持块查找。
     */


    /**
     * APIProperty: searchMode
     * {SuperMap.SearchMode} 插值运算时，查找参与运算点的方式，有固定点数查找、定长查找、块查找。必设参数
     * 简单克吕金和泛克吕金不支持块查找。
     * 具体如下：
     * {KDTREE_FIXED_COUNT} 使用 KDTREE 的固定点数方式查找参与内插分析的点。
     * {KDTREE_FIXED_RADIUS} 使用 KDTREE 的定长方式查找参与内插分析的点。
     * {QUADTREE} 使用 QUADTREE 方式查找参与内插分析的点（块查找）。
     */


    /**
     * APIProperty: variogramMode
     * {SuperMap.VariogramMode} 克吕金插值时的半变函数类型.
     * 默认值为 SuperMap.VariogramMode.SPHERICAL。
     * 用户所选择的半变函数类型会影响未知点的预测，特别是曲线在原点处的不同形状有重要意义。
     * 曲线在原点处越陡，则较近领域对该预测值的影响就越大，因此输出表面就会越不光滑。
     */


    /**
     * APIProperty: range
     * {Number} 克吕金算法中自相关阈值，单位与原数据集单位相同。默认值为0。
     */


    /**
     * APIProperty: angle
     * {Number} 克吕金算法中旋转角度值。默认值为0。
     * 此角度值指示了每个查找邻域相对于水平方向逆时针旋转的角度。
     */


    /**
     * APIProperty: type
     * {SuperMap.InterpolationAlgorithmType} 克吕金插值的类型。必设参数
     * 具体如下：
     * {KRIGING} 普通克吕金插值法
     * {SimpleKriging} 简单克吕金插值法
     * {UniversalKriging} 泛克吕金插值法
     */
    function InterpolationKrigingAnalystParameters(options) {
        _classCallCheck(this, InterpolationKrigingAnalystParameters);

        var _this = _possibleConstructorReturn(this, (InterpolationKrigingAnalystParameters.__proto__ || Object.getPrototypeOf(InterpolationKrigingAnalystParameters)).call(this, options));

        _this.type = null;
        _this.mean = null;
        _this.angle = 0;
        _this.nugget = 0;
        _this.range = 0;
        _this.sill = 0;
        _this.variogramMode = _REST.VariogramMode.SPHERICAL;
        _this.exponent = _REST.Exponent.EXP1;
        _this.searchMode = null;
        _this.expectedCount = 12;
        _this.maxPointCountForInterpolation = 200;
        _this.maxPointCountInNode = 50;
        _this.CLASS_NAME = "SuperMap.InterpolationKrigingAnalystParameters";

        var me = _this;
        me.type = null;
        me.mean = null;
        me.angle = 0;
        me.nugget = 0;
        me.range = 0;
        me.sill = 0;
        me.variogramMode = "SPHERICAL";
        me.exponent = "EXP1";
        me.searchMode = null;
        me.expectedCount = 12;
        me.maxPointCountForInterpolation = 200;
        me.maxPointCountInNode = 50;
        if (options) {
            _SuperMap2.default.Util.extend(me, options);
        }
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: maxPointCountInNode
     * {Number} 【块查找】方式下，设置单个块内最多参与运算点数。默认值为50。
     * 仅用于普通克吕金插值，简单克吕金和泛克吕金不支持块查找。
     */


    /**
     * APIProperty: expectedCount
     * {Number}
     * 【固定点数查找】方式下，设置待查找的点数，即参与差值运算的点数，默认值为12。
     * 【定长查找】方式下，设置查找的最小点数，默认值为12
     */


    /**
     * APIProperty: exponent
     * {SuperMap.Exponent} 【泛克吕金】类型下，用于插值的样点数据中趋势面方程的阶数。
     * 默认值为 SuperMap.Exponent.EXP1。
     */


    /**
     * APIProperty: sill
     * {Number} 克吕金算法中基台值。默认值为0。
     */


    /**
     * APIProperty: nugget
     * {Number} 克吕金算法中块金效应值。默认值为0。
     */


    /**
     * APIProperty: mean
     * {Number} 【简单克吕金】方式下，插值字段的平均值。
     * 即采样点插值字段值总和除以采样点数目。
     */


    _createClass(InterpolationKrigingAnalystParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(InterpolationKrigingAnalystParameters.prototype.__proto__ || Object.getPrototypeOf(InterpolationKrigingAnalystParameters.prototype), 'destroy', this).call(this);
            var me = this;
            me.type = null;
            me.mean = null;
            me.angle = null;
            me.nugget = null;
            me.range = null;
            me.sill = null;
            me.variogramMode = null;
            me.exponent = null;
            me.searchMode = null;
            me.expectedCount = null;
            me.maxPointCountForInterpolation = null;
            me.maxPointCountInNode = null;
        }
    }]);

    return InterpolationKrigingAnalystParameters;
}(_InterpolationAnalystParameters2.default);

exports.default = InterpolationKrigingAnalystParameters;


_SuperMap2.default.InterpolationKrigingAnalystParameters = InterpolationKrigingAnalystParameters;

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _InterpolationAnalystParameters = __webpack_require__(24);

var _InterpolationAnalystParameters2 = _interopRequireDefault(_InterpolationAnalystParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.InterpolationRBFAnalystParameters
 * @constructs SuperMap.InterpolationRBFAnalystParameters
 * @classdesc
 * 样条插值（径向基函数插值法）分析参数类
 * @extends {SuperMap.InterpolationAnalystParameters}
 * @api
 * @example 例如：
 * (start code)
 * var myInterpolationRBFAnalystParameters = new SuperMap.InterpolationRBFAnalystParameters({
     *     dataset:"SamplesP@Interpolation",
     *     smooth: 0.1,
     *     tension: 40,
     *     searchMode: "QUADTREE",
     *     maxPointCountForInterpolation: 20,
     *     maxPointCountInNode: 5,
     *     pixelFormat: "BIT16",
     *     zValueFieldName: "AVG_TMP",
     *     resolution: 3000,
     *     filterQueryParameter: {
     *         attributeFilter: ""
     *     },
     *     outputDatasetName: "myRBF"
     * });
 * (end)
 *
 */
var InterpolationRBFAnalystParameters = function (_InterpolationAnalyst) {
    _inherits(InterpolationRBFAnalystParameters, _InterpolationAnalyst);

    /**
     *
     * @method SuperMap.InterpolationRBFAnalystParameters.initialize
     * @param options - {Object} 参数。
     *
     * Allowed options properties:</br>
     * smooth - {Number} 光滑系数，该值表示插值函数曲线与点的逼近程度，值域为 0到1，默认值为0.1。</br>
     * tension - {Number} 张力系数，用于调整结果栅格数据表面的特性，默认为40。</br>
     * bounds - {SuperMap.Bounds} 插值分析的范围，用于确定结果栅格数据集的范围。</br>
     * searchMode - {String} 插值运算时，查找参与运算点的方式，有固定点数查找、定长查找、块查找。必设参数。</br>
     * expectedCount - {Number} 【固定点数查找】方式下，设置参与差值运算的点数，默认值为12。</br>
     * searchRadius - {Number} 【定长查找】方式下，设置参与运算点的查找范围，默认值为0。</br>
     * maxPointCountForInterpolation - {Number} 【块查找】方式下，设置最多参与插值的点数。默认为200。</br>
     * maxPointCountInNode - {Number} 【块查找】方式下，设置单个块内最多参与运算点数。默认为50。</br>
     * zValueFieldName - {String} 存储用于进行插值分析的字段名称，插值分析不支持文本类型的字段。当插值分析类型(InterpolationAnalystType)为 dataset 时，必设参数。</br>
     * zValueScale - {Number} 用于进行插值分析值的缩放比率，默认值为1。</br>
     * resolution - {Number} 插值结果栅格数据集的分辨率，即一个像元所代表的实地距离，与点数据集单位相同。</br>
     * filterQueryParameter - {SuperMap.FilterParameter} 属性过滤条件。</br>
     * outputDatasetName - {String} 插值分析结果数据集的名称。必设参数。</br>
     * outputDatasourceName - {String} 插值分析结果数据源的名称。必设参数。</br>
     * pixelFormat - {String} 指定结果栅格数据集存储的像素格式。</br>
     * dataset - {String} 要用来做插值分析的数据源中数据集的名称。该名称用形如”数据集名称@数据源别名”形式来表示。当插值分析类型(InterpolationAnalystType)为 dataset 时，必设参数。</br>
     * inputPoints - {Array <SuperMap.Geometry.Point} 用于做插值分析的离散点集合。当插值分析类型（InterpolationAnalystType）为 geometry 时，必设参数。</br>
     */


    /**
     * APIProperty: maxPointCountForInterpolation
     * {Number} 【块查找】方式下，最多参与插值的点数。默认值为200。
     */

    /**
     * APIProperty: searchMode
     * {SuperMap.SearchMode} 插值运算时，查找参与运算点的方式，有固定点数查找、定长查找、块查找。必设参数
     * 具体如下：
     * {KDTREE_FIXED_COUNT} 使用 KDTREE 的固定点数方式查找参与内插分析的点。
     * {KDTREE_FIXED_RADIUS} 使用 KDTREE 的定长方式查找参与内插分析的点。
     * {QUADTREE} 使用 QUADTREE 方式查找参与内插分析的点（块查找）。
     */


    /**
     * APIProperty: smooth
     * {Number} 光滑系数，值域为 0到1，默认值为0.1，常用取值如0、0.001、0.01、0.1、和0.5。
     * 该值表示插值函数曲线与点的逼近程度，此数值越大，函数曲线与点的偏差越大，反之越小。
     */
    function InterpolationRBFAnalystParameters(options) {
        _classCallCheck(this, InterpolationRBFAnalystParameters);

        var _this = _possibleConstructorReturn(this, (InterpolationRBFAnalystParameters.__proto__ || Object.getPrototypeOf(InterpolationRBFAnalystParameters)).call(this, options));

        _this.smooth = 0.1;
        _this.tension = 40;
        _this.searchMode = null;
        _this.expectedCount = 12;
        _this.maxPointCountForInterpolation = 200;
        _this.maxPointCountInNode = 50;
        _this.CLASS_NAME = "SuperMap.InterpolationRBFAnalystParameters";

        var me = _this;
        me.smooth = 0.1;
        me.tension = 40;
        me.searchMode = null;
        me.expectedCount = 12;
        me.maxPointCountForInterpolation = 200;
        me.maxPointCountInNode = 50;
        if (options) {
            _SuperMap2.default.Util.extend(me, options);
        }
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: maxPointCountInNode
     * {Number} 【块查找】方式下，单个块内最多参与运算点数。默认值为50。
     */


    /**
     * APIProperty: expectedCount
     * {Number} 【固定点数查找】方式下，设置待查找的点数，即参与差值运算的点数。默认值为12。
     */


    /**
     * APIProperty: tension
     * {Number} 张力系数，默认为40，常用取值如0、1、5和10。
     * 用于调整结果栅格数据表面的特性，张力越大，插值时每个点对计算结果影响越小，反之越大。
     */


    _createClass(InterpolationRBFAnalystParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(InterpolationRBFAnalystParameters.prototype.__proto__ || Object.getPrototypeOf(InterpolationRBFAnalystParameters.prototype), 'destroy', this).call(this);
            var me = this;
            me.smooth = null;
            me.tension = null;
            me.searchMode = null;
            me.expectedCount = null;
            me.maxPointCountForInterpolation = null;
            me.maxPointCountInNode = null;
        }
    }], [{
        key: 'toObject',
        value: function toObject(datasetInterpolationRBFAnalystParameters, tempObj) {
            for (var name in datasetInterpolationRBFAnalystParameters) {
                tempObj[name] = datasetInterpolationRBFAnalystParameters[name];
            }
        }
    }]);

    return InterpolationRBFAnalystParameters;
}(_InterpolationAnalystParameters2.default);

exports.default = InterpolationRBFAnalystParameters;


_SuperMap2.default.InterpolationRBFAnalystParameters = InterpolationRBFAnalystParameters;

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.KernelDensityJobParameter
 * @description 密度分析任务参数类
 * @param options - {Object} 可选参数。如：<br>
 *         datasetName -{String} 数据集名。 <br>
 *         query -{SuperMap.Bounds} 分析范围。 <br>
 *         resolution -{number} 分辨率。 <br>
 *         method -{number} 分析方法。 <br>
 *         meshType -{number} 分析类型。 <br>
 *         fields -{String} 权重索引。 <br>
 *         radius -{number} 分析的影响半径。
 */
var KernelDensityJobParameter = function () {

    /**
     * @member SuperMap.KernelDensityJobParameter.prototype.radiusUnit -{SuperMap.AnalystSizeUnit}
     * @description 搜索半径单位。
     */


    /**
     * @member SuperMap.KernelDensityJobParameter.prototype.radius -{number}
     * @description 分析的影响半径。
     */


    /**
     * @member SuperMap.KernelDensityJobParameter.prototype.meshType -{number}
     * @description 分析类型。
     */


    /**
     * @member SuperMap.KernelDensityJobParameter.prototype.resolution -{number}
     * @description 网格大小。
     */


    /**
     * @member SuperMap.KernelDensityJobParameter.prototype.datasetName -{String}
     * @description 数据集名。
     */
    function KernelDensityJobParameter(options) {
        _classCallCheck(this, KernelDensityJobParameter);

        this.datasetName = "";
        this.query = "";
        this.resolution = 80;
        this.method = 0;
        this.meshType = 0;
        this.fields = "";
        this.radius = 300;
        this.meshSizeUnit = _REST.AnalystSizeUnit.METER;
        this.radiusUnit = _REST.AnalystSizeUnit.METER;
        this.areaUnit = _REST.AnalystAreaUnit.SQUAREMILE;

        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * @member SuperMap.KernelDensityJobParameter.prototype.areaUnit -{SuperMap.AnalystAreaUnit}
     * @description 面积单位。
     */


    /**
     * @member SuperMap.KernelDensityJobParameter.prototype.meshSizeUnit -{SuperMap.AnalystSizeUnit}
     * @description 网格大小单位。
     */


    /**
     * @member SuperMap.KernelDensityJobParameter.prototype.fields -{String}
     * @description 权重索引。
     */


    /**
     * @member SuperMap.KernelDensityJobParameter.prototype.method -{number}
     * @description 分析方法。
     */


    /**
     * @member SuperMap.KernelDensityJobParameter.prototype.query -{SuperMap.Bounds}
     * @description 分析范围。
     */


    _createClass(KernelDensityJobParameter, [{
        key: 'destroy',
        value: function destroy() {
            this.datasetName = null;
            this.query = null;
            this.resolution = null;
            this.method = null;
            this.radius = null;
            this.meshType = null;
            this.fields = null;
            this.meshSizeUnit = null;
            this.radiusUnit = null;
            this.areaUnit = null;
        }
    }], [{
        key: 'toObject',
        value: function toObject(kernelDensityJobParameter, tempObj) {
            for (var name in kernelDensityJobParameter) {
                if (name === "datasetName") {
                    tempObj['input'] = tempObj['input'] || {};
                    tempObj['input'][name] = kernelDensityJobParameter[name];
                    continue;
                }
                tempObj['analyst'] = tempObj['analyst'] || {};
                tempObj['analyst'][name] = kernelDensityJobParameter[name];
            }
        }
    }]);

    return KernelDensityJobParameter;
}();

exports.default = KernelDensityJobParameter;


_SuperMap2.default.KernelDensityJobParameter = KernelDensityJobParameter;

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ProcessingServiceBase = __webpack_require__(16);

var _ProcessingServiceBase2 = _interopRequireDefault(_ProcessingServiceBase);

var _KernelDensityJobParameter = __webpack_require__(176);

var _KernelDensityJobParameter2 = _interopRequireDefault(_KernelDensityJobParameter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.KernelDensityJobsService
 * @description 核密度大数据服务类
 * @augments SuperMap.ProcessingServiceBase
 * @param url -{String} 核密度大数据服务地址。
 * @param options - {Object} 交互服务时所需可选参数。
 */
var KernelDensityJobsService = function (_ProcessingServiceBas) {
    _inherits(KernelDensityJobsService, _ProcessingServiceBas);

    /**
     * @function SuperMap.KernelDensityJobsService.protitype.initialize
     * @description SuperMap.KernelDensityJobsService 的构造函数
     * @param url -{String} 核密度大数据服务地址。
     * @param options - {Object} 交互服务时所需可选参数。
     */
    function KernelDensityJobsService(url, options) {
        _classCallCheck(this, KernelDensityJobsService);

        var _this = _possibleConstructorReturn(this, (KernelDensityJobsService.__proto__ || Object.getPrototypeOf(KernelDensityJobsService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.KernelDensityJobsService";

        _this.url += "/spatialanalyst/density";
        return _this;
    }

    /**
     *@inheritDoc
     */


    _createClass(KernelDensityJobsService, [{
        key: 'destroy',
        value: function destroy() {
            _get(KernelDensityJobsService.prototype.__proto__ || Object.getPrototypeOf(KernelDensityJobsService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.KernelDensityJobsService.protitype.getKernelDensityJobs
         * @description 获取核密度大数据
         * @return {*}
         */

    }, {
        key: 'getKernelDensityJobs',
        value: function getKernelDensityJobs() {
            return _get(KernelDensityJobsService.prototype.__proto__ || Object.getPrototypeOf(KernelDensityJobsService.prototype), 'getJobs', this).call(this, this.url);
        }

        /**
         * @function SuperMap.KernelDensityJobsService.protitype.getKernelDensityJobs
         * @description 获取指定id的核密度大数据服务
         * @param id -{String} 指定要获取数据的id
         */

    }, {
        key: 'getKernelDensityJob',
        value: function getKernelDensityJob(id) {
            return _get(KernelDensityJobsService.prototype.__proto__ || Object.getPrototypeOf(KernelDensityJobsService.prototype), 'getJobs', this).call(this, this.url + '/' + id);
        }

        /**
         * @function SuperMap.KernelDensityJobsService.protitype.addKernelDensityJob
         * @description 新建核密度大数据服务
         * @param params - {SuperMap.KernelDensityJobParameter} 创建一个空间分析的请求参数。
         * @param seconds - {Number} 开始创建后，获取创建成功结果的时间间隔。
         */

    }, {
        key: 'addKernelDensityJob',
        value: function addKernelDensityJob(params, seconds) {
            return _get(KernelDensityJobsService.prototype.__proto__ || Object.getPrototypeOf(KernelDensityJobsService.prototype), 'addJob', this).call(this, this.url, params, _KernelDensityJobParameter2.default, seconds);
        }
    }]);

    return KernelDensityJobsService;
}(_ProcessingServiceBase2.default);

exports.default = KernelDensityJobsService;


_SuperMap2.default.KernelDensityJobsService = KernelDensityJobsService;

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _LabelMatrixCell2 = __webpack_require__(30);

var _LabelMatrixCell3 = _interopRequireDefault(_LabelMatrixCell2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Class: SuperMap.LabelImageCell
 * 图片类型的矩阵标签元素类。
 * 该类继承自 SuperMap.LabelMatrixCell类，主要对矩阵标签中的专题图类型的矩阵标签元素进行设置。
 * 矩阵标签专题图是标签专题图（ThemeLabel）的一种，其中矩阵标签中的填充元素又可分为图片类型（SuperMap.LabelImageCell）、
 * 符号类型（SuperMap.LabelSymbolCell）、专题图类型（SuperMap.LabelThemeCell）三种，该类是这三种类型的矩阵标签元素其中的一种，
 * 用于定义符号类型的矩阵标签，如符号 ID 字段名称（符号 ID 与 SuperMap 桌面产品中点、线、面符号的 ID 对应） 、大小等。
 * 用户在实现矩阵标签专题图时只需将定义好的矩阵标签元素赋值予 SuperMap.ThemeLabel.matrixCells 属性即可。matrixCells 属是一个二维数组，
 * 每一维可以是任意类型的矩阵标签元素组成的数组（也可是单个标签元素组成的数组，即数组中只有一个元素）。
 *
 * Inherits from:
 *  - <SuperMap.LabelMatrixCell>
 */
var LabelImageCell = function (_LabelMatrixCell) {
    _inherits(LabelImageCell, _LabelMatrixCell);

    /**
     * Constructor: SuperMap.LabelImageCell
     * 图片类型的矩阵标签元素类构造函数，用于创建 SuperMap.LabelImageCell 类的新实例。
     *
     * Parameters:
     * options - {Object} 参数。
     *
     * Allowed options properties:
     * height - {Number} 设置图片的高度，单位为毫米。
     * pathField - {String} 设置矩阵标签元素所使用图片的路径。
     * rotation - {Number} 图片的旋转角度。逆时针方向为正方向，单位为度，精确到0.1度。默认值为0.0。
     * width - {Number} 设置图片的宽度，单位为毫米。
     * sizeFixed - {Boolean} 是否固定图片的大小。默认值为 false，即图片将随地图缩放。
     */


    /**
     * APIProperty: sizeFixed
     * {Boolean} 是否固定图片的大小。默认值为 false，即图片将随地图缩放。
     */


    /**
     * APIProperty: rotation
     * {Number} 图片的旋转角度。逆时针方向为正方向，单位为度，精确到0.1度。默认值为0.0。
     */


    /**
     * APIProperty: height
     * {Number} 设置图片的高度，单位为毫米。
     */
    function LabelImageCell(options) {
        _classCallCheck(this, LabelImageCell);

        var _this = _possibleConstructorReturn(this, (LabelImageCell.__proto__ || Object.getPrototypeOf(LabelImageCell)).call(this, options));

        _this.height = 0;
        _this.pathField = null;
        _this.rotation = 0.0;
        _this.width = 0;
        _this.sizeFixed = false;
        _this.type = "IMAGE";
        _this.CLASS_NAME = "SuperMap.LabelImageCell";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /**
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * Property: type
     * {Boolean} 制作矩阵专题图时是必须的。
     */


    /**
     * APIProperty: width
     * {Number} 设置图片的宽度，单位为毫米。
     */


    /**
     * APIProperty: pathField
     * {String} 设置矩阵标签元素所使用的图片路径对应的字段名。
     */


    _createClass(LabelImageCell, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.height = null;
            me.pathField = null;
            me.rotation = null;
            me.width = null;
            me.sizeFixed = null;
        }
    }]);

    return LabelImageCell;
}(_LabelMatrixCell3.default);

exports.default = LabelImageCell;


_SuperMap2.default.LabelImageCell = LabelImageCell;

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServerTextStyle = __webpack_require__(18);

var _ServerTextStyle2 = _interopRequireDefault(_ServerTextStyle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Class: SuperMap.LabelMixedTextStyle
 * 标签文本复合风格类。
 * 该类主要用于对标签专题图中标签的文本内容进行风格设置。通过该类用户可以使标签的文字显示不同的风格，
 * 比如文本 “喜马拉雅山”，通过本类可以将前三个字用红色显示，后两个字用蓝色显示。
 * 对同一文本设置不同的风格实质上是对文本的字符进行分段，同一分段内的字符具有相同的显示风格。
 * 对字符分段有两种方式，一种是利用分隔符对文本进行分段；另一种是根据分段索引值进行分段。
 * 1. 利用分隔符对文本进行分段: 比如文本 “5&109” 被分隔符 “&” 分为“5”和“109”两部分，
 * 在显示时，“5” 和分隔符 “&” 使用同一个风格，字符串 “109” 使用相同的风格。
 * 2. 利用分段索引值进行分段: 文本中字符的索引值是以0开始的整数，比如文本“珠穆朗玛峰”，
 * 第一个字符（“珠”）的索引值为0，第二个字符（“穆”）的索引值为1，以此类推；当设置分段索引值为1，3，4，9时，
 * 字符分段范围相应的就是(-∞，1)，[1，3)，[3，4)，[4，9)，[9，+∞)，可以看出索引号为0的字符（即“珠” ）在第一个分段内，
 * 索引号为1，2的字符（即“穆”、“朗”）位于第二个分段内，索引号为3的字符（“玛”）在第三个分段内，索引号为4的字符（“峰”）在第四个分段内，其余分段中没有字符。
 */
var LabelMixedTextStyle = function () {

    /**
     * Constructor: SuperMap.LabelMixedTextStyle
     * 标签文本复合风格类构造函数，用于创建 SuperMap.LabelMixedTextStyle 类的新实例。
     *
     * Parameters:
     * options - {Object} 参数。
     *
     * Allowed options properties:
     * defaultStyle - {SuperMap.ServerTextStyle} 默认的文本复合风格。
     * separator - {String} 文本的分隔符。
     * separatorEnabled - Boolean} 文本的分隔符是否有效。
     * splitIndexes - {Array(Number)} 分段索引值，分段索引值用来对文本中的字符进行分段。
     * styles - {Array(<SuperMap.ServerTextStyle>)} 文本样式集合。
     */


    /**
     * APIProperty: splitIndexes
     * {Array(Number)} 分段索引值，分段索引值用来对文本中的字符进行分段。
     * 文本中字符的索引值是以0开始的整数，比如文本“珠穆朗玛峰”，第一个字符（“珠”）的索引值为0，第二个字符（“穆”）的索引值为1，
     * 以此类推；当设置分段索引值数组为[1，3，4，9]时，字符分段范围相应的就是(-∞，1)，[1，3)，[3，4)，[4，9)，[9，+∞)，
     * 可以看出索引号为0的字符（即“珠” ）在第一个分段内，索引号为1，2的字符（即“穆”、“朗”）位于第二个分段内，
     * 索引号为3的字符（“玛”）在第三个分段内，索引号为4的字符（“峰”）在第四个分段内，其余分段中没有字符。
     */


    /**
     * APIProperty: separator
     * {String} 文本的分隔符，分隔符的风格与前一个字符的风格一样。文本的分隔符是一个将文本分割开的符号，
     * 比如文本 “5_109” 被 “_” 隔符为 “5” 和 “109” 两部分，假设有风格数组：style1、style2。
     * 在显示时，“5” 和分隔符 “_” 使用 Style1 风格渲染，字符串 “109” 使用 Style2 的风格。
     */
    function LabelMixedTextStyle(options) {
        _classCallCheck(this, LabelMixedTextStyle);

        this.defaultStyle = null;
        this.separator = null;
        this.separatorEnabled = false;
        this.splitIndexes = null;
        this.styles = null;
        this.CLASS_NAME = "SuperMap.LabelMixedTextStyle";

        var me = this;
        me.defaultStyle = new _ServerTextStyle2.default();
        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: styles
     * {Array(<SuperMap.ServerTextStyle>)} 文本样式集合。文本样式集合中的样式根据索引与不同分段一一对应，
     * 如果有分段没有风格对应则使用 defaultStyle。
     */


    /**
     * APIProperty: separatorEnabled
     * {Boolean} 文本的分隔符是否有效。分隔符有效时利用分隔符对文本进行分段；无效时根据文本中字符的位置进行分段。
     * 分段后，同一分段内的字符具有相同的显示风格。默认为 false。
     */


    /**
     * APIProperty: defaultStyle
     * {SuperMap.ServerTextStyle} 默认的文本复合风格，即 SuperMap.ServerTextStyle 各字段的默认值。
     */


    _createClass(LabelMixedTextStyle, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            if (me.defaultStyle) {
                me.defaultStyle.destroy();
                me.defaultStyle = null;
            }
            me.separator = null;
            me.separatorEnabled = null;
            if (me.splitIndexes) {
                me.splitIndexes = null;
            }
            if (me.styles) {
                for (var i = 0, styles = me.styles, len = styles.length; i < len; i++) {
                    styles[i].destroy();
                }
                me.styles = null;
            }
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            if (!obj) return;
            var res = new LabelMixedTextStyle();
            var stys = obj.styles;
            _SuperMap2.default.Util.copy(res, obj);
            res.defaultStyle = new _ServerTextStyle2.default(obj.defaultStyle);
            if (stys) {
                res.styles = [];
                for (var i = 0, len = stys.length; i < len; i++) {
                    res.styles.push(new _ServerTextStyle2.default(stys[i]));
                }
            }
            return res;
        }
    }]);

    return LabelMixedTextStyle;
}();

exports.default = LabelMixedTextStyle;


_SuperMap2.default.LabelMixedTextStyle = LabelMixedTextStyle;

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServerStyle = __webpack_require__(9);

var _ServerStyle2 = _interopRequireDefault(_ServerStyle);

var _LabelMatrixCell2 = __webpack_require__(30);

var _LabelMatrixCell3 = _interopRequireDefault(_LabelMatrixCell2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Class: SuperMap.LabelSymbolCell
 * 符号类型的矩阵标签元素类。
 * 该类继承自 SuperMap.LabelMatrixCell类，主要对矩阵标签中的专题图类型的矩阵标签元素进行设置。
 * 矩阵标签专题图是标签专题图（SuperMap.ThemeLabel）的一种，其中矩阵标签中的填充元素又可分为图片类型（SuperMap.LabelImageCell）、
 * 符号类型（SuperMap.LabelSymbolCell）、专题图类型（SuperMap.LabelThemeCell）三种，该类是这三种类型的矩阵标签元素其中的一种，
 * 用于定义符号类型的矩阵标签，如符号 ID 字段名称（符号 ID 与 SuperMap 桌面产品中点、线、面符号的 ID 对应） 、大小等。
 * 用户在实现矩阵标签专题图时只需将定义好的矩阵标签元素赋值予 SuperMap.ThemeLabel.matrixCells 属性即可。matrixCells 属是一个二维数组，
 * 每一维可以是任意类型的矩阵标签元素组成的数组（也可是单个标签元素组成的数组，即数组中只有一个元素）。
 *
 * Inherits from:
 *  - <SuperMap.LabelMatrixCell>
 */
var LabelSymbolCell = function (_LabelMatrixCell) {
    _inherits(LabelSymbolCell, _LabelMatrixCell);

    /**
     * Constructor: SuperMap.LabelSymbolCell
     * 符号类型的矩阵标签元素类构造函数，用于创建 SuperMap.LabelSymbolCell 类的新实例。
     *
     * Parameters:
     * options - {Object} 参数。
     *
     * Allowed options properties:
     * style - {SuperMap.ServerStyle} 获取或设置符号样式—— SuperMap.ServerStyle 对象。
     * symbolIDField - {String} 符号 ID 或符号 ID 所对应的字段名称。
     */


    /**
     * APIProperty: symbolIDField
     * {String} 获取或设置符号 ID 或符号 ID 所对应的字段名称，必设属性。
     */
    function LabelSymbolCell(options) {
        _classCallCheck(this, LabelSymbolCell);

        var _this = _possibleConstructorReturn(this, (LabelSymbolCell.__proto__ || Object.getPrototypeOf(LabelSymbolCell)).call(this, options));

        _this.style = null;
        _this.symbolIDField = null;
        _this.type = "SYMBOL";
        _this.CLASS_NAME = "SuperMap.LabelSymbolCell";

        var me = _this;
        me.style = new _ServerStyle2.default();
        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /**
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * Property: type
     * {String} 制作矩阵专题图时是必须的。
     */


    /**
     * APIProperty: style
     * {SuperMap.ServerStyle} 获取或设置符号样式—— SuperMap.ServerStyle 对象，包括符号大小（SuperMap.ServerStyle.markerSize）
     * 和符号旋转（SuperMap.ServerStyle.markerAngle）角度，其中用于设置符号 ID 的属性（SuperMap.ServerStyle.markerSymbolID）在此处不起作用。
     */


    _createClass(LabelSymbolCell, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            if (me.style) {
                me.style.destroy();
                me.style = null;
            }
            me.symbolIDField = null;
        }
    }]);

    return LabelSymbolCell;
}(_LabelMatrixCell3.default);

exports.default = LabelSymbolCell;


_SuperMap2.default.LabelSymbolCell = LabelSymbolCell;

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ThemeLabel = __webpack_require__(32);

var _ThemeLabel2 = _interopRequireDefault(_ThemeLabel);

var _LabelMatrixCell2 = __webpack_require__(30);

var _LabelMatrixCell3 = _interopRequireDefault(_LabelMatrixCell2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Class:  SuperMap.LabelThemeCell
 * 专题图类型的矩阵标签元素类。
 * 该类继承自 SuperMap.LabelMatrixCell类，主要对矩阵标签中的专题图类型的矩阵标签元素进行设置。
 * 矩阵标签专题图是标签专题图（SuperMap.ThemeLabel）的一种，其中矩阵标签中的填充元素又可分为图片类型（SuperMap.LabelImageCell）、
 * 符号类型（SuperMap.LabelSymbolCell）、专题图类型（SuperMap.LabelThemeCell）三种，该类是这三种类型的矩阵标签元素其中的一种，
 * 用于定义符号类型的矩阵标签，如符号 ID 字段名称（符号 ID 与 SuperMap 桌面产品中点、线、面符号的 ID 对应） 、大小等。
 * 用户在实现矩阵标签专题图时只需将定义好的矩阵标签元素赋值予 SuperMap.ThemeLabel.matrixCells 属性即可。matrixCells 属是一个二维数组，
 * 每一维可以是任意类型的矩阵标签元素组成的数组（也可是单个标签元素组成的数组，即数组中只有一个元素）。
 *
 * Inherits from:
 *  - <SuperMap.LabelMatrixCell>
 */
var LabelThemeCell = function (_LabelMatrixCell) {
    _inherits(LabelThemeCell, _LabelMatrixCell);

    /**
     * Constructor:  SuperMap.LabelThemeCell
     * 专题图类型的矩阵标签元素类构造函数，用于创建  SuperMap.LabelThemeCell 类的新实例。
     *
     * Parameters:
     * options - {Object} 参数。
     *
     * Allowed options properties:
     * themeLabel - {SuperMap.ThemeLabel} 使用专题图对象作为矩阵标签的一个元素。
     */


    /**
     * APIProperty: themeLabel
     * {SuperMap.ThemeLabel} 使用专题图对象作为矩阵标签的一个元素。
     */
    function LabelThemeCell(options) {
        _classCallCheck(this, LabelThemeCell);

        var _this = _possibleConstructorReturn(this, (LabelThemeCell.__proto__ || Object.getPrototypeOf(LabelThemeCell)).call(this, options));

        _this.themeLabel = null;
        _this.type = "THEME";
        _this.CLASS_NAME = " SuperMap.LabelThemeCell";

        var me = _this;
        me.themeLabel = new _ThemeLabel2.default();
        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /**
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * Property: type
     * {String} 制作矩阵专题图时是必须的。
     */


    _createClass(LabelThemeCell, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            if (me.themeLabel) {
                me.themeLabel.destroy();
                me.themeLabel = null;
            }
        }
    }]);

    return LabelThemeCell;
}(_LabelMatrixCell3.default);

exports.default = LabelThemeCell;


_SuperMap2.default.LabelThemeCell = LabelThemeCell;

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Class: SuperMap.LayerStatus
 * 子图层显示参数类.。
 * 该类存储了各个子图层的名字和是否可见的状态。
 *
 */
var LayerStatus = function () {

    /**
     * Constructor: SuperMap.LayerStatus
     *
     *
     * Parameters:
     * options - {Object} 参数。
     *
     * Allowed options properties:
     * layerName - {String} 获取或设置图层名称。
     * isVisible - {Boolean} 获取或设置图层是否可见，true 表示可见。
     * displayFilter - {String} 图层显示 SQL 过滤条件。
     */


    /**
     * APIProperty: displayFilter
     * {String} 图层显示 SQL 过滤条件，如 layerStatus.displayFilter = "smid < 10"，表示仅显示 smid 值小于 10 的对象。
     */


    /**
     * APIProperty: layerName
     * {String} 获取或设置图层名称。必设属性。。
     */
    function LayerStatus(options) {
        _classCallCheck(this, LayerStatus);

        this.layerName = null;
        this.isVisible = null;
        this.displayFilter = null;
        this.fieldValuesDisplayFilter = null;
        this.CLASS_NAME = "SuperMap.LayerStatus";

        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: fieldValuesDisplayFilter
     * {Object} 图层要素的显示和隐藏的过滤属性，其带有三个属性，分别是:values、fieldName、fieldValuesDisplayMode,他们的作用如下：
     * values：{Array<Number>} - 就是要过滤的值；
     * fieldName：{String} - 要过滤的字段名称 只支持数字类型的字段；
     * fieldValuesDisplayMode：{String} 目前有两个DISPLAY/DISABLE。当为DISPLAY时，表示只显示以上设置的相应属性值的要素，否则表示不显示以上设置的相应属性值的要素
     * */


    /**
     * APIProperty: isVisible
     * {Boolean} 获取或设置图层是否可见，true 表示可见。必设属性。
     */


    _createClass(LayerStatus, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.layerName = null;
            me.isVisible = null;
            me.displayFilter = null;
        }

        /**
         * Method: toJSON
         * 生成对应的json。
         */

    }, {
        key: 'toJSON',
        value: function toJSON() {
            var json = '{';
            json += '"type":"UGC",';
            var v = [];
            if (this.layerName) {
                v.push('"name":"' + this.layerName + '"');
                v.push('"visible":' + this.isVisible);
            }

            if (this.displayFilter) {
                v.push('"displayFilter":"' + this.displayFilter + '"');
            }

            if (this.minScale || this.minScale == 0) {
                v.push('"minScale":' + this.minScale);
            }

            if (this.maxScale || this.maxScale == 0) {
                v.push('"maxScale":' + this.maxScale);
            }

            if (this.fieldValuesDisplayFilter) {
                v.push('"fieldValuesDisplayFilter":' + _SuperMap2.default.Util.toJSON(this.fieldValuesDisplayFilter));
            }

            json += v;
            json += '}';

            return json;
        }
    }]);

    return LayerStatus;
}();

exports.default = LayerStatus;


_SuperMap2.default.LayerStatus = LayerStatus;

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _Graph2 = __webpack_require__(14);

var _Graph3 = _interopRequireDefault(_Graph2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Class: SuperMap.Feature.Theme.Line
 * 折线图。
 *
 * 图表 Line 配置对象 chartsSetting（<SuperMap.Layer.Graph::chartsSetting>） 可设属性如下：
 *
 * Symbolizer properties:
 * width - {Number} 专题要素（图表）宽度，必设参数。
 * height - {Number} 专题要素（图表）高度，必设参数。
 * codomain - {Array{Number}} 图表允许展示的数据值域，长度为 2 的一维数组，第一个元素表示值域下限，第二个元素表示值域上限，必设参数。
 * XOffset - {Number}  专题要素（图表）在 X 方向上的偏移值，单位像素。
 * YOffset - {Number}  专题要素（图表）在 Y 方向上的偏移值，单位像素。
 * dataViewBoxParameter - {Array{Number}} 数据视图框 dataViewBox 参数，
 * 它是指图表框 chartBox （由图表位置、图表宽度、图表高度构成的图表范围框）在左、下，右，上四个方向上的内偏距值。
 * 当使用坐标轴时 dataViewBoxParameter 的默认值为：[45, 15, 15, 15]；不使用坐标轴时 dataViewBoxParameter 的默认值为：[5, 5, 5, 5]。
 * decimalNumber - {Number} 数据值数组 dataValues 元素值小数位数，数据的小数位处理参数，取值范围：[0, 16]。如果不设置此参数，在取数据值时不对数据做小数位处理。
 *
 * useBackground - {Boolean} 是否使用图表背景框。
 * backgroundStyle - {Object} 背景样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Rectangle::style>。
 * backgroundRadius - {Array} 背景框矩形圆角半径，可以用数组分别指定四个角的圆角半径，设：左上、右上、右下、左下角的半径依次为 r1、r2、r3、r4 ,
 * 则 backgroundRadius 为 [r1、r2、r3、r4 ]，默认值[0, 0, 0, 0]。
 *
 * xShapeBlank - {Array{Number}} 水平方向上的图形空白间隔参数。
 * 长度为 2 的数组，第一元素表示折线左端点与数据视图框左端的空白间距，第二个元素表示折线右端点右端与数据视图框右端端的空白间距 。
 *
 * axisStyle - {Object} 坐标轴样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Line::style> 。
 * axisUseArrow - {Boolean} 坐标轴是否使用箭头，默认值：false，不使用箭头。
 * axisYTick - {Number} y 轴刻度数量，默认值：0 ，不使用刻度。
 * axisYLabels - {Array{String}} y 轴上的标签组内容，标签顺序沿着数据视图框左面条边自上而下，等距排布。例如：["1000", "750", "500", "250", "0"]。
 * axisYLabelsStyle - {Object} y 轴上的标签组样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Label::style> 。
 * axisYLabelsOffset - {Array{Number}} y 轴上的标签组偏移量。长度为 2 的数组，数组第一项表示 y 轴标签组横向上的偏移量，向左为正，默认值：0；
 * 数组第二项表示 y 轴标签组纵向上的偏移量，向下为正，默认值：0。
 * axisXLabels - {Array{String}} x 轴上的标签组内容，标签顺序沿着数据视图框下面条边自左向右排布，例如：["92年", "95年", "99年"]。
 * 标签排布规则：当标签数量与 xShapeInfo 中的属性 xShapeCenter 数量相同（即标签个数与数据个数相等时）, 按照 xShapeCenter 提供的位置排布标签，
 * 否则沿数据视图框下面条边等距排布标签。
 * axisXLabelsStyle - {Object} x 轴上的标签组样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Label::style> 。
 * axisXLabelsOffset - {Array{Number}} x 轴上的标签组偏移量。长度为 2 的数组，数组第一项表示 x 轴标签组横向上的偏移量，向左为正，默认值：0；
 * 数组第二项表示 x 轴标签组纵向上的偏移量，向下为正，默认值：0。
 * useXReferenceLine - {Boolean) 是否使用水平参考线，如果为 true，在 axisYTick 大于 0 时有效，水平参考线是 y 轴刻度在数据视图框里的延伸。
 * xReferenceLineStyle - {Object) 水平参考线样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Line::style> 。
 *
 * lineStyle - {Object} 折线图中折线 style，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Line::style>。
 * pointStyle - {Object} 折线图中折线节点基础 style，此参数控制折线节点基础样式，优先级低于 pointStyleByFields 和 pointStyleByCodomain。
 * 此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Point::style> 。
 * pointStyleByFields - {Array{Object}} 按专题字段 themeFields（<SuperMap.Layer.Graph::themeFields>）为折线节点赋 style，此参数按字段控制折线节点样式，
 * 优先级低于 pointStyleByCodomain，高于 pointStyle。此数组中的元素是样式对象，其可设属性： <SuperMap.Feature.ShapeParameters.Point::style> 。
 * 此参数中的 style 与 themeFields 中的字段一一对应 。例如： themeFields（<SuperMap.Layer.Graph::themeFields>） 为 ["POP_1992", "POP_1995", "POP_1999"],
 * pointStyleByFields 为[style1, style2, style3]，则在图表中，字段 POP_1992 对应的折线节点使用 style1，字段 POP_1995 对应的折线节点使用 style2 ，字段 POP_1999 对应的折线节点使用 style3。
 * pointStyleByCodomain - {Array{Object}} 按折线节点代表的数据值所在值域范围控制折线节点样式，优先级高于 pointStyle 和 pointStyleByFields。
 * (start code)
 * // pointStyleByCodomain 的每个元素是个包含值域信息和与值域对应样式信息的对象，该对象（必须）有三个属性：
 * // start: 值域值下限（包含）;
 * // end: 值域值上限（不包含）;
 * // style: 数据可视化图形的 style，这个样式对象的可设属性： <SuperMap.Feature.ShapeParameters.Point::style> 。
 * // pointStyleByCodomain 数组形如：
 * [
 *   {
 *     start:0,
 *     end:250,
 *     style:{
 *          fillColor:"#00CD00"
 *      }
 *  },
 *   {
 *     start:250,
 *     end:500,
 *     style:{
 *          fillColor:"#00EE00"
 *      }
 *  },
 *   {
 *     start:500,
 *     end:750,
 *     style:{
 *          fillColor:"#00FF7F"
 *      }
 *  },
 *   {
 *     start:750,
 *     end:1500,
 *     style:{
 *          fillColor:"#00FF00"
 *      }
 *  }
 * ]
 * (end)
 * pointHoverStyle - {Object} 折线节点 hover 状态时的样式，pointHoverAble 为 true 时有效。
 * pointHoverAble - {Object} 是否允许折线节点使用 hover 状态，默认允许。同时设置 pointHoverAble 和 pointClickAble 为 false，可以直接屏蔽折线节点对专题图层事件的响应。
 * pointClickAble - {Object} 是否允许折线节点被点击，默认允许。同时设置 pointHoverAble 和 pointClickAble 为 false，可以直接屏蔽折线节点对专题图层事件的响应。
 *
 * Inherits:
 *  - <SuperMap.Feature.Theme.Graph>
 */
var Line = function (_Graph) {
    _inherits(Line, _Graph);

    /**
     * Constructor: SuperMap.Feature.Theme.Line
     * 创建一个折线图。
     *
     * Parameters:
     * data - {SuperMap.Feature.Vector}  用户数据，必设参数。
     * layer - {SuperMap.Layer.Graph} 此专题要素所在图层，必设参数。
     * fields - {Array{String}} data 中的参与此图表生成的字段名称，必设参数。
     * setting - {Object} 图表配置对象，必设参数。
     * lonlat - {SuperMap.LonLat} 专题要素地理位置。默认为 data 指代的地理要素 Bounds 中心。
     *
     * Returns:
     * {SuperMap.Feature.Theme.Line} 返回一个折线图。
     */
    function Line(data, layer, fields, setting, lonlat, options) {
        _classCallCheck(this, Line);

        var _this = _possibleConstructorReturn(this, (Line.__proto__ || Object.getPrototypeOf(Line)).call(this, data, layer, fields, setting, lonlat, options));

        _this.CLASS_NAME = "SuperMap.Feature.Theme.Line";
        return _this;
    }

    /**
     * Method: destroy
     * 销毁此专题要素。调用 destroy 后此对象所以属性置为 null。
     */


    _createClass(Line, [{
        key: 'destroy',
        value: function destroy() {
            _get(Line.prototype.__proto__ || Object.getPrototypeOf(Line.prototype), 'destroy', this).call(this);
        }

        //装配图形（扩展接口）

    }, {
        key: 'assembleShapes',
        value: function assembleShapes() {
            // 图表配置对象
            var sets = this.setting;

            // 默认数据视图框
            if (!sets.dataViewBoxParameter) {
                if (typeof sets.useAxis === "undefined" || sets.useAxis) {
                    sets.dataViewBoxParameter = [45, 15, 15, 15];
                } else {
                    sets.dataViewBoxParameter = [5, 5, 5, 5];
                }
            }

            // 重要步骤：初始化参数
            if (!this.initBaseParameter()) return;

            var dvb = this.dataViewBox;

            // 值域
            var codomain = this.DVBCodomain;
            // 重要步骤：定义图表 Bar 数据视图框中单位值的含义
            this.DVBUnitValue = (codomain[1] - codomain[0]) / this.DVBHeight;
            var uv = this.DVBUnitValue;
            // 数据值数组
            var fv = this.dataValues;
            if (fv.length < 1) return; // 没有数据

            // 获取 x 轴上的图形信息
            var xShapeInfo = this.calculateXShapeInfo();
            if (!xShapeInfo) return;
            // 折线每个节点的 x 位置
            var xsLoc = xShapeInfo.xPositions;

            // 背景框，默认启用
            if (typeof sets.useBackground === "undefined" || sets.useBackground) {
                // 将背景框图形添加到模型的 shapes 数组，注意添加顺序，后添加的图形在先添加的图形之上。
                this.shapes.push(_SuperMap2.default.Feature.ShapeFactory.Background(this.shapeFactory, this.chartBox, sets));
            }

            // 折线图必须使用坐标轴
            this.shapes = this.shapes.concat(_SuperMap2.default.Feature.ShapeFactory.GraphAxis(this.shapeFactory, dvb, sets, xShapeInfo));

            var isDataEffective = true;

            var xPx; // 折线节点 x 坐标
            var yPx; // 折线节点 y 坐标
            var poiLists = []; // 折线节点数组

            var shapePois = []; // 折线节点图形数组
            for (var i = 0, len = fv.length; i < len; i++) {
                // 数据溢出值域检查
                if (fv[i] < codomain[0] || fv[i] > codomain[1]) {
                    isDataEffective = false;
                    return null;
                }

                xPx = xsLoc[i];
                yPx = dvb[1] - (fv[i] - codomain[0]) / uv;

                // 折线节点参数对象
                var poiSP = new _SuperMap2.default.Feature.ShapeParameters.Point(xPx, yPx);
                // 折线节点 style
                poiSP.style = _SuperMap2.default.Feature.ShapeFactory.ShapeStyleTool({ fillColor: "#ee9900" }, sets.pointStyle, sets.pointStyleByFields, sets.pointStyleByCodomain, i, fv[i]);
                // 折线节点 hover 样式
                poiSP.highlightStyle = _SuperMap2.default.Feature.ShapeFactory.ShapeStyleTool(null, sets.pointHoverStyle);

                // 折线节点 hover click
                if (typeof sets.pointHoverAble !== "undefined") {
                    poiSP.hoverable = sets.pointHoverAble;
                }
                if (typeof sets.pointClickAble !== "undefined") {
                    poiSP.clickable = sets.pointClickAble;
                }

                // 图形携带的数据信息
                poiSP.refDataID = this.data.id;
                poiSP.dataInfo = {
                    field: this.fields[i],
                    value: fv[i]
                };

                // 创建图形并把此图形添加到折线节点图形数组
                shapePois.push(this.shapeFactory.createShape(poiSP));

                // 添加折线节点到折线节点数组
                var poi = [xPx, yPx];
                poiLists.push(poi);
            }

            // 折线参数对象
            var lineSP = new _SuperMap2.default.Feature.ShapeParameters.Line(poiLists);
            lineSP.style = _SuperMap2.default.Feature.ShapeFactory.ShapeStyleTool({ strokeColor: "#ee9900" }, sets.lineStyle);
            // 禁止事件响应
            lineSP.clickable = false;
            lineSP.hoverable = false;
            var shapeLine = this.shapeFactory.createShape(lineSP);
            this.shapes.push(shapeLine);

            // 添加节点到图表图形数组
            this.shapes = this.shapes.concat(shapePois);

            // 数据范围检测未通过，清空图形
            if (isDataEffective === false) {
                this.shapes = [];
            }

            // 重要步骤：将图形转为由相对坐标表示的图形，以便在地图平移缩放过程中快速重绘图形
            // （统计专题图模块从结构上要求使用相对坐标，assembleShapes() 函数必须在图形装配完成后调用 shapesConvertToRelativeCoordinate() 函数）
            this.shapesConvertToRelativeCoordinate();
        }

        /**
         * Method: calculateXShapeInfo
         * 计算 X 轴方向上的图形信息，此信息是一个对象，包含两个属性，
         * 属性 xPositions 是一个一维数组，该数组元素表示图形在 x 轴方向上的像素坐标值，
         * 如果图形在 x 方向上有一定宽度，通常取图形在 x 方向上的中心点为图形在 x 方向上的坐标值。
         * width 表示图形的宽度（特别注意：点的宽度始终为 0，而不是其直径）。
         *
         * 本函数中图形配置对象 setting 可设属性：
         * Symbolizer properties:
         * xShapeBlank - {Array{Number}} 水平方向上的图形空白间隔参数。
         * 长度为 2 的数组，第一元素表示第折线左端点与数据视图框左端的空白间距，第二个元素表示折线右端点右端与数据视图框右端端的空白间距 。
         *
         * Returns:
         * {Object} 如果计算失败，返回 null；如果计算成功，返回 X 轴方向上的图形信息，此信息是一个对象，包含以下两个属性：
         * Symbolizer properties:
         * xPositions - {Array{Number}} 表示图形在 x 轴方向上的像素坐标值，如果图形在 x 方向上有一定宽度，通常取图形在 x 方向上的中心点为图形在 x 方向上的坐标值。
         * width - {Number} 表示图形的宽度（特别注意：点的宽度始终为 0，而不是其直径）。
         *
         */

    }, {
        key: 'calculateXShapeInfo',
        value: function calculateXShapeInfo() {
            var dvb = this.dataViewBox; // 数据视图框
            var sets = this.setting; // 图表配置对象
            var fvc = this.dataValues.length; // 数组值个数

            if (fvc < 1) return null;

            var xBlank; // x 轴空白间隔参数
            var xShapePositions = []; // x 轴上图形的位置
            var xShapeWidth = 0; // x 轴上图形宽度(自适应)
            var dvbWidth = this.DVBWidth; // 数据视图框宽度
            var unitOffset = 0; // 单位偏移量

            //  x 轴空白间隔参数处理
            if (sets.xShapeBlank && sets.xShapeBlank.length && sets.xShapeBlank.length == 2) {
                xBlank = sets.xShapeBlank;
                var xsLen = dvbWidth - (xBlank[0] + xBlank[1]);
                if (xsLen <= fvc) {
                    return null;
                }
                unitOffset = xsLen / (fvc - 1);
            } else {
                // 默认使用等距离空白间隔，空白间隔为图形宽度
                unitOffset = dvbWidth / (fvc + 1);
                xBlank = [unitOffset, unitOffset, unitOffset];
            }

            // 图形 x 轴上的位置计算
            var xOffset = 0;
            for (var i = 0; i < fvc; i++) {
                if (i == 0) {
                    xOffset = xBlank[0];
                } else {
                    xOffset += unitOffset;
                }

                xShapePositions.push(dvb[0] + xOffset);
            }

            return {
                "xPositions": xShapePositions,
                "width": xShapeWidth
            };
        }
    }]);

    return Line;
}(_Graph3.default);

exports.default = Line;


_SuperMap2.default.Feature.Theme.Line = Line;

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _DatasourceConnectionInfo = __webpack_require__(114);

var _DatasourceConnectionInfo2 = _interopRequireDefault(_DatasourceConnectionInfo);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/** * @class SuperMap.LinkItem * @constructs SuperMap.LinkItem * @classdesc * 关联信息类。 * 该类用于矢量数据集与外部表的关联。 外部表是另一个数据集（其中纯属性数据集中没有空间几何信息）中的 DBMS 表,矢量数据集与外部表可以属于不同的数据源，但数据源类型目前只支持SQL Server和Oracle类型。使用LinkItem时，空间数据和属性数据必须满足关联条件，即主空间数据集与外部属性表之间存在关联字段。SuperMap.LinkItem 只支持左连接，UDB、PostgreSQL 和 DB2 数据源不支持 SuperMap.LinkItem;另外，用于建立关联关系的两个表可以不在同一个数据源下。 * (注意： * 1. 使用 SuperMap.LinkItem 的约束条件为：空间数据和属性数据必须有关联条件，即主空间数据集与外部属性表之间存在关联字段； * 2. 使用外关联表制作专题图时，所关联的字段必须设置表名，例如，如果所关联的字段为BaseMap_R数据集的SmID，就要写成BaseMap_R.SMID。) * @api * @example 下面以SQL查询说明linkitem的使用方法： * (start code) *  function queryBySQL() {     *      // 设置关联的外部数据库信息,alias表示数据库别名     *      var dc = new SuperMap.DatasourceConnectionInfo({     *          dataBase: "RelQuery",     *          server: "192.168.168.39",     *          user: "sa",     *          password: "map",     *          driver: "SQL Server",     *          connect: true,     *          OpenLinkTable: false,     *          alias: "RelQuery",     *          engineType: EngineType.SQLPLUS,     *          readOnly: false,     *          exclusive: false     *      });     *     // 设置关联信息     *      var linkItem = new SuperMap.LinkItem({     *          datasourceConnectionInfo: dc,     *          foreignKeys: ["name"],     *          foreignTable: "Pop_2011",     *          linkFields: ["SmID as Pid","pop"],     *          name: "link",     *          primatryKeys: ["name"],     *      });     *      // 设置查询参数，在查询参数中添加linkItem关联条件信息     *      var queryParam, queryBySQLParams, queryBySQLService;     *      queryParam = new SuperMap.FilterParameter({     *          name: "Province@RelQuery",     *          fields: ["SmID","name"],     *          attributeFilter: "SmID<7",     *          linkItems: [linkItem]     *       }),     *      queryBySQLParams = new SuperMap.QueryBySQLParameters({     *           queryParams: [queryParam]     *              }),     *      queryBySQLService = new SuperMap.QueryBySQLService(url, {     *          eventListeners: {     *              "processCompleted": processCompleted,     *              "processFailed": processFailed     *              }     *      });     *      queryBySQLService.processAsync(queryBySQLParams);     *  } *  function processCompleted(queryEventArgs) {//todo} *  function processFailed(e) {//todo} * (end) * */
var LinkItem = function () {

  /**     * @method SuperMap.LinkItem.initialize     * @description 关联信息类构造函数。     *     * 设置将TableB关联到TableA的关联信息，即建立LinkItem类并设置其属性，TableA与TableB是通过主表（TableA）的外键（LinkItem类的 ForeignKey 属性）和副表（TableB）的主键（LinkItem类的 PrimaryKey 属性）实现关联的，当执行TableA的查询操作时，系统将根据关联信息中的过滤条件及查询条件，分别查询TableA与TableB中满足条件的内容，TableA的查询结果与TableB的查询结果分别作独立的两个结果表保存在内存中，当需要获取结果时，SuperMap将对两个结果进行拼接并返回，因此，进行关联查询时，查询参数中的返回字段一定要有关联条件中的外键，否则无法根据外键的值获取副表中的关联字段值，副表中的字段值将返回 null。在应用层看来，连接和关联操作很相似。     *     * @param options - {Object} 参数。     * Allowed options properties:</br>     * datasourceConnectionInfo - {SuperMap.DatasourceConnectionInfo} 关联的外部数据源信息。</br>     * foreignKeys - {Array(String)} 主空间数据集的外键。</br>     * foreignTable - {String} 关联的外部属性表的名称。</br>     * linkFields - {Array(String)} 欲保留的外部属性表的字段。</br>     * linkFilter - {String} 与外部属性表的连接条件。</br>     * name - {String} 此关联信息对象的名称。</br>     * primaryKeys - {Array(String)} 需要关联的外部属性表的主键。</br>     */


  /**     * APIProperty: name     * {String} 此关联信息对象的名称。     */


  /**     * APIProperty: linkFields     * {Array(String)} 欲保留的外部属性表的字段。如果不设置字段或者设置的字段在外部属性表中不存在的话则不返     * 回任何外部属性表的属性信息。如果欲保留的外部表字段与主表字段存在同名，则还需要指定一个不存在字段名作为外部表的字段别名。     */


  /**     * APIProperty: foreignKeys     * {Array(String)} 主空间数据集的外键。     */
  function LinkItem(options) {
    _classCallCheck(this, LinkItem);

    this.datasourceConnectionInfo = null;
    this.foreignKeys = null;
    this.foreignTable = null;
    this.linkFields = null;
    this.linkFilter = null;
    this.name = null;
    this.primaryKeys = null;
    this.CLASS_NAME = "SuperMap.LinkItem";

    if (options) {
      _SuperMap2.default.Util.extend(this, options);
    }
  }

  /*     * APIMethod: destroy     * 释放资源，将引用资源的属性置空。     */


  /**     * APIProperty: primaryKeys     * {Array(String)} 需要关联的外部属性表的主键。     */


  /**     * APIProperty: linkFilter     * {String} 与外部属性表的连接条件。     */


  /**     * APIProperty: foreignTable     * {String} 关联的外部属性表的名称，目前仅支持 Supermap 管理的表，即另一个矢量数据集所对应的 DBMS 表。     */


  /**     * APIProperty: datasourceConnectionInfo     * {SuperMap.DatasourceConnectionInfo} 关联的外部数据源信息 。     */


  _createClass(LinkItem, [{
    key: 'destroy',
    value: function destroy() {
      var me = this;
      if (me.datasourceConnectionInfo) {
        me.datasourceConnectionInfo.destroy();
        me.datasourceConnectionInfo = null;
      }
      me.foreignKeys = null;
      me.foreignTable = null;
      me.linkFields = null;
      me.linkFilter = null;
      me.name = null;
      me.primaryKeys = null;
    }
  }]);

  return LinkItem;
}();

exports.default = LinkItem;

_SuperMap2.default.LinkItem = LinkItem;

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.MapService 地图信息服务类 。
 * @augments SuperMap.CommonServiceBase
 * @example
 * (start code)
 * var myMapService = new SuperMap.MapService(url, {
     * eventListeners:{
     *     "processCompleted": MapServiceCompleted,
     *       "processFailed": MapServiceFailed
     *       }
     * });
 * (end)
 *
 * @param url - {String} 服务的访问地址。如：http://localhost:8090/iserver/services/map-world/rest/maps/World+Map 。
 * @param options - {Object} 参数 。
 * eventListeners - {Object} 需要被注册的监听器对象。
 */
var MapService = function (_CommonServiceBase) {
    _inherits(MapService, _CommonServiceBase);

    /**
     * @function SuperMap.MapService.prototype.initialize
     * @description MapService的构造函数
     * @param url - {String} 服务的访问地址。如：http://localhost:8090/iserver/services/map-world/rest/maps/World+Map 。
     * @param options - {Object} 参数 。
     * eventListeners - {Object} 需要被注册的监听器对象。
     */
    function MapService(url, options) {
        _classCallCheck(this, MapService);

        var _this = _possibleConstructorReturn(this, (MapService.__proto__ || Object.getPrototypeOf(MapService)).call(this, url, options));

        _this.projection = null;
        _this.CLASS_NAME = "SuperMap.MapService";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        var me = _this;

        me.url += me.isInTheSameDomain ? ".json" : ".jsonp";

        if (me.projection) {
            if (typeof me.projection === "string") {
                me.projection = new _SuperMap2.default.Projection(me.projection);
            }

            var arr = me.projection.getCode().split(":");
            if (arr instanceof Array && arr.length === 2) {
                me.url += "?prjCoordSys={\"epsgCode\":" + arr[1] + "}";
            }
        }
        return _this;
    }

    /**
     * @function  destroy
     * @description 释放资源，将引用的资源属性置空。
     */


    /**
     * @member  SuperMap.MapService.prototype.projection -{SuperMap.Projection} or {String}
     * @description 根据投影参数获取地图状态信息。
     */


    _createClass(MapService, [{
        key: 'destroy',
        value: function destroy() {
            _get(MapService.prototype.__proto__ || Object.getPrototypeOf(MapService.prototype), 'destroy', this).call(this);
            var me = this;
            if (me.events) {
                me.events.un(me.eventListeners);
                me.events.listeners = null;
                me.events.destroy();
                me.events = null;
                me.eventListeners = null;
            }
        }

        /**
         * @function  SuperMap.MapService.prototype.processAsync
         * @description 负责将客户端的设置的参数传递到服务端，与服务端完成异步通讯。
         */

    }, {
        key: 'processAsync',
        value: function processAsync() {
            var me = this;
            me.request({
                method: "GET",
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }

        /*
         * Method: getMapStatusCompleted
         * 获取地图状态完成，执行此方法。
         *
         * Parameters:
         * result - {Object} 服务器返回的结果对象。
         */

    }, {
        key: 'serviceProcessCompleted',
        value: function serviceProcessCompleted(result) {
            var me = this;
            result = _SuperMap2.default.Util.transformResult(result);
            var codeStatus = result.code >= 200 && result.code < 300 || result.code == 0 || result.code === 304;
            var isCodeValid = result.code && codeStatus;
            if (!result.code || isCodeValid) {
                me.events && me.events.triggerEvent("processCompleted", { result: result });
            }
            //在没有token是返回的是200，但是其实是没有权限，所以这里也应该是触发失败事件
            else {
                    me.events.triggerEvent("processFailed", { error: result });
                }
        }
    }]);

    return MapService;
}(_CommonServiceBase3.default);

exports.default = MapService;


_SuperMap2.default.MapService = MapService;

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.MathExpressionAnalysisParameters
 * @constructs SuperMap.MathExpressionAnalysisParameters
 * @classdesc
 * 栅格代数运算参数类
 * @api
 */
var MathExpressionAnalysisParameters = function () {

    /**
     * @method SuperMap.MathExpressionAnalysisParameters.initialize
     * @param options - {Object} 参数。
     *
     * Allowed options properties:</br>
     * dataset - {String} 要用来做栅格代数运算数据源中数据集的名称。该名称用形如"数据集名称@数据源别名"形式来表示，例如：BaseMap_P@Jingjin。必设字段。</br>
     * extractRegion - {SuperMap.Geometry.Ploygon} 栅格代数运算的范围，指定数据集中参与栅格代数运算的区域。</br>
     * 如果缺省，则计算全部区域，如果参与运算的数据集范围不一致，将使用所有数据集的范围的交集作为计算区域 。</br>
     * expression - {String} 指定的栅格运算表达式。如：[DatasourceAlias1.Raster1]*2-10；必设字段。</br>
     * isZip - {Boolean} 是否对结果数据集进行压缩处理。默认为 false，表示不压缩。</br>
     * ignoreNoValue - {Boolean} 是否忽略无值栅格数据。true </br>表示忽略无值数据，即无值栅格不参与运算。默认为 false。
     * targetDatasource - {String} 指定存储结果数据集的数据源，必设字段。</br>
     * resultGridName - {Number} 指定结果数据集名称，必设字段。</br>
     * deleteExistResultDataset - {Boolean} 如果用户命名的结果数据集名称与已有的数据集重名，是否删除已有的数据集。默认为 false，即不删除。</br>
     */


    /**
     * APIProperty: resultGridName
     * {String} 指定结果数据集名称，必设字段。
     */


    /**
     * APIProperty: ignoreNoValue
     * {Boolean} 是否忽略无值栅格数据，默认为true。
     */


    /**
     * APIProperty: expression
     * {String} 指定的栅格运算表达式。如："[DatasourceAlias1.Raster1]*2-10"；必设字段。
     */


    /**
     * APIProperty: dataset
     * {String} 要用来做栅格代数运算数据源中数据集的名称。
     * 该名称用形如"数据集名称@数据源别名"形式来表示，例如：JingjinTerrain@Jingjin。必设字段。
     *
     */
    function MathExpressionAnalysisParameters(options) {
        _classCallCheck(this, MathExpressionAnalysisParameters);

        this.dataset = null;
        this.extractRegion = null;
        this.expression = null;
        this.isZip = false;
        this.ignoreNoValue = false;
        this.targetDatasource = null;
        this.resultGridName = null;
        this.deleteExistResultDataset = false;
        this.CLASS_NAME = "SuperMap.MathExpressionAnalysisParameters";

        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: deleteExistResultDataset
     * {Boolean} 如果用户命名的结果数据集名称与已有的数据集重名，是否删除已有的数据集。默认为 false，即不删除。
     */


    /**
     * APIProperty: targetDatasource
     * {String}  指定存储结果数据集的数据源，必设字段。
     */


    /**
     * APIProperty: isZip
     * {Boolean} 是否对结果数据集进行压缩处理。默认为False，表示不压缩。
     */


    /**
     * APIProperty: extractRegion
     * {SuperMap.Geometry.Ploygon} 栅格代数运算的范围，指定数据集中参与栅格代数运算的区域。
     * 如果缺省，则计算全部区域，如果参与运算的数据集范围不一致，将使用所有数据集的范围的交集作为计算区域 。
     */


    _createClass(MathExpressionAnalysisParameters, [{
        key: "destroy",
        value: function destroy() {
            var me = this;
            me.dataset = null;
            me.bounds = null;
            me.expression = null;
            me.isZip = true;
            me.ignoreNoValue = true;
            me.targetDatasource = null;
            me.resultGridName = null;
            me.deleteExistResultDataset = null;
        }
    }], [{
        key: "toObject",
        value: function toObject(mathExpressionAnalysisParameters, tempObj) {
            for (var name in mathExpressionAnalysisParameters) {
                if (name !== "dataset") {
                    tempObj[name] = mathExpressionAnalysisParameters[name];
                }

                if (name === "extractRegion") {
                    if (mathExpressionAnalysisParameters[name]) {
                        var bs = mathExpressionAnalysisParameters[name].components[0].components;
                        var region = {},
                            points = [],
                            type = "REGION";

                        var len = bs.length;
                        for (var i = 0; i < len - 1; i++) {
                            var poi = {};
                            poi["x"] = bs[i].x;
                            poi["y"] = bs[i].y;
                            points.push(poi);
                        }
                        ;

                        region["points"] = points;
                        region["type"] = type;

                        tempObj[name] = region;
                    }
                }
            }
        }
    }]);

    return MathExpressionAnalysisParameters;
}();

exports.default = MathExpressionAnalysisParameters;


_SuperMap2.default.MathExpressionAnalysisParameters = MathExpressionAnalysisParameters;

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _SpatialAnalystBase2 = __webpack_require__(6);

var _SpatialAnalystBase3 = _interopRequireDefault(_SpatialAnalystBase2);

var _MathExpressionAnalysisParameters = __webpack_require__(186);

var _MathExpressionAnalysisParameters2 = _interopRequireDefault(_MathExpressionAnalysisParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.MathExpressionAnalysisService
 * @constructs SuperMap.MathExpressionAnalysisService
 * @classdesc
 * 栅格代数运算服务类。
 * @extends {SuperMap.SpatialAnalystBase}
 * @api
 * @example 例如：
 * (start code)
 * var myMathExpressionAnalysisService = new SuperMap.MathExpressionAnalysisService(url);
 * myMathExpressionAnalysisService.on({
     *     "processCompleted": processCompleted,
     *     "processFailed": processFailed
     *     }
 * );
 * (end)
 *
 */
var MathExpressionAnalysisService = function (_SpatialAnalystBase) {
    _inherits(MathExpressionAnalysisService, _SpatialAnalystBase);

    /**
     * @method SuperMap.MathExpressionAnalysisService.initialize
     * @param options - {Object} 参数。
     * @param url - {String} 服务的访问地址。如 http://localhost:8090/iserver/services/spatialanalyst-changchun/restjsr/spatialanalyst 。
     * Allowed options properties:</br>
     * eventListeners - {Object} 需要被注册的监听器对象。
     */
    function MathExpressionAnalysisService(url, options) {
        _classCallCheck(this, MathExpressionAnalysisService);

        var _this = _possibleConstructorReturn(this, (MathExpressionAnalysisService.__proto__ || Object.getPrototypeOf(MathExpressionAnalysisService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.MathExpressionAnalysisService";
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源,将引用资源的属性置空。
     */


    _createClass(MathExpressionAnalysisService, [{
        key: 'destroy',
        value: function destroy() {
            _get(MathExpressionAnalysisService.prototype.__proto__ || Object.getPrototypeOf(MathExpressionAnalysisService.prototype), 'destroy', this).call(this);
        }

        /**
         * APIMethod: processAsync
         * 负责将客户端的查询参数传递到服务端。
         * @method SuperMap.MathExpressionAnalysisService.processAsync
         * @param  parameter - {SuperMap.MathExpressionAnalysisParameters}
         */

    }, {
        key: 'processAsync',
        value: function processAsync(parameter) {
            var me = this;

            var end = me.url.substr(me.url.length - 1, 1);
            if (end === '/') {} else {
                me.url += "/";
            }

            var parameterObject = {};

            if (parameter instanceof _MathExpressionAnalysisParameters2.default) {
                me.url += 'datasets/' + parameter.dataset + '/mathanalyst';
            }

            _MathExpressionAnalysisParameters2.default.toObject(parameter, parameterObject);
            var jsonParameters = _SuperMap2.default.Util.toJSON(parameterObject);

            if (me.isInTheSameDomain) {
                me.url += '.json?returnContent=true';
            } else {
                me.url += '.jsonp?returnContent=true';
            }

            me.request({
                method: "POST",
                data: jsonParameters,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return MathExpressionAnalysisService;
}(_SpatialAnalystBase3.default);

exports.default = MathExpressionAnalysisService;


_SuperMap2.default.MathExpressionAnalysisService = MathExpressionAnalysisService;

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.MeasureParameters
 * @description 量算参数类。
 * @param geometry - {Object} 要量算的几何对象。
 * @param options - {Object} 可选参数。如：<br>
 *         unit - {Unit} 量算单位。<br>
 *         prjCoordSys -{String} 用来指定该量算操作所使用的投影,该项默认值为空。<br>
 *         distanceMode -{String} 用来指定量算的方式为按球面长度'Geodesic'或者平面长度'Planar'来计算，默认为'Geodesic'。
 */
var MeasureParameters = function () {

    /*
     * Constructor: SuperMap.MeasureParameters
     * 量算参数类构造函数。
     */


    /**
     * APIProperty: projection
     * @member SuperMap.MeasureParameters.prototype.prjCoordSys -{String}
     * @description 用来指定该量算操作所使用的投影,该项默认值为空。
     */


    /**
     * APIProperty: geometry
     * @member SuperMap.MeasureParameters.prototype. -{Object}
     * @description 要量算的几何对象（{Line} 或 {Polygon}），必设属性。
     */
    function MeasureParameters(geometry, options) {
        _classCallCheck(this, MeasureParameters);

        this.geometry = null;
        this.unit = _REST.Unit.METER;
        this.prjCoordSys = null;
        this.distanceMode = null;
        this.CLASS_NAME = "SuperMap.MeasureParameters";

        if (!geometry) {
            return;
        }
        this.geometry = geometry;
        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: distanceMode
     * @member SuperMap.MeasureParameters.prototype.distanceMode -{String}
     * @description 用来指定量算的方式为按球面长度'Geodesic'或者平面长度'Planar'来计算，默认为'Geodesic'。
     * @example
     * (start code)
     * var param = new SuperMap.MeasureParameters(getmetry,{distanceMode:'Planar'});
     * (end)
     */


    /**
     * APIProperty: unit
     * @member SuperMap.MeasureParameters.prototype. -{Unit}
     * @description 量算单位。默认单位：米，即量算结果以米为单位。
     */


    _createClass(MeasureParameters, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.geometry = null;
            me.unit = null;
            me.prjCoordSys = null;
        }
    }]);

    return MeasureParameters;
}();

exports.default = MeasureParameters;


_SuperMap2.default.MeasureParameters = MeasureParameters;

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _MeasureParameters = __webpack_require__(188);

var _MeasureParameters2 = _interopRequireDefault(_MeasureParameters);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.MeasureService
 * @description 量算服务类。
 * 该类负责将量算参数传递到服务端，并获取服务端返回的量算结果。
 * @augments SuperMap.CommonServiceBase
 * @example
 * (start code)
 * var myMeasuerService = new SuperMap.MeasureService(url, {
 *      measureMode: SuperMap.MeasureMode.DISTANCE,
 *      eventListeners:{
 *          "processCompleted": measureCompleted
 *      }
 * });
 * (end)
 * @param url - {String} 服务访问的地址。如：http://localhost:8090/iserver/services/map-world/rest/maps/World+Map 。
 * @param options - {Object} 交互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 *         measureMode - {MeasureMode} 量算模式，包括距离量算模式和面积量算模式。
 */
var MeasureService = function (_CommonServiceBase) {
    _inherits(MeasureService, _CommonServiceBase);

    /**
     * @function SuperMap.MeasureService.initialize
     * @description 量算服务类构造函数。
     * @param url - {String} 服务访问的地址。如：http://localhost:8090/iserver/services/map-world/rest/maps/World+Map 。
     * @param options - {Object} 交互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     *         measureMode - {MeasureMode} 量算模式，包括距离量算模式和面积量算模式。
     */
    function MeasureService(url, options) {
        _classCallCheck(this, MeasureService);

        var _this = _possibleConstructorReturn(this, (MeasureService.__proto__ || Object.getPrototypeOf(MeasureService)).call(this, url, options));

        _this.measureMode = _REST.MeasureMode.DISTANCE;
        _this.CLASS_NAME = "SuperMap.MeasureService";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /**
     * @inheritDoc
     */


    /**
     * @member SuperMap.MeasureService.measureMode -{SuperMap.MeasureMode}
     * @description 量算模式，包括距离量算模式和面积量算模式。默认值为：MeasureMode.DISTANCE 。
     */


    _createClass(MeasureService, [{
        key: 'destroy',
        value: function destroy() {
            _get(MeasureService.prototype.__proto__ || Object.getPrototypeOf(MeasureService.prototype), 'destroy', this).call(this);
            var me = this;
            me.measureMode = null;
        }

        /**
         * @function SuperMap.MeasureService.processAsync
         * @description 负责将客户端的量算参数传递到服务端。
         * @param params - {SuperMap.MeasureParameters} 量算参数。
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                geometry = params.geometry,
                pointsCount = 0,
                point2ds = null,
                urlParameters = null,
                end = null;
            if (!geometry) {
                return;
            }
            end = me.url.substr(me.url.length - 1, 1);
            if (me.measureMode === _REST.MeasureMode.AREA) {
                if (me.isInTheSameDomain) {
                    me.url += end === "/" ? "area.json?" : "/area.json?";
                } else {
                    me.url += end === "/" ? "area.jsonp?" : "/area.jsonp?";
                }
            } else {
                if (me.isInTheSameDomain) {
                    me.url += end === "/" ? "distance.json?" : "/distance.json?";
                } else {
                    me.url += end === "/" ? "distance.jsonp?" : "/distance.jsonp?";
                }
            }
            var serverGeometry = _SuperMap2.default.REST.ServerGeometry.fromGeometry(geometry);
            if (!serverGeometry) {
                return;
            }
            pointsCount = serverGeometry.parts[0];
            point2ds = serverGeometry.points.splice(0, pointsCount);

            var prjCoordSysTemp, prjCodeTemp, paramsTemp;
            if (params.prjCoordSys) {
                if (_typeof(params.prjCoordSys) === "object") {
                    prjCodeTemp = params.prjCoordSys.projCode;
                    prjCoordSysTemp = '{"epsgCode"' + prjCodeTemp.substring(prjCodeTemp.indexOf(":"), prjCodeTemp.length) + "}";
                } else if (typeof params.prjCoordSys === "string") {
                    prjCoordSysTemp = '{"epsgCode"' + params.prjCoordSys.substring(params.prjCoordSys.indexOf(":"), params.prjCoordSys.length) + "}";
                }
                paramsTemp = { "point2Ds": _SuperMap2.default.Util.toJSON(point2ds), "unit": params.unit, "prjCoordSys": prjCoordSysTemp };
            } else {
                paramsTemp = { "point2Ds": _SuperMap2.default.Util.toJSON(point2ds), "unit": params.unit };
            }

            me.request({
                method: "GET",
                params: paramsTemp,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return MeasureService;
}(_CommonServiceBase3.default);

exports.default = MeasureService;


_SuperMap2.default.MeasureService = MeasureService;

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _SpatialAnalystBase2 = __webpack_require__(6);

var _SpatialAnalystBase3 = _interopRequireDefault(_SpatialAnalystBase2);

var _DatasetOverlayAnalystParameters = __webpack_require__(111);

var _DatasetOverlayAnalystParameters2 = _interopRequireDefault(_DatasetOverlayAnalystParameters);

var _GeometryOverlayAnalystParameters = __webpack_require__(152);

var _GeometryOverlayAnalystParameters2 = _interopRequireDefault(_GeometryOverlayAnalystParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.OverlayAnalystService
 * @constructs SuperMap.OverlayAnalystService
 * @classdesc
 * 叠加分析服务类
 * 该类负责将客户设置的叠加分析参数传递给服务端，并接收服务端返回的叠加分析结果数据。
 * 叠加分析结果通过该类支持的事件的监听函数参数获取
 * @extends {SuperMap.CommonServiceBase}
 * @api
 * @example 例如：
 * (start code)
 * var myOverlayAnalystService = new SuperMap.OverlayAnalystService(url, {
     *     eventListeners: {
     *	       "processCompleted": OverlayCompleted,
     *		   "processFailed": OverlayFailed
     *		   }
     * });
 * (end)
 */
var OverlayAnalystService = function (_SpatialAnalystBase) {
    _inherits(OverlayAnalystService, _SpatialAnalystBase);

    /**
     * @method SuperMap.OverlayAnalystService.initialize
     * @param url - {String} 服务的访问地址。如http://localhost:8090/iserver/services/spatialanalyst-changchun/restjsr/spatialanalyst 。
     * @param options - {Object} 参数。
     *
     * Allowed options properties:</br>
     * eventListeners - {Object} 需要被注册的监听器对象。
     */
    function OverlayAnalystService(url, options) {
        _classCallCheck(this, OverlayAnalystService);

        var _this = _possibleConstructorReturn(this, (OverlayAnalystService.__proto__ || Object.getPrototypeOf(OverlayAnalystService)).call(this, url, options));

        _this.mode = null;
        _this.CLASS_NAME = "SuperMap.OverlayAnalystService";

        var me = _this;
        if (options) {
            _SuperMap2.default.Util.extend(me, options);
        }
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源,将引用资源的属性置空。
     */


    /**
     * Property: mode
     * {String} 叠加分析类型
     */


    _createClass(OverlayAnalystService, [{
        key: 'destroy',
        value: function destroy() {
            _get(OverlayAnalystService.prototype.__proto__ || Object.getPrototypeOf(OverlayAnalystService.prototype), 'destroy', this).call(this);
            this.mode = null;
        }

        /**
         * @method SuperMap.OverlayAnalystService.processAsync
         * @description 负责将客户端的查询参数传递到服务端。
         * @param parameter - {SuperMap.OverlayAnalystParameters}
         */

    }, {
        key: 'processAsync',
        value: function processAsync(parameter) {
            var parameterObject = {};
            var me = this;

            var end = me.url.substr(me.url.length - 1, 1);
            if (end === '/') {} else {
                me.url += "/";
            }

            if (parameter instanceof _DatasetOverlayAnalystParameters2.default) {
                me.mode = "datasets";
                me.url += 'datasets/' + parameter.sourceDataset + '/overlay';
                _DatasetOverlayAnalystParameters2.default.toObject(parameter, parameterObject);
            } else if (parameter instanceof _GeometryOverlayAnalystParameters2.default) {
                me.mode = "geometry";
                me.url += 'geometry/overlay';
                _GeometryOverlayAnalystParameters2.default.toObject(parameter, parameterObject);
            }

            var jsonParameters = _SuperMap2.default.Util.toJSON(parameterObject);

            if (me.isInTheSameDomain) {
                me.url += '.json?returnContent=true';
            } else {
                me.url += '.jsonp?returnContent=true';
            }

            me.request({
                method: "POST",
                data: jsonParameters,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return OverlayAnalystService;
}(_SpatialAnalystBase3.default);

exports.default = OverlayAnalystService;


_SuperMap2.default.OverlayAnalystService = OverlayAnalystService;

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _Graph2 = __webpack_require__(14);

var _Graph3 = _interopRequireDefault(_Graph2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Class: SuperMap.Feature.Theme.Pie
 * 饼图 。
 *
 * 图表 Pie 配置对象 chartsSetting（<SuperMap.Layer.Graph::chartsSetting>） 可设属性如下：
 *
 * Symbolizer properties:
 * width - {Number} 专题要素（图表）宽度，必设参数。
 * height - {Number} 专题要素（图表）高度，必设参数。
 * codomain - {Array{Number}} 图表允许展示的数据值域，长度为 2 的一维数组，第一个元素表示值域下限，第二个元素表示值域上限，必设参数。
 * XOffset - {Number}  专题要素（图表）在 X 方向上的偏移值，单位像素。
 * YOffset - {Number}  专题要素（图表）在 Y 方向上的偏移值，单位像素。
 * dataViewBoxParameter - {Array{Number}} 数据视图框 dataViewBox 参数，
 * 它是指图表框 chartBox （由图表位置、图表宽度、图表高度构成的图表范围框）在左、下，右，上四个方向上的内偏距值。默认值为：[0, 0, 0, 0]。
 * decimalNumber - {Number} 数据值数组 dataValues 元素值小数位数，数据的小数位处理参数，取值范围：[0, 16]。如果不设置此参数，在取数据值时不对数据做小数位处理。
 *
 * useBackground - {Boolean} 是否使用图表背景框，默认不使用。
 * backgroundStyle - {Object} 背景样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Rectangle::style>。
 * backgroundRadius - {Array} 背景框矩形圆角半径，可以用数组分别指定四个角的圆角半径，设：左上、右上、右下、左下角的半径依次为 r1、r2、r3、r4 ,
 * 则 backgroundRadius 为 [r1、r2、r3、r4 ]，默认值[0, 0, 0, 0]。
 *
 * sectorStyle - {Object} 饼图中扇形的基础 style，此参数控制饼图扇形基础样式，优先级低于 sectorStyleByFields 和 sectorStyleByCodomain。
 * 此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Sector::style> 。
 * sectorStyleByFields - {Array{Object}} 按专题字段 themeFields（<SuperMap.Layer.Graph::themeFields>）为饼图扇形赋 style，此参数按字段控制饼图扇形样式，
 * 优先级低于 sectorStyleByCodomain，高于 sectorStyle。此数组中的元素是样式对象，其可设属性： <SuperMap.Feature.ShapeParameters.Sector::style> 。
 * 此参数中的 style 与 themeFields 中的字段一一对应 。例如： themeFields（<SuperMap.Layer.Graph::themeFields>） 为 ["POP_1992", "POP_1995", "POP_1999"],
 * sectorStyleByFields 为[style1, style2, style3]，则在图表中，字段 POP_1992 对应的饼图扇形使用 style1，字段 POP_1995 对应的饼图扇形使用 style2 ，字段 POP_1999 对应的饼图扇形使用 style3。
 * sectorStyleByCodomain - {Array{Object}} 按饼图扇形代表的数据值所在值域范围控制饼图扇形样式，优先级高于 sectorStyle 和 sectorStyleByFields。
 * (start code)
 * // sectorStyleByCodomain 的每个元素是个包含值域信息和与值域对应样式信息的对象，该对象（必须）有三个属性：
 * // start: 值域值下限（包含）;
 * // end: 值域值上限（不包含）;
 * // style: 数据可视化图形的 style，这个样式对象的可设属性： <SuperMap.Feature.ShapeParameters.Sector::style> 。
 * // sectorStyleByCodomain 数组形如：
 * [
 *   {
 *     start:0,
 *     end:250,
 *     style:{
 *          fillColor:"#00CD00"
 *      }
 *  },
 *   {
 *     start:250,
 *     end:500,
 *     style:{
 *          fillColor:"#00EE00"
 *      }
 *  },
 *   {
 *     start:500,
 *     end:750,
 *     style:{
 *          fillColor:"#00FF7F"
 *      }
 *  },
 *   {
 *     start:750,
 *     end:1500,
 *     style:{
 *          fillColor:"#00FF00"
 *      }
 *  }
 * ]
 * (end)
 * sectorHoverStyle - {Object} 饼图扇形 hover 状态时的样式，sectorHoverAble 为 true 时有效。
 * sectorHoverAble - {Object} 是否允许饼图扇形使用 hover 状态，默认允许。同时设置 sectorHoverAble 和 sectorClickAble 为 false，可以直接屏蔽饼图扇形对专题图层事件的响应。
 * sectorClickAble - {Object} 是否允许饼图扇形被点击，默认允许。同时设置 sectorHoverAble 和 sectorClickAble 为 false，可以直接屏蔽饼图扇形对专题图层事件的响应。
 *
 * Inherits:
 *  - <SuperMap.Feature.Theme.Graph>
 */
var Pie = function (_Graph) {
    _inherits(Pie, _Graph);

    /**
     * Constructor: SuperMap.Feature.Theme.Pie
     * 创建一个饼图。
     *
     * Parameters:
     * data - {SuperMap.Feature.Vector}  用户数据，必设参数。
     * layer - {SuperMap.Layer.Graph} 此专题要素所在图层，必设参数。
     * fields - {Array{String}} data 中的参与此图表生成的字段名称，必设参数。
     * setting - {Object} 图表配置对象，必设参数。
     * lonlat - {SuperMap.LonLat} 专题要素地理位置。默认为 data 指代的地理要素 Bounds 中心。
     *
     * Returns:
     * {SuperMap.Feature.Theme.Pie} 返回一个饼图。
     */
    function Pie(data, layer, fields, setting, lonlat) {
        _classCallCheck(this, Pie);

        var _this = _possibleConstructorReturn(this, (Pie.__proto__ || Object.getPrototypeOf(Pie)).call(this, data, layer, fields, setting, lonlat));

        _this.CLASS_NAME = "SuperMap.Feature.Theme.Pie";
        return _this;
    }

    /**
     * APIMethod: destroy
     * 销毁此专题要素。调用 destroy 后此对象所以属性置为 null。
     */


    _createClass(Pie, [{
        key: 'destroy',
        value: function destroy() {
            _get(Pie.prototype.__proto__ || Object.getPrototypeOf(Pie.prototype), 'destroy', this).call(this);
        }

        //装配图形（扩展接口）

    }, {
        key: 'assembleShapes',
        value: function assembleShapes() {
            // 图表配置对象
            var sets = this.setting;

            // 一个默认 style 组
            var defaultStyleGroup = [{ fillColor: "#ff9277" }, { fillColor: "#dddd00" }, { fillColor: "#ffc877" }, { fillColor: "#bbe3ff" }, { fillColor: "#d5ffbb" }, { fillColor: "#bbbbff" }, { fillColor: "#ddb000" }, { fillColor: "#b0dd00" }, { fillColor: "#e2bbff" }, { fillColor: "#ffbbe3" }, { fillColor: "#ff7777" }, { fillColor: "#ff9900" }, { fillColor: "#83dd00" }, { fillColor: "#77e3ff" }, { fillColor: "#778fff" }, { fillColor: "#c877ff" }, { fillColor: "#ff77ab" }, { fillColor: "#ff6600" }, { fillColor: "#aa8800" }, { fillColor: "#77c7ff" }, { fillColor: "#ad77ff" }, { fillColor: "#ff77ff" }, { fillColor: "#dd0083" }, { fillColor: "#777700" }, { fillColor: "#00aa00" }, { fillColor: "#0088aa" }, { fillColor: "#8400dd" }, { fillColor: "#aa0088" }, { fillColor: "#dd0000" }, { fillColor: "#772e00" }];

            // 重要步骤：初始化参数
            if (!this.initBaseParameter()) return;

            // 背景框，默认不启用
            if (sets.useBackground) {
                this.shapes.push(_SuperMap2.default.Feature.ShapeFactory.Background(this.shapeFactory, this.chartBox, sets));
            }

            // 数据值数组
            var fv = this.dataValues;
            if (fv.length < 1) return; // 没有数据

            // 值域范围
            var codomain = this.DVBCodomain;
            // 值域范围检测
            for (var i = 0; i < fv.length; i++) {
                if (fv[i] < codomain[0] || fv[i] > codomain[1]) {
                    return;
                }
            }

            // 值的绝对值总和
            var valueSum = 0;
            for (var i = 0; i < fv.length; i++) {
                valueSum += Math.abs(fv[i]);
            }

            // 重要步骤：定义图表 Pie 数据视图框中单位值的含义，单位值：每度代表的数值
            this.DVBUnitValue = 360 / valueSum;
            var uv = this.DVBUnitValue;

            var dvbCenter = this.DVBCenterPoint; // 数据视图框中心作为扇心

            var startAngle = 0; // 扇形起始边角度
            var endAngle = 0; // 扇形终止边角度
            var startAngleTmp = startAngle; // 扇形临时起始边角度
            // 扇形（自适应）半径
            var r = this.DVBHeight < this.DVBWidth ? this.DVBHeight / 2 : this.DVBWidth / 2;

            for (var i = 0; i < fv.length; i++) {
                var fvi = Math.abs(fv[i]);
                //计算终止角
                if (i === 0) {
                    endAngle = startAngle + fvi * uv;
                } else if (i === fvi.length - 1) {
                    endAngle = startAngleTmp;
                } else {
                    endAngle = startAngle + fvi * uv;
                }
                //矫正误差计算
                if (endAngle - startAngle >= 360) endAngle = 359.9999999;

                // 扇形参数对象
                var sectorSP = new _SuperMap2.default.Feature.ShapeParameters.Sector(dvbCenter[0], dvbCenter[1], r, startAngle, endAngle);
                // 扇形样式
                if (typeof sets.sectorStyleByFields === "undefined") {
                    // 使用默认 style 组
                    var colorIndex = i % defaultStyleGroup.length;
                    sectorSP.style = _SuperMap2.default.Feature.ShapeFactory.ShapeStyleTool(null, sets.sectorStyle, defaultStyleGroup, null, colorIndex);
                } else {
                    sectorSP.style = _SuperMap2.default.Feature.ShapeFactory.ShapeStyleTool(null, sets.sectorStyle, sets.sectorStyleByFields, sets.sectorStyleByCodomain, i, fv[i]);
                }

                // 扇形 hover 样式
                sectorSP.highlightStyle = _SuperMap2.default.Feature.ShapeFactory.ShapeStyleTool(null, sets.sectorHoverStyle);
                // 扇形 hover 与 click 设置
                if (typeof sets.sectorHoverAble !== "undefined") {
                    sectorSP.hoverable = sets.sectorHoverAble;
                }
                if (typeof sets.sectorClickAble !== "undefined") {
                    sectorSP.clickable = sets.sectorClickAble;
                }
                // 图形携带的数据信息
                sectorSP.refDataID = this.data.id;
                sectorSP.dataInfo = {
                    field: this.fields[i],
                    value: fv[i]
                };

                // 创建扇形并把此扇形添加到图表图形数组
                this.shapes.push(this.shapeFactory.createShape(sectorSP));

                // 把上一次的结束角度作为下一次的起始角度
                startAngle = endAngle;
            }

            // 重要步骤：将图形转为由相对坐标表示的图形，以便在地图平移缩放过程中快速重绘图形
            // （统计专题图模块从结构上要求使用相对坐标，assembleShapes() 函数必须在图形装配完成后调用 shapesConvertToRelativeCoordinate() 函数）
            this.shapesConvertToRelativeCoordinate();
        }
    }]);

    return Pie;
}(_Graph3.default);

exports.default = Pie;


_SuperMap2.default.Feature.Theme.Pie = Pie;

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _Graph2 = __webpack_require__(14);

var _Graph3 = _interopRequireDefault(_Graph2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Class: SuperMap.Feature.Theme.Point
 * 点状图。
 *
 * 图表 Point 配置对象 chartsSetting（<SuperMap.Layer.Graph::chartsSetting>） 可设属性如下：
 *
 * Symbolizer properties:
 * width - {Number} 专题要素（图表）宽度，必设参数。
 * height - {Number} 专题要素（图表）高度，必设参数。
 * codomain - {Array{Number}} 图表允许展示的数据值域，长度为 2 的一维数组，第一个元素表示值域下限，第二个元素表示值域上限，必设参数。
 * XOffset - {Number}  专题要素（图表）在 X 方向上的偏移值，单位像素。
 * YOffset - {Number}  专题要素（图表）在 Y 方向上的偏移值，单位像素。
 * dataViewBoxParameter - {Array{Number}} 数据视图框 dataViewBox 参数，
 * 它是指图表框 chartBox （由图表位置、图表宽度、图表高度构成的图表范围框）在左、下，右，上四个方向上的内偏距值。
 * 当使用坐标轴时 dataViewBoxParameter 的默认值为：[45, 15, 15, 15]；不使用坐标轴时 dataViewBoxParameter 的默认值为：[5, 5, 5, 5]。
 * decimalNumber - {Number} 数据值数组 dataValues 元素值小数位数，数据的小数位处理参数，取值范围：[0, 16]。如果不设置此参数，在取数据值时不对数据做小数位处理。
 *
 * useBackground - {Boolean} 是否使用图表背景框。
 * backgroundStyle - {Object} 背景样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Rectangle::style>。
 * backgroundRadius - {Array} 背景框矩形圆角半径，可以用数组分别指定四个角的圆角半径，设：左上、右上、右下、左下角的半径依次为 r1、r2、r3、r4 ,
 * 则 backgroundRadius 为 [r1、r2、r3、r4 ]，默认值[0, 0, 0, 0]。
 *
 * xShapeBlank - {Array{Number}} 水平方向上的图形空白间隔参数。
 * 长度为 2 的数组，第一个元素表示第一个（沿 x 轴方向）图形点与数据视图框左端的空白间距，第二个元素表示最后一个（沿 x 轴方向）图形点与数据视图框右端端的空白间距 。
 *
 * axisStyle - {Object} 坐标轴样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Line::style> 。
 * axisUseArrow - {Boolean} 坐标轴是否使用箭头，默认值：false，不使用箭头。
 * axisYTick - {Number} y 轴刻度数量，默认值：0 ，不使用刻度。
 * axisYLabels - {Array{String}} y 轴上的标签组内容，标签顺序沿着数据视图框左面条边自上而下，等距排布。例如：["1000", "750", "500", "250", "0"]。
 * axisYLabelsStyle - {Object} y 轴上的标签组样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Label::style> 。
 * axisYLabelsOffset - {Array{Number}} y 轴上的标签组偏移量。长度为 2 的数组，数组第一项表示 y 轴标签组横向上的偏移量，向左为正，默认值：0；
 * 数组第二项表示 y 轴标签组纵向上的偏移量，向下为正，默认值：0。
 * axisXLabels - {Array{String}} x 轴上的标签组内容，标签顺序沿着数据视图框下面条边自左向右排布，例如：["92年", "95年", "99年"]。
 * 标签排布规则：当标签数量与 xShapeInfo 中的属性 xShapeCenter 数量相同（即标签个数与数据个数相等时）, 按照 xShapeCenter 提供的位置排布标签，
 * 否则沿数据视图框下面条边等距排布标签。
 * axisXLabelsStyle - {Object} x 轴上的标签组样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Label::style> 。
 * axisXLabelsOffset - {Array{Number}} x 轴上的标签组偏移量。长度为 2 的数组，数组第一项表示 x 轴标签组横向上的偏移量，向左为正，默认值：0；
 * 数组第二项表示 x 轴标签组纵向上的偏移量，向下为正，默认值：0。
 * useXReferenceLine - {Boolean) 是否使用水平参考线，如果为 true，在 axisYTick 大于 0 时有效，水平参考线是 y 轴刻度在数据视图框里的延伸。
 * xReferenceLineStyle - {Object) 水平参考线样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Line::style> 。
 *
 * pointStyle - {Object} 点状图中图形点基础 style，此参数控制图形点基础样式，优先级低于 pointStyleByFields 和 pointStyleByCodomain。
 * 此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Point::style> 。
 * pointStyleByFields - {Array{Object}} 按专题字段 themeFields（<SuperMap.Layer.Graph::themeFields>）为图形点赋 style，此参数按字段控制图形点样式，
 * 优先级低于 pointStyleByCodomain，高于 pointStyle。此数组中的元素是样式对象，其可设属性： <SuperMap.Feature.ShapeParameters.Point::style> 。
 * 此参数中的 style 与 themeFields 中的字段一一对应 。例如： themeFields（<SuperMap.Layer.Graph::themeFields>） 为 ["POP_1992", "POP_1995", "POP_1999"],
 * pointStyleByFields 为[style1, style2, style3]，则在图表中，字段 POP_1992 对应的图形点使用 style1，字段 POP_1995 对应的图形点使用 style2 ，字段 POP_1999 对应的图形点使用 style3。
 * pointStyleByCodomain - {Array{Object}} 按图形点代表的数据值所在值域范围控制图形点样式，优先级高于 pointStyle 和 pointStyleByFields。
 * (start code)
 * // pointStyleByCodomain 的每个元素是个包含值域信息和与值域对应样式信息的对象，该对象（必须）有三个属性：
 * // start: 值域值下限（包含）;
 * // end: 值域值上限（不包含）;
 * // style: 数据可视化图形的 style，这个样式对象的可设属性： <SuperMap.Feature.ShapeParameters.Point::style> 。
 * // pointStyleByCodomain 数组形如：
 * [
 *   {
 *     start:0,
 *     end:250,
 *     style:{
 *          fillColor:"#00CD00"
 *      }
 *  },
 *   {
 *     start:250,
 *     end:500,
 *     style:{
 *          fillColor:"#00EE00"
 *      }
 *  },
 *   {
 *     start:500,
 *     end:750,
 *     style:{
 *          fillColor:"#00FF7F"
 *      }
 *  },
 *   {
 *     start:750,
 *     end:1500,
 *     style:{
 *          fillColor:"#00FF00"
 *      }
 *  }
 * ]
 * (end)
 * pointHoverStyle - {Object} 图形点 hover 状态时的样式，pointHoverAble 为 true 时有效。
 * pointHoverAble - {Object} 是否允许图形点使用 hover 状态，默认允许。同时设置 pointHoverAble 和 pointClickAble 为 false，可以直接屏蔽图形点对专题图层事件的响应。
 * pointClickAble - {Object} 是否允许图形点被点击，默认允许。同时设置 pointHoverAble 和 pointClickAble 为 false，可以直接屏蔽图形点对专题图层事件的响应。
 *
 * Inherits:
 *  - <SuperMap.Feature.Theme.Graph>
 */
var Point = function (_Graph) {
    _inherits(Point, _Graph);

    /**
     * Constructor: SuperMap.Feature.Theme.Point
     * 创建一个点状图。
     *
     * Parameters:
     * data - {SuperMap.Feature.Vector}  用户数据，必设参数。
     * layer - {SuperMap.Layer.Graph} 此专题要素所在图层，必设参数。
     * fields - {Array{String}} data 中的参与此图表生成的字段名称，必设参数。
     * setting - {Object} 图表配置对象，必设参数。
     * lonlat - {SuperMap.LonLat} 专题要素地理位置。默认为 data 指代的地理要素 Bounds 中心。
     *
     * Returns:
     * {SuperMap.Feature.Theme.Point} 返回一个点状图。
     */
    function Point(data, layer, fields, setting, lonlat, options) {
        _classCallCheck(this, Point);

        var _this = _possibleConstructorReturn(this, (Point.__proto__ || Object.getPrototypeOf(Point)).call(this, data, layer, fields, setting, lonlat, options));

        _this.CLASS_NAME = "SuperMap.Feature.Theme.Point";
        return _this;
    }

    /**
     * Method: destroy
     * 销毁此专题要素。调用 destroy 后此对象所以属性置为 null。
     */


    _createClass(Point, [{
        key: 'destroy',
        value: function destroy() {
            _get(Point.prototype.__proto__ || Object.getPrototypeOf(Point.prototype), 'destroy', this).call(this);
        }

        //装配图形（扩展接口）

    }, {
        key: 'assembleShapes',
        value: function assembleShapes() {
            // 图表配置对象
            var sets = this.setting;

            // 默认数据视图框
            if (!sets.dataViewBoxParameter) {
                if (typeof sets.useAxis === "undefined" || sets.useAxis) {
                    sets.dataViewBoxParameter = [45, 15, 15, 15];
                } else {
                    sets.dataViewBoxParameter = [5, 5, 5, 5];
                }
            }

            // 重要步骤：初始化参数
            if (!this.initBaseParameter()) return;

            var dvb = this.dataViewBox;

            // 值域
            var codomain = this.DVBCodomain;
            // 重要步骤：定义图表 Bar 数据视图框中单位值的含义
            this.DVBUnitValue = (codomain[1] - codomain[0]) / this.DVBHeight;
            var uv = this.DVBUnitValue;
            var fv = this.dataValues;

            // 获取 x 轴上的图形信息
            var xShapeInfo = this.calculateXShapeInfo();
            if (!xShapeInfo) return;
            // 折线每个节点的 x 位置
            var xsLoc = xShapeInfo.xPositions;

            // 背景框，默认启用
            if (typeof sets.useBackground === "undefined" || sets.useBackground) {
                // 将背景框图形添加到模型的 shapes 数组，注意添加顺序，后添加的图形在先添加的图形之上。
                this.shapes.push(_SuperMap2.default.Feature.ShapeFactory.Background(this.shapeFactory, this.chartBox, sets));
            }

            // 点状图必须使用坐标轴
            this.shapes = this.shapes.concat(_SuperMap2.default.Feature.ShapeFactory.GraphAxis(this.shapeFactory, dvb, sets, xShapeInfo));

            var isDataEffective = true;

            var xPx; // 图形点 x 坐标
            var yPx; // 图形点 y 坐标
            for (var i = 0, len = fv.length; i < len; i++) {
                // 数据溢出值域检查
                if (fv[i] < codomain[0] || fv[i] > codomain[1]) {
                    isDataEffective = false;
                    return null;
                }

                xPx = xsLoc[i];
                yPx = dvb[1] - (fv[i] - codomain[0]) / uv;

                // 图形点参数对象
                var poiSP = new _SuperMap2.default.Feature.ShapeParameters.Point(xPx, yPx);
                // 图形点 style
                poiSP.style = _SuperMap2.default.Feature.ShapeFactory.ShapeStyleTool({ fillColor: "#ee9900" }, sets.pointStyle, sets.pointStyleByFields, sets.pointStyleByCodomain, i, fv[i]);
                // 图形点 hover 样式
                poiSP.highlightStyle = _SuperMap2.default.Feature.ShapeFactory.ShapeStyleTool(null, sets.pointHoverStyle);

                // 图形点 hover click
                if (typeof sets.pointHoverAble !== "undefined") {
                    poiSP.hoverable = sets.pointHoverAble;
                }
                if (typeof sets.pointClickAble !== "undefined") {
                    poiSP.clickable = sets.pointClickAble;
                }

                // 图形携带的数据信息
                poiSP.refDataID = this.data.id;
                poiSP.dataInfo = {
                    field: this.fields[i],
                    value: fv[i]
                };

                // 创建图形点并把此图形添加到图表图形数组
                this.shapes.push(this.shapeFactory.createShape(poiSP));
            }

            // 数据范围检测未通过，清空图形
            if (isDataEffective === false) {
                this.shapes = [];
            }

            // 重要步骤：将图形转为由相对坐标表示的图形，以便在地图平移缩放过程中快速重绘图形
            // （统计专题图模块从结构上要求使用相对坐标，assembleShapes() 函数必须在图形装配完成后调用 shapesConvertToRelativeCoordinate() 函数）
            this.shapesConvertToRelativeCoordinate();
        }

        /**
         * Method: calculateXShapeInfo
         * 计算 X 轴方向上的图形信息，此信息是一个对象，包含两个属性，
         * 属性 xPositions 是一个一维数组，该数组元素表示图形在 x 轴方向上的像素坐标值，
         * 如果图形在 x 方向上有一定宽度，通常取图形在 x 方向上的中心点为图形在 x 方向上的坐标值。
         * width 表示图形的宽度（特别注意：点的宽度始终为 0，而不是其直径）。
         *
         * 本函数中图形配置对象 setting 可设属性：
         * Symbolizer properties:
         * xShapeBlank - {Array{Number}} 水平方向上的图形空白间隔参数。
         * 长度为 2 的数组，第一元素表示第折线左端点与数据视图框左端的空白间距，第二个元素表示折线右端点右端与数据视图框右端端的空白间距 。
         *
         * Returns:
         * {Object} 如果计算失败，返回 null；如果计算成功，返回 X 轴方向上的图形信息，此信息是一个对象，包含以下两个属性：
         * Symbolizer properties:
         * xPositions - {Array{Number}} 表示图形在 x 轴方向上的像素坐标值，如果图形在 x 方向上有一定宽度，通常取图形在 x 方向上的中心点为图形在 x 方向上的坐标值。
         * width - {Number} 表示图形的宽度（特别注意：点的宽度始终为 0，而不是其直径）。
         *
         */

    }, {
        key: 'calculateXShapeInfo',
        value: function calculateXShapeInfo() {
            var dvb = this.dataViewBox; // 数据视图框
            var sets = this.setting; // 图表配置对象
            var fvc = this.dataValues.length; // 数组值个数

            if (fvc < 1) return null;

            var xBlank; // x 轴空白间隔参数
            var xShapePositions = []; // x 轴上图形的位置
            var xShapeWidth = 0; // x 轴上图形宽度(自适应)
            var dvbWidth = this.DVBWidth; // 数据视图框宽度
            var unitOffset = 0; // 单位偏移量

            //  x 轴空白间隔参数处理
            if (sets.xShapeBlank && sets.xShapeBlank.length && sets.xShapeBlank.length == 2) {
                xBlank = sets.xShapeBlank;
                var xsLen = dvbWidth - (xBlank[0] + xBlank[1]);
                if (xsLen <= fvc) {
                    return null;
                }
                unitOffset = xsLen / (fvc - 1);
            } else {
                // 默认使用等距离空白间隔，空白间隔为图形宽度
                unitOffset = dvbWidth / (fvc + 1);
                xBlank = [unitOffset, unitOffset, unitOffset];
            }

            // 图形 x 轴上的位置计算
            var xOffset = 0;
            for (var i = 0; i < fvc; i++) {
                if (i == 0) {
                    xOffset = xBlank[0];
                } else {
                    xOffset += unitOffset;
                }

                xShapePositions.push(dvb[0] + xOffset);
            }

            return {
                "xPositions": xShapePositions,
                "width": xShapeWidth
            };
        }
    }]);

    return Point;
}(_Graph3.default);

exports.default = Point;


_SuperMap2.default.Feature.Theme.Point = Point;

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PointGeometry = _SuperMap2.default.Geometry.Point;

/**
 * @class SuperMap.PointWithMeasure
 * @constructs SuperMap.PointWithMeasure
 * @classdesc
 * 路由点类。
 * 路由点是指具有线性度量值(Measure)的二维地理坐标点。
 * @extends {SuperMap.Geometry.Point}
 * @api
 */

var PointWithMeasure = function (_PointGeometry) {
    _inherits(PointWithMeasure, _PointGeometry);

    /**
     * @method SuperMap.PointWithMeasure.initialize
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * measure - {Number} 度量值，即路由对象属性值 M。</br>
     * x - {Number} 获取当前点对象在地理坐标系下的 X 坐标值。</br>
     * y - {Number} 获取当前点对象在地理坐标系下的 Y 坐标值。</br>
     */


    /**
     * APIProperty: y
     * {Number} 获取当前点对象在地理坐标系下的 Y 坐标值。
     */
    function PointWithMeasure(options) {
        _classCallCheck(this, PointWithMeasure);

        var _this = _possibleConstructorReturn(this, (PointWithMeasure.__proto__ || Object.getPrototypeOf(PointWithMeasure)).call(this, options));

        _this.x = null;
        _this.y = null;
        _this.measure = null;
        _this.CLASS_NAME = "SuperMap.PointWithMeasure";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /**
     * @method SuperMap.PointWithMeasure.equals
     * @description 判断两个路由点对象是否相等。如果两个路由点对象具有相同的坐标以及度量值，则认为是相等的。
     * @param geom - {SuperMap.PointWithMeasure} 需要判断的路由点对象。
     * @return {Boolean} 两个路由点对象是否相等（true为相等，false为不等）。
     */


    /**
     * APIProperty: measure
     * {Number} 度量值，即路由对象属性值 M。
     */


    /**
     * APIProperty: x
     * {Number} 获取当前点对象在地理坐标系下的 X 坐标值。
     */


    _createClass(PointWithMeasure, [{
        key: "equals",
        value: function equals(geom) {
            var equals = false;
            if (geom != null) {
                var isValueEquals = this.x === geom.x && this.y === geom.y && this.measure === geom.measure;
                var isNaNValue = isNaN(this.x) && isNaN(this.y) && isNaN(this.measure);
                var isNaNGeometry = isNaN(geom.x) && isNaN(geom.y) && isNaN(geom.measure);
                equals = isValueEquals || isNaNValue && isNaNGeometry;
            }
            return equals;
        }

        /**
         * @method SuperMap.PointWithMeasure.toJson
         * @description 转换为json对象。
         */

    }, {
        key: "toJson",
        value: function toJson() {
            var result = "{";
            if (this.measure != null && this.measure != undefined) {
                result += "\"measure\":" + this.measure + ",";
            }
            result += "\"x\":" + this.x + ",";
            result += "\"y\":" + this.y;
            result += "}";
            return result;
        }

        /*
         * APIMethod: destroy
         * 释放资源，将引用资源的属性置空。
         */

    }, {
        key: "destroy",
        value: function destroy() {
            var me = this;
            me.measure = null;
            me.x = null;
            me.y = null;
        }

        /**
         * @method SuperMap.PointWithMeasure.fromJson
         * @description 将 JSON 对象转换为  SuperMap.PointWithMeasure 对象。
         * @param jsonObject - {Object} JSON 对象表示的路由点。
         * @return {SuperMap.PointWithMeasure} 转化后的 PointWithMeasure 对象。
         */

    }], [{
        key: "fromJson",
        value: function fromJson(jsonObject) {
            if (!jsonObject) {
                return;
            }
            return new _SuperMap2.default.PointWithMeasure({
                x: jsonObject.x,
                y: jsonObject.y,
                measure: jsonObject.measure
            });
        }
    }]);

    return PointWithMeasure;
}(PointGeometry);

exports.default = PointWithMeasure;


_SuperMap2.default.PointWithMeasure = PointWithMeasure;

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _QueryParameters2 = __webpack_require__(17);

var _QueryParameters3 = _interopRequireDefault(_QueryParameters2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.QueryByBoundsParameters
 * @description Bounds 查询参数类。该类用于设置 Bounds 查询的相关参数。
 * @augments SuperMap.QueryParameters
 * @param options - {Object} 可选参数。如：<br>
 *         customParams - {String} 自定义参数，供扩展使用。<br>
 *         prjCoordSys -{Object} 自定义参数，供isueprmap提供的动态投影查询扩展使用。如 {"epsgCode":3857}。<br>
 *         expectCount - {Number} 期望返回结果记录个数。<br>
 *         networkType - {SuperMap.GeometryType} 网络数据集对应的查询类型。<br>
 *         queryOption - {SuperMap.QueryOption} 查询结果类型枚举类。<br>
 *         queryParams -  {Array<SuperMap.FilterParameter>} 查询过滤条件参数数组。<br>
 *         startRecord - {Number} 查询起始记录号。<br>
 *         holdTime - {Number} 资源在服务端保存的时间。<br>
 *         returnCustomResult -{Boolean} 仅供三维使用。<br>
 *         returnContent - {Boolean} 是否立即返回新创建资源的表述还是返回新资源的 URI。<br>
 *         bounds - {SuperMap.Bounds} 指定的查询范围。
 */
var QueryByBoundsParameters = function (_QueryParameters) {
    _inherits(QueryByBoundsParameters, _QueryParameters);

    /*
     * Constructor: SuperMap.QueryByBoundsParameters
     * Bounds 查询参数类构造函数。
     */


    /**
     * APIProperty: returnContent
     * @member SuperMap.QueryByBoundsParameters.prototype -{Boolean}
     * @description 是否立即返回新创建资源的表述还是返回新资源的 URI。<br>
     *               如果为 true，则直接返回新创建资源，即查询结果的表述。<br>
     *               为 false，则返回的是查询结果资源的 URI。默认为 true。
     */
    function QueryByBoundsParameters(options) {
        _classCallCheck(this, QueryByBoundsParameters);

        var _this = _possibleConstructorReturn(this, (QueryByBoundsParameters.__proto__ || Object.getPrototypeOf(QueryByBoundsParameters)).call(this, options));

        _this.returnContent = true;
        _this.bounds = null;
        _this.CLASS_NAME = "SuperMap.QueryByBoundsParameters";

        if (!options) {
            return _possibleConstructorReturn(_this);
        }
        _SuperMap2.default.Util.extend(_this, options);
        return _this;
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: bounds
     * {@member SuperMap.QueryByBoundsParameters.prototype -SuperMap.Bounds}
     * @description 指定的查询范围。
     */


    _createClass(QueryByBoundsParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(QueryByBoundsParameters.prototype.__proto__ || Object.getPrototypeOf(QueryByBoundsParameters.prototype), 'destroy', this).call(this);
            var me = this;
            me.returnContent = null;
            if (me.bounds) {
                me.bounds = null;
            }
        }
    }]);

    return QueryByBoundsParameters;
}(_QueryParameters3.default);

exports.default = QueryByBoundsParameters;


_SuperMap2.default.QueryByBoundsParameters = QueryByBoundsParameters;

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _QueryService2 = __webpack_require__(25);

var _QueryService3 = _interopRequireDefault(_QueryService2);

var _QueryByBoundsParameters = __webpack_require__(194);

var _QueryByBoundsParameters2 = _interopRequireDefault(_QueryByBoundsParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.QueryByBoundsService
 * @description Bounds 查询服务类。
 * @augments SuperMap.QueryService
 * @example
 * (start end)
 * var myQueryByBoundsService = new SuperMap.QueryByBoundsService(url, {
 *     eventListeners: {
 *         "processCompleted": queryCompleted,
 *		   "processFailed": queryError
 *		   }
 * });
 * function queryCompleted(object){//todo};
 * function queryError(object){//todo};
 * (end)
 * @param url - {String} 服务的访问地址。如访问World Map服务，只需将url设为: http://localhost:8090/iserver/services/map-world/rest/maps/World+Map 即可。
 * @param options - {Object} 互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var QueryByBoundsService = function (_QueryService) {
    _inherits(QueryByBoundsService, _QueryService);

    /**
     * @function SuperMap.QueryByBoundsService.initialize
     * @description Bounds 查询服务类构造函数。
     * @param url - {String} 服务的访问地址。如访问World Map服务，只需将url设为: http://localhost:8090/iserver/services/map-world/rest/maps/World+Map 即可。
     * @param options - {Object} 互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */
    function QueryByBoundsService(url, options) {
        _classCallCheck(this, QueryByBoundsService);

        var _this = _possibleConstructorReturn(this, (QueryByBoundsService.__proto__ || Object.getPrototypeOf(QueryByBoundsService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.QueryByBoundsService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(QueryByBoundsService, [{
        key: 'destroy',
        value: function destroy() {
            _get(QueryByBoundsService.prototype.__proto__ || Object.getPrototypeOf(QueryByBoundsService.prototype), 'destroy', this).call(this);
        }

        /*
         * Method: getJsonParameters
         * 将查询参数转化为 JSON 字符串。
         * 在本类中重写此方法，可以实现不同种类的查询（sql, geometry, distance, bounds 等）。
         *
         * Parameters:
         * params - {SuperMap.QueryByBoundsParameters} Bounds 查询参数。
         *
         * Returns:
         * {Object} 转化后的 JSON 字符串。
         */

    }, {
        key: 'getJsonParameters',
        value: function getJsonParameters(params) {
            var me = this,
                jsonParameters = "",
                qp = null,
                bounds = params.bounds;
            qp = me.getQueryParameters(params);
            jsonParameters += "'queryMode':'BoundsQuery','queryParameters':";
            jsonParameters += _SuperMap2.default.Util.toJSON(qp);
            jsonParameters += ",'bounds': {'rightTop':{'y':" + bounds.top + ",'x':" + bounds.right + "},'leftBottom':{'y':" + bounds.bottom + ",'x':" + bounds.left + "}}";
            jsonParameters = "{" + jsonParameters + "}";
            return jsonParameters;
        }
    }]);

    return QueryByBoundsService;
}(_QueryService3.default);

exports.default = QueryByBoundsService;


_SuperMap2.default.QueryByBoundsService = QueryByBoundsService;

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _QueryParameters2 = __webpack_require__(17);

var _QueryParameters3 = _interopRequireDefault(_QueryParameters2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/** * @class SuperMap.QueryByDistanceParameters * @description Distance 查询参数类。 *               该类用于设置 Distance 查询的相关参数。 * @augments SuperMap.QueryParameters * @param options - {Object} 可选参数。如：<br> *         customParams - {String} 自定义参数，供扩展使用。<br> *         prjCoordSys -{Object} 自定义参数，供isueprmap提供的动态投影查询扩展使用。如 {"epsgCode":3857}。<br> *         expectCount - {Number} 期望返回结果记录个数。<br> *         networkType - {SuperMap.GeometryType} 网络数据集对应的查询类型。<br> *         queryOption - {SuperMap.QueryOption} 查询结果类型枚举类。<br> *         queryParams -  {Array<SuperMap.FilterParameter>} 查询过滤条件参数数组。<br> *         startRecord - {Number} 查询起始记录号。<br> *         holdTime - {Number} 资源在服务端保存的时间。<br> *         returnCustomResult -{Boolean} 仅供三维使用。<br> *         distance - {Number} 查询距离。<br> *         geometry - {Object} 用于查询的几何对象。<br> *         isNearest - {Boolean} 是否为最近距离查询。<br> *         returnContent - {Boolean} 是否立即返回新创建资源的表述还是返回新资源的 URI。 */
var QueryByDistanceParameters = function (_QueryParameters) {
  _inherits(QueryByDistanceParameters, _QueryParameters);

  /*     * Constructor: SuperMap.QueryByDistanceParameters     * Distance 查询参数类构造函数。     */


  /**     * APIProperty: isNearest     * @member SuperMap.QueryByDistanceParameters.prototype.isNearest -{Boolean}     * @description 是否为最近距离查询。<br>     *               建议该属性与 expectCount （继承自 SuperMap.QueryParameters）属性联合使用。<br>     *               当该属性为 true 时，即表示查找最近地物，如果查询结果数大于期望返回的结果记录数（expectCount），<br>     *               则查找结果为查询总记录中距离中心最近的expectCount个地物。<br>     *               当该属性为不为 true 时，如果查询结果数大于期望返回的结果记录数（expectCount），<br>     *               则查找结果为从查询总记录中随机抽取的expectCount个地物。<br>     *               目前查询结果不支持按远近距离排序。     */


  /**     * APIProperty: distance     * @member SuperMap.QueryByDistanceParameters.prototype.distance -{Number}     * @description 查询距离，默认为0，单位与所查询图层对应的数据集单位相同。     *               当查找最近地物时，该属性无效。     */
  function QueryByDistanceParameters(options) {
    _classCallCheck(this, QueryByDistanceParameters);

    var _this = _possibleConstructorReturn(this, (QueryByDistanceParameters.__proto__ || Object.getPrototypeOf(QueryByDistanceParameters)).call(this, options));

    _this.distance = 0;
    _this.geometry = null;
    _this.isNearest = null;
    _this.returnContent = true;
    _this.CLASS_NAME = "SuperMap.QueryByDistanceParameters";

    if (!options) {
      return _possibleConstructorReturn(_this);
    }
    _SuperMap2.default.Util.extend(_this, options);
    return _this;
  }

  /**     * APIMethod: destroy     * @function destroy     * @description 释放资源，将引用资源的属性置空。     */


  /**     * APIProperty: returnContent     * @member SuperMap.QueryByDistanceParameters.prototype.returnContent -{Boolean}     * @description 是否立即返回新创建资源的表述还是返回新资源的 URI。<br>     *               如果为 true，则直接返回新创建资源，即查询结果的表述。<br>     *               为 false，则返回的是查询结果资源的 URI。默认为 true。     */


  /**     * APIProperty: geometry     * @member SuperMap.QueryByDistanceParameters.prototype.geometry -{Object}     * @description 用于查询的地理对象，必设属性。     */


  _createClass(QueryByDistanceParameters, [{
    key: 'destroy',
    value: function destroy() {
      _get(QueryByDistanceParameters.prototype.__proto__ || Object.getPrototypeOf(QueryByDistanceParameters.prototype), 'destroy', this).call(this);
      var me = this;
      me.returnContent = null;
      me.distance = null;
      me.isNearest = null;
      if (me.geometry) {
        me.geometry.destroy();
        me.geometry = null;
      }
    }
  }]);

  return QueryByDistanceParameters;
}(_QueryParameters3.default);

exports.default = QueryByDistanceParameters;


_SuperMap2.default.QueryByDistanceParameters = QueryByDistanceParameters;

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _QueryService2 = __webpack_require__(25);

var _QueryService3 = _interopRequireDefault(_QueryService2);

var _QueryByDistanceParameters = __webpack_require__(196);

var _QueryByDistanceParameters2 = _interopRequireDefault(_QueryByDistanceParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.QueryByDistanceService
 * @description Distance查询服务类构造函数。
 * @augments SuperMap.QueryService
 * @example
 *(start code)
 * var myQueryByDistService = new SuperMap.QueryByDistanceService(url, {
 *     eventListeners: {
 *         "processCompleted": queryCompleted,
 *		   "processFailed": queryError
 *		   }
 * });
 * function queryCompleted(object){//todo};
 * function queryError(object){//todo};
 *(end)
 *
 * @param url - {String} 服务的访问地址。如访问World Map服务，只需将url设为：http://localhost:8090/iserver/services/map-world/rest/maps/World+Map 即可。
 * @param options - {Object} 交互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var QueryByDistanceService = function (_QueryService) {
    _inherits(QueryByDistanceService, _QueryService);

    /**
     * @function SuperMap.QueryByDistanceService.initialize
     * @description Distance查询服务类构造函数。
     * @param url - {String} 服务的访问地址。如访问World Map服务，只需将url设为：http://localhost:8090/iserver/services/map-world/rest/maps/World+Map 即可。
     * @param options - {Object} 交互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */
    function QueryByDistanceService(url, options) {
        _classCallCheck(this, QueryByDistanceService);

        var _this = _possibleConstructorReturn(this, (QueryByDistanceService.__proto__ || Object.getPrototypeOf(QueryByDistanceService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.QueryByDistanceService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(QueryByDistanceService, [{
        key: 'destroy',
        value: function destroy() {
            _get(QueryByDistanceService.prototype.__proto__ || Object.getPrototypeOf(QueryByDistanceService.prototype), 'destroy', this).call(this);
        }

        /*
         * Method: getJsonParameters
         * 将查询参数转化为 JSON 字符串。
         * 在本类中重写此方法，可以实现不同种类的查询（sql, geometry, distance, bounds等）。
         *
         * Parameters:
         * params - {SuperMap.QueryByDistanceParameters}
         *
         * Returns:
         * {Object} 转化后的 JSON 字符串。
         */

    }, {
        key: 'getJsonParameters',
        value: function getJsonParameters(params) {
            var me = this,
                jsonParameters = "",
                qp = me.getQueryParameters(params);
            var sg = _SuperMap2.default.REST.ServerGeometry.fromGeometry(params.geometry);

            jsonParameters += params.isNearest ? "'queryMode':'FindNearest','queryParameters':" : "'queryMode':'DistanceQuery','queryParameters':";
            jsonParameters += _SuperMap2.default.Util.toJSON(qp);
            jsonParameters += ",'geometry':" + _SuperMap2.default.Util.toJSON(sg) + ",'distance':" + params.distance;
            jsonParameters = "{" + jsonParameters + "}";
            return jsonParameters;
        }
    }]);

    return QueryByDistanceService;
}(_QueryService3.default);

exports.default = QueryByDistanceService;


_SuperMap2.default.QueryByDistanceService = QueryByDistanceService;

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _QueryParameters2 = __webpack_require__(17);

var _QueryParameters3 = _interopRequireDefault(_QueryParameters2);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.QueryByGeometryParameters
 * @description Geometry 查询参数类。
 *               该类用于设置 Geometry查询的相关参数。
 * @augments SuperMap.QueryParameters
 * @param options - {Object} 可选参数。如：<br>
 *         customParams - {String} 自定义参数，供扩展使用。<br>
 *         prjCoordSys -{Object} 自定义参数，供isueprmap提供的动态投影查询扩展使用。如 {"epsgCode":3857}。<br>
 *         expectCount - {Number} 期望返回结果记录个数。<br>
 *         networkType - {SuperMap.GeometryType} 网络数据集对应的查询类型。<br>
 *         queryOption - {SuperMap.QueryOption} 查询结果类型枚举类。<br>
 *         queryParams -  {Array<SuperMap.FilterParameter>} 查询过滤条件参数数组。<br>
 *         startRecord - {Number} 查询起始记录号。<br>
 *         holdTime - {Number} 资源在服务端保存的时间。<br>
 *         returnCustomResult -{Boolean} 仅供三维使用。
 *         returnContent - {Boolean} 是否立即返回新创建资源的表述还是返回新资源的 URI。
 *         geometry - {Object} 用于查询的几何对象。
 *         spatialQueryMode - {SuperMap.SpatialQueryMode} 空间查询模式。
 */
var QueryByGeometryParameters = function (_QueryParameters) {
    _inherits(QueryByGeometryParameters, _QueryParameters);

    /*
     * Constructor: SuperMap.QueryByGeometryParameters
     * Geometry 查询参数类构造函数。
     */


    /**
     * APIProperty: geometry
     * @member SuperMap.QueryByGeometryParameters.prototype.geometry -{Object}
     * @description 用于查询的几何对象。
     */
    function QueryByGeometryParameters(options) {
        _classCallCheck(this, QueryByGeometryParameters);

        var _this = _possibleConstructorReturn(this, (QueryByGeometryParameters.__proto__ || Object.getPrototypeOf(QueryByGeometryParameters)).call(this, options));

        _this.returnContent = true;
        _this.geometry = null;
        _this.spatialQueryMode = _REST.SpatialQueryMode.INTERSECT;
        _this.CLASS_NAME = "SuperMap.QueryByGeometryParameters";

        if (!options) {
            return _possibleConstructorReturn(_this);
        }
        _SuperMap2.default.Util.extend(_this, options);
        return _this;
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: spatialQueryMode
     * @member SuperMap.QueryByGeometryParameters.prototype.spatialQueryMode -{SuperMap.SpatialQueryMode}
     * @description 空间查询模式。
     */


    /**
     * APIProperty: returnContent
     * @member SuperMap.QueryByGeometryParameters.prototype.returnContent -{Boolean}
     * @description 是否立即返回新创建资源的表述还是返回新资源的 URI。<br>
     *               如果为 true，则直接返回新创建资源，即查询结果的表述。<br>
     *               为 false，则返回的是查询结果资源的 URI。默认为 true。
     */


    _createClass(QueryByGeometryParameters, [{
        key: 'destroy',
        value: function destroy() {
            _get(QueryByGeometryParameters.prototype.__proto__ || Object.getPrototypeOf(QueryByGeometryParameters.prototype), 'destroy', this).call(this);
            var me = this;
            me.returnContent = null;
            me.geometry = null;
            me.spatialQueryMode = null;
        }
    }]);

    return QueryByGeometryParameters;
}(_QueryParameters3.default);

exports.default = QueryByGeometryParameters;


_SuperMap2.default.QueryByGeometryParameters = QueryByGeometryParameters;

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _QueryService2 = __webpack_require__(25);

var _QueryService3 = _interopRequireDefault(_QueryService2);

var _QueryByGeometryParameters = __webpack_require__(198);

var _QueryByGeometryParameters2 = _interopRequireDefault(_QueryByGeometryParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.QueryByGeometryService
 * @description Geometry查询服务类。
 * @augments SuperMap.QueryService
 * @example
 * (start code)
 * var myQueryByGeometryService = new SuperMap.QueryByGeometryService(url, {
 *     eventListeners: {
 *	      "processCompleted": queryCompleted,
 *		  "processFailed": queryError
 *		  }
 * });
 * function queryCompleted(object){//todo};
 * function queryError(object){//todo};
 * (end)
 * @param url - {String} 服务的访问地址。如访问World Map服务，只需将url设为: http://localhost:8090/iserver/services/map-world/rest/maps/World+Map 即可。
 * @param options - {Object} 互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var QueryByGeometryService = function (_QueryService) {
    _inherits(QueryByGeometryService, _QueryService);

    /**
     * @function SuperMap.QueryByGeometryService.initialize
     * @description Geometry 查询服务类构造函数。
     * @param url - {String} 服务的访问地址。如访问World Map服务，只需将url设为: http://localhost:8090/iserver/services/map-world/rest/maps/World+Map 即可。
     * @param options - {Object} 互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */
    function QueryByGeometryService(url, options) {
        _classCallCheck(this, QueryByGeometryService);

        var _this = _possibleConstructorReturn(this, (QueryByGeometryService.__proto__ || Object.getPrototypeOf(QueryByGeometryService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.QueryByGeometryService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(QueryByGeometryService, [{
        key: 'destroy',
        value: function destroy() {
            _get(QueryByGeometryService.prototype.__proto__ || Object.getPrototypeOf(QueryByGeometryService.prototype), 'destroy', this).call(this);
        }

        /*
         * Method: getJsonParameters
         * 将查询参数转化为 JSON 字符串。
         * 在本类中重写此方法，可以实现不同种类的查询（sql, geometry, distance, bounds等）。
         *
         * Parameters:
         * params - {SuperMap.QueryByGeometryParameters}
         *
         * Returns:
         * {Object} 转化后的 JSON 字符串。
         */

    }, {
        key: 'getJsonParameters',
        value: function getJsonParameters(params) {
            var me = this,
                jsonParameters = "",
                qp = null,
                geometry = params.geometry,
                sg = _SuperMap2.default.REST.ServerGeometry.fromGeometry(geometry);
            qp = me.getQueryParameters(params);
            jsonParameters += "'queryMode':'SpatialQuery','queryParameters':";
            jsonParameters += _SuperMap2.default.Util.toJSON(qp) + ",'geometry':" + _SuperMap2.default.Util.toJSON(sg) + ",'spatialQueryMode':" + _SuperMap2.default.Util.toJSON(params.spatialQueryMode);
            jsonParameters = "{" + jsonParameters + "}";
            return jsonParameters;
        }
    }]);

    return QueryByGeometryService;
}(_QueryService3.default);

exports.default = QueryByGeometryService;


_SuperMap2.default.QueryByGeometryService = QueryByGeometryService;

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _QueryParameters2 = __webpack_require__(17);

var _QueryParameters3 = _interopRequireDefault(_QueryParameters2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/** * @class SuperMap.QueryBySQLParameters * @description SQL 查询参数类。 *               该类用于设置 SQL 查询的相关参数。 * @augments SuperMap.QueryParameters * @param options - {Object} 可选参数。如：<br> *         customParams - {String} 自定义参数，供扩展使用。<br> *         prjCoordSys -{Object} 自定义参数，供isueprmap提供的动态投影查询扩展使用。如 {"epsgCode":3857}。<br> *         expectCount - {Number} 期望返回结果记录个数。<br> *         networkType - {SuperMap.GeometryType} 网络数据集对应的查询类型。<br> *         queryOption - {SuperMap.QueryOption} 查询结果类型枚举类。<br> *         queryParams -  {Array<SuperMap.FilterParameter>} 查询过滤条件参数数组。<br> *         startRecord - {Number} 查询起始记录号。<br> *         holdTime - {Number} 资源在服务端保存的时间。<br> *         returnCustomResult -{Boolean} 仅供三维使用。 *         returnContent - {Boolean} 是否立即返回新创建资源的表述还是返回新资源的 URI。 */
var QueryBySQLParameters = function (_QueryParameters) {
  _inherits(QueryBySQLParameters, _QueryParameters);

  /*     * Constructor: SuperMap.QueryBySQLParameters     * SQL 查询参数类构造函数。     */
  function QueryBySQLParameters(options) {
    _classCallCheck(this, QueryBySQLParameters);

    var _this = _possibleConstructorReturn(this, (QueryBySQLParameters.__proto__ || Object.getPrototypeOf(QueryBySQLParameters)).call(this, options));

    _this.returnContent = true;
    _this.CLASS_NAME = "SuperMap.QueryBySQLParameters";

    if (!options) {
      return _possibleConstructorReturn(_this);
    }
    _SuperMap2.default.Util.extend(_this, options);
    return _this;
  }

  /**     * APIMethod: destroy     * @function destroy     * @description 释放资源，将引用资源的属性置空。     */


  /**     * APIProperty: returnContent     * @member SuperMap.QueryBySQLParameters.prototype.returnContent -{Boolean}     * @description 是否立即返回新创建资源的表述还是返回新资源的 URI。<br>     *               如果为 true，则直接返回新创建资源，即查询结果的表述。<br>     *               为 false，则返回的是查询结果资源的 URI。默认为 true。     */


  _createClass(QueryBySQLParameters, [{
    key: 'destroy',
    value: function destroy() {
      _get(QueryBySQLParameters.prototype.__proto__ || Object.getPrototypeOf(QueryBySQLParameters.prototype), 'destroy', this).call(this);
      var me = this;
      me.returnContent = null;
    }
  }]);

  return QueryBySQLParameters;
}(_QueryParameters3.default);

exports.default = QueryBySQLParameters;


_SuperMap2.default.QueryBySQLParameters = QueryBySQLParameters;

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _QueryService2 = __webpack_require__(25);

var _QueryService3 = _interopRequireDefault(_QueryService2);

var _QueryBySQLParameters = __webpack_require__(200);

var _QueryBySQLParameters2 = _interopRequireDefault(_QueryBySQLParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.QueryBySQLService
 * @description SQL 查询服务类。在一个或多个指定的图层上查询符合 SQL 条件的空间地物信息。
 * @augments SuperMap.QueryService
 * @example
 * (start code)
 * var queryParam = new SuperMap.FilterParameter({
 *     name: "Countries@World.1",
 *     attributeFilter: "Pop_1994>1000000000 and SmArea>900"
 * });
 * var queryBySQLParams = new SuperMap.QueryBySQLParameters({
 *     queryParams: [queryParam]
 * });
 * var myQueryBySQLService = new SuperMap.QueryBySQLService(url, {eventListeners: {
 *     "processCompleted": queryCompleted,
 *     "processFailed": queryError
 *	   }
 * });
 * queryBySQLService.processAsync(queryBySQLParams);
 * function queryCompleted(object){//todo};
 * function queryError(object){//todo};
 * (end)
 * @param url - {String} 服务的访问地址。如访问World Map服务，只需将url设为: http://localhost:8090/iserver/services/map-world/rest/maps/World+Map 即可。
 * @param options - {Object} 互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var QueryBySQLService = function (_QueryService) {
    _inherits(QueryBySQLService, _QueryService);

    /**
     * @function SuperMap.QueryBySQLService.initialize
     * @descriptionSQL 查询服务类构造函数。
     * @param url - {String} 服务的访问地址。如访问World Map服务，只需将url设为: http://localhost:8090/iserver/services/map-world/rest/maps/World+Map 即可。
     * @param options - {Object} 互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */
    function QueryBySQLService(url, options) {
        _classCallCheck(this, QueryBySQLService);

        var _this = _possibleConstructorReturn(this, (QueryBySQLService.__proto__ || Object.getPrototypeOf(QueryBySQLService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.QueryBySQLService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(QueryBySQLService, [{
        key: 'destroy',
        value: function destroy() {
            _get(QueryBySQLService.prototype.__proto__ || Object.getPrototypeOf(QueryBySQLService.prototype), 'destroy', this).call(this);
        }

        /*
         * Method: getJsonParameters
         * 将查询参数转化为 JSON 字符串。
         * 在本类中重写此方法，可以实现不同种类的查询（sql, geometry, distance, bounds等）。
         *
         * Parameters:
         * params - {SuperMap.QueryBySQLParameters}
         *
         * Returns:
         * {Object} 转化后的 JSON 字符串。
         */

    }, {
        key: 'getJsonParameters',
        value: function getJsonParameters(params) {
            var me = this,
                jsonParameters = "",
                qp = null;
            qp = me.getQueryParameters(params);
            jsonParameters += "'queryMode':'SqlQuery','queryParameters':";
            jsonParameters += _SuperMap2.default.Util.toJSON(qp);
            jsonParameters = "{" + jsonParameters + "}";
            return jsonParameters;
        }
    }]);

    return QueryBySQLService;
}(_QueryService3.default);

exports.default = QueryBySQLService;


_SuperMap2.default.QueryBySQLService = QueryBySQLService;

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
        value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _Graph2 = __webpack_require__(14);

var _Graph3 = _interopRequireDefault(_Graph2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Class: SuperMap.Feature.Theme.RankSymbol
 * 符号专题要素基类，此类定义了符号专题要素基础模型，具体的图表模型通过继承此类，在子类中实现 assembleShapes 方法。
 *
 * 符号专题要素模型采用了可视化图形大小自适应策略，用较少的参数控制着图表诸多图形，图表配置对象 <SuperMap.Feature.Theme.RankSymbol::setting> 的基础属性只有 5 个，
 * 它们控制着图表结构、值域范围、数据小数位等基础图表形态。构成图表的图形必须在图表结构里自适应大小。
 *
 * 此类不可实例化，此类的可实例化子类必须实现 assembleShapes() 方法。
 *
 * Inherits:
 *  - <SuperMap.Feature.Theme.Graph>
 */
var RankSymbol = function (_Graph) {
        _inherits(RankSymbol, _Graph);

        /**
         * Constructor: SuperMap.Feature.Theme.RankSymbol
         * 创建一个矢量专题要素。
         *
         * Parameters:
         * data - {SuperMap.Feature.Vector}  用户数据，必设参数。
         * layer - {SuperMap.Layer.RankSymbol} 此专题要素所在图层，必设参数。
         * fields - {Array{String}} data 中的参与此图表生成的字段名称，必设参数。
         * setting - {Object} 图表配置对象，必设参数。
         * lonlat - {SuperMap.LonLat} 专题要素地理位置。默认为 data 指代的地理要素 Bounds 中心。
         *
         * Returns:
         * {SuperMap.Feature.Theme.RankSymbol} 返回一个统计专题要素。
         */
        function RankSymbol(data, layer, fields, setting, lonlat, options) {
                _classCallCheck(this, RankSymbol);

                // 图表位置
                var _this = _possibleConstructorReturn(this, (RankSymbol.__proto__ || Object.getPrototypeOf(RankSymbol)).call(this, data, layer, fields, setting, lonlat, options));

                _this.setting = null;
                _this.CLASS_NAME = "SuperMap.Feature.Theme.RankSymbol";
                if (lonlat) {
                        _this.lonlat = lonlat;
                } else {
                        // 默认使用 bounds 中心
                        var geometry = data.geometry;
                        var dataBounds = geometry.getBounds();
                        _this.lonlat = dataBounds.getCenterLonLat();
                }

                // 配置项检测与赋值
                if (setting && setting.codomain) {
                        _this.setting = setting;
                        _this.DVBCodomain = _this.setting.codomain;
                }

                _this.fields = fields ? fields : [];

                _this.shapeFactory = new _SuperMap2.default.Feature.ShapeFactory();
                return _this;
        }

        /**
         * APIMethod: destroy
         * 销毁专题要素。
         */

        /**
         * APIProperty: setting
         * {Object} 符号配置对象，该对象控制着图表的可视化显示。
         *
         * 下面是此配置对象的 5 个基础可设属性：
         *
         * Symbolizer properties:
         * codomain - {Array{Number}} 值域，长度为 2 的一维数组，第一个元素表示值域下限，第二个元素表示值域上限，必设参数。
         * XOffset - {Number}  专题要素（图表）在 X 方向上的偏移值，单位像素。
         * YOffset - {Number}  专题要素（图表）在 Y 方向上的偏移值，单位像素。
         * dataViewBoxParameter - {Array{Number}} 数据视图框 dataViewBox 参数，
         * 它是指图表框 chartBox （由图表位置、图表宽度、图表高度构成的图表范围框）在左、下，右，上四个方向上的内偏距值。
         * decimalNumber - {Number} 数据值数组 dataValues 元素值小数位数，数据的小数位处理参数，取值范围：[0, 16]。如果不设置此参数，在取数据值时不对数据做小数位处理。
         *
         *
         * 除了以上 5 个基础属性，此对象的可设属性在不同子类中有较大差异，不同子类中对同一属性的解释也可能不同。
         * 请在此类的子类中查看 setting 对象的可设属性和属性含义。
         */


        _createClass(RankSymbol, [{
                key: 'destroy',
                value: function destroy() {
                        this.setting = null;
                        _get(RankSymbol.prototype.__proto__ || Object.getPrototypeOf(RankSymbol.prototype), 'destroy', this).call(this);
                }

                /**
                 * APIMethod: initBaseParameter
                 * 初始化专题要素（图形）基础参数。
                 * 在调用此方法前，此类的图表模型相关属性都是不可用的 ，此方法在 assembleShapes 函数中调用。
                 *
                 * 调用此函数关系到 setting 对象的以下属性
                 *
                 * Symbolizer properties:
                 * codomain - {Array{Number}} 值域，长度为 2 的一维数组，第一个元素表示值域下限，第二个元素表示值域上限，必设参数。
                 * XOffset - {Number}  专题要素（图形）在 X 方向上的偏移值，单位像素。
                 * YOffset - {Number}  专题要素（图形）在 Y 方向上的偏移值，单位像素。
                 * dataViewBoxParameter - {Array{Number}} 数据视图框 dataViewBox 参数，
                 * 它是指图形框 chartBox （由图表位置、图表宽度、图表高度构成的图表范围框）在左、下，右，上四个方向上的内偏距值。
                 * decimalNumber - {Number} 数据值数组 dataValues 元素值小数位数，数据的小数位处理参数，取值范围：[0, 16]。如果不设置此参数，在取数据值时不对数据做小数位处理。
                 *
                 * Returns:
                 * {Boolean} 初始化参数是否成功。
                 */

        }, {
                key: 'initBaseParameter',
                value: function initBaseParameter() {
                        // 参数初始化是否成功
                        var isSuccess = true;

                        // setting 属性是否已成功赋值
                        if (!this.setting) return false;
                        var sets = this.setting;

                        // 图表偏移
                        if (sets.XOffset) {
                                this.XOffset = sets.XOffset;
                        }
                        if (sets.YOffset) {
                                this.YOffset = sets.YOffset;
                        }
                        this.XOffset = sets.XOffset ? sets.XOffset : 0;
                        this.YOffset = sets.YOffset ? sets.YOffset : 0;

                        // 其他默认值
                        this.origonPoint = [];
                        this.chartBox = [];
                        this.dataViewBox = [];

                        this.DVBParameter = sets.dataViewBoxParameter ? sets.dataViewBoxParameter : [0, 0, 0, 0];

                        this.DVBOrigonPoint = [];
                        this.DVBCenterPoint = [];
                        this.origonPointOffset = [];

                        // 图表位置
                        this.resetLocation();

                        // 专题要素宽度 w
                        var w = this.width;
                        // 专题要素高度 h
                        var h = this.height;
                        // 专题要素像素位置 loc
                        var loc = this.location;

                        // 专题要素像素位置 loc
                        this.origonPoint = [loc[0] - w / 2, loc[1] - h / 2];
                        // 专题要素原点（左上角）
                        var op = this.origonPoint;

                        // 图表框（[left, bottom, right, top]）
                        this.chartBox = [op[0], op[1] + h, op[0] + w, op[1]];
                        // 图表框
                        var cb = this.chartBox;

                        // 数据视图框参数，它是图表框各方向对应的内偏距
                        var dbbP = this.DVBParameter;
                        // 数据视图框 （[left, bottom, right, top]）
                        this.dataViewBox = [cb[0] + dbbP[0], cb[1] - dbbP[1], cb[2] - dbbP[2], cb[3] + dbbP[3]];
                        // 数据视图框
                        var dvb = this.dataViewBox;
                        //检查数据视图框是否合法
                        if (dvb[0] >= dvb[2] || dvb[1] <= dvb[3]) {
                                return false;
                        }

                        // 数据视图框原点
                        this.DVBOrigonPoint = [dvb[0], dvb[3]];
                        // 数据视图框宽度
                        this.DVBWidth = Math.abs(dvb[2] - dvb[0]);
                        // 数据视图框高度
                        this.DVBHeight = Math.abs(dvb[1] - dvb[3]);
                        // 数据视图框中心点
                        this.DVBCenterPoint = [this.DVBOrigonPoint[0] + this.DVBWidth / 2, this.DVBOrigonPoint[1] + this.DVBHeight / 2];

                        // 数据视图框原点与图表框的原点偏移量
                        this.origonPointOffset = [this.DVBOrigonPoint[0] - op[0], this.DVBOrigonPoint[1] - op[1]];

                        return isSuccess;
                }
        }]);

        return RankSymbol;
}(_Graph3.default);

exports.default = RankSymbol;


_SuperMap2.default.Feature.Theme.RankSymbol = RankSymbol;

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _Graph2 = __webpack_require__(14);

var _Graph3 = _interopRequireDefault(_Graph2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Class: SuperMap.Feature.Theme.Ring
 * 环状图 。
 *
 * 图表 Ring 配置对象 chartsSetting（<SuperMap.Layer.Graph::chartsSetting>） 可设属性如下：
 *
 * Symbolizer properties:
 * width - {Number} 专题要素（图表）宽度，必设参数。
 * height - {Number} 专题要素（图表）高度，必设参数。
 * codomain - {Array{Number}} 图表允许展示的数据值域，长度为 2 的一维数组，第一个元素表示值域下限，第二个元素表示值域上限，必设参数。
 * XOffset - {Number}  专题要素（图表）在 X 方向上的偏移值，单位像素。
 * YOffset - {Number}  专题要素（图表）在 Y 方向上的偏移值，单位像素。
 * dataViewBoxParameter - {Array{Number}} 数据视图框 dataViewBox 参数，
 * 它是指图表框 chartBox （由图表位置、图表宽度、图表高度构成的图表范围框）在左、下，右，上四个方向上的内偏距值。默认值为：[0, 0, 0, 0]。
 * decimalNumber - {Number} 数据值数组 dataValues 元素值小数位数，数据的小数位处理参数，取值范围：[0, 16]。如果不设置此参数，在取数据值时不对数据做小数位处理。
 *
 * useBackground - {Boolean} 是否使用图表背景框，默认不使用。
 * backgroundStyle - {Object} 背景样式，此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Rectangle::style>。
 * backgroundRadius - {Array} 背景框矩形圆角半径，可以用数组分别指定四个角的圆角半径，设：左上、右上、右下、左下角的半径依次为 r1、r2、r3、r4 ,
 * 则 backgroundRadius 为 [r1、r2、r3、r4 ]，默认值[0, 0, 0, 0]。
 *
 * innerRingRadius - {Number} 环状图内环半径，默认值: 0，取值范围大于 0，小于外环半径（外环半径：数据视图框长和宽中较小值的二分之一）。
 *
 * sectorStyle - {Object} 环状图中扇形的基础 style，此参数控制环状图扇形基础样式，优先级低于 sectorStyleByFields 和 sectorStyleByCodomain。
 * 此样式对象对象可设属性： <SuperMap.Feature.ShapeParameters.Sector::style> 。
 * sectorStyleByFields - {Array{Object}} 按专题字段 themeFields（<SuperMap.Layer.Graph::themeFields>）为环状图扇形赋 style，此参数按字段控制环状图扇形样式，
 * 优先级低于 sectorStyleByCodomain，高于 sectorStyle。此数组中的元素是样式对象，其可设属性： <SuperMap.Feature.ShapeParameters.Sector::style> 。
 * 此参数中的 style 与 themeFields 中的字段一一对应 。例如： themeFields（<SuperMap.Layer.Graph::themeFields>） 为 ["POP_1992", "POP_1995", "POP_1999"],
 * sectorStyleByFields 为[style1, style2, style3]，则在图表中，字段 POP_1992 对应的环状图扇形使用 style1，字段 POP_1995 对应的环状图扇形使用 style2 ，字段 POP_1999 对应的环状图扇形使用 style3。
 * sectorStyleByCodomain - {Array{Object}} 按环状图扇形代表的数据值所在值域范围控制环状图扇形样式，优先级高于 sectorStyle 和 sectorStyleByFields。
 * (start code)
 * // sectorStyleByCodomain 的每个元素是个包含值域信息和与值域对应样式信息的对象，该对象（必须）有三个属性：
 * // start: 值域值下限（包含）;
 * // end: 值域值上限（不包含）;
 * // style: 数据可视化图形的 style，这个样式对象的可设属性： <SuperMap.Feature.ShapeParameters.Sector::style> 。
 * // sectorStyleByCodomain 数组形如：
 * [
 *   {
 *     start:0,
 *     end:250,
 *     style:{
 *          fillColor:"#00CD00"
 *      }
 *  },
 *   {
 *     start:250,
 *     end:500,
 *     style:{
 *          fillColor:"#00EE00"
 *      }
 *  },
 *   {
 *     start:500,
 *     end:750,
 *     style:{
 *          fillColor:"#00FF7F"
 *      }
 *  },
 *   {
 *     start:750,
 *     end:1500,
 *     style:{
 *          fillColor:"#00FF00"
 *      }
 *  }
 * ]
 * (end)
 * sectorHoverStyle - {Object} 环状图扇形 hover 状态时的样式，sectorHoverAble 为 true 时有效。
 * sectorHoverAble - {Object} 是否允许环状图扇形使用 hover 状态，默认允许。同时设置 sectorHoverAble 和 sectorClickAble 为 false，可以直接屏蔽环状图扇形对专题图层事件的响应。
 * sectorClickAble - {Object} 是否允许环状图扇形被点击，默认允许。同时设置 sectorHoverAble 和 sectorClickAble 为 false，可以直接屏蔽环状图扇形对专题图层事件的响应。
 *
 * Inherits:
 *  - <SuperMap.Feature.Theme.Graph>
 */
var Ring = function (_Graph) {
    _inherits(Ring, _Graph);

    /**
     * Constructor: SuperMap.Feature.Theme.Ring
     * 创建一个环状图。
     *
     * Parameters:
     * data - {SuperMap.Feature.Vector}  用户数据，必设参数。
     * layer - {SuperMap.Layer.Graph} 此专题要素所在图层，必设参数。
     * fields - {Array{String}} data 中的参与此图表生成的字段名称，必设参数。
     * setting - {Object} 图表配置对象，必设参数。
     * lonlat - {SuperMap.LonLat} 专题要素地理位置。默认为 data 指代的地理要素 Bounds 中心。
     *
     * Returns:
     * {SuperMap.Feature.Theme.Ring} 返回一个环状图。
     */
    function Ring(data, layer, fields, setting, lonlat) {
        _classCallCheck(this, Ring);

        var _this = _possibleConstructorReturn(this, (Ring.__proto__ || Object.getPrototypeOf(Ring)).call(this, data, layer, fields, setting, lonlat));

        _this.CLASS_NAME = "SuperMap.Feature.Theme.Ring";
        return _this;
    }

    /**
     * APIMethod: destroy
     * 销毁此专题要素。调用 destroy 后此对象所以属性置为 null。
     */


    _createClass(Ring, [{
        key: 'destroy',
        value: function destroy() {
            _get(Ring.prototype.__proto__ || Object.getPrototypeOf(Ring.prototype), 'destroy', this).call(this);
        }

        //装配图形（扩展接口）

    }, {
        key: 'assembleShapes',
        value: function assembleShapes() {
            // 重要步骤：初始化参数
            if (!this.initBaseParameter()) return;

            // 一个默认 style 组
            var defaultStyleGroup = [{ fillColor: "#ff9277" }, { fillColor: "#dddd00" }, { fillColor: "#ffc877" }, { fillColor: "#bbe3ff" }, { fillColor: "#d5ffbb" }, { fillColor: "#bbbbff" }, { fillColor: "#ddb000" }, { fillColor: "#b0dd00" }, { fillColor: "#e2bbff" }, { fillColor: "#ffbbe3" }, { fillColor: "#ff7777" }, { fillColor: "#ff9900" }, { fillColor: "#83dd00" }, { fillColor: "#77e3ff" }, { fillColor: "#778fff" }, { fillColor: "#c877ff" }, { fillColor: "#ff77ab" }, { fillColor: "#ff6600" }, { fillColor: "#aa8800" }, { fillColor: "#77c7ff" }, { fillColor: "#ad77ff" }, { fillColor: "#ff77ff" }, { fillColor: "#dd0083" }, { fillColor: "#777700" }, { fillColor: "#00aa00" }, { fillColor: "#0088aa" }, { fillColor: "#8400dd" }, { fillColor: "#aa0088" }, { fillColor: "#dd0000" }, { fillColor: "#772e00" }];

            // 图表配置对象
            var sets = this.setting;

            // 背景框，默认不启用
            if (sets.useBackground) {
                this.shapes.push(_SuperMap2.default.Feature.ShapeFactory.Background(this.shapeFactory, this.chartBox, sets));
            }

            // 数据值数组
            var fv = this.dataValues;
            if (fv.length < 1) return; // 没有数据

            // 值域范围
            var codomain = this.DVBCodomain;
            // 值域范围检测
            for (var i = 0; i < fv.length; i++) {
                if (fv[i] < codomain[0] || fv[i] > codomain[1]) {
                    return;
                }
            }

            // 值的绝对值总和
            var valueSum = 0;
            for (var i = 0; i < fv.length; i++) {
                valueSum += Math.abs(fv[i]);
            }

            // 重要步骤：定义图表 Ring 数据视图框中单位值的含义，单位值：每度代表的数值
            this.DVBUnitValue = 360 / valueSum;
            var uv = this.DVBUnitValue;

            var dvbCenter = this.DVBCenterPoint; // 数据视图框中心作为扇心

            var startAngle = 0; // 扇形起始边角度
            var endAngle = 0; // 扇形终止边角度
            var startAngleTmp = startAngle; // 扇形临时起始边角度
            // 扇形外环（自适应）半径
            var r = this.DVBHeight < this.DVBWidth ? this.DVBHeight / 2 : this.DVBWidth / 2;

            // 扇形内环（自适应）半径
            var isInRange = sets.innerRingRadius >= 0 && sets.innerRingRadius < r;
            var r0 = typeof sets.innerRingRadius !== "undefined" && !isNaN(sets.innerRingRadius) && isInRange ? sets.innerRingRadius : 0;

            for (var i = 0; i < fv.length; i++) {
                var fvi = Math.abs(fv[i]);

                // 计算结束角度
                if (i === 0) {
                    endAngle = startAngle + fvi * uv;
                } else if (i === fvi.length - 1) {
                    endAngle = startAngleTmp;
                } else {
                    endAngle = startAngle + fvi * uv;
                }

                // 扇形参数对象
                var sectorSP = new _SuperMap2.default.Feature.ShapeParameters.Sector(dvbCenter[0], dvbCenter[1], r, startAngle, endAngle, r0);
                // 扇形样式
                if (typeof sets.sectorStyleByFields === "undefined") {
                    // 使用默认 style 组
                    var colorIndex = i % defaultStyleGroup.length;
                    sectorSP.style = _SuperMap2.default.Feature.ShapeFactory.ShapeStyleTool(null, sets.sectorStyle, defaultStyleGroup, null, colorIndex);
                } else {
                    sectorSP.style = _SuperMap2.default.Feature.ShapeFactory.ShapeStyleTool(null, sets.sectorStyle, sets.sectorStyleByFields, sets.sectorStyleByCodomain, i, fv[i]);
                }
                // 扇形 hover 样式
                sectorSP.highlightStyle = _SuperMap2.default.Feature.ShapeFactory.ShapeStyleTool(null, sets.sectorHoverStyle);
                // 扇形 hover 与 click 设置
                if (typeof sets.sectorHoverAble !== "undefined") {
                    sectorSP.hoverable = sets.sectorHoverAble;
                }
                if (typeof sets.sectorClickAble !== "undefined") {
                    sectorSP.clickable = sets.sectorClickAble;
                }
                // 图形携带的数据信息
                sectorSP.refDataID = this.data.id;
                sectorSP.dataInfo = {
                    field: this.fields[i],
                    value: fv[i]
                };

                // 创建扇形并把此扇形添加到图表图形数组
                this.shapes.push(this.shapeFactory.createShape(sectorSP));

                // 把上一次的结束角度作为下一次的起始角度
                startAngle = endAngle;
            }

            // 重要步骤：将图形转为由相对坐标表示的图形，以便在地图平移缩放过程中快速重绘图形
            // （统计专题图模块从结构上要求使用相对坐标，assembleShapes() 函数必须在图形装配完成后调用 shapesConvertToRelativeCoordinate() 函数）
            this.shapesConvertToRelativeCoordinate();
        }
    }]);

    return Ring;
}(_Graph3.default);

exports.default = Ring;


_SuperMap2.default.Feature.Theme.Ring = Ring;

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _Route = __webpack_require__(39);

var _Route2 = _interopRequireDefault(_Route);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.RouteCalculateMeasureParameters
 * @constructs SuperMap.RouteCalculateMeasureParameters
 * @classdesc
 * 基于路由对象计算指定点M值操作的参数类。通过该类提供参数信息。
 * @api
 */
var RouteCalculateMeasureParameters = function () {

    /**
     * @method SuperMap.RouteCalculateMeasureParameters.initialize
     * @param options - {Object} 参数。
     *
     * Allowed options properties:</br>
     * sourceRoute - {Object} 【必选参数】路由对象。该对象可以是用户自己生成或在数据源中查询得到的符合标准的路由对象。</br>
     * point - {Object} 【必选参数】二维地理坐标点对象，包含x,y坐标值属性的对象。</br>
     * tolerance - {Double} 【可选参数】容限值。</br>
     * isIgnoreGap - {Double}  【可选参数】是否忽略子对象之间的距离。默认为false，即不忽略子对象之间的距离。</br>
     *
     */

    /**
     * APIProperty: tolerance
     * {Double} 【可选参数】容限值。
     */


    /**
     * APIProperty: sourceRoute
     * {SuperMap.Route} 【必选参数】路由对象。该对象可以是用户自己生
     *      成或在数据源中查询得到的符合标准的路由对象；
     */
    function RouteCalculateMeasureParameters(options) {
        _classCallCheck(this, RouteCalculateMeasureParameters);

        this.sourceRoute = null;
        this.point = null;
        this.tolerance = null;
        this.isIgnoreGap = false;
        this.CLASS_NAME = "SuperMap.RouteCalculateMeasureParameters";

        if (!options) {
            return this;
        }
        var routeFromClient = options.sourceRoute;
        var routeHandle = {};
        if (routeFromClient && routeFromClient instanceof _SuperMap2.default.Geometry && routeFromClient.components) {
            routeHandle.type = routeFromClient.type;
            routeHandle.parts = routeFromClient.parts;
            var parts = [];
            for (var i = 0, len = routeFromClient.components.length; i < len; i++) {
                parts = parts.concat(routeFromClient.components[i].components);
            }
            routeHandle.points = parts;
            options.sourceRoute = routeHandle;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: isIgnoreGap
     * {Boolean} 【可选参数】是否忽略子对象之间的距离。默认为false，即不忽略子
     *      对象之间的距离。
     */


    /**
     * APIProperty: point
     * {Object} 【必选参数】二维地理坐标点对象，包含x,y坐标值属性的对象。
     */


    _createClass(RouteCalculateMeasureParameters, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.sourceRoute = null;
            me.point = null;
            if (me.tolerance) {
                me.tolerance = null;
            }
            if (me.isIgnoreGap) {
                me.isIgnoreGap = false;
            }
        }
    }]);

    return RouteCalculateMeasureParameters;
}();

exports.default = RouteCalculateMeasureParameters;


_SuperMap2.default.RouteCalculateMeasureParameters = RouteCalculateMeasureParameters;

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _SpatialAnalystBase2 = __webpack_require__(6);

var _SpatialAnalystBase3 = _interopRequireDefault(_SpatialAnalystBase2);

var _RouteCalculateMeasureParameters = __webpack_require__(204);

var _RouteCalculateMeasureParameters2 = _interopRequireDefault(_RouteCalculateMeasureParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.RouteCalculateMeasureService
 * @constructs SuperMap.RouteCalculateMeasureService
 * @classdesc
 * 该类负责将客户设置的计算指定点的M值参数传递给服务端，并接收服务端返回的
 *      指定点的M值。通过该类支持的事件的监听函数参数获取
 * @extends {SuperMap.SpatialAnalystBase}
 * @api
 * @example 实例化该类如下例所示：
 * (start code)
 * var parameters = new SuperMap.RouteCalculateMeasureParameters({
     *     "sourceRoute":{
     *         "type":"LINEM",
     *        "parts":[4],
     *         "points":[
     *             {
     *                 "measure":0,
     *                 "y":-6674.466867067764,
     *                 "x":3817.3527876130133
     *             },
     *             {
     *                 "measure":199.57954019411724,
     *                 "y":-6670.830929417594,
     *                 "x":3617.806369901496
     *             },
     *             {
     *                 "measure":609.3656478634477,
     *                "y":-6877.837541432356,
     *                 "x":3264.1498746678444
     *             },
     *             {
     *                 "measure":936.0174126282958,
     *                 "y":-7038.687780615184,
     *                 "x":2979.846206068903
     *             }
     *         ]
     *     },
     *     "tolerance":1,
     *     "point":{
     *         "x":3330.7754269417,
     *         "y":-6838.8394457216
     *     },
     *     "isIgnoreGap":false
     * });
 *
 * var routeCalculateMeasureService = new SuperMap.RouteCalculateMeasureService(spatialAnalystURL, {
     *     eventListeners:{
     *         processCompleted:calculateCompleted,
     *         processFailed:calculateFailded
     *     }
     * );
     * routeCalculateMeasureService.processAsync(parameters);
     *
     *  //执行
     * function calculateCompleted(){todo}
     * function calculateFailded(){todo}
     * (end)
     *
     */
var RouteCalculateMeasureService = function (_SpatialAnalystBase) {
    _inherits(RouteCalculateMeasureService, _SpatialAnalystBase);

    /**
     * @method SuperMap.RouteCalculateMeasureService.initialize
     * @param options - {Object} 参数。
     * @param url - {String} 服务的访问地址。如 http://localhost:8090/iserver/services/spatialanalyst-changchun/restjsr/spatialanalyst
     * Allowed options properties:</br>
     * eventListeners - {Object} 需要被注册的监听器对象。
     */
    function RouteCalculateMeasureService(url, options) {
        _classCallCheck(this, RouteCalculateMeasureService);

        var _this = _possibleConstructorReturn(this, (RouteCalculateMeasureService.__proto__ || Object.getPrototypeOf(RouteCalculateMeasureService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.RouteCalculateMeasureService";
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源,将引用的资源属性置空。
     */


    _createClass(RouteCalculateMeasureService, [{
        key: 'destroy',
        value: function destroy() {
            _get(RouteCalculateMeasureService.prototype.__proto__ || Object.getPrototypeOf(RouteCalculateMeasureService.prototype), 'destroy', this).call(this);
        }

        /**
         * @method SuperMap.RouteCalculateMeasureService.processAsync
         * @description 负责将客户端的基于路由对象计算指定点M值操作的参数传递到服务端。
         * @param params - {SuperMap.RouteCalculateMeasureParameters}
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                jsonParameters;

            jsonParameters = me.getJsonParameters(params);

            me.request({
                method: "POST",
                data: jsonParameters,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }

        /**
         * @method SuperMap.RouteCalculateMeasureService.getJsonParameters
         * @description 将参数转化为 JSON 字符串。
         * @param params - {SuperMap.RouteCalculateMeasureParameters}
         * @return {Object} 转化后的JSON字符串。
         */

    }, {
        key: 'getJsonParameters',
        value: function getJsonParameters(params) {
            var jsonParameters,
                jsonStr = "geometry/calculatemeasure",
                me = this,
                end;
            end = me.url.substr(me.url.length - 1, 1);
            if (me.isInTheSameDomain) {
                me.url += end === "/" ? jsonStr + ".json" : "/" + jsonStr + ".json";
            } else {
                me.url += end === "/" ? jsonStr + ".jsonp" : "/" + jsonStr + ".jsonp";
            }

            me.url += "?returnContent=true";
            jsonParameters = _SuperMap2.default.Util.toJSON(params);
            return jsonParameters;
        }
    }]);

    return RouteCalculateMeasureService;
}(_SpatialAnalystBase3.default);

exports.default = RouteCalculateMeasureService;


_SuperMap2.default.RouteCalculateMeasureService = RouteCalculateMeasureService;

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _Route = __webpack_require__(39);

var _Route2 = _interopRequireDefault(_Route);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.RouteLocatorParameters
 * @constructs SuperMap.RouteLocatorParameters
 * @classdesc
 * 路由对象定位空间对象的参数类。
 * 参数有两种方式，分别为Geometry和Dataset两种，前者需要指定sourceRoute对象作为参数，后者需要dataset，routeIDField，routeID三个参数
 * 如果用户两种参数均设置，优先选择Dataset方式
 * @api
 */
var RouteLocatorParameters = function () {

  /**
   * @method SuperMap.RouteLocatorParameters.initialize
   * @param options - {Object} 参数。
   * Allowed options properties:</br>
   * sourceRoute -  {SuperMap.Route} 【必选参数】路由对象。</br>
   * type -  {String} 【必选参数】类型：点 or 线。</br>
   * measure - {Double} 【必选参数】定位点的M值。只当路由对象定位点时有意义。</br>
   * offset - {Double} 定位点偏移量。只当路由对象定位点时有意义，默认为0。</br>
   * isIgnoreGap - {Boolean} 是否忽略子对象之间的距离。默认为false，即不忽略子对象之间的距离。</br>
   * startMeasure - {Double} 定位线的起始M值。只当路由对象定位线时有意义。</br>
   * endMeasure -  {Double} 定位线的终止M值。只当路由对象定位线时有意义。</br>
   */


  /**
   * APIProperty:startMeasure
   * {Double} 定位线的起始M值。只当路由对象定位线时有意义。
   */

  /**
   * APIProperty：offset
   * {Double} 定位点偏移量。只当路由对象定位点时有意义，默认为0。
   */

  /**
   * APIProperty:type
   * {String} 【必选参数】类型：点 or 线。
   *
   * 可选值为:
   * LINE :根据起始 M 值及终止 M 值定位线对象。
   *POINT : 根据 M 值定位点对象。
   */

  /**
   * APIProperty：routeIDField
   * {String}  路由对象所在的字段名称。
   *
   */


  /**
   * APIProperty:sourceRoute
   * {SuperMap.Route} 路由对象。
   */
  function RouteLocatorParameters(options) {
    _classCallCheck(this, RouteLocatorParameters);

    this.sourceRoute = null;
    this.dataset = null;
    this.routeIDField = null;
    this.routeID = null;
    this.type = null;
    this.measure = null;
    this.offset = 0;
    this.isIgnoreGap = false;
    this.startMeasure = null;
    this.endMeasure = null;
    this.CLASS_NAME = "SuperMap.RouteLocatorParameters";

    if (!options) {
      return this;
    }
    var routeFromClient = options.sourceRoute;
    var routeHandle = {};
    if (routeFromClient && routeFromClient instanceof _SuperMap2.default.Geometry && routeFromClient.components) {
      routeHandle.type = routeFromClient.type;
      routeHandle.parts = routeFromClient.parts;
      var parts = [];
      for (var i = 0, len = routeFromClient.components.length; i < len; i++) {
        parts = parts.concat(routeFromClient.components[i].components);
      }
      routeHandle.points = parts;
      options.sourceRoute = routeHandle;
    }
    _SuperMap2.default.Util.extend(this, options);
  }

  /*
   * APIMethod: destroy
   * 释放资源，将引用资源的属性置空。
   */

  /**
   * APIProperty:endMeasure
   * {Double} 定位线的终止M值。只当路由对象定位线时有意义。
   */


  /**
   * APIProperty:isIgnoreGap
   * {Boolean} 是否忽略子对象之间的距离。默认为false，即不忽略子对象之间的距离。
   */

  /**
   * APIProperty:measure
   * {Double} 【必选参数】定位点的M值。只当路由对象定位点时有意义。
   */

  /**
   * APIProperty:routeID
   * {Interger}  路由对象标识 。
   *
   */

  /**
   * APIProperty: dataset
   * {String} 要用来做缓冲区分析的数据源中数据集的名称。该名称用形如"数据集名称@数据源别名"形式来表示。
   */


  _createClass(RouteLocatorParameters, [{
    key: 'destroy',
    value: function destroy() {
      var me = this;
      me.sourceRoute = null;
      me.type = null;
      me.measure = null;
      me.offset = 0;
      me.isIgnoreGap = false;
      me.startMeasure = null;
      me.endMeasure = null;
      me.dataset = null;
      me.routeID = null;
      me.routeIDField = null;
    }
  }]);

  return RouteLocatorParameters;
}();

exports.default = RouteLocatorParameters;


_SuperMap2.default.RouteLocatorParameters = RouteLocatorParameters;

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _SpatialAnalystBase2 = __webpack_require__(6);

var _SpatialAnalystBase3 = _interopRequireDefault(_SpatialAnalystBase2);

var _RouteLocatorParameters = __webpack_require__(206);

var _RouteLocatorParameters2 = _interopRequireDefault(_RouteLocatorParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.RouteLocatorService
 * @constructs SuperMap.RouteLocatorService
 * @classdesc
 * 路由对象定位空间对象的服务类。
 * @extends {SuperMap.SpatialAnalystBase}
 * @api
 * @example 实例化该类如下例所示：
 * (start code)
 * var routeLocatorParameters_point = new SuperMap.RouteLocatorParameters({
     *   "sourceRoute":{
     *       "type":"LINEM",
     *       "parts":[4],
     *       "points":[
     *           {
     *               "measure":0,
     *               "y":-6674.466867067764,
     *               "x":3817.3527876130133
     *           },
     *           {
     *               "measure":199.57954019411724,
     *               "y":-6670.830929417594,
     *               "x":3617.806369901496
     *          },
     *           {
     *               "measure":609.3656478634477,
     *               "y":-6877.837541432356,
     *               "x":3264.1498746678444
     *           },
     *           {
     *               "measure":936.0174126282958,
     *               "y":-7038.687780615184,
     *               "x":2979.846206068903
     *           }
     *       ]
     *   },
     *   "type":"POINT",
     *   "measure":10,
     *   "offset":3,
     *   "isIgnoreGap":true
     * });
 * var routeLocatorService = new SuperMap.RouteLocatorService(spatialAnalystURL, {
     *     eventListeners:{
     *         processCompleted:routeLocatorCompleted,
     *         processFailed:routeLocatorFailded
     *     }
     * );
     * routeLocatorService.processAsync(routeLocatorParameters_point);
     *
     *  //执行
     * function routeLocatorCompleted(){todo}
     * function routeLocatorFailded(){todo}
     * (end)
     *
     */
var RouteLocatorService = function (_SpatialAnalystBase) {
    _inherits(RouteLocatorService, _SpatialAnalystBase);

    /**
     * @method SuperMap.RouteLocatorService.initialize
     * @param options - {Object} 参数。
     * @param url -{String} 服务的访问地址。如 http://localhost:8090/iserver/services/spatialanalyst-changchun/restjsr/spatialanalyst 。
     * Allowed options properties:</br>
     * eventListeners - {Object} 需要被注册的监听器对象。
     *
     */
    function RouteLocatorService(url, options) {
        _classCallCheck(this, RouteLocatorService);

        var _this = _possibleConstructorReturn(this, (RouteLocatorService.__proto__ || Object.getPrototypeOf(RouteLocatorService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.RouteLocatorService";
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源,将引用的资源属性置空。
     */


    _createClass(RouteLocatorService, [{
        key: 'destroy',
        value: function destroy() {
            _get(RouteLocatorService.prototype.__proto__ || Object.getPrototypeOf(RouteLocatorService.prototype), 'destroy', this).call(this);
        }

        /**
         * @method SuperMap.RouteLocatorService.processAsync
         * @description 负责将客户端的基于路由对象计算指定点M值操作的参数传递到服务端。
         * @param params - {SuperMap.RouteLocatorParameters}
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                jsonParameters;

            jsonParameters = me.getJsonParameters(params);

            me.request({
                method: "POST",
                data: jsonParameters,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }

        /**
         * @method SuperMap.RouteLocatorService.processAsync
         * @description 将参数转化为 JSON 字符串。
         * @param params - {SuperMap.RouteLocatorParameters}
         * return {Object} 转化后的JSON字符串。
         */

    }, {
        key: 'getJsonParameters',
        value: function getJsonParameters(params) {
            var jsonParameters,
                jsonStr = "geometry/routelocator",
                me = this,
                end;
            end = me.url.substr(me.url.length - 1, 1);

            if (params.dataset) {
                jsonStr = "datasets/" + params.dataset + "/linearreferencing/routelocator";
                params.sourceRoute = null;
            }
            if (me.isInTheSameDomain) {
                me.url += end === "/" ? jsonStr + ".json" : "/" + jsonStr + ".json";
            } else {
                me.url += end === "/" ? jsonStr + ".jsonp" : "/" + jsonStr + ".jsonp";
            }

            me.url += "?returnContent=true";
            jsonParameters = _SuperMap2.default.Util.toJSON(params);
            return jsonParameters;
        }
    }]);

    return RouteLocatorService;
}(_SpatialAnalystBase3.default);

exports.default = RouteLocatorService;


_SuperMap2.default.RouteLocatorService = RouteLocatorService;

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ThemeLabel = __webpack_require__(32);

var _ThemeLabel2 = _interopRequireDefault(_ThemeLabel);

var _ThemeUnique = __webpack_require__(45);

var _ThemeUnique2 = _interopRequireDefault(_ThemeUnique);

var _ThemeGraph = __webpack_require__(43);

var _ThemeGraph2 = _interopRequireDefault(_ThemeGraph);

var _ThemeDotDensity = __webpack_require__(41);

var _ThemeDotDensity2 = _interopRequireDefault(_ThemeDotDensity);

var _ThemeGraduatedSymbol = __webpack_require__(42);

var _ThemeGraduatedSymbol2 = _interopRequireDefault(_ThemeGraduatedSymbol);

var _ThemeRange = __webpack_require__(44);

var _ThemeRange2 = _interopRequireDefault(_ThemeRange);

var _UGCSubLayer2 = __webpack_require__(27);

var _UGCSubLayer3 = _interopRequireDefault(_UGCSubLayer2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Class: SuperMap.ServerTheme
 * UGC 专题图图层类。
 *
 * Inherits from:
 *  - <SuperMap.UGCSubLayer>
 */
var ServerTheme = function (_UGCSubLayer) {
    _inherits(ServerTheme, _UGCSubLayer);

    /**
     * @class SuperMap.ServerTheme UGC 专题图图层类。
     * @constructs SuperMap.ServerTheme
     * UGC 专题图图层类类构造函数。
     * @augments SuperMap.UGCSubLayer
     * Parameters:
     * @param theme - {SuperMap.Theme} 专题图对象。
     * @param themeElementPosition - {SuperMap.LonLat} 专题图元素位置。
     */


    /**
     * @member APIProperty: theme
     * {SuperMap.Theme} 专题图对象。
     */
    function ServerTheme(options) {
        _classCallCheck(this, ServerTheme);

        options = options || {};

        var _this = _possibleConstructorReturn(this, (ServerTheme.__proto__ || Object.getPrototypeOf(ServerTheme)).call(this, options));

        _this.theme = null;
        _this.themeElementPosition = null;
        _this.CLASS_NAME = "SuperMap.ServerTheme";
        return _this;
    }

    /**
     * @inheritdoc
     */


    /**
     * @member APIProperty: themeElementPosition
     * {SuperMap.LonLat} 专题图元素位置。
     */


    _createClass(ServerTheme, [{
        key: 'destroy',
        value: function destroy() {
            _get(ServerTheme.prototype.__proto__ || Object.getPrototypeOf(ServerTheme.prototype), 'destroy', this).call(this);
            _SuperMap2.default.Util.reset(this);
        }

        /*
         * Method: fromJson
         * 将服务端JSON对象转换成当前客户端对象
         * Parameters:
         * jsonObject - {Object} 要转换的 JSON 对象。
         */

    }, {
        key: 'fromJson',
        value: function fromJson(jsonObject) {
            _get(ServerTheme.prototype.__proto__ || Object.getPrototypeOf(ServerTheme.prototype), 'fromJson', this).call(this, jsonObject);
            var themeObj = this.theme;
            var themeT = themeObj && themeObj.type;
            switch (themeT) {
                case 'LABEL':
                    this.theme = _ThemeLabel2.default.fromObj(themeObj);
                    break;
                case 'UNIQUE':
                    this.theme = _ThemeUnique2.default.fromObj(themeObj);
                    break;
                case 'GRAPH':
                    this.theme = _ThemeGraph2.default.fromObj(themeObj);
                    break;
                case 'DOTDENSITY':
                    this.theme = _ThemeDotDensity2.default.fromObj(themeObj);
                    break;
                case 'GRADUATEDSYMBOL':
                    this.theme = _ThemeGraduatedSymbol2.default.fromObj(themeObj);
                    break;
                case 'RANGE':
                    this.theme = _ThemeRange2.default.fromObj(themeObj);
                    break;
                default:
                    break;
            }
            if (this.themeElementPosition) {
                //待测试
                this.themeElementPosition = new _SuperMap2.default.LonLat(this.themeElementPosition.x, this.themeElementPosition.y);
            }
        }

        /**
         * @function APIMethod: toServerJSONObject
         * 转换成对应的 JSON 格式对象。
         */

    }, {
        key: 'toServerJSONObject',
        value: function toServerJSONObject() {
            //普通属性直接赋值
            var jsonObject = _get(ServerTheme.prototype.__proto__ || Object.getPrototypeOf(ServerTheme.prototype), 'toServerJSONObject', this).call(this);

            if (jsonObject.themeElementPosition) {
                if (jsonObject.themeElementPosition.toServerJSONObject) {
                    jsonObject.themeElementPosition = jsonObject.themeElementPosition.toServerJSONObject();
                }
            }
            if (jsonObject.theme) {
                if (jsonObject.theme.toServerJSONObject) {
                    jsonObject.theme = jsonObject.theme.toServerJSONObject();
                }
            }
            return jsonObject;
        }
    }]);

    return ServerTheme;
}(_UGCSubLayer3.default);

exports.default = ServerTheme;


_SuperMap2.default.ServerTheme = ServerTheme;

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.SetLayerInfoParameters
 * @description 设置图层信息参数类.
 * @param options -{Object} 可选参数。如：<br>
 *         tempLayerID -{String} 临时图层的资源ID。<br>
 *         layerName -{String} 图层资源名。<br>
 *         resourceID -{String} 资源ID。<br>
 *         layerInfo -{String} 要更新的图层信息。
 */
var SetLayerInfoParameters = function () {

    /**
     * APIProperty: resourceID
     * @member SuperMap.SetLayerInfoParameters.prototype.resourceID -{String}
     * @description 资源ID，
     */


    /**
     * APIProperty: tempLayerID
     * @member SuperMap.SetLayerInfoParameters.prototype.tempLayerID -{String}
     * @description 临时图层的资源ID
     */
    function SetLayerInfoParameters(options) {
        _classCallCheck(this, SetLayerInfoParameters);

        this.tempLayerID = null;
        this.layerName = null;
        this.resourceID = null;
        this.layerInfo = null;
        this.CLASS_NAME = "SuperMap.SetLayerInfoParameters";

        options = options || {};
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: layerInfo
     * @member SuperMap.SetLayerInfoParameters.prototype.layerInfo -{String}
     * @description 要更新的图层信息
     */


    /**
     * APIProperty: layerName
     * @member SuperMap.SetLayerInfoParameters.prototype.layerName -{String}
     * @description 图层资源名
     */


    _createClass(SetLayerInfoParameters, [{
        key: "destroy",
        value: function destroy() {
            var me = this;
            me.tempLayerID = null;
            me.layerName = null;
            me.resourceID = null;
            me.layerInfo = null;
        }
    }]);

    return SetLayerInfoParameters;
}();

exports.default = SetLayerInfoParameters;


_SuperMap2.default.SetLayerInfoParameters = SetLayerInfoParameters;

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _SetLayerInfoParameters = __webpack_require__(209);

var _SetLayerInfoParameters2 = _interopRequireDefault(_SetLayerInfoParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.SetLayerInfoService
 * @description 设置图层信息服务类。可以实现临时图层中子图层的修改
 * 该类负责将图层设置参数传递到服务端，并获取服务端返回的结果信息。
 * @augments SuperMap.CommonServiceBase
 * @param url - {String} 与客户端交互的地图服务地址。请求地图服务,URL 应为：<br>
 *               http://{服务器地址}:{服务端口号}/iserver/services/{地图服务名}/rest/maps/{地图名}/tempLayersSet/{tempLayerID}/Rivers@World@@World"；
 * @param options - {Object} 交互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var SetLayerInfoService = function (_CommonServiceBase) {
    _inherits(SetLayerInfoService, _CommonServiceBase);

    /**
     * @function SuperMap.SetLayerInfoService.initialize
     * @description 设置图层信息服务类构造函数。可以实现临时图层中子图层的修改。
     * @param url - {String} 与客户端交互的地图服务地址。请求地图服务,URL 应为：<br>
     *               http://{服务器地址}:{服务端口号}/iserver/services/{地图服务名}/rest/maps/{地图名}/tempLayersSet/{tempLayerID}/Rivers@World@@World"；
     * @param options - {Object} 交互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */
    function SetLayerInfoService(url, options) {
        _classCallCheck(this, SetLayerInfoService);

        var _this = _possibleConstructorReturn(this, (SetLayerInfoService.__proto__ || Object.getPrototypeOf(SetLayerInfoService)).call(this, url, options));

        _this.resourceID = null;
        _this.CLASS_NAME = "SuperMap.SetLayerInfoService";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        _this.resourceID = options.resourceID;
        return _this;
    }

    /**
     * @inheritDoc
     */


    /**
     * @member SuperMap.SetLayerInfoService.resourceID - {String}
     * @description 图层资源ID，临时图层的资源ID标记。
     */


    _createClass(SetLayerInfoService, [{
        key: 'destroy',
        value: function destroy() {
            _get(SetLayerInfoService.prototype.__proto__ || Object.getPrototypeOf(SetLayerInfoService.prototype), 'destroy', this).call(this);
            _SuperMap2.default.Util.reset(this);
        }

        /**
         * @function SuperMap.SetLayerInfoService.processAsync
         * @description 负责将客户端的更新参数传递到服务端。
         * @param params - {Object} 修改后的图层资源信息。<br>
         *        该参数可以使用获取图层信息服务 <SuperMap.GetLayerInfoService>.result.subLayers.layers[i]返回图层信息，然后对其属性进行修改来获取。
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            var me = this;

            if (!params) {
                return;
            }
            me.url += me.isInTheSameDomain ? ".json" : ".jsonp";
            var jsonParamsStr = _SuperMap2.default.Util.toJSON(params);
            me.request({
                method: "PUT",
                data: jsonParamsStr,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return SetLayerInfoService;
}(_CommonServiceBase3.default);

exports.default = SetLayerInfoService;


_SuperMap2.default.SetLayerInfoService = SetLayerInfoService;

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _LayerStatus = __webpack_require__(182);

var _LayerStatus2 = _interopRequireDefault(_LayerStatus);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.SetLayerStatusParameters
 * @description 子图层显示控制参数类,该类存储了各子图层是否可见的状态。<br>
 *               注意在 SuperMap iClient 系列产品中所说的图层与 SuperMap Deskpro 的地图对应，子图层与 SuperMap Deskpro 的图层对应。
 * @param options - {Object} 可选参数。如：<br>
 *        layerStatusList - {Array<SuperMap.LayerStatus>} 获取或设置图层可见状态（SuperMap.LayerStatus）集合，必设属性。
 *                         集合中的每个 SuperMap.LayerStatus 对象代表一个子图层的可视状态。<br>
 *        holdTime - {String} 获取或设置资源在服务端保存的时间。<br>
 *        resourceID - {String} 获取或设置资源服务 ID。
 */
var SetLayerStatusParameters = function () {

    /*
     * Constructor: SuperMap.SetLayerStatusParameters
     *子图层显示控制参数类的构造函数
     */


    /**
     * @member SuperMap.SetLayerStatusParameters.prototype.holdTime -{Number}
     * @description 获取或设置资源在服务端保存的时间。 默认为 15 分钟。
     */
    function SetLayerStatusParameters(options) {
        _classCallCheck(this, SetLayerStatusParameters);

        this.layerStatusList = null;
        this.holdTime = 15;
        this.resourceID = null;
        this.CLASS_NAME = "SuperMap.SetLayerStatusParameters";

        var me = this;
        me.layerStatusList = [];
        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * @member SuperMap.SetLayerStatusParameters.prototype.resourceID -{String}
     * @description 获取或设置资源服务 ID 。非必设参数，如果设置该参数则会在指定的 TempLayer 进行图层的显示控制；<br>
     *                如果不设置该参数，则会首先创建一个 TempLayer ，然后在新创建的 TempLayer 进行图层的显示控制。
     */


    /**
     * @member SuperMap.SetLayerStatusParameters.prototype.layerStatusList -{Array<SuperMap.LayerStatus>}
     * @description 获取或设置图层可见状态（SuperMap.LayerStatus）集合，必设属性。<br>
     *                集合中的每个 SuperMap.LayerStatus 对象代表一个子图层的可视状态。
     */


    _createClass(SetLayerStatusParameters, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.layerStatusList = null;
            me.holdTime = null;
            me.resourceID = null;
        }

        /**
         * @function SuperMap.SetLayerStatusParameters.prototype.toJSON
         * @description 生成json。
         */

    }, {
        key: 'toJSON',
        value: function toJSON() {
            var json = '{';
            json += '"layers":[';
            var v = [];
            for (var i = 0, len = this.layerStatusList.length; i < len; i++) {
                v.push(this.layerStatusList[i].toJSON());
            }

            json += v;
            json += ']';
            json += '}';

            return json;
        }
    }]);

    return SetLayerStatusParameters;
}();

exports.default = SetLayerStatusParameters;


_SuperMap2.default.SetLayerStatusParameters = SetLayerStatusParameters;

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _SetLayerStatusParameters = __webpack_require__(211);

var _SetLayerStatusParameters2 = _interopRequireDefault(_SetLayerStatusParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.SetLayerStatusService
 * @description  子图层显示控制服务类。该类负责将子图层显示控制参数传递到服务端，并获取服务端返回的图层显示状态。<br>
 *                用户获取服务端返回的各子图层显示状态有两种方式：<br>
 *                一种是通过监听 SetLayerEvent.PROCESS_COMPLETE 事件；<br>
 *                一种是使用 AsyncResponder 类实现异步处理。
 * @augments SuperMap.CommonServiceBase
 * @param url - {String} 地图服务访问地址。请求地图服务,URL 应为：<br>
 *               http://{服务器地址}:{服务端口号}/iserver/services/{地图服务名}/rest/maps/{地图名}；
 * @param options - {Object} 交互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var SetLayerStatusService = function (_CommonServiceBase) {
    _inherits(SetLayerStatusService, _CommonServiceBase);

    /**
     * @function  SuperMap.SetLayerStatusService.initialize
     * @description 子图层显示控制服务类构造函数。
     * @param url - {String} 地图服务访问地址。请求地图服务,URL 应为：<br>
     *               http://{服务器地址}:{服务端口号}/iserver/services/{地图服务名}/rest/maps/{地图名}；
     * @param options - {Object} 交互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */
    function SetLayerStatusService(url, options) {
        _classCallCheck(this, SetLayerStatusService);

        var _this = _possibleConstructorReturn(this, (SetLayerStatusService.__proto__ || Object.getPrototypeOf(SetLayerStatusService)).call(this, url, options));

        _this.lastparams = null;
        _this.mapUrl = null;
        _this.CLASS_NAME = "SuperMap.SetLayerStatusService";

        var me = _this;
        if (options) {
            _SuperMap2.default.Util.extend(me, options);
        }
        me.mapUrl = url;
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(SetLayerStatusService, [{
        key: 'destroy',
        value: function destroy() {
            _get(SetLayerStatusService.prototype.__proto__ || Object.getPrototypeOf(SetLayerStatusService.prototype), 'destroy', this).call(this);
            _SuperMap2.default.Util.reset(this);
        }

        /**
         * @function SuperMap.SetLayerStatusService. processAsync
         * @description 负责将客户端的更新参数传递到服务端。
         * @param params - {Object} 修改后的图层资源信息。该参数可以使用获取图层信息服务 <SuperMap.SetLayerStatusParameters>
         *         返回图层信息，然后对其属性进行修改来获取。
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            var subLayers = [],
                me = this,
                method = "POST";
            if (!params) {
                return;
            }

            me.url = me.mapUrl;
            var end = me.url.substr(me.url.length - 1, 1);
            me.url += end === "/" ? '' : '/';

            if (params.resourceID == null) {
                me.url += "tempLayersSet";
                me.url += me.isInTheSameDomain ? ".json?" : ".jsonp?";

                me.lastparams = params;

                me.request({
                    method: method,
                    scope: me,
                    success: me.createTempLayerComplete,
                    failure: me.serviceProcessFailed
                });
            } else {
                me.url += "tempLayersSet/" + params.resourceID;
                me.url += me.isInTheSameDomain ? ".json?" : ".jsonp?";

                me.url += "elementRemain=true&reference=" + params.resourceID + "&holdTime=" + params.holdTime.toString();

                var jsonParameters = '[{';

                jsonParameters += '"type":"UGC",';
                if (params.layerStatusList != null && params.layerStatusList.length > 0) {
                    jsonParameters += '"subLayers":' + params.toJSON();
                }
                jsonParameters += ',"visible":' + true + ',';
                jsonParameters += '"name":"' + this.getMapName(this.mapUrl) + '"';

                jsonParameters += '}]';

                me.request({
                    method: "PUT",
                    data: jsonParameters,
                    scope: me,
                    success: me.serviceProcessCompleted,
                    failure: me.serviceProcessFailed
                });
            }
        }

        /*
         * Method: createTempLayerComplete
         * 设置完成，执行此方法。
         *
         * Parameters:
         * result - {Object} 服务器返回的结果对象，记录设置操作是否成功。
         */

    }, {
        key: 'createTempLayerComplete',
        value: function createTempLayerComplete(result) {
            var me = this;
            result = _SuperMap2.default.Util.transformResult(result);
            if (result.succeed) {
                me.lastparams.resourceID = result.newResourceID;
            }

            me.processAsync(me.lastparams);
        }
    }, {
        key: 'getMapName',
        value: function getMapName(url) {
            var mapUrl = url;
            if (mapUrl.charAt(mapUrl.length - 1) === "/") {
                mapUrl = mapUrl.substr(0, mapUrl.length - 1);
            }
            var index = mapUrl.lastIndexOf("/");
            var mapName = mapUrl.substring(index + 1, mapUrl.length);
            return mapName;
        }

        /*
         * Method: setLayerCompleted
         * 设置完成，执行此方法。
         *
         * Parameters:
         * result - {Object} 服务器返回的结果对象，记录设置操作是否成功。
         */

    }, {
        key: 'serviceProcessCompleted',
        value: function serviceProcessCompleted(result) {
            var me = this;
            result = _SuperMap2.default.Util.transformResult(result);
            if (result != null && me.lastparams != null) {
                result.newResourceID = me.lastparams.resourceID;
            }
            me.events.triggerEvent("processCompleted", { result: result });
        }
    }]);

    return SetLayerStatusService;
}(_CommonServiceBase3.default);

exports.default = SetLayerStatusService;


_SuperMap2.default.SetLayerStatusService = SetLayerStatusService;

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.SetLayersInfoParameters
 * @description 设置图层信息参数类
 * @param options -{Object} 可选参数。如：<br>
 *         isTempLayers -{Boolean} 是否是临时图层。<br>
 *         resourceID -{String} 资源ID。<br>
 *        layerInfo -{String} 要更新的图层信息。
 */
var SetLayersInfoParameters = function () {
    /**
     * APIProperty: resourceID
     * @member SuperMap.SetLayersInfoParameters.prototype.resourceID -{String}
     * @description 资源ID，
     */
    function SetLayersInfoParameters(options) {
        _classCallCheck(this, SetLayersInfoParameters);

        this.isTempLayers = null;
        this.resourceID = null;
        this.layerInfo = null;
        this.CLASS_NAME = "SuperMap.SetLayersInfoParameters";

        options = options || {};
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: layerInfo
     * @member SuperMap.SetLayersInfoParameters.prototype.layerInfo -{String}
     * @description 要更新的图层信息。
     */


    /**
     * APIProperty: isTempLayers
     * @member SuperMap.SetLayersInfoParameters.prototype.isTempLayers -{Boolean}
     * @description 是否是临时图层。
     */


    _createClass(SetLayersInfoParameters, [{
        key: "destroy",
        value: function destroy() {
            var me = this;
            me.isTempLayers = null;
            me.resourceID = null;
            me.layerInfo = null;
        }
    }]);

    return SetLayersInfoParameters;
}();

exports.default = SetLayersInfoParameters;


_SuperMap2.default.SetLayersInfoParameters = SetLayersInfoParameters;

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _SetLayersInfoParameters = __webpack_require__(213);

var _SetLayersInfoParameters2 = _interopRequireDefault(_SetLayersInfoParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.SetLayersInfoService
 * @description  设置图层信息服务类。可以实现创建新的临时图层和对现有临时图层的修改，<br>
 *                当 isTempLayers 为 false的时候执行创建临时图层。当 isTempLayers 为 ture 并且临时图层资源 resourceID 被设置有效时执行对临时图层的编辑。<br>
 *                该类负责将图层设置参数传递到服务端，并获取服务端返回的结果信息。
 * @augments SuperMap.CommonServiceBase
 * @param url - {String} 与客户端交互的地图服务地址。请求地图服务,URL 应为：<br>
 *              http://{服务器地址}:{服务端口号}/iserver/services/{地图服务名}/rest/maps/{地图名}；
 * @param options - {Object} 交互服务时所需可选参数。如：<br>
 *         resourceID - {String} 图层资源ID，临时图层的资源ID标记。<br>
 *         isTempLayers - {Boolean} 当前url对应的图层是否是临时图层。<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var SetLayersInfoService = function (_CommonServiceBase) {
    _inherits(SetLayersInfoService, _CommonServiceBase);

    /**
     * @function SuperMap.SetLayersInfoService.initialize
     * @description 设置图层信息服务类构造函数。可以实现创建新的临时图层和对现有临时图层的修改。
     * @param url - {String} 与客户端交互的地图服务地址。请求地图服务,URL 应为：<br>
     *              http://{服务器地址}:{服务端口号}/iserver/services/{地图服务名}/rest/maps/{地图名}；
     * @param options - {Object} 交互服务时所需可选参数。如：<br>
     *         resourceID - {String} 图层资源ID，临时图层的资源ID标记。<br>
     *         isTempLayers - {Boolean} 当前url对应的图层是否是临时图层。<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */


    /**
     * @member SuperMap.SetLayersInfoService.resourceID - {String}
     * @description 图层资源ID，临时图层的资源ID标记。
     */
    function SetLayersInfoService(url, options) {
        _classCallCheck(this, SetLayersInfoService);

        var _this = _possibleConstructorReturn(this, (SetLayersInfoService.__proto__ || Object.getPrototypeOf(SetLayersInfoService)).call(this, url, options));

        _this.resourceID = null;
        _this.isTempLayers = false;
        _this.CLASS_NAME = "SuperMap.SetLayersInfoService";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        _this.resourceID = options.resourceID;
        _this.isTempLayers = options.isTempLayers;
        return _this;
    }

    /**
     * @inheritDoc
     */


    /**
     * @function SuperMap.SetLayersInfoService.isTempLayers -{Boolean}
     * @description 当前url对应的图层是否是临时图层。
     */


    _createClass(SetLayersInfoService, [{
        key: 'destroy',
        value: function destroy() {
            _get(SetLayersInfoService.prototype.__proto__ || Object.getPrototypeOf(SetLayersInfoService.prototype), 'destroy', this).call(this);
            _SuperMap2.default.Util.reset(this);
        }

        /**
         * @function SuperMap.SetLayersInfoService.processAsync
         * @description 负责将客户端的更新参数传递到服务端。
         * @param  params - {Object} 修改后的图层资源信息。该参数可以使用获取图层信息服务<SuperMap.GetLayerInfoService>.result.subLayers.layers
         *            返回图层信息，然后对其属性进行修改来获取。
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            var jsonParams,
                subLayers = [],
                me = this,
                method = "",
                end;
            if (!params) {
                return;
            }
            end = me.url.substr(me.url.length - 1, 1);
            me.url += end === "/" ? '' : '/';
            //创建临时图层和设置修改临时图层信息对应不同的资源URL
            if (me.isTempLayers) {
                me.url += "tempLayersSet/" + me.resourceID;
                method = "PUT";
            } else {
                me.url += "tempLayersSet";
                method = "POST";
            }
            me.url += me.isInTheSameDomain ? ".json?" : ".jsonp?";
            var layers = params.subLayers.layers,
                len = layers.length;
            for (var i in layers) {
                if (layers[i].ugcLayerType === "GRID") {
                    var colorDictionary = {};
                    var colorDics = layers[i].colorDictionarys;
                    for (var j in colorDics) {
                        var key = colorDics[j].elevation;
                        colorDictionary[key] = colorDics[j].color;
                    }
                }
                layers[i].colorDictionary = colorDictionary;
                delete layers[i].colorDictionarys;
            }

            for (var i = 0; i < len; i++) {
                if (layers[i].toJsonObject) {
                    //将图层信息转换成服务端能识别的简单json对象
                    subLayers.push(layers[i].toJsonObject());
                } else {
                    subLayers.push(layers[i]);
                }
            }
            jsonParams = _SuperMap2.default.Util.extend(jsonParams, params);
            jsonParams.subLayers = { "layers": subLayers };
            jsonParams.object = null;
            var jsonParamsStr = _SuperMap2.default.Util.toJSON([jsonParams]);
            me.request({
                method: method,
                data: jsonParamsStr,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return SetLayersInfoService;
}(_CommonServiceBase3.default);

exports.default = SetLayersInfoService;


_SuperMap2.default.SetLayersInfoService = SetLayersInfoService;

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.SingleObjectQueryJobsParameter
 * @description 单对象空间查询分析任务参数类
 * @param options - {Object} 必填参数。<br>
 *         datasetName -{String} 数据集名。 <br>
 *         datasetQuery -{String} 查询对象所在的数据集名称。 <br>
 *         mode -{SuperMap.SpatialQueryMode} 空间查询模式 。 <br>
 */
var SingleObjectQueryJobsParameter = function () {

    /**
     * @member SuperMap.SingleObjectQueryJobsParameter.prototype.datasetQuery -{String}
     * @description 查询对象所在的数据集名称。
     */
    function SingleObjectQueryJobsParameter(options) {
        _classCallCheck(this, SingleObjectQueryJobsParameter);

        this.datasetName = "";
        this.datasetQuery = "";
        this.mode = _REST.SpatialQueryMode.CONTAIN;

        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * @member SuperMap.SingleObjectQueryJobsParameter.prototype.mode -{SuperMap.SpatialQueryMode}
     * @description 空间查询模式 。
     */


    /**
     * @member SuperMap.SingleObjectQueryJobsParameter.prototype.datasetName -{String}
     * @description 数据集名。
     */


    _createClass(SingleObjectQueryJobsParameter, [{
        key: 'destroy',
        value: function destroy() {
            this.datasetName = null;
            this.datasetQuery = null;
            this.mode = null;
        }
    }], [{
        key: 'toObject',
        value: function toObject(singleObjectQueryJobsParameter, tempObj) {
            for (var name in singleObjectQueryJobsParameter) {
                if (name === "datasetName") {
                    tempObj['input'] = tempObj['input'] || {};
                    tempObj['input'][name] = singleObjectQueryJobsParameter[name];
                    continue;
                }
                tempObj['analyst'] = tempObj['analyst'] || {};
                tempObj['analyst'][name] = singleObjectQueryJobsParameter[name];
            }
        }
    }]);

    return SingleObjectQueryJobsParameter;
}();

exports.default = SingleObjectQueryJobsParameter;


_SuperMap2.default.SingleObjectQueryJobsParameter = SingleObjectQueryJobsParameter;

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ProcessingServiceBase = __webpack_require__(16);

var _ProcessingServiceBase2 = _interopRequireDefault(_ProcessingServiceBase);

var _SingleObjectQueryJobsParameter = __webpack_require__(215);

var _SingleObjectQueryJobsParameter2 = _interopRequireDefault(_SingleObjectQueryJobsParameter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.SingleObjectQueryJobsService
 * @description 大数据单对象查询分析服务类
 * @augments SuperMap.ProcessingServiceBase
 * @param url -{String} 大数据单对象空间查询分析服务地址。
 * @param options - {Object} 交互服务时所需可选参数。
 */
var SingleObjectQueryJobsService = function (_ProcessingServiceBas) {
    _inherits(SingleObjectQueryJobsService, _ProcessingServiceBas);

    /**
     * @function SuperMap.SingleObjectQueryJobsService.protitype.initialize
     * @description SuperMap.SingleObjectQueryJobsService 的构造函数
     * @param url -{String} 大数据单对象空间查询分析服务地址。
     * @param options - {Object} 交互服务时所需可选参数。
     */
    function SingleObjectQueryJobsService(url, options) {
        _classCallCheck(this, SingleObjectQueryJobsService);

        var _this = _possibleConstructorReturn(this, (SingleObjectQueryJobsService.__proto__ || Object.getPrototypeOf(SingleObjectQueryJobsService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.SingleObjectQueryJobsService";

        _this.url += "/spatialanalyst/query";
        return _this;
    }

    /**
     *@inheritDoc
     */


    _createClass(SingleObjectQueryJobsService, [{
        key: 'destroy',
        value: function destroy() {
            _get(SingleObjectQueryJobsService.prototype.__proto__ || Object.getPrototypeOf(SingleObjectQueryJobsService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.SingleObjectQueryJobsService.protitype.getQueryJobs
         * @description 获取大数据单对象空间查询分析所有
         * @return {*}
         */

    }, {
        key: 'getQueryJobs',
        value: function getQueryJobs() {
            return _get(SingleObjectQueryJobsService.prototype.__proto__ || Object.getPrototypeOf(SingleObjectQueryJobsService.prototype), 'getJobs', this).call(this, this.url);
        }

        /**
         * @function SuperMap.KernelDensityJobsService.protitype.getQueryJob
         * @description 获取指定id的单对象空间查询分析服务
         * @param id -{String} 指定要获取数据的id
         */

    }, {
        key: 'getQueryJob',
        value: function getQueryJob(id) {
            return _get(SingleObjectQueryJobsService.prototype.__proto__ || Object.getPrototypeOf(SingleObjectQueryJobsService.prototype), 'getJobs', this).call(this, this.url + '/' + id);
        }

        /**
         * @function SuperMap.SingleObjectQueryJobsService.protitype.addQueryJob
         * @description 新建大数据单对象空间查询分析服务
         * @param params - {SuperMap.SingleObjectQueryJobsParameter} 创建一个空间分析的请求参数。
         * @param seconds - {Number} 开始创建后，获取创建成功结果的时间间隔。
         */

    }, {
        key: 'addQueryJob',
        value: function addQueryJob(params, seconds) {
            return _get(SingleObjectQueryJobsService.prototype.__proto__ || Object.getPrototypeOf(SingleObjectQueryJobsService.prototype), 'addJob', this).call(this, this.url, params, _SingleObjectQueryJobsParameter2.default, seconds);
        }
    }]);

    return SingleObjectQueryJobsService;
}(_ProcessingServiceBase2.default);

exports.default = SingleObjectQueryJobsService;


_SuperMap2.default.SingleObjectQueryJobsService = SingleObjectQueryJobsService;

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.StopQueryParameters
 * @constructs SuperMap.StopQueryParameters
 * @classdesc
 * 站点查询参数类。
 * @api
 * @param options - {Object} 参数。
 * Allowed options properties:</br>
 * keyWord - {String} 站点名称关键字。</br>
 * returnPosition - {Boolean} 是否返回站点坐标信息。</br>
 */
var StopQueryParameters = function () {

    /**
     * APIProperty: keyWord
     * {String} 站点名称关键字。
     */
    function StopQueryParameters(options) {
        _classCallCheck(this, StopQueryParameters);

        this.keyWord = null;
        this.returnPosition = false;
        this.CLASS_NAME = "SuperMap.StopQueryParameters";

        options = options || {};
        _SuperMap2.default.Util.extend(this, options);
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: returnPosition
     * {Boolean} 是否返回站点坐标信息。
     */


    _createClass(StopQueryParameters, [{
        key: "destroy",
        value: function destroy() {
            _SuperMap2.default.Util.reset(this);
        }
    }]);

    return StopQueryParameters;
}();

exports.default = StopQueryParameters;


_SuperMap2.default.StopQueryParameters = StopQueryParameters;

/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _StopQueryParameters = __webpack_require__(217);

var _StopQueryParameters2 = _interopRequireDefault(_StopQueryParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.StopQueryService
 * @constructs SuperMap.StopQueryService
 * @classdesc
 * 站点查询服务类。
 * 返回结果通过该类支持的事件的监听函数参数获取
 * @extends {SuperMap.CommonServiceBase}
 * @api
 * @param url - {String} 与客户端交互的站点查询服务地址。
 * 例如:</br>"http://localhost:8090/iserver/services/traffictransferanalyst-sample/restjsr/traffictransferanalyst/Traffic-Changchun"。
 * @param options - {Object} 参数。
 *
 * Allowed options properties:</br>
 * eventListeners - {Object} 需要被注册的监听器对象。
 *
 * @example 例如：
 * (start code)
 * var myService = new SuperMap.StopQueryService(url, {eventListeners: {
     *     "processCompleted": StopQueryCompleted,
     *     "processFailed": StopQueryError
     *     }
     * };
 * (end)
 *
 *
 */

var StopQueryService = function (_CommonServiceBase) {
    _inherits(StopQueryService, _CommonServiceBase);

    function StopQueryService(url, options) {
        _classCallCheck(this, StopQueryService);

        var _this = _possibleConstructorReturn(this, (StopQueryService.__proto__ || Object.getPrototypeOf(StopQueryService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.StopQueryService";

        options = options || {};
        _SuperMap2.default.Util.extend(_this, options);
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源,将引用资源的属性置空。
     */


    _createClass(StopQueryService, [{
        key: 'destroy',
        value: function destroy() {
            _get(StopQueryService.prototype.__proto__ || Object.getPrototypeOf(StopQueryService.prototype), 'destroy', this).call(this);
            _SuperMap2.default.Util.reset(this);
        }

        /**
         * @method SuperMap.StopQueryService.processAsync
         * @description 负责将客户端的更新参数传递到服务端。
         * @param params - {SuperMap.StopQueryParameters} 交通换乘参数。
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                end;

            end = me.url.substr(me.url.length - 1, 1);
            me.url += end === "/" ? '' : '/';
            me.url += "stops/keyword/" + params.keyWord;
            me.url += me.isInTheSameDomain ? ".json?" : ".jsonp";

            me.request({
                method: "GET",
                params: { returnPosition: params.returnPosition },
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return StopQueryService;
}(_CommonServiceBase3.default);

exports.default = StopQueryService;


_SuperMap2.default.StopQueryService = StopQueryService;

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.SummaryMeshJobParameter
 * @description 点聚合分析任务参数类
 * @param options - {Object} 可选参数。如：<br>
 *        datasetName -{String} 数据集名。<br>
 *        query -{SuperMap.Bounds} 分析范围。<br>
 *        resolution -{number} 分辨率。<br>
 *        statisticModes -{String} 分析模式。<br>
 *        meshType -{number} 分析类型。<br>
 *        fields -{number} 权重索引。<br>
 *        type -{String} 聚合类型。
 */
var SummaryMeshJobParameter = function () {

    /**
     * @member SuperMap.SummaryMeshJobParameter.prototype.fields -{number}
     * @description 权重字段。
     */


    /**
     * @member SuperMap.SummaryMeshJobParameter.prototype.meshType -{number}
     * @description  网格面类型(聚合类型为网格面聚合时使用的参数),取值：0或1。
     */


    /**
     * @member SuperMap.SummaryMeshJobParameter.prototype.query -{SuperMap.Bounds}
     * @description 分析范围(聚合类型为网格面聚合时使用的参数)。
     */


    /**
     * @member SuperMap.SummaryMeshJobParameter.prototype.datasetName -{String}
     * @description 数据集名。
     */
    function SummaryMeshJobParameter(options) {
        _classCallCheck(this, SummaryMeshJobParameter);

        this.datasetName = "";
        this.regionDataset = "";
        this.query = "";
        this.resolution = 100;
        this.meshType = 0;
        this.statisticModes = "";
        this.fields = "";
        this.type = _REST.SummaryType.SUMMARYMESH;

        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * @inheritDoc
     */


    /**
     * @member SuperMap.SummaryMeshJobParameter.prototype.type -{SuperMap.SummaryType}
     * @description 聚合类型。
     */


    /**
     * @member SuperMap.SummaryMeshJobParameter.prototype.statisticModes -{SuperMap.StatisticAnalystMode}
     * @description 统计模式。
     */


    /**
     * @member SuperMap.SummaryMeshJobParameter.prototype.resolution -{number}
     * @description 分辨率(聚合类型为网格面聚合时使用的参数)。
     */


    /**
     * @member SuperMap.SummaryMeshJobParameter.prototype.regionDataset -{String}
     * @description 聚合面数据集(聚合类型为多边形聚合时使用的参数)。
     */


    _createClass(SummaryMeshJobParameter, [{
        key: 'destroy',
        value: function destroy() {
            this.datasetName = null;
            this.query = null;
            this.resolution = null;
            this.statisticModes = null;
            this.meshType = null;
            this.fields = null;
            this.regionDataset = null;
            this.type = null;
        }
    }], [{
        key: 'toObject',
        value: function toObject(summaryMeshJobParameter, tempObj) {
            for (var name in summaryMeshJobParameter) {
                if (name === "datasetName") {
                    tempObj['input'] = tempObj['input'] || {};
                    tempObj['input'][name] = summaryMeshJobParameter[name];
                    continue;
                }
                if (name === "type") {
                    tempObj['type'] = summaryMeshJobParameter[name];
                    continue;
                }
                if (summaryMeshJobParameter.type === 'SUMMARYMESH' && name !== 'regionDataset' || summaryMeshJobParameter.type === 'SUMMARYREGION' && !contains(['meshType', 'resolution', 'query'], name)) {
                    tempObj['analyst'] = tempObj['analyst'] || {};
                    tempObj['analyst'][name] = summaryMeshJobParameter[name];
                }
            }

            function contains(arr, obj) {
                var i = arr.length;
                while (i--) {
                    if (arr[i] === obj) {
                        return true;
                    }
                }
                return false;
            }
        }
    }]);

    return SummaryMeshJobParameter;
}();

exports.default = SummaryMeshJobParameter;


_SuperMap2.default.SummaryMeshJobParameter = SummaryMeshJobParameter;

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ProcessingServiceBase = __webpack_require__(16);

var _ProcessingServiceBase2 = _interopRequireDefault(_ProcessingServiceBase);

var _SummaryMeshJobParameter = __webpack_require__(219);

var _SummaryMeshJobParameter2 = _interopRequireDefault(_SummaryMeshJobParameter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.SummaryMeshJobsService
 * @description 点聚合分析大数据任务类。
 * @param url -{String} 点聚合分析任务地址。
 * @param options - {Object} 交互服务时所需可选参数。
 */
var SummaryMeshJobsService = function (_ProcessingServiceBas) {
    _inherits(SummaryMeshJobsService, _ProcessingServiceBas);

    function SummaryMeshJobsService(url, options) {
        _classCallCheck(this, SummaryMeshJobsService);

        var _this = _possibleConstructorReturn(this, (SummaryMeshJobsService.__proto__ || Object.getPrototypeOf(SummaryMeshJobsService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.SummaryMeshJobsService";

        _this.url += "/spatialanalyst/aggregatepoints";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(SummaryMeshJobsService, [{
        key: 'destroy',
        value: function destroy() {
            _get(SummaryMeshJobsService.prototype.__proto__ || Object.getPrototypeOf(SummaryMeshJobsService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.SummaryMeshJobsService.protitype.getSummaryMeshJobs
         * @description 获取点聚合分析大数据
         */

    }, {
        key: 'getSummaryMeshJobs',
        value: function getSummaryMeshJobs() {
            return _get(SummaryMeshJobsService.prototype.__proto__ || Object.getPrototypeOf(SummaryMeshJobsService.prototype), 'getJobs', this).call(this, this.url);
        }

        /**
         * @function SuperMap.SummaryMeshJobsService.protitype.getSummaryMeshJob
         * @description 获取指定ip的点聚合分析大数据
         * @param id -{String} 指定要获取数据的id
         */

    }, {
        key: 'getSummaryMeshJob',
        value: function getSummaryMeshJob(id) {
            return _get(SummaryMeshJobsService.prototype.__proto__ || Object.getPrototypeOf(SummaryMeshJobsService.prototype), 'getJobs', this).call(this, this.url + '/' + id);
        }

        /**
         * @function SuperMap.SummaryMeshJobsService.protitype.addSummaryMeshJob
         * @description 新建点聚合分析大数据服务
         * @param params - {SuperMap.SummaryMeshJobParameter} 创建一个空间分析的请求参数。
         * @param seconds - {Number} 开始创建后，获取创建成功结果的时间间隔。
         */

    }, {
        key: 'addSummaryMeshJob',
        value: function addSummaryMeshJob(params, seconds) {
            _get(SummaryMeshJobsService.prototype.__proto__ || Object.getPrototypeOf(SummaryMeshJobsService.prototype), 'addJob', this).call(this, this.url, params, _SummaryMeshJobParameter2.default, seconds);
        }
    }]);

    return SummaryMeshJobsService;
}(_ProcessingServiceBase2.default);

exports.default = SummaryMeshJobsService;


_SuperMap2.default.SummaryMeshJobsService = SummaryMeshJobsService;

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.SummaryRegionJobParameter
 * @description 范围汇总分析任务参数类
 * @param options - {Object} 可选参数。如：<br>
 *         datasetName -{String} 数据集名。 <br>
 *         sumShape -{Boolean} 是否统计长度或面积。 <br>
 *         query -{SuperMap.Bounds} 分析范围。 <br>
 *         standardSummaryFields -{Boolean} 以标准属字段统计。 <br>
 *         standardFields -{String} 以标准属字段统计的字段名称。 <br>
 *         standardStatisticModes -{String} 以标准属字段统计的统计模式。 <br>
 *         weightedSummaryFields -{Boolean} 以权重字段统计。 <br>
 *         weightedFields -{String} 以权重字段统计的字段名称。 <br>
 *         weightedStatisticModes -{String} 以权重字段统计的统计模式。 <br>
 *         resolution -{number} 网格大小。 <br>
 *         meshType -{number} 网格面汇总类型。 <br>
 *         meshSizeUnit -{String} 网格大小单位。 <br>
 *         type -{String} 汇总类型。 <br>
 */
var SummaryRegionJobParameter = function () {

    /**
     * @member SuperMap.SummaryRegionJobParameter.prototype.meshSizeUnit -{SuperMap.AnalystSizeUnit}
     * @description 网格大小单位。
     */


    /**
     * @member SuperMap.SummaryRegionJobParameter.prototype.meshType -{number}
     * @description 网格面汇总类型。
     */


    /**
     * @member SuperMap.SummaryRegionJobParameter.prototype.weightedFields -{String}
     * @description 以权重字段统计的字段名称。
     */


    /**
     * @member SuperMap.SummaryRegionJobParameter.prototype.standardStatisticModes -{SuperMap.StatisticAnalystMode}
     * @description 以标准属字段统计的统计模式。
     */


    /**
     * @member SuperMap.SummaryRegionJobParameter.prototype.standardSummaryFields -{Boolean}
     * @description 以标准属字段统计。
     */


    /**
     * @member SuperMap.SummaryRegionJobParameter.prototype.sumShape -{Boolean}
     * @description 是否统计长度或面积。
     */


    /**
     * @member SuperMap.SummaryRegionJobParameter.prototype.datasetName -{String}
     * @description 数据集名。
     */
    function SummaryRegionJobParameter(options) {
        _classCallCheck(this, SummaryRegionJobParameter);

        this.datasetName = "";
        this.regionDataset = "";
        this.sumShape = true;
        this.query = "";
        this.standardSummaryFields = false;
        this.standardFields = "";
        this.standardStatisticModes = "";
        this.weightedSummaryFields = false;
        this.weightedFields = "";
        this.weightedStatisticModes = "";
        this.meshType = 0;
        this.resolution = 100;
        this.meshSizeUnit = _REST.AnalystSizeUnit.METER;
        this.type = _REST.SummaryType.SUMMARYMESH;

        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * @member SuperMap.SummaryRegionJobParameter.prototype.type -{SuperMap.SummaryType}
     * @description 汇总类型。
     */


    /**
     * @member SuperMap.SummaryRegionJobParameter.prototype.resolution -{number}
     * @description 网格大小。
     */


    /**
     * @member SuperMap.SummaryRegionJobParameter.prototype.weightedStatisticModes -{SuperMap.StatisticAnalystMode}
     * @description 以权重字段统计的统计模式。
     */


    /**
     * @member SuperMap.SummaryRegionJobParameter.prototype.weightedSummaryFields -{Boolean}
     * @description 以权重字段统计。
     */


    /**
     * @member SuperMap.SummaryRegionJobParameter.prototype.standardFields -{String}
     * @description 以标准属字段统计的字段名称。
     */


    /**
     * @member SuperMap.SummaryRegionJobParameter.prototype.query -{SuperMap.Bounds}
     * @description 分析范围。
     */


    /**
     * @member SuperMap.SummaryRegionJobParameter.prototype.regionDataset -{String}
     * @description 汇总数据源（多边形汇总时用到的参数）。
     */


    _createClass(SummaryRegionJobParameter, [{
        key: 'destroy',
        value: function destroy() {
            this.datasetName = null;
            this.sumShape = null;
            this.query = null;
            this.standardSummaryFields = null;
            this.standardFields = null;
            this.standardStatisticModes = null;
            this.weightedSummaryFields = null;
            this.weightedFields = null;
            this.weightedStatisticModes = null;
            this.meshType = null;
            this.resolution = null;
            this.meshSizeUnit = null;
            this.type = null;
        }
    }], [{
        key: 'toObject',
        value: function toObject(summaryRegionJobParameter, tempObj) {
            for (var name in summaryRegionJobParameter) {
                if (name === "datasetName") {
                    tempObj['input'] = tempObj['input'] || {};
                    tempObj['input'][name] = summaryRegionJobParameter[name];
                    continue;
                }
                if (name === "type") {
                    tempObj['type'] = summaryRegionJobParameter[name];
                    continue;
                }
                if (summaryRegionJobParameter.type === "SUMMARYREGION" || summaryRegionJobParameter.type === "SUMMARYMESH" && name !== "regionDataset") {
                    tempObj['analyst'] = tempObj['analyst'] || {};
                    tempObj['analyst'][name] = summaryRegionJobParameter[name];
                }
            }
        }
    }]);

    return SummaryRegionJobParameter;
}();

exports.default = SummaryRegionJobParameter;


_SuperMap2.default.SummaryRegionJobParameter = SummaryRegionJobParameter;

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ProcessingServiceBase = __webpack_require__(16);

var _ProcessingServiceBase2 = _interopRequireDefault(_ProcessingServiceBase);

var _SummaryRegionJobParameter = __webpack_require__(221);

var _SummaryRegionJobParameter2 = _interopRequireDefault(_SummaryRegionJobParameter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.SummaryRegionJobsService
 * @description 范围汇总分析服务类
 * @augments SuperMap.ProcessingServiceBase
 * @param url -{String} 范围汇总分析服务地址。
 * @param options - {Object} 范围汇总分析服务可选参数。
 */
var SummaryRegionJobsService = function (_ProcessingServiceBas) {
    _inherits(SummaryRegionJobsService, _ProcessingServiceBas);

    /**
     * @function SuperMap.SummaryRegionJobsService.protitype.initialize
     * @description SuperMap.SummaryRegionJobsService 的构造函数
     * @param url -{String} 范围汇总分析服务地址。
     * @param options - {Object} 范围汇总分析服务可选参数。
     */
    function SummaryRegionJobsService(url, options) {
        _classCallCheck(this, SummaryRegionJobsService);

        var _this = _possibleConstructorReturn(this, (SummaryRegionJobsService.__proto__ || Object.getPrototypeOf(SummaryRegionJobsService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.SummaryRegionJobsService";

        _this.url += "/spatialanalyst/summaryregion";
        return _this;
    }

    /**
     *@inheritDoc
     */


    _createClass(SummaryRegionJobsService, [{
        key: 'destroy',
        value: function destroy() {
            _get(SummaryRegionJobsService.prototype.__proto__ || Object.getPrototypeOf(SummaryRegionJobsService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.SummaryRegionJobsService.protitype.getSummaryRegionJobs
         * @description 获取范围汇总分析任务集合。
         * @return {*}
         */

    }, {
        key: 'getSummaryRegionJobs',
        value: function getSummaryRegionJobs() {
            return _get(SummaryRegionJobsService.prototype.__proto__ || Object.getPrototypeOf(SummaryRegionJobsService.prototype), 'getJobs', this).call(this, this.url);
        }

        /**
         * @function SuperMap.SummaryRegionJobsService.protitype.getSummaryRegionJob
         * @description 获取指定id的范围汇总分析任务。
         * @param id -{String} 要获取范围汇总分析任务的id
         */

    }, {
        key: 'getSummaryRegionJob',
        value: function getSummaryRegionJob(id) {
            return _get(SummaryRegionJobsService.prototype.__proto__ || Object.getPrototypeOf(SummaryRegionJobsService.prototype), 'getJobs', this).call(this, this.url + '/' + id);
        }

        /**
         * @function SuperMap.SummaryRegionJobsService.protitype.addSummaryRegionJob
         * @description 新建范围汇总任务。
         * @param params - {SuperMap.SummaryRegionJobParameter} 创建一个范围汇总任务的请求参数。
         * @param seconds - {Number} 开始创建后，获取创建成功结果的时间间隔。
         */

    }, {
        key: 'addSummaryRegionJob',
        value: function addSummaryRegionJob(params, seconds) {
            return _get(SummaryRegionJobsService.prototype.__proto__ || Object.getPrototypeOf(SummaryRegionJobsService.prototype), 'addJob', this).call(this, this.url, params, _SummaryRegionJobParameter2.default, seconds);
        }
    }]);

    return SummaryRegionJobsService;
}(_ProcessingServiceBase2.default);

exports.default = SummaryRegionJobsService;


_SuperMap2.default.SummaryRegionJobsService = SummaryRegionJobsService;

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.SupplyCenter
 * @description 资源供给中心类。在资源分配和选址分区分析两个功能中使用。
 */
var SupplyCenter = function () {

    /**
     * Constructor: SuperMap.SupplyCenter
     * 资源供给中心类构造函数。
     *
     * Parameters:
     * options - {Object} 参数。
     *
     * Allowed options properties:
     * maxWeight - {Number} 资源供给中心的最大耗费值，必设参数。
     * nodeID - {Integer} 资源供给中心点的结点 ID 号，必设参数。资源供给中心必须是结点。
     * resourceValue - {Number} 资源供给中心能提供的最大服务量或商品数量，必设参数。
     * type - {SuperMap.SupplyCenterType} 资源供给中心点的类型常量。
     */


    /**
     * APIProperty: resourceValue
     * {Number} 资源供给中心能提供的最大服务量或商品数量，必设参数。例如资源中心为学校，资源中心资源量表示
     * 该学校能够接纳多少学生。
     */

    /**
     * APIProperty: maxWeight
     * {Number} 资源供给中心的最大耗费值，必设参数。中心点最大阻值设置越小，表示中心点所提供的资源可影响范围越大。
     * 最大阻力值是用来限制需求点到中心点的花费。
     * 如果需求点（弧段或结点）到此中心的花费大于最大阻力值，则该需求点不属于该资源供给中心提供资源的范围。
     */
    function SupplyCenter(options) {
        _classCallCheck(this, SupplyCenter);

        this.maxWeight = null;
        this.nodeID = null;
        this.resourceValue = null;
        this.type = null;
        this.CLASS_NAME = "SuperMap.SupplyCenter";

        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: type
     * {SuperMap.SupplyCenterType} 资源供给中心点的类型常量。资源供给中心点的类型包括非中心，固定中心和可选中心。
     * 固定中心用于资源分配分析；固定中心和可选中心用于选址分析；非中心在两种网络分析时都不予考虑。
     */


    /**
     * APIProperty: nodeID
     * {Integer} 资源供给中心点的结点 ID 号，必设参数。资源供给中心必须是结点。
     */


    _createClass(SupplyCenter, [{
        key: "destroy",
        value: function destroy() {
            var me = this;
            me.maxWeight = null;
            me.nodeID = null;
            me.resourceValue = null;
            me.type = null;
        }
    }], [{
        key: "fromJson",
        value: function fromJson(jsonObject) {
            if (!jsonObject) {
                return;
            }
            return new SupplyCenter({
                maxWeight: jsonObject.maxWeight,
                nodeID: jsonObject.nodeID,
                resourceValue: jsonObject.resourceValue,
                type: jsonObject.type
            });
        }
    }]);

    return SupplyCenter;
}();

exports.default = SupplyCenter;


_SuperMap2.default.SupplyCenter = SupplyCenter;

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.SurfaceAnalystParametersSetting
 * @constructs SuperMap.SurfaceAnalystParametersSetting
 * @classdesc
 * 表面分析参数设置类。
 * 通过该类可以设置表面分析提取等值线、提取等值面的一些参数，包括基准值、等值距、光滑度、光滑方法等。
 * @api
 */
var SurfaceAnalystParametersSetting = function () {

    /**
     * @method SuperMap.SurfaceAnalystParametersSetting.initialize
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * clipRegion - {SuperMap.Geometry} 获取或设置裁剪面对象，如果不需要对操作结果进行裁剪，可以使用null值取代该参数。</br>
     * datumValue - {Number} 获取或设置表面分析中提取等值线、提取等值面的基准值。</br>
     * expectedZValues - {Array(Number)} 获取或设置期望分析结果的 Z 值集合。</br>
     * interval - {Number} 获取或设置等值距。等值距是两条等值线之间的间隔值。</br>
     * resampleTolerance - {Number} 获取或设置重采样容限。</br>
     * smoothMethod - {SuperMap.SmoothMethod} 获取或设置光滑处理所使用的方法。</br>
     * smoothness - {Number} 获取或设置表面分析中等值线或等值面的边界线的光滑度。</br>
     */


    /**
     * APIProperty: smoothMethod
     * {SuperMap.SmoothMethod} 获取或设置光滑处理所使用的方法。
     */


    /**
     * APIProperty: interval
     * {Number} 获取或设置等值距。等值距是两条等值线之间的间隔值。
     */


    /**
     * APIProperty: datumValue
     * {Number} 获取或设置表面分析中提取等值线、提取等值面的基准值。
     * 基准值是作为一个生成等值线的初始起算值，并不一定是最小等值线的值。 例如，高程范围为 220 -1550 的 DEM 栅格数据，
     * 如果设基准值为0， 等值距为50，则提取等值线时，以基准值0为起点，等值距50为间隔提取等值线，
     * 因为给定高程的最小值是220，所以，在给定范围内提取等值线的最小高程是250。
     * 提取等值线的结果是：最小等值线值为250，最大等值线值为1550。
     */
    function SurfaceAnalystParametersSetting(options) {
        _classCallCheck(this, SurfaceAnalystParametersSetting);

        this.clipRegion = null;
        this.datumValue = 0;
        this.expectedZValues = null;
        this.interval = 0;
        this.resampleTolerance = 0;
        this.smoothMethod = _REST.SmoothMethod.BSPLINE;
        this.smoothness = 0;
        this.CLASS_NAME = "SuperMap.SurfaceAnalystParametersSetting";

        if (options) {
            var clipRg = options.clipRegion;
            if (clipRg) {
                if (clipRg instanceof _SuperMap2.default.Geometry && clipRg.components) {
                    options.clipRegion = _SuperMap2.default.REST.ServerGeometry.fromGeometry(clipRg);
                } else {
                    delete options.clipRegion;
                }
            }
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: smoothness
     * {Number} 获取或设置表面分析中等值线或等值面的边界线的光滑度。
     * 以为0-5为例，光滑度为0表示不进行光滑操作，值越大表示光滑度越高。
     * 随着光滑度的增加，提取的等值线越光滑.当然光滑度越大，
     * 计算所需的时间和占用的内存也就越大。而且，当等值距较小时，
     * 光滑度太高会出现等值线相交的问题。
     */


    /**
     * APIProperty: resampleTolerance
     * {Number} 获取或设置重采样容限。
     * 容限值越大，采样结果数据越简化。当分析结果出现交叉时，可通过调整重采样容限为较小的值来处理。
     */


    /**
     * APIProperty: expectedZValues
     * {Array(Number)} 获取或设置期望分析结果的 Z 值集合。
     * Z 值集合存储一系列数值，该数值为待提取等值线的值。即仅高程值在Z值集合中的等值线会被提取。
     */


    /**
     * APIProperty: clipRegion
     * {SuperMap.Geometry} 获取或设置裁剪面对象，如果不需要对操作结果进行裁剪，可以使用null值取代该参数。
     */


    _createClass(SurfaceAnalystParametersSetting, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            if (me.clipRegion) {
                me.clipRegion.destroy();
                me.clipRegion = null;
            }

            me.datumValue = null;
            me.expectedZValues = null;
            me.interval = null;
            me.resampleTolerance = null;
            me.smoothMethod = null;
            me.smoothness = null;
        }
    }]);

    return SurfaceAnalystParametersSetting;
}();

exports.default = SurfaceAnalystParametersSetting;

_SuperMap2.default.SurfaceAnalystParametersSetting = SurfaceAnalystParametersSetting;

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _SpatialAnalystBase2 = __webpack_require__(6);

var _SpatialAnalystBase3 = _interopRequireDefault(_SpatialAnalystBase2);

var _DatasetSurfaceAnalystParameters = __webpack_require__(112);

var _DatasetSurfaceAnalystParameters2 = _interopRequireDefault(_DatasetSurfaceAnalystParameters);

var _GeometrySurfaceAnalystParameters = __webpack_require__(153);

var _GeometrySurfaceAnalystParameters2 = _interopRequireDefault(_GeometrySurfaceAnalystParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.SurfaceAnalystService
 * @constructs SuperMap.SurfaceAnalystService
 * @classdesc
 * 表面分析服务类。
 * 该类负责将客户设置的表面分析服务参数传递给服务端，并接收服务端返回的表面分析服务分析结果数据。
 * 表面分析结果通过该类支持的事件的监听函数参数获取
 * @extends {SuperMap.SpatialAnalystBase}
 * @api
 * @example 例如：
 * (start code)
 * var mySurfaceAnalystService = new SuperMap.SurfaceAnalystService(url, {
     *      eventListeners: {
     *	       "processCompleted": surfaceAnalysCompleted,
     *		   "processFailed": surfaceAnalysFailed
     *		   }
     * });
 * (end)
 *
 *
 */
var SurfaceAnalystService = function (_SpatialAnalystBase) {
    _inherits(SurfaceAnalystService, _SpatialAnalystBase);

    /**
     *
     * @method SuperMap.SurfaceAnalystService.initialize
     * @param options - {Object} 参数。
     * @param url - {String} 服务的访问地址。如 http://localhost:8090/iserver/services/spatialanalyst-changchun/restjsr/spatialanalyst 。
     * Allowed options properties:</br>
     * eventListeners - {Object} 需要被注册的监听器对象。
     *
     */
    function SurfaceAnalystService(url, options) {
        _classCallCheck(this, SurfaceAnalystService);

        var _this = _possibleConstructorReturn(this, (SurfaceAnalystService.__proto__ || Object.getPrototypeOf(SurfaceAnalystService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.SurfaceAnalystService";
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源,将引用的资源属性置空。
     */


    _createClass(SurfaceAnalystService, [{
        key: 'destroy',
        value: function destroy() {
            _get(SurfaceAnalystService.prototype.__proto__ || Object.getPrototypeOf(SurfaceAnalystService.prototype), 'destroy', this).call(this);
        }

        /**
         * @method SuperMap.SurfaceAnalystService.processAsync
         * @description 负责将客户端的表面分析服务参数传递到服务端。
         * @param params - {SuperMap.SurfaceAnalystParameters}
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                jsonParameters;
            jsonParameters = me.getJsonParameters(params);
            me.request({
                method: "POST",
                data: jsonParameters,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }

        /**
         * @method SuperMap.SurfaceAnalystService.getJsonParameters
         * @description 将参数转化为 JSON 字符串。
         * @param params - {SuperMap.SurfaceAnalystParameters}
         * @return {Object} 转化后的JSON字符串。
         */

    }, {
        key: 'getJsonParameters',
        value: function getJsonParameters(params) {
            var jsonParameters = "";
            var me = this,
                end;
            if (params instanceof _DatasetSurfaceAnalystParameters2.default) {
                var end = me.url.substr(me.url.length - 1, 1);

                if (me.isInTheSameDomain) {
                    me.url += end === "/" ? "datasets/" + params.dataset + "/" + params.surfaceAnalystMethod.toLowerCase() + ".json?returnContent=true" : "/datasets/" + params.dataset + "/" + params.surfaceAnalystMethod.toLowerCase() + ".json?returnContent=true";
                } else {
                    me.url += end === "/" ? "datasets/" + params.dataset + "/" + params.surfaceAnalystMethod.toLowerCase() + ".jsonp?returnContent=true" : "/datasets/" + params.dataset + "/" + params.surfaceAnalystMethod.toLowerCase() + ".jsonp?returnContent=true";
                }
            } else if (params instanceof _GeometrySurfaceAnalystParameters2.default) {
                end = me.url.substr(me.url.length - 1, 1);
                if (me.isInTheSameDomain) {
                    me.url += end === "/" ? "geometry/" + params.surfaceAnalystMethod.toLowerCase() + ".json?returnContent=true" : "/geometry/" + params.surfaceAnalystMethod.toLowerCase() + ".json?returnContent=true";
                } else {
                    me.url += end === "/" ? "geometry/" + params.surfaceAnalystMethod.toLowerCase() + ".jsonp?returnContent=true" : "/geometry/" + params.surfaceAnalystMethod.toLowerCase() + ".jsonp?returnContent=true";
                }
            } else {
                return;
            }
            jsonParameters = _SuperMap2.default.Util.toJSON(params);
            return jsonParameters;
        }
    }]);

    return SurfaceAnalystService;
}(_SpatialAnalystBase3.default);

exports.default = SurfaceAnalystService;


_SuperMap2.default.SurfaceAnalystService = SurfaceAnalystService;

/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.TerrainCurvatureCalculationParameters
 * @constructs SuperMap.TerrainCurvatureCalculationParameters
 * @classdesc
 * 地形曲率计算参数类。
 * @api
 */
var TerrainCurvatureCalculationParameters = function () {

    /**
     * @method SuperMap.TerrainCurvatureCalculationParameters.initialize
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * dataset - {String} 要用来做地形曲率计算数据源中数据集的名称。该名称用形如"数据集名称@数据源别名"形式来表示，例如：JingjinTerrain@Jingjin。必设字段。</br>
     * zFactor - {Number} 指定的高程缩放系数。默认值为 1.0，表示不缩放。</br>
     * averageCurvatureName - {String} 结果数据集：平均曲率数据集的名称，必设字段。</br>
     * profileCurvatureName - {String} 结果数据集：剖面曲率数据集的名称。</br>
     * planCurvatureName - {String} 结果数据集：平面曲率数据集的名称。</br>
     * deleteExistResultDataset - {Boolean} 如果用户命名的结果数据集名称与已有的数据集重名，是否删除已有的数据集。默认为 false，即不删除。</br>
     */


    /**
     * APIProperty: planCurvatureName
     * {String} 结果数据集：平面曲率数据集的名称。
     */


    /**
     * APIProperty: averageCurvatureName
     * {String} 结果数据集：平均曲率数据集的名称，必设字段。
     */


    /**
     * APIProperty: dataset
     * {String} 要用来做地形曲率计算数据源中数据集的名称。
     * 该名称用形如"数据集名称@数据源别名"形式来表示，例如：JingjinTerrain@Jingjin。必设字段。
     *
     * 注：地形曲率计算必须为栅格数据集。
     */
    function TerrainCurvatureCalculationParameters(options) {
        _classCallCheck(this, TerrainCurvatureCalculationParameters);

        this.dataset = null;
        this.zFactor = 1.0;
        this.averageCurvatureName = null;
        this.profileCurvatureName = "";
        this.planCurvatureName = "";
        this.deleteExistResultDataset = false;
        this.CLASS_NAME = "SuperMap.TerrainCurvatureCalculationParameters";

        if (!options) {
            return;
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * Property: deleteExistResultDataset
     * {Boolean} 如果用户命名的结果数据集名称与已有的数据集重名，是否删除已有的数据集。默认为 false，即不删除。
     */

    /**
     * APIProperty: profileCurvatureName
     * {String} 结果数据集：剖面曲率数据集的名称。
     */

    /**
     * APIProperty: zFactor
     * {Number} 指定的高程缩放系数。默认值为 1.0，表示不缩放。
     * 该值是指在 DEM 栅格数据中，栅格值（Z 坐标，即高程值）相对于 X 和 Y 坐标的单位变换系数。
     * 通常有 X，Y，Z 都参加的计算中，需要将高程值乘以一个高程缩放系数，使得三者单位一致。
     * 例如，X、Y 方向上的单位是米，而 Z 方向的单位是英尺，由于 1 英尺等于 0.3048 米，则需要指定缩放系数为 0.3048。
     */


    _createClass(TerrainCurvatureCalculationParameters, [{
        key: "destroy",
        value: function destroy() {
            var me = this;
            me.dataset = null;
            me.zFactor = 1.0;
            me.averageCurvatureName = null;
            me.profileCurvatureName = null;
            me.planCurvatureName = null;
            me.deleteExistResultDataset = true;
        }
    }], [{
        key: "toObject",
        value: function toObject(derrainCurvatureCalculationParameters, tempObj) {
            for (var name in derrainCurvatureCalculationParameters) {
                if (name !== "dataset") {
                    tempObj[name] = derrainCurvatureCalculationParameters[name];
                }
            }
        }
    }]);

    return TerrainCurvatureCalculationParameters;
}();

exports.default = TerrainCurvatureCalculationParameters;


_SuperMap2.default.TerrainCurvatureCalculationParameters = TerrainCurvatureCalculationParameters;

/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _SpatialAnalystBase2 = __webpack_require__(6);

var _SpatialAnalystBase3 = _interopRequireDefault(_SpatialAnalystBase2);

var _TerrainCurvatureCalculationParameters = __webpack_require__(226);

var _TerrainCurvatureCalculationParameters2 = _interopRequireDefault(_TerrainCurvatureCalculationParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.TerrainCurvatureCalculationService
 * @constructs SuperMap.TerrainCurvatureCalculationService
 * @classdesc
 * 地形曲率计算服务类。
 * @extends {SuperMap.SpatialAnalystBase}
 * @api
 * @example 例如：
 * (start code)
 * var myTerrainCurvatureCalculationService = new SuperMap.TerrainCurvatureCalculationService(url);
 * myTerrainCurvatureCalculationService.on({
     *     "processCompleted": processCompleted,
     *     "processFailed": processFailed
     *     }
 * );
 * (end)
 *
 */
var TerrainCurvatureCalculationService = function (_SpatialAnalystBase) {
    _inherits(TerrainCurvatureCalculationService, _SpatialAnalystBase);

    /**
     * @method SuperMap.TerrainCurvatureCalculationService.initialize
     * @param options - {Object} 参数。
     * @param url - {String} 服务的访问地址。如 http://localhost:8090/iserver/services/spatialanalyst-changchun/restjsr/spatialanalyst 。
     * Allowed options properties:
     * eventListeners - {Object} 需要被注册的监听器对象。
     */
    function TerrainCurvatureCalculationService(url, options) {
        _classCallCheck(this, TerrainCurvatureCalculationService);

        var _this = _possibleConstructorReturn(this, (TerrainCurvatureCalculationService.__proto__ || Object.getPrototypeOf(TerrainCurvatureCalculationService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.TerrainCurvatureCalculationService";
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源,将引用资源的属性置空。
     */


    _createClass(TerrainCurvatureCalculationService, [{
        key: 'destroy',
        value: function destroy() {
            _get(TerrainCurvatureCalculationService.prototype.__proto__ || Object.getPrototypeOf(TerrainCurvatureCalculationService.prototype), 'destroy', this).call(this);
        }

        /**
         * @method SuperMap.TerrainCurvatureCalculationService.processAsync
         * @description 负责将客户端的查询参数传递到服务端。
         * @param parameter - {SuperMap.TerrainCurvatureCalculationParameters}
         */

    }, {
        key: 'processAsync',
        value: function processAsync(parameter) {
            var me = this;

            var end = me.url.substr(me.url.length - 1, 1);
            if (end === '/') {} else {
                me.url += "/";
            }

            var parameterObject = {};

            if (parameter instanceof _TerrainCurvatureCalculationParameters2.default) {
                me.url += 'datasets/' + parameter.dataset + '/terraincalculation/curvature';
            }

            _TerrainCurvatureCalculationParameters2.default.toObject(parameter, parameterObject);
            var jsonParameters = _SuperMap2.default.Util.toJSON(parameterObject);

            if (me.isInTheSameDomain) {
                me.url += '.json?returnContent=true';
            } else {
                me.url += '.jsonp?returnContent=true';
            }

            me.request({
                method: "POST",
                data: jsonParameters,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return TerrainCurvatureCalculationService;
}(_SpatialAnalystBase3.default);

exports.default = TerrainCurvatureCalculationService;


_SuperMap2.default.TerrainCurvatureCalculationService = TerrainCurvatureCalculationService;

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServerStyle = __webpack_require__(9);

var _ServerStyle2 = _interopRequireDefault(_ServerStyle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ThemeGraduatedSymbolStyle
 * @description 等级符号专题图正负零值显示风格类
 * @param options - {Object} 可选参数。如：<br>
 *        negativeDisplayed - {Boolean} 是否显示负值。默认为 false。<br>
 *        negativeStyle - {SuperMap.ServerStyle} 负值的等级符号风格。<br>
 *        positiveStyle - {SuperMap.ServerStyle}  正值的等级符号风格。<br>
 *        zeroDisplayed - {Boolean} 是否显示0值。默认为 false。<br>
 *        zeroStyle - {SuperMap.ServerStyle} 0值的等级符号风格。
 */
var ThemeGraduatedSymbolStyle = function () {

    /*
     * Constructor: SuperMap.ThemeGraduatedSymbolStyle
     * 等级符号专题图正负零值显示风格类构造函数，用于创建 SuperMap.ThemeGraduatedSymbolStyle 类的新实例。
     */


    /**
     * APIProperty: zeroDisplayed
     * @member SuperMap.ThemeGraduatedSymbolStyle.prototype.zeroDisplayed -{Boolean}
     * @description 是否显示0值。默认为 false。
     */

    /**
     * APIProperty: negativeStyle
     * @member SuperMap.ThemeGraduatedSymbolStyle.prototype.negativeStyle -{SuperMap.ServerStyle} 负值的等级符号风格。
     */
    function ThemeGraduatedSymbolStyle(options) {
        _classCallCheck(this, ThemeGraduatedSymbolStyle);

        this.negativeDisplayed = false;
        this.negativeStyle = null;
        this.positiveStyle = null;
        this.zeroDisplayed = false;
        this.zeroStyle = null;
        this.CLASS_NAME = "SuperMap.ThemeGraduatedSymbolStyle";

        var me = this;
        me.negativeStyle = new _ServerStyle2.default();
        me.positiveStyle = new _ServerStyle2.default();
        me.zeroStyle = new _ServerStyle2.default();
        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */

    /**
     * APIProperty: zeroStyle
     * @member SuperMap.ThemeGraduatedSymbolStyle.prototype.zeroStyle -{SuperMap.ServerStyle}
     * @description 0值的等级符号风格。
     */


    /**
     * APIProperty: positiveStyle
     * @member SuperMap.ThemeGraduatedSymbolStyle.prototype.positiveStyle -{SuperMap.ServerStyle}
     * @description 正值的等级符号风格。
     */


    /**
     * APIProperty: negativeDisplayed
     * @member SuperMap.ThemeGraduatedSymbolStyle.prototype.negativeDisplayed -{Boolean}
     * @description 是否显示负值。默认为 false。
     */


    _createClass(ThemeGraduatedSymbolStyle, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.negativeDisplayed = null;
            me.negativeStyle = null;
            me.positiveStyle = null;
            me.zeroDisplayed = null;
            me.zeroStyle = null;
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            if (!obj) return;
            var res = new ThemeGraduatedSymbolStyle();
            _SuperMap2.default.Util.copy(res, obj);
            res.negativeStyle = _ServerStyle2.default.fromJson(obj.negativeStyle);
            res.positiveStyle = _ServerStyle2.default.fromJson(obj.positiveStyle);
            res.zeroStyle = _ServerStyle2.default.fromJson(obj.zeroStyle);
            return res;
        }
    }]);

    return ThemeGraduatedSymbolStyle;
}();

exports.default = ThemeGraduatedSymbolStyle;


_SuperMap2.default.ThemeGraduatedSymbolStyle = ThemeGraduatedSymbolStyle;

/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServerColor = __webpack_require__(11);

var _ServerColor2 = _interopRequireDefault(_ServerColor);

var _ServerTextStyle = __webpack_require__(18);

var _ServerTextStyle2 = _interopRequireDefault(_ServerTextStyle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ThemeGraphAxes
 * @description 统计专题图坐标轴样式类。
 * @param  options - {Object} 可选参数。<br>
 *         axesColor - {SuperMap.ServerColor} 坐标轴颜色。<br>
 *         axesDisplayed - {Boolean} 是否显示坐标轴。<br>
 *         axesGridDisplayed - {Boolean} 是否在统计图坐标轴上显示网格。<br>
 *         axesTextDisplayed - {Boolean} 是否显示坐标轴的文本标注。<br>
 *         axesTextStyle - {SuperMap.ServerTextStyle} 统计符号的最大最小尺寸。
 */
var ThemeGraphAxes = function () {

    /*
     * Constructor: SuperMap.ThemeGraphAxes
     * 统计专题图坐标轴样式类构造函数。
     */


    /**
     * APIProperty: axesTextDisplayed
     * @member SuperMap.ThemeGraphAxes.prototype.axesTextDisplayed -{Boolean}
     * @description 是否显示坐标轴的文本标注。默认为 false，即不显示。
     */


    /**
     * APIProperty: axesDisplayed
     * @member SuperMap.ThemeGraphAxes.prototype.axesDisplayed -{Boolean}
     * @description 是否显示坐标轴。默认为 false，即不显示。<br>
     *              由于饼状图和环状图无坐标轴，故该属性以及所有与坐标轴设置相关的属性都不适用于它们。并且只有当该值为 true 时，其它设置坐标轴的属性才起作用。
     */
    function ThemeGraphAxes(options) {
        _classCallCheck(this, ThemeGraphAxes);

        this.axesColor = null;
        this.axesDisplayed = false;
        this.axesGridDisplayed = false;
        this.axesTextDisplayed = false;
        this.axesTextStyle = null;
        this.CLASS_NAME = "SuperMap.ThemeGraphAxes";

        var me = this;
        me.axesColor = new _ServerColor2.default(0, 0, 0);
        me.axesTextStyle = new _ServerTextStyle2.default();
        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: axesTextStyle
     * @member SuperMap.ThemeGraphAxes.prototype.axesTextStyle -{SuperMap.ServerTextStyle}
     * @description 坐标轴文本风格。当 axesTextDisplayed = true 时有效。
     */


    /**
     * APIProperty: axesGridDisplayed
     * @member SuperMap.ThemeGraphAxes.prototype.axesGridDisplayed -{Boolean}
     * @description 是否在统计图坐标轴上显示网格。默认为 false，即不显示。
     */


    /**
     * APIProperty: axesColor
     * @member SuperMap.ThemeGraphAxes.prototype.axesColor -{SuperMap.ServerColor}
     * @description 坐标轴颜色，默认为黑色。当 axesDisplayed = true 时有效。
     */


    _createClass(ThemeGraphAxes, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            if (me.axesColor) {
                me.axesColor.destroy();
                me.axesColor = null;
            }
            me.axesDisplayed = null;
            me.axesGridDisplayed = null;
            me.axesTextDisplayed = null;
            if (me.axesTextStyle) {
                me.axesTextStyle.destroy();
                me.axesTextStyle = null;
            }
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            if (!obj) return;
            var res = new ThemeGraphAxes();
            _SuperMap2.default.Util.copy(res, obj);
            res.axesColor = _ServerColor2.default.fromJson(obj.axesColor);
            res.axesTextStyle = _ServerTextStyle2.default.fromObj(obj.axesTextStyle);
            return res;
        }
    }]);

    return ThemeGraphAxes;
}();

exports.default = ThemeGraphAxes;


_SuperMap2.default.ThemeGraphAxes = ThemeGraphAxes;

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServerStyle = __webpack_require__(9);

var _ServerStyle2 = _interopRequireDefault(_ServerStyle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ThemeGraphItem
 * @description 统计专题图子项类
 * @param options - {Object} 可选参数。如：<br>
 *        caption - {String} 专题图子项的名称。<br>
 *        graphExpression - {String} 统计专题图的专题变量。<br>
 *        memoryDoubleValues - {Array(Number)} 内存数组方式制作专题图时的值数组。<br>
 *        uniformStyle - {SuperMap.ServerStyle} 统计专题图子项的显示风格
 */
var ThemeGraphItem = function () {

    /*
     * Constructor: SuperMap.ThemeGraphItem
     * 统计专题图子项类构造函数。
     */


    /**
     * APIProperty: memoryDoubleValues
     * @member SuperMap.ThemeGraphItem.prototype.memoryDoubleValues -{Array(Number)}
     * @description 内存数组方式制作专题图时的值数组。<br>
     *              内存数组方式制作专题图时，只对 SmID 值在键数组（SuperMap.ThemeGraph.memoryKeys）中的记录制作专题图。<br>
     *              值数组的数值个数必须与键数组中数值的个数一致。 值数组中的值将代替原来的专题值来制作统计专题图。<br>
     *              比如：利用面积字段和周长字段（即有两个统计专题图子项 ）作为专题变量制作统计专题图。
     */


    /**
     * APIProperty: caption
     * @member SuperMap.ThemeGraphItem.prototype.caption -{String}
     * @description 专题图子项的名称。
     */
    function ThemeGraphItem(options) {
        _classCallCheck(this, ThemeGraphItem);

        this.caption = null;
        this.graphExpression = null;
        this.memoryDoubleValues = null;
        this.uniformStyle = null;
        this.CLASS_NAME = "SuperMap.ThemeGraphItem";

        var me = this;
        me.uniformStyle = new _ServerStyle2.default();
        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: uniformStyle
     * @member SuperMap.ThemeGraphItem.prototype.uniformStyle -{SuperMap.ServerStyle}
     * @description 统计专题图子项的显示风格。
     *              每一个统计专题图子项都对应一种显示风格。
     */


    /**
     * APIProperty: graphExpression
     * @member SuperMap.ThemeGraphItem.prototype.graphExpression -{String}
     * @description 统计专题图的专题变量。专题变量可以是一个字段或字段表达式。字段必须为数值型；表达式只能为数值型的字段间的运算。必设字段。
     */


    _createClass(ThemeGraphItem, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.caption = null;
            me.graphExpression = null;
            me.memoryDoubleValues = null;
            me.uniformStyle = null;
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            if (!obj) return;
            var res = new ThemeGraphItem();
            _SuperMap2.default.Util.copy(res, obj);
            res.uniformStyle = _ServerStyle2.default.fromJson(obj.uniformStyle);
            return res;
        }
    }]);

    return ThemeGraphItem;
}();

exports.default = ThemeGraphItem;


_SuperMap2.default.ThemeGraphItem = ThemeGraphItem;

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ThemeGraphSize
 * @description 统计专题图符号尺寸类。
 * @param  options - {Object} 可选参数。如：<br>
 *         maxGraphSize - {Number} 统计图中显示的最大图表尺寸基准值。<br>
 *         minGraphSize - {Number} 统计图中显示的最小图表尺寸基准值。
 */
var ThemeGraphSize = function () {

    /*
     * Constructor: SuperMap.ThemeGraphSize
     * 统计专题图符号尺寸类构造函数。
     */


    /**
     * APIProperty: maxGraphSize
     * @member SuperMap.ThemeGraphSize.prototype.maxGraphSize -{Number}
     * @description 获取或设置统计图中显示的最大图表尺寸基准值，默认为0像素。
     */
    function ThemeGraphSize(options) {
        _classCallCheck(this, ThemeGraphSize);

        this.maxGraphSize = 0;
        this.minGraphSize = 0;
        this.CLASS_NAME = "SuperMap.ThemeGraphSize";

        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: minGraphSize
     * @member SuperMap.ThemeGraphSize.prototype.minGraphSize -{Number}
     * @description 获取或设置统计图中显示的最小图表尺寸基准值，默认为0像素。
     */


    _createClass(ThemeGraphSize, [{
        key: "destroy",
        value: function destroy() {
            var me = this;
            me.maxGraphSize = null;
            me.minGraphSize = null;
        }
    }], [{
        key: "fromObj",
        value: function fromObj(obj) {
            var res = new ThemeGraphSize();
            _SuperMap2.default.Util.copy(res, obj);
            return res;
        }
    }]);

    return ThemeGraphSize;
}();

exports.default = ThemeGraphSize;


_SuperMap2.default.ThemeGraphSize = ThemeGraphSize;

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServerTextStyle = __webpack_require__(18);

var _ServerTextStyle2 = _interopRequireDefault(_ServerTextStyle);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ThemeGraphText
 * @description 统计图文字标注风格类。
 * @param options - {Object} 可选参数。<br>
 *        graphTextDisplayed - {Boolean} 是否显示统计图上的文字标注。<br>
 *        graphTextFormat - {SuperMap.ThemeGraphTextFormat} 统计专题图文本显示格式。<br>
 *        graphTextStyle - {SuperMap.ServerTextStyle} 统计图上的文字标注风格。
 */
var ThemeGraphText = function () {

    /*
     * Constructor: SuperMap.ThemeGraphText
     * 统计图文字标注风格类构造函数。
     */


    /**
     * APIProperty: graphTextFormat
     * @member SuperMap.ThemeGraphText.prototype.graphTextFormat -{SuperMap.ThemeGraphTextFormat}
     * @description 统计专题图文本显示格式。<br>
     *              文本显示格式包括百分数、真实数值、标题、标题+百分数、标题+真实数值。默认为 SuperMap.ThemeGraphTextFormat.CAPTION。
     */
    function ThemeGraphText(options) {
        _classCallCheck(this, ThemeGraphText);

        this.graphTextDisplayed = false;
        this.graphTextFormat = _REST.ThemeGraphTextFormat.CAPTION;
        this.graphTextStyle = null;
        this.CLASS_NAME = "SuperMap.ThemeGraphText";

        var me = this;
        me.graphTextStyle = new _ServerTextStyle2.default();
        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: graphTextStyle
     * @member SuperMap.ThemeGraphText.prototype.graphTextStyle -{SuperMap.ServerTextStyle}
     * @description 统计图上的文字标注风格。
     */


    /**
     * APIProperty: graphTextDisplayed
     * @member SuperMap.ThemeGraphText.prototype.graphTextDisplayed -{Boolean}
     * @description 是否显示统计图上的文字标注。默认为 false，即不显示。
     */


    _createClass(ThemeGraphText, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.graphTextDisplayed = null;
            me.graphTextFormat = null;
            if (me.graphTextStyle) {
                me.graphTextStyle.destroy();
                me.graphTextStyle = null;
            }
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            var res = new ThemeGraphText();
            _SuperMap2.default.Util.copy(res, obj);
            res.graphTextStyle = _ServerTextStyle2.default.fromObj(obj.graphTextStyle);
            return res;
        }
    }]);

    return ThemeGraphText;
}();

exports.default = ThemeGraphText;


_SuperMap2.default.ThemeGraphText = ThemeGraphText;

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _Theme2 = __webpack_require__(12);

var _Theme3 = _interopRequireDefault(_Theme2);

var _ThemeGridRangeItem = __webpack_require__(234);

var _ThemeGridRangeItem2 = _interopRequireDefault(_ThemeGridRangeItem);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.ThemeGridRange
 * @description 栅格分段专题图。<br>
 *              栅格分段专题图，是将所有单元格的值按照某种分段方式分成多个范围段，值在同一个范围段中的单元格使用相同的颜色进行显示。<br>
 *              栅格分段专题图一般用来反映连续分布现象的数量或程度特征。比如某年的全国降水量分布图，将各气象站点的观测值经过内插之后生成的栅格数据进行分段显示。<br>
 *              该类类似于分段专题图类，不同点在于分段专题图的操作对象是矢量数据，而栅格分段专题图的操作对象是栅格数据。<br>
 * @augments SuperMap.Theme
 * @param options - {Object} 参数。<br>
 *        items - {Array<SuperMap.ThemeGridRangeItem>} 栅格分段专题图子项数组。<br>
 *        reverseColor - {boolean} 是否对栅格分段专题图中分段的颜色风格进行反序显示。<br>
 *        rangeMode - {SuperMap.RangeMode} 分段专题图的分段模式。<br>
 *        rangeParameter - {Number} 分段参数。<br>
 *        colorGradientType - {SuperMap.ColorGradientType} 渐变颜色枚举类。
 */
var ThemeGridRange = function (_Theme) {
    _inherits(ThemeGridRange, _Theme);

    /*
     * Constructor: SuperMap.ThemeGridRange
     * 栅格分段专题图构造函数。
     */


    /**
     * APIProperty: colorGradientType
     * @member SuperMap.ThemeGridRange.prototype.colorGradientType -{SuperMap.ColorGradientType}
     * @description 渐变颜色枚举类
     *
     */


    /**
     * APIProperty: rangeMode
     * @member SuperMap.ThemeGridRange.prototype.rangeMode -{SuperMap.RangeMode}
     * @description 分段专题图的分段模式。<br>
     *              默认值为 SuperMap.RangeMode.EQUALINTERVAL（等距离分段）。<br>
     *              在栅格分段专题图中，作为专题变量的字段或表达式的值按照某种分段方式被分成多个范围段。<br>
     *              目前 SuperMap 提供的分段方式包括：等距离分段法、平方根分段法、标准差分段法、对数分段法、等计数分段法和自定义距离法，<br>
     *              显然这些分段方法根据一定的距离进行分段，因而范围分段专题图所基于的专题变量必须为数值型。
     */
    function ThemeGridRange(options) {
        _classCallCheck(this, ThemeGridRange);

        var _this = _possibleConstructorReturn(this, (ThemeGridRange.__proto__ || Object.getPrototypeOf(ThemeGridRange)).call(this, "GRIDRANGE", options));

        _this.items = null;
        _this.rangeMode = _REST.RangeMode.EQUALINTERVAL;
        _this.rangeParameter = 0;
        _this.colorGradientType = _REST.ColorGradientType.YELLOW_RED;
        _this.reverseColor = false;
        _this.CLASS_NAME = "SuperMap.ThemeGridRange";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /**
     * APIMethod: destroy
     * @inheritDoc
     */


    /**
     * APIProperty: reverseColor
     * @member SuperMap.ThemeGridRange.prototype.reverseColor -{boolean}
     * @description 是否对栅格分段专题图中分段的颜色风格进行反序显示。
     */


    /**
     * APIProperty: rangeParameter
     * @member SuperMap.ThemeGridRange.prototype.rangeParameter -{Number}
     * @description 分段参数。<br>
     *              当分段模式为等距离分段法，平方根分段，对数分段法，计数分段法其中一种模式时，该参数用于设置分段个数，必设；当分段模式为标准差分段法时，<br>
     *              该参数不起作用；当分段模式为自定义距离时，该参数用于设置自定义距离。默认值为 -1。
     */


    /**
     * APIProperty: items
     * @member SuperMap.ThemeGridRange.prototype.items -{Array<SuperMap.ThemeGridRangeItem>}
     * @description 栅格分段专题图子项数组。<br>
     *              在栅格分段专题图中，将栅格值按照某种分段模式被分成多个范围段。<br>
     *              本类用来设置每个栅格范围段的分段起始值、终止值、名称和颜色等。每个分段所表示的范围为 [Start,End)。
     */


    _createClass(ThemeGridRange, [{
        key: 'destroy',
        value: function destroy() {
            _get(ThemeGridRange.prototype.__proto__ || Object.getPrototypeOf(ThemeGridRange.prototype), 'destroy', this).call(this);
            var me = this;
            if (me.items) {
                if (me.items.length > 0) {
                    for (var item in me.items) {
                        me.items[item].destroy();
                        me.items[item] = null;
                    }
                }
                me.items = null;
            }
            me.reverseColor = null;
            me.rangeMode = null;
            me.rangeParameter = null;
            me.colorGradientType = null;
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            if (!obj) return;
            var res = new ThemeGridRange();
            _SuperMap2.default.Util.copy(res, obj);
            var itemsR = obj.items;
            var len = itemsR ? itemsR.length : 0;
            res.items = [];
            for (var i = 0; i < len; i++) {
                res.items.push(_ThemeGridRangeItem2.default.fromObj(itemsR[i]));
            }
            return res;
        }
    }]);

    return ThemeGridRange;
}(_Theme3.default);

exports.default = ThemeGridRange;


_SuperMap2.default.ThemeGridRange = ThemeGridRange;

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServerColor = __webpack_require__(11);

var _ServerColor2 = _interopRequireDefault(_ServerColor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ThemeGridRangeItem
 * @description 栅格分段专题图子项类。<br>
 *              在栅格分段专题图中，将栅格值按照某种分段模式被分成多个范围段。<br>
 *              本类用来设置每个范围段的分段起始值、终止值、名称和颜色等。每个分段所表示的范围为 [Start,End)。<br>
 * @param options - {Object} 可选参数。如：<br>
 *        caption - {String} 栅格分段专题图子项的标题。<br>
 *        color - {SuperMap.ServerColor}栅格分段专题图中每一个分段专题图子项的对应的颜色。<br>
 *        end - {Number} 栅格分段专题图子项的终止值。<br>
 *        start - {Number} 栅格分段专题图子项的起始值。<br>
 *        visible - {Boolean} 栅格分段专题图子项是否可见。
 */
var ThemeGridRangeItem = function () {

    /*
     * Constructor: SuperMap.ThemeGridRangeItem
     * 栅格分段专题图子项类构造函数。
     */


    /**
     * APIProperty: start
     * @member SuperMap.ThemeGridRangeItem.prototype.start -{Number}
     * @description 栅格分段专题图子项的起始值，即该段专题值范围的最小值，默认值为 0。
     */


    /**
     * APIProperty:color
     * @member @member SuperMap.ThemeGridRangeItem.prototype.color -{SuperMap.ServerColor}
     * @description 栅格分段专题图中每一个分段专题图子项的对应的颜色。
     */
    function ThemeGridRangeItem(options) {
        _classCallCheck(this, ThemeGridRangeItem);

        this.caption = null;
        this.color = null;
        this.end = 0;
        this.start = 0;
        this.visible = true;
        this.CLASS_NAME = "SuperMap.ThemeGridRangeItem";

        var me = this;
        me.color = new _ServerColor2.default();
        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: visible
     * @member SuperMap.ThemeGridRangeItem.prototype.visible -{Boolean}
     * @description 栅格分段专题图子项是否可见。默认为 true。
     */


    /**
     * APIProperty: end
     * @member SuperMap.ThemeGridRangeItem.prototype.end -{Number}
     * @description 栅格分段专题图子项的终止值，即该段专题值范围的最大值，默认值为 0。
     */


    /**
     * APIProperty: caption
     * @member SuperMap.ThemeGridRangeItem.prototype.caption -{String}
     * @description 栅格分段专题图子项的标题。
     */


    _createClass(ThemeGridRangeItem, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.caption = null;
            me.end = null;
            me.start = null;
            //需要验证是够存在destroy方法
            if (me.color) {
                me.color.destroy();
                me.color = null;
            }
            me.visible = null;
        }

        /*
         * Method: toServerJSONObject
         * 转换成对应的 JSON 格式对象。
         */

    }, {
        key: 'toServerJSONObject',
        value: function toServerJSONObject() {
            var obj = {};
            obj = _SuperMap2.default.Util.copyAttributes(obj, this);
            if (obj.color) {
                if (obj.color.toServerJSONObject) {
                    obj.color = obj.color.toServerJSONObject();
                }
            }
            return obj;
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            if (!obj) return;
            var res = new ThemeGridRangeItem();
            _SuperMap2.default.Util.copy(res, obj);
            res.color = _ServerColor2.default.fromJson(obj.color);
            return res;
        }
    }]);

    return ThemeGridRangeItem;
}();

exports.default = ThemeGridRangeItem;


_SuperMap2.default.ThemeGridRangeItem = ThemeGridRangeItem;

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _Theme2 = __webpack_require__(12);

var _Theme3 = _interopRequireDefault(_Theme2);

var _ServerColor = __webpack_require__(11);

var _ServerColor2 = _interopRequireDefault(_ServerColor);

var _ThemeGridUniqueItem = __webpack_require__(236);

var _ThemeGridUniqueItem2 = _interopRequireDefault(_ThemeGridUniqueItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.ThemeGridUnique
 * @description 栅格单值专题图类。<br>
 *              栅格单值专题图，是将单元格值相同的归为一类，为每一类设定一种颜色，从而用来区分不同的类别。<br>
 *              栅格单值专题图适用于离散栅格数据和部分连续栅格数据，对于单元格值各不相同的那些连续栅格数据，使用栅格单值专题图不具有任何意义。<br>
 * @augments SuperMap.Theme
 * @param options - {Object} 可选参数。如：<br>
 *        items - {Array<SuperMap.ThemeGridUniqueItem>} 栅格单值专题图子项数组。
 *        defaultcolor - {SuperMap.ServerColor} 栅格单值专题图的默认颜色。
 */
var ThemeGridUnique = function (_Theme) {
    _inherits(ThemeGridUnique, _Theme);

    /*
     * Constructor: SuperMap.ThemeGridUnique
     * 栅格单值专题图类构造函数。
     */


    /**
     * APIProperty: defaultcolor
     * @member SuperMap.ThemeGridUnique.prototype.defaultcolor -{SuperMap.ServerColor}
     * @description 栅格单值专题图的默认颜色。
     *              对于那些未在格网单值专题图子项之列的要素使用该颜色显示。
     */
    function ThemeGridUnique(options) {
        _classCallCheck(this, ThemeGridUnique);

        var _this = _possibleConstructorReturn(this, (ThemeGridUnique.__proto__ || Object.getPrototypeOf(ThemeGridUnique)).call(this, "GRIDUNIQUE", options));

        _this.defaultcolor = null;
        _this.items = null;
        _this.CLASS_NAME = "SuperMap.ThemeGridUnique";

        var me = _this;
        me.defaultcolor = new _ServerColor2.default();
        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        return _this;
    }

    /**
     * APIMethod: destroy
     * @inheritDoc
     */


    /**
     * APIProperty: items
     * @member SuperMap.ThemeGridUnique.prototype.items -{Array<SuperMap.ThemeGridUniqueItem>}
     * @description 栅格单值专题图子项数组。
     *              栅格单值专题图将值相同的单元格归为一类，每一类是一个专题图子项。
     */


    _createClass(ThemeGridUnique, [{
        key: 'destroy',
        value: function destroy() {
            _get(ThemeGridUnique.prototype.__proto__ || Object.getPrototypeOf(ThemeGridUnique.prototype), 'destroy', this).call(this);
            var me = this;
            if (me.items) {
                if (me.items.length > 0) {
                    for (var item in me.items) {
                        me.items[item].destroy();
                        me.items[item] = null;
                    }
                }
                me.items = null;
            }

            if (me.defaultcolor) {
                me.defaultcolor.destroy();
                me.defaultcolor = null;
            }
        }

        /*
         * Method: toServerJSONObject
         * 转换成对应的 JSON 格式对象。
         */

    }, {
        key: 'toServerJSONObject',
        value: function toServerJSONObject() {
            var obj = {};
            obj = _SuperMap2.default.Util.copyAttributes(obj, this);
            if (obj.defaultcolor) {
                if (obj.defaultcolor.toServerJSONObject) {
                    obj.defaultcolor = obj.defaultcolor.toServerJSONObject();
                }
            }
            if (obj.items) {
                var items = [],
                    len = obj.items.length;
                for (var i = 0; i < len; i++) {
                    items.push(obj.items[i].toServerJSONObject());
                }
                obj.items = items;
            }
            return obj;
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            var res = new ThemeGridUnique();
            var uItems = obj.items;
            var len = uItems ? uItems.length : 0;
            _SuperMap2.default.Util.extend(res, obj);
            res.items = [];
            res.defaultcolor = new _ServerColor2.default.fromJson(obj.defaultcolor);
            for (var i = 0; i < len; i++) {
                res.items.push(new _ThemeGridUniqueItem2.default.fromObj(uItems[i]));
            }
            return res;
        }
    }]);

    return ThemeGridUnique;
}(_Theme3.default);

exports.default = ThemeGridUnique;


_SuperMap2.default.ThemeGridUnique = ThemeGridUnique;

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServerColor = __webpack_require__(11);

var _ServerColor2 = _interopRequireDefault(_ServerColor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ThemeGridUniqueItem
 * @description 栅格单值专题图子项类。<br>
 *              栅格单值专题图是将值相同的单元格归为一类，每一类是一个专题图子项。<br>
 * @param options - {Object} 可选参数。如：<br>
 *        caption - {String} 栅格单值专题图子项的名称。<br>
 *        color - {SuperMap.ServerColor} 栅格单值专题图子项的显示颜色。<br>
 *        unique - {Number} 栅格单值专题图子项的专题值，即单元格的值，值相同的单元格位于一个子项内。<br>
 *        visible - {Boolean} 栅格单值专题图子项是否可见。
 */
var ThemeGridUniqueItem = function () {

    /*
     * Constructor: SuperMap.ThemeGridUniqueItem
     * 栅格单值专题图子项类构造函数。
     */


    /**
     * APIProperty: unique
     * @member SuperMap.ThemeGridUniqueItem.prototype.unique -{Number}
     * @description 栅格单值专题图子项的专题值，即单元格的值，值相同的单元格位于一个子项内。
     */


    /**
     * APIProperty: caption
     * @member SuperMap.ThemeGridUniqueItem.prototype.caption -{String}
     * @description 栅格单值专题图子项的名称。
     */
    function ThemeGridUniqueItem(options) {
        _classCallCheck(this, ThemeGridUniqueItem);

        this.caption = null;
        this.color = null;
        this.unique = null;
        this.visible = true;
        this.CLASS_NAME = "SuperMap.ThemeGridUniqueItem";

        var me = this;
        me.color = new _ServerColor2.default();
        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: visible
     * @member SuperMap.ThemeGridUniqueItem.prototype.visible -{Boolean}
     * @description 栅格单值专题图子项是否可见。默认为true。
     */


    /**
     * APIProperty: color
     * @member SuperMap.ThemeGridUniqueItem.prototype.color -{SuperMap.ServerColor}
     * @description 栅格单值专题图子项的显示颜色。
     */


    _createClass(ThemeGridUniqueItem, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.caption = null;
            me.unique = null;

            if (me.color) {
                me.color.destroy();
                me.color = null;
            }
            me.visible = null;
        }

        /*
         * Method: toServerJSONObject
         * 转换成对应的 JSON 格式对象。
         */

    }, {
        key: 'toServerJSONObject',
        value: function toServerJSONObject() {
            var obj = {};
            obj = _SuperMap2.default.Util.copyAttributes(obj, this);
            if (obj.color) {
                if (obj.color.toServerJSONObject) {
                    obj.color = obj.color.toServerJSONObject();
                }
            }
            return obj;
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            var res = new ThemeGridUniqueItem();
            _SuperMap2.default.Util.copy(res, obj);
            res.color = _ServerColor2.default.fromJson(obj.color);
            return res;
        }
    }]);

    return ThemeGridUniqueItem;
}();

exports.default = ThemeGridUniqueItem;


_SuperMap2.default.ThemeGridUniqueItem = ThemeGridUniqueItem;

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ThemeLabelAlongLine
 * @description 标签沿线标注样式类。
 * @param options - {Object} 可选参数。如：<br>
 *        isAlongLine - {Boolean} 是否沿线显示文本。<br>
 *        alongLineDirection - {SuperMap.AlongLineDirection} 标签沿线标注方向。<br>
 *        angleFixed - {Boonlean} 当沿线显示文本时，是否将文本角度固定。<br>
 *        repeatedLabelAvoided - {Boonlean} 沿线循环标注时是否避免标签重复标注。<br>
 *        repeatIntervalFixed - {Boonlean} 循环标注间隔是否固定。<br>
 *        labelRepeatInterval - {Number} 沿线且循环标注时循环标注的间隔。
 */
var ThemeLabelAlongLine = function () {

    /*
     * Constructor: SuperMap.ThemeLabelAlongLine
     * 标签沿线标注样式类构造函数，用于创建 SuperMap.ThemeLabelAlongLine 类的新实例。
     */


    /**
     * APIProperty: repeatIntervalFixed
     * @member SuperMap.ThemeLabelAlongLine.prototype.repeatIntervalFixed -{Boonlean}
     * @description 循环标注间隔是否固定。true 表示使用固定循环标注间隔，即使用逻辑坐标来显示循环标注间隔；
     *              false 表示循环标注间隔随地图的缩放而变化，即使用地理坐标来显示循环标注间隔。默认值为 false。
     */


    /**
     * APIProperty: angleFixed
     * @member SuperMap.ThemeLabelAlongLine.prototype.angleFixed -{Boonlean}
     * @description 当沿线显示文本时，是否将文本角度固定。true 表示按固定文本角度显示文本，false 表示按照沿线角度显示文本。
     *              默认值为 false。如果固定角度，则所有标签均按所设置的文本风格中字体的旋转角度来显示，不考虑沿线标注的方向；
     *              如果不固定角度，在显示标签时会同时考虑字体的旋转角度和沿线标注的方向。
     */


    /**
     * APIProperty: isAlongLine
     * @member SuperMap.ThemeLabelAlongLine.prototype.isAlongLine -{Boolean}
     * @description 是否沿线显示文本。true 表示沿线显示文本，false 表示正常显示文本，默认为 true。
     */
    function ThemeLabelAlongLine(options) {
        _classCallCheck(this, ThemeLabelAlongLine);

        this.isAlongLine = true;
        this.alongLineDirection = _REST.AlongLineDirection.LB_TO_RT;
        this.angleFixed = false;
        this.repeatedLabelAvoided = false;
        this.repeatIntervalFixed = false;
        this.labelRepeatInterval = 0;
        this.CLASS_NAME = "SuperMap.ThemeLabelAlongLine";

        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: labelRepeatInterval
     * @member SuperMap.ThemeLabelAlongLine.prototype.labelRepeatInterval -{Number}
     * @description 沿线且循环标注时循环标注的间隔。长度的单位与地图的地理单位一致。只有设定 RepeatedLabelAvoided 为 true
     *              的时候，labelRepeatInterval 属性才有效。默认为0地图单位。
     */


    /**
     * APIProperty: repeatedLabelAvoided
     * @member SuperMap.ThemeLabelAlongLine.prototype.repeatedLabelAvoided -{Boonlean}
     * @description 沿线循环标注时是否避免标签重复标注。
     */


    /**
     * APIProperty: alongLineDirection
     * @member SuperMap.ThemeLabelAlongLine.prototype.alongLineDirection -{SuperMap.AlongLineDirection}
     * @description 标签沿线标注方向。默认为 SuperMap.AlongLineDirection.LB_TO_RT（从上到下，从左到右放置）。
     */


    _createClass(ThemeLabelAlongLine, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.isAlongLine = null;
            me.alongLineDirection = null;
            me.angleFixed = null;
            me.repeatedLabelAvoided = null;
            me.repeatIntervalFixed = null;
            me.labelRepeatInterval = null;
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            if (!obj) return;
            var t = new ThemeLabelAlongLine();
            _SuperMap2.default.Util.copy(t, obj);
            return t;
        }
    }]);

    return ThemeLabelAlongLine;
}();

exports.default = ThemeLabelAlongLine;


_SuperMap2.default.ThemeLabelAlongLine = ThemeLabelAlongLine;

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServerStyle = __webpack_require__(9);

var _ServerStyle2 = _interopRequireDefault(_ServerStyle);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ThemeLabelBackground
 * @description 标签背景风格类。通过该类可以设置标签的背景形状和风格。
 * @param options - {Object} 可选参数。如：<br>
 *        labelBackShape - {SuperMap.LabelBackShape} 标签专题图中标签背景风格。<br>
 *        backStyle - {SuperMap.ServerStyle} 标签专题图中标签背景的形状枚举类。
 */
var ThemeLabelBackground = function () {

    /*
     * Constructor: SuperMap.ThemeLabelBackground
     * 标签背景风格类构造函数，用于创建 ThemeLabelBackGround 类的新实例。
     */


    /**
     * APIProperty: labelBackShape
     * @member SuperMap.ThemeLabelBackground.prototype.labelBackShape -{SuperMap.LabelBackShape}
     * @description 标签专题图中标签背景风格。当背景形状
     *              labelBackShape 属性设为 NONE（即无背景形状） 时，backStyle 属性无效。
     */
    function ThemeLabelBackground(options) {
        _classCallCheck(this, ThemeLabelBackground);

        this.labelBackShape = _REST.LabelBackShape.NONE;
        this.backStyle = null;
        this.CLASS_NAME = "SuperMap.ThemeLabelBackground";

        var me = this;
        me.backStyle = new _ServerStyle2.default();
        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: backStyle
     * @member SuperMap.ThemeLabelBackground.prototype.backStyle -{SuperMap.ServerStyle}
     * @description 标签专题图中标签背景的形状枚举类。背景类型可
     *              以是矩形、圆角矩形、菱形、椭圆形、三角形和符号等，默认为 SuperMap.LabelBackShape.NONE，
     *              即不使用任何的形状作为标签的背景。
     */


    _createClass(ThemeLabelBackground, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.labelBackShape = null;
            if (me.backStyle) {
                me.backStyle.destroy();
                me.backStyle = null;
            }
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            if (!obj) return;
            var t = new ThemeLabelBackground();
            t.labelBackShape = obj.labelBackShape;
            t.backStyle = _ServerStyle2.default.fromJson(obj.backStyle);

            return t;
        }
    }]);

    return ThemeLabelBackground;
}();

exports.default = ThemeLabelBackground;


_SuperMap2.default.ThemeLabelBackground = ThemeLabelBackground;

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServerTextStyle = __webpack_require__(18);

var _ServerTextStyle2 = _interopRequireDefault(_ServerTextStyle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ThemeLabelItem
 * @description 分段标签专题图的子项。<br>
 *              标签专题图用专题值对点、线、面等对象做标注，值得注意的是，分段标签专题图允许用户通过 rangeExpression <br>
 *              字段指定用于分段的数值型字段，同一范围段内的标签具有相同的显示风格，其中每一个范围段就是一个专题图子项，<br>
 *              每一个子项都具有其名称、风格、起始值和终止值。注意：每个分段所表示的范围为 [Start, End)。例如：标签专题图的分段点有两个子项，<br>
 *              他们所代表的分段区间分别为[0,5)，[5,10)。那么需要分别设置 SuperMap.ThemeLabelItem[0].start=0，<br>
 *              SuperMap.ThemeLabelItem[0].end=5，SuperMap.ThemeLabelItem[1].start=5，SuperMap.ThemeLabelItem[1].end=10。
 * @param options - {Object} 可选参数。如：<br>
 *        caption - {String} 专题图子项的名称。<br>
 *        end - {Number} 标签专题图子项的终止值。<br>
 *        start - {Number} 标签专题图子项的分段起始值。<br>
 *        visible - {Boolean} 标签专题图子项是否可见。<br>
 *        style - {SuperMap.ServerTextStyle} 标签专题图子项文本的显示风格。
 */
var ThemeLabelItem = function () {

    /*
     * Constructor: SuperMap.ThemeLabelItem
     * 分段标签专题图的子项类构造函数，用于创建 SuperMap.ThemeLabelItem 类的新实例。
     */


    /**
     * APIProperty: visible
     * @member SuperMap.ThemeLabelItem.prototype.visible -{Boolean}
     * @description 标签专题图子项是否可见。如果标签专题图子项可见，则为 true，否则为 false。默认值为 true。
     */


    /**
     * APIProperty: end
     * @member SuperMap.ThemeLabelItem.prototype.end -{Number}
     * @description 标签专题图子项的终止值。如果该子项是分段中最后一个子项，那么该终止值就是分段的最大值；
     *              如果不是最后一项，该终止值必须与其下一子项的起始值相同，否则系统抛出异常。默认为0。
     */
    function ThemeLabelItem(options) {
        _classCallCheck(this, ThemeLabelItem);

        this.caption = null;
        this.end = 0;
        this.start = 0;
        this.visible = true;
        this.style = null;
        this.CLASS_NAME = "SuperMap.ThemeLabelItem";

        var me = this;
        me.style = new _ServerTextStyle2.default();
        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: style
     * @member SuperMap.ThemeLabelItem.prototype.style -{SuperMap.ServerTextStyle}
     * @description 标签专题图子项文本的显示风格。各种风格的优先级从高到低为：<br>
     *              uniformMixedStyle（标签文本的复合风格），SuperMap.ThemeLabelItem.style（分段子项的文本风格），uniformStyle（统一文本风格）。
     */


    /**
     * APIProperty: start
     * @member SuperMap.ThemeLabelItem.prototype.start -{Number}
     * @description 标签专题图子项的分段起始值。如果该子项是分段中第一项，那么该起始值就是分段的最小值；
     *              如果该子项的序号大于等于 1 的时候，该起始值必须与前一子项的终止值相同，否则系统会抛出异常。默认为0。
     */


    /**
     * APIProperty: caption
     * @member SuperMap.ThemeLabelItem.prototype.caption -{String}
     * @description 标签专题子项的标题。
     */


    _createClass(ThemeLabelItem, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.caption = null;
            me.end = null;
            me.start = null;
            if (me.style) {
                me.style.destroy();
                me.style = null;
            }
            me.visible = null;
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            if (!obj) return;
            var t = new ThemeLabelItem();
            _SuperMap2.default.Util.copy(t, obj);
            return t;
        }
    }]);

    return ThemeLabelItem;
}();

exports.default = ThemeLabelItem;


_SuperMap2.default.ThemeLabelItem = ThemeLabelItem;

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServerTextStyle = __webpack_require__(18);

var _ServerTextStyle2 = _interopRequireDefault(_ServerTextStyle);

var _LabelMixedTextStyle = __webpack_require__(179);

var _LabelMixedTextStyle2 = _interopRequireDefault(_LabelMixedTextStyle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ThemeLabelText
 * @description 标签中文本风格类。
 *              通过该类可以设置标签中的文本字体大小和显示风格。
 * @param options - {Object} 可选参数。如：<br>
 *        maxTextHeight - {Number} 标签中文本的最大高度。<br>
 *        maxTextWidth - {Number} 标签中文本的最大宽度。<br>
 *        minTextHeight - {Number} 标签中文本的最小高度。<br>
 *        minTextWidth - {Number} 标签中文本的最小宽度。<br>
 *        uniformStyle - {SuperMap.ServerTextStyle} 统一文本风格。<br>
 *        uniformMixedStyle - {SuperMap.LabelMixedTextStyle} 标签专题图统一的文本复合风格。
 */
var ThemeLabelText = function () {

    /*
     * Constructor: SuperMap.ThemeLabelText
     * 标签中文本风格类构造函数，用于创建 SuperMap.ThemeLabelText 类的新实例。
     */


    /**
     * APIProperty: uniformStyle
     * @member SuperMap.ThemeLabelText.prototype.uniformStyle -{SuperMap.ServerTextStyle}
     * @description 统一文本风格。当标签专题图子项的个数大于等于1时，
     *              uniformStyle 不起作用，各标签的风格使用子项中设置的风格。各种风格的优先级从高到低为：uniformMixedStyle（标签文本的复合风格），
     *              SuperMap.ThemeLabelItem.style（分段子项的文本风格），uniformStyle（统一文本风格）。
     */


    /**
     * APIProperty: minTextHeight
     * @member SuperMap.ThemeLabelText.prototype.minTextHeight -{Number}
     * @description 标签中文本的最小高度。当标签文本不固定大小时，即 SuperMap.ServerTextStyle.sizeFixed = false 有效，
     *              当缩小后的文本高度小于最小高度之后就不再缩小。宽度单位为0.1毫米。默认为0毫米。
     */


    /**
     * APIProperty: maxTextHeight
     * @member SuperMap.ThemeLabelText.prototype.maxTextHeight -{Number}
     * @description 标签中文本的最大高度。当标签文本不固定大小时，即 SuperMap.ServerTextStyle.sizeFixed = false 有效，
     *              当放大后的文本高度超过最大高度之后就不再放大。高度单位为0.1毫米。高度单位为0.1毫米。默认为 0 毫米。
     */
    function ThemeLabelText(options) {
        _classCallCheck(this, ThemeLabelText);

        this.maxTextHeight = 0;
        this.maxTextWidth = 0;
        this.minTextHeight = 0;
        this.minTextWidth = 0;
        this.uniformStyle = null;
        this.uniformMixedStyle = null;
        this.CLASS_NAME = "SuperMap.ThemeLabelText";

        var me = this;
        me.uniformStyle = new _ServerTextStyle2.default();
        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: uniformMixedStyle
     *@member SuperMap.ThemeLabelText.prototype.uniformMixedStyle -{SuperMap.LabelMixedTextStyle}
     *@description  标签专题图统一的文本复合风格。通过该类可以使同一个标
     *              签中的文字使用多种风格显示。各种风格的优先级从高到低为：uniformMixedStyle（标签文本的复合风格），
     *              SuperMap.ThemeLabelItem.style（分段子项的文本风格），uniformStyle（统一文本风格）。
     */


    /**
     * APIProperty: minTextWidth
     * @member SuperMap.ThemeLabelText.prototype.minTextWidth -{Number}
     * @description 标签中文本的最小宽度。当标签文本不固定大小时，即 SuperMap.ServerTextStyle.sizeFixed = false 有效，
     *              当缩小后的文本宽度小于最小宽度之后就不再缩小。宽度单位为0.1毫米。默认为0毫米。
     */


    /**
     * APIProperty: maxTextWidth
     * @member SuperMap.ThemeLabelText.prototype.maxTextWidth -{Number}
     * @description 标签中文本的最大宽度。当标签文本不固定大小时，即 SuperMap.ServerTextStyle.sizeFixed = false 有效，
     *              当放大后的文本宽度超过最大高度之后就不再放大。宽度单位为0.1毫米。默认为0毫米。
     */


    _createClass(ThemeLabelText, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.maxTextHeight = null;
            me.maxTextWidth = null;
            me.minTextHeight = null;
            me.minTextWidth = null;
            if (me.uniformStyle) {
                me.uniformStyle.destroy();
                me.uniformStyle = null;
            }
            if (me.uniformMixedStyle) {
                me.uniformMixedStyle.destroy();
                me.uniformMixedStyle = null;
            }
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            if (!obj) return;
            var res = new ThemeLabelText();
            _SuperMap2.default.Util.copy(res, obj);
            res.uniformStyle = _ServerTextStyle2.default.fromObj(obj.uniformStyle);
            res.uniformMixedStyle = _LabelMixedTextStyle2.default.fromObj(obj.uniformMixedStyle);
            return res;
        }
    }]);

    return ThemeLabelText;
}();

exports.default = ThemeLabelText;


_SuperMap2.default.ThemeLabelText = ThemeLabelText;

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServerTextStyle = __webpack_require__(18);

var _ServerTextStyle2 = _interopRequireDefault(_ServerTextStyle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ThemeLabelUniqueItem
 * @description 单值标签专题图的子项。<br>
 *              标签专题图用专题值对点、线、面等对象做标注，值得注意的是，单值标签专题图允许用户通过 uniqueExpression <br>
 *              字段指定用于单值的字段，同一值的标签具有相同的显示风格，其中每一个值就是一个专题图子项，<br>
 *              每一个子项都具有其名称、风格、指定的单值、X方向偏移量和Y方向偏移量。
 * @param options - {Object} 可选参数。如：<br>
 *        caption - {String} 专题图子项的名称。<br>
 *        unique - {String} 单值专题图子项的值，可以为数字、字符串等。<br>
 *        offsetX - {Number} 标签在X方向偏移量。<br>
 *        offsetY - {Number} 标签在Y方向偏移量。<br>
 *        visible - {Boolean} 标签专题图子项是否可见。<br>
 *        style - {SuperMap.ServerTextStyle} 标签专题图子项文本的显示风格。
 */
var ThemeLabelUniqueItem = function () {

    /*
     * Constructor: SuperMap.ThemeLabelUniqueItem
     * 单值标签专题图的子项类构造函数，用于创建 SuperMap.ThemeLabelUniqueItem 类的新实例。
     */


    /**
     * APIProperty: visible
     * SuperMap.ThemeLabelUniqueItem.prototype.visible -{Boolean}
     * @description 标签专题图子项是否可见。如果标签专题图子项可见，则为 true，否则为 false。默认值为 true。
     */


    /**
     * APIProperty: offsetX
     * SuperMap.ThemeLabelUniqueItem.prototype.offsetX -{Number}
     * @description 标签在X方向偏移量。
     */


    /**
     * APIProperty: caption
     * SuperMap.ThemeLabelUniqueItem.prototype.caption -{String}
     * @description 标签专题子项的标题。
     */
    function ThemeLabelUniqueItem(options) {
        _classCallCheck(this, ThemeLabelUniqueItem);

        this.caption = null;
        this.unique = null;
        this.offsetX = 0;
        this.offsetY = 0;
        this.visible = true;
        this.style = null;
        this.CLASS_NAME = "SuperMap.ThemeLabelUniqueItem";

        var me = this;
        me.style = new _ServerTextStyle2.default();
        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: style
     * SuperMap.ThemeLabelUniqueItem.prototype.style -{SuperMap.ServerTextStyle}
     * @description 标签专题图子项文本的显示风格。各种风格的优先级从高到低为：
     *              uniformMixedStyle（标签文本的复合风格），SuperMap.ThemeLabelUniqueItem.style（单值子项的文本风格），uniformStyle（统一文本风格）。
     */


    /**
     * APIProperty: offsetY
     * SuperMap.ThemeLabelUniqueItem.prototype.offsetY -{Number}
     * @description 标签在Y方向偏移量。
     */


    /**
     * APIProperty: unique
     * SuperMap.ThemeLabelUniqueItem.prototype.unique -{String}
     * @description 单值专题图子项的值，可以为数字、字符串等。
     */


    _createClass(ThemeLabelUniqueItem, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.unique = null;
            me.caption = null;
            me.offsetX = null;
            me.offsetY = null;
            if (me.style) {
                me.style.destroy();
                me.style = null;
            }
            me.visible = null;
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            if (!obj) return;
            var t = new ThemeLabelUniqueItem();
            _SuperMap2.default.Util.copy(t, obj);
            return t;
        }
    }]);

    return ThemeLabelUniqueItem;
}();

exports.default = ThemeLabelUniqueItem;


_SuperMap2.default.ThemeLabelUniqueItem = ThemeLabelUniqueItem;

/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ThemeMemoryData
 * @description 专题图内存数据类。
 * @param srcData - {Array()} 原始值数组。
 * @param targetData - {Array()} 外部值数组。
 */
var ThemeMemoryData = function () {

    /**
     * @function SuperMap.ThemeMemoryData.prototype.initialize
     * @description 专题图内存数据类构造函数。
     * @param srcData - {Array()} 原始值数组。
     * @param targetData - {Array()} 外部值数组。
     */


    /*
     * Property: srcData
     * {Array()} 原始值数组，该属性值将被 targetData 属性所指定的值替换掉，然后制作专题图，但数据库中的值并不会改变。
     */
    function ThemeMemoryData(srcData, targetData) {
        _classCallCheck(this, ThemeMemoryData);

        this.srcData = null;
        this.targetData = null;
        this.CLASS_NAME = "SuperMap.ThemeMemoryData";

        if (srcData) {
            this.srcData = srcData;
        }
        if (targetData) {
            this.targetData = targetData;
        }
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /*
     * Property: targetData
     * {Array()} 外部值数组，即用于制作专题图的内存数据，设定该属性值后，会将 srcData 属性所指定的原始值替换掉制作专题图，但数据库中的值并不会改变。
     */


    _createClass(ThemeMemoryData, [{
        key: "destroy",
        value: function destroy() {
            var me = this;
            me.srcData = null;
            me.targetData = null;
        }

        /*
         * Method: toJSON
         * 将 SuperMap.ThemeMemoryData 对象转化为json字符串。
         *
         * Returns:
         * {String} 返回转换后的 JSON 字符串。
         */

    }, {
        key: "toJSON",
        value: function toJSON() {
            if (this.srcData && this.targetData) {
                var memoryDataStr = "";
                var count = Math.min(this.srcData.length, this.targetData.length);
                for (var i = 0; i < count; i++) {
                    memoryDataStr += "\'" + this.srcData[i] + "\':\'" + this.targetData[i] + "\',";
                }
                //去除多余的逗号
                if (i > 0) {
                    memoryDataStr = memoryDataStr.substring(0, memoryDataStr.length - 1);
                }
                return "{" + memoryDataStr + "}";
            } else {
                return null;
            }
        }
    }]);

    return ThemeMemoryData;
}();

exports.default = ThemeMemoryData;


_SuperMap2.default.ThemeMemoryData = ThemeMemoryData;

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _JoinItem = __webpack_require__(29);

var _JoinItem2 = _interopRequireDefault(_JoinItem);

var _ThemeDotDensity = __webpack_require__(41);

var _ThemeDotDensity2 = _interopRequireDefault(_ThemeDotDensity);

var _ThemeGraduatedSymbol = __webpack_require__(42);

var _ThemeGraduatedSymbol2 = _interopRequireDefault(_ThemeGraduatedSymbol);

var _ThemeGraph = __webpack_require__(43);

var _ThemeGraph2 = _interopRequireDefault(_ThemeGraph);

var _ThemeLabel = __webpack_require__(32);

var _ThemeLabel2 = _interopRequireDefault(_ThemeLabel);

var _ThemeRange = __webpack_require__(44);

var _ThemeRange2 = _interopRequireDefault(_ThemeRange);

var _ThemeUnique = __webpack_require__(45);

var _ThemeUnique2 = _interopRequireDefault(_ThemeUnique);

var _ThemeGridRange = __webpack_require__(233);

var _ThemeGridRange2 = _interopRequireDefault(_ThemeGridRange);

var _ThemeGridUnique = __webpack_require__(235);

var _ThemeGridUnique2 = _interopRequireDefault(_ThemeGridUnique);

var _LabelImageCell = __webpack_require__(178);

var _LabelImageCell2 = _interopRequireDefault(_LabelImageCell);

var _LabelSymbolCell = __webpack_require__(180);

var _LabelSymbolCell2 = _interopRequireDefault(_LabelSymbolCell);

var _LabelThemeCell = __webpack_require__(181);

var _LabelThemeCell2 = _interopRequireDefault(_LabelThemeCell);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ThemeParameters
 * @description 专题图参数类。
 *               该类存储了制作专题所需的参数，包括数据源、数据集名称和专题图对象。
 * @param options - {Object} 可选参数。如：<br>
 *        datasetNames - {Array(String)} 要制作专题图的数据集数组，必设。<br>
 *        dataSourceNames - {Array(String)} 要制作专题图的数据集所在的数据源数组，必设。<br>
 *        joinItems - {Array<SuperMap.JoinItem>} 专题图外部表的连接信息 JoinItem 数组。<br>
 *        themes - {Array(<SuperMap.Theme>)} 专题图对象列表。<br>
 *        displayFilters -{Array(String)} 专题图属性过滤条件。<br>
 *        displayOrderBys -{Array(String)} 专题图对象生成符号叠加次序排序字段。<br>
 *        fieldValuesDisplayFilter -{Object} 图层要素的显示和隐藏的过滤属性，其带有三个属性，分别是:values、fieldName、fieldValuesDisplayMode。
 */
var ThemeParameters = function () {

    /*
     * Constructor: SuperMap.ThemeParameters
     * 专题图参数类构造函数。
     */


    /**
     * APIProperty: displayOrderBy
     * @member SuperMap.ThemeParameters.prototype.displayOrderBys -{Array<String>}
     * @description 专题图对象生成符号叠加次序排序字段
     */


    /**
     * APIProperty: themes
     * @member SuperMap.ThemeParameters.prototype.themes -{Array<SuperMap.Theme>}
     * @description 专题图对象列表。
     *               该参数为实例化的各类专题图对象的集合。
     */


    /**
     * APIProperty: dataSourceNames
     * @member SuperMap.ThemeParameters.prototype.dataSourceNames -{Array(String)}
     * @description 要制作专题图的数据集所在的数据源数组，必设。
     */
    function ThemeParameters(options) {
        _classCallCheck(this, ThemeParameters);

        this.datasetNames = null;
        this.dataSourceNames = null;
        this.joinItems = null;
        this.themes = null;
        this.displayFilters = null;
        this.displayOrderBys = null;
        this.fieldValuesDisplayFilter = null;
        this.CLASS_NAME = "SuperMap.ThemeParameters";

        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: fieldValuesDisplayFilter
     * @member SuperMap.ThemeParameters.prototype.fieldValuesDisplayFilter -{Object}
     * @description 图层要素的显示和隐藏的过滤属性，其带有三个属性，分别是:values、fieldName、fieldValuesDisplayMode,他们的作用如下：<br>
     *               values：{Array<Number>} - 就是要过滤的值；<br>
     *               fieldName：{String} - 要过滤的字段名称 只支持数字类型的字段；<br>
     *               fieldValuesDisplayMode：{String} 目前有两个DISPLAY/DISABLE。当为DISPLAY时，表示只显示以上设置的相应属性值的要素，否则表示不显示以上设置的相应属性值的要素
     */


    /**
     * APIProperty: displayFilters
     * @member SuperMap.ThemeParameters.prototype.displayFilters -{Array<String>}
     * @description 专题图属性过滤条件。
     */


    /**
     * APIProperty: joinItems
     * @member SuperMap.ThemeParameters.prototype.joinItems -{Array<SuperMap.JoinItem>}
     * @description 设置与外部表的连接信息 JoinItem 数组。
     *               使用此属性可以制作与外部表连接的专题图。
     */


    /**
     * APIProperty: datasetNames
     * @member SuperMap.ThemeParameters.prototype.datasetNames -{Array(String)}
     * @description 要制作专题图的数据集数组，必设。
     */


    _createClass(ThemeParameters, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.datasetNames = null;
            me.dataSourceNames = null;
            if (me.joinItems) {
                for (var i = 0, joinItems = me.joinItems, len = joinItems.length; i < len; i++) {
                    joinItems[i].destroy();
                }
                me.joinItems = null;
            }
            if (me.themes) {
                for (var i = 0, themes = me.themes, len = themes.length; i < len; i++) {
                    themes[i].destroy();
                }
                me.themes = null;
            }
        }
    }]);

    return ThemeParameters;
}();

exports.default = ThemeParameters;


_SuperMap2.default.ThemeParameters = ThemeParameters;

/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServerStyle = __webpack_require__(9);

var _ServerStyle2 = _interopRequireDefault(_ServerStyle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ThemeRangeItem
 * @description 范围分段专题图子项类。<br>
 *              在分段专题图中，字段值按照某种分段模式被分成多个范围段，每个范围段即为一个子项，同一范围段的要素属于同一个分段专题图子项。
 *              每个子项都有其分段起始值、终止值、名称和风格等。每个分段所表示的范围为[start, end)。
 * @param options - {Object} 可选参数。如：<br>
 *        caption - {String} 分段专题图子项的标题。<br>
 *        end - {Number} 分段专题图子项的终止值。<br>
 *        start - {Number} 分段专题图子项的起始值。<br>
 *        style - {SuperMap.ServerStyle} 分段专题图子项的风格。<br>
 *        visible - {Boolean} 分段专题图子项是否可见。
 */
var ThemeRangeItem = function () {

    /*
     * Constructor: SuperMap.ThemeRangeItem
     * 范围分段专题图子项类构造函数。
     */


    /**
     * APIProperty: style
     * @member SuperMap.ThemeRangeItem.prototype.style -{SuperMap.ServerStyle}
     * @description 分段专题图子项的风格。
     *              每一个分段专题图子项都对应一种显示风格。
     */


    /**
     * APIProperty: end
     * @member SuperMap.ThemeRangeItem.prototype.end -{Number}
     * @description 分段专题图子项的终止值，即该段专题值范围的最大值，默认值为 0。<br>
     *              如果该子项是分段中最后一个子项，则该终止值应大于分段字段（ThemeRange 类的 rangeExpression 属性）的最大值，若该终止值小于分段字段最大值，
     *              则剩余部分由内部随机定义其颜色；如果不是最后一项，该终止值必须与其下一子项的起始值相同，否则系统抛出异常；
     *              如果设置了范围分段模式和分段数，则会自动计算每段的范围[start, end)，故无需设置[start, end)；当然可以设置，那么结果就会按您设置的值对分段结果进行调整。
     */
    function ThemeRangeItem(options) {
        _classCallCheck(this, ThemeRangeItem);

        this.caption = null;
        this.end = 0;
        this.start = 0;
        this.style = null;
        this.visible = true;
        this.CLASS_NAME = "SuperMap.ThemeRangeItem";

        var me = this;
        me.style = new _ServerStyle2.default();
        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: visible
     * @member SuperMap.ThemeRangeItem.prototype.visible -{Boolean}
     * @description 分段专题图子项是否可见。默认为 true。
     */


    /**
     * APIProperty: start
     * @member SuperMap.ThemeRangeItem.prototype.start -{Number}
     * @description 分段专题图子项的起始值，即该段专题值范围的最小值，默认值为 0。<br>
     *              如果该子项是分段中第一个子项，那么该起始值就是分段的最小值；如果子项的序号大于等于1的时候，该起始值必须与前一子项的终止值相同，否则系统会抛出异常。
     *              如果设置了范围分段模式和分段数，则会自动计算每段的范围[start, end)，故无需设置[start, end)；当然可以设置，那么结果就会按您设置的值对分段结果进行调整。
     */


    /**
     * APIProperty: caption
     * @member SuperMap.ThemeRangeItem.prototype.caption -{String}
     * @description 分段专题图子项的标题。
     */


    _createClass(ThemeRangeItem, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.caption = null;
            me.end = null;
            me.start = null;

            if (me.style) {
                me.style.destroy();
                me.style = null;
            }
            me.visible = null;
        }

        /*
         * Method: toServerJSONObject
         * 转换成对应的 JSON 格式对象。
         */

    }, {
        key: 'toServerJSONObject',
        value: function toServerJSONObject() {
            var obj = {};
            obj = _SuperMap2.default.Util.copyAttributes(obj, this);
            if (obj.style) {
                if (obj.style.toServerJSONObject) {
                    obj.style = obj.style.toServerJSONObject();
                }
            }
            return obj;
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            if (!obj) return;
            var res = new ThemeRangeItem();
            _SuperMap2.default.Util.copy(res, obj);
            res.style = _ServerStyle2.default.fromJson(obj.style);
            return res;
        }
    }]);

    return ThemeRangeItem;
}();

exports.default = ThemeRangeItem;


_SuperMap2.default.ThemeRangeItem = ThemeRangeItem;

/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _ThemeParameters = __webpack_require__(243);

var _ThemeParameters2 = _interopRequireDefault(_ThemeParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.ThemeService
 * @description 专题图服务类。
 * @augments SuperMap.CommonServiceBase
 * @example
 * (start code)
 * var myThemeService = new SuperMap.ThemeService(url, {
 *     eventListeners: {
 *           "processCompleted": themeCompleted,
 *           "processFailed": themeFailed
 *           }
 * });
 * (end)
 * @param url - {String} 服务的访问地址。如：http://localhost:8090/iserver/services/map-world/rest/maps/World+Map 。
 * @param options - {Object} 交互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var ThemeService = function (_CommonServiceBase) {
    _inherits(ThemeService, _CommonServiceBase);

    /**
     * @function SuperMap.ThemeService.initialize
     * @description 专题图服务类构造函数。
     * @param url - {String} 服务的访问地址。如：http://localhost:8090/iserver/services/map-world/rest/maps/World+Map 。
     * @param options - {Object} 交互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */
    function ThemeService(url, options) {
        _classCallCheck(this, ThemeService);

        var _this = _possibleConstructorReturn(this, (ThemeService.__proto__ || Object.getPrototypeOf(ThemeService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.ThemeService";

        if (options) {
            _SuperMap2.default.Util.extend(_this, options);
        }
        var end,
            me = _this;
        end = me.url.substr(me.url.length - 1, 1);
        if (me.isInTheSameDomain) {
            me.url += end === "/" ? "tempLayersSet.json?" : "/tempLayersSet.json?";
        } else {
            me.url += end === "/" ? "tempLayersSet.jsonp?" : "/tempLayersSet.jsonp?";
        }
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(ThemeService, [{
        key: 'destroy',
        value: function destroy() {
            _get(ThemeService.prototype.__proto__ || Object.getPrototypeOf(ThemeService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.ThemeService.processAsync
         * @description 负责将客户端的专题图参数传递到服务端。
         * @param params - {SuperMap.ThemeParameters} 专题图参数类。
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                jsonParameters = null;
            jsonParameters = me.getJsonParameters(params);
            me.request({
                method: "POST",
                data: jsonParameters,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }

        /*
         * Method: getJsonParameters
         * 将专题图参数参数转化为 JSON 字符串。
         *
         * Parameters:
         * params - {SuperMap.ThemeParameters}
         *
         * Returns:
         * {Object} 转化后的JSON字符串。
         */

    }, {
        key: 'getJsonParameters',
        value: function getJsonParameters(parameter) {
            var jsonParameters = "",
                themeType = "",
                themeObj = null,
                filters = null,
                orderBys = null,
                fieldValuesDisplayFilter;
            jsonParameters += "[{'type': 'UGC','subLayers': {'layers': [";
            for (var themeID in parameter.themes) {
                themeObj = parameter.themes[themeID];
                var jsonTheme = _SuperMap2.default.Util.toJSON(themeObj);
                jsonTheme = jsonTheme.slice(0, -1);

                jsonParameters += "{'theme': " + jsonTheme + "},'type': 'UGC','ugcLayerType': 'THEME',";
                filters = parameter.displayFilters;
                if (filters && filters.length > 0) {
                    if (filters.length === 1) {
                        jsonParameters += "'displayFilter':\"" + filters[0] + "\",";
                    } else {
                        jsonParameters += "'displayFilter':\"" + filters[themeID] + "\",";
                    }
                }
                orderBys = parameter.displayOrderBy;
                if (orderBys && orderBys.length > 0) {
                    if (orderBys.length === 1) {
                        jsonParameters += "'displayOrderBy':'" + orderBys[0] + "',";
                    } else {
                        jsonParameters += "'displayOrderBy':'" + orderBys[themeID] + "',";
                    }
                }

                fieldValuesDisplayFilter = parameter.fieldValuesDisplayFilter;
                if (fieldValuesDisplayFilter) {
                    jsonParameters += "'fieldValuesDisplayFilter':" + _SuperMap2.default.Util.toJSON(fieldValuesDisplayFilter) + ",";
                }

                if (parameter.joinItems && parameter.joinItems.length > 0 && parameter.joinItems[themeID]) {
                    jsonParameters += "'joinItems':[" + _SuperMap2.default.Util.toJSON(parameter.joinItems[themeID]) + "],";
                }
                if (parameter.datasetNames && parameter.dataSourceNames) {
                    var datasetID = parameter.datasetNames[themeID] ? themeID : parameter.datasetNames.length - 1;
                    var dataSourceID = parameter.dataSourceNames[themeID] ? themeID : parameter.dataSourceNames.length - 1;
                    jsonParameters += "'datasetInfo': {'name': '" + parameter.datasetNames[datasetID] + "','dataSourceName': '" + parameter.dataSourceNames[dataSourceID] + "'}},";
                } else {
                    jsonParameters += "},";
                }
            }
            //去除多余的逗号
            if (parameter.themes && parameter.themes.length > 0) {
                jsonParameters = jsonParameters.substring(0, jsonParameters.length - 1);
            }
            jsonParameters += "]},";
            var urlArray = this.url.split("/");
            var jsonMapName = urlArray[urlArray.length - 2];

            jsonParameters += "'name': '" + jsonMapName + "'}]";
            return jsonParameters;
        }
    }]);

    return ThemeService;
}(_CommonServiceBase3.default);

exports.default = ThemeService;


_SuperMap2.default.ThemeService = ThemeService;

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ServerStyle = __webpack_require__(9);

var _ServerStyle2 = _interopRequireDefault(_ServerStyle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ThemeUniqueItem
 * @description 单值专题图子项类。<br>
 *              单值专题图是将专题值相同的要素归为一类，为每一类设定一种渲染风格，其中每一类就是一个专题图子项。比如，利用单值专题图制作行政区划图，Name 字段代表
 *              省/直辖市名，该字段用来做专题变量，如果该字段的字段值总共有5种不同值，则该行政区划图有5个专题图子项。
 * @param options - {Object} 可选参数。如：<br>
 *        caption - {String} 单值专题图子项的标题。
 *        style - {SuperMap.ServerStyle} 单值专题图子项的风格。
 *        unique - {String} 单值专题图子项的单值。
 *        visible - {Boolean} 单值专题图子项是否可见。
 */
var ThemeUniqueItem = function () {

    /*
     * Constructor: SuperMap.ThemeUniqueItem
     * 单值专题图子项类构造函数。
     */


    /**
     * APIProperty: unique
     * @member SuperMap.ThemeUniqueItem.prototype.unique -{String}
     * @description 单值专题图子项的值，可以为数字、字符串等。
     */


    /**
     * APIProperty: caption
     * @member SuperMap.ThemeUniqueItem.prototype.caption -{String}
     * @description 单值专题图子项的标题。
     */
    function ThemeUniqueItem(options) {
        _classCallCheck(this, ThemeUniqueItem);

        this.caption = null;
        this.style = null;
        this.unique = null;
        this.visible = true;
        this.CLASS_NAME = "SuperMap.ThemeUniqueItem";

        var me = this;
        me.style = new _ServerStyle2.default();
        if (options) {
            _SuperMap2.default.Util.extend(this, options);
        }
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: visible
     * @member SuperMap.ThemeUniqueItem.prototype.visible -{Boolean}
     * @description 单值专题图子项的可见性。默认为 true，表示可见。
     */


    /**
     * APIProperty: style
     * @member SuperMap.ThemeUniqueItem.prototype.style -{SuperMap.ServerStyle}
     * @description 单值专题图子项的显示风格。
     */


    _createClass(ThemeUniqueItem, [{
        key: 'destroy',
        value: function destroy() {
            var me = this;
            me.caption = null;
            me.unique = null;

            if (me.style) {
                me.style.destroy();
                me.style = null;
            }
            me.visible = null;
        }

        /*
         * Method: toServerJSONObject
         * 转换成对应的 JSON 格式对象。
         */

    }, {
        key: 'toServerJSONObject',
        value: function toServerJSONObject() {
            var obj = {};
            obj = _SuperMap2.default.Util.copyAttributes(obj, this);
            if (obj.style) {
                if (obj.style.toServerJSONObject) {
                    obj.style = obj.style.toServerJSONObject();
                }
            }
            return obj;
        }
    }], [{
        key: 'fromObj',
        value: function fromObj(obj) {
            var res = new ThemeUniqueItem();
            _SuperMap2.default.Util.copy(res, obj);
            res.style = _ServerStyle2.default.fromJson(obj.style);
            return res;
        }
    }]);

    return ThemeUniqueItem;
}();

exports.default = ThemeUniqueItem;


_SuperMap2.default.ThemeUniqueItem = ThemeUniqueItem;

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _SpatialAnalystBase2 = __webpack_require__(6);

var _SpatialAnalystBase3 = _interopRequireDefault(_SpatialAnalystBase2);

var _DatasetThiessenAnalystParameters = __webpack_require__(113);

var _DatasetThiessenAnalystParameters2 = _interopRequireDefault(_DatasetThiessenAnalystParameters);

var _GeometryThiessenAnalystParameters = __webpack_require__(154);

var _GeometryThiessenAnalystParameters2 = _interopRequireDefault(_GeometryThiessenAnalystParameters);

var _GeoJSON = __webpack_require__(5);

var _GeoJSON2 = _interopRequireDefault(_GeoJSON);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.ThiessenAnalystService
 * @constructs SuperMap.ThiessenAnalystService
 * @classdesc
 * 泰森多边形分析服务类
 * 该类负责将客户设置的泰森多边形分析参数传递给服务端，并接收服务端返回的分析结果数据。
 * 泰森多边形分析结果通过该类支持的事件的监听函数参数获取
 * 泰森多边形分析的参数支持两种，当参数为 {SuperMap.DatasetThiessenAnalystParameters} 类型
 * 时，执行数据集泰森多边形分析，当参数为 {SuperMap.GeometryThiessenAnalystParameters} 类型时，
 * 执行几何对象泰森多边形分析。
 * @extends {SuperMap.SpatialAnalystBase}
 * @api
 * @example 例如：
 * (start code)
 * var myThiessenAnalystService = new SuperMap.ThiessenAnalystService(url, {
     *     eventListeners: {
     *           "processCompleted": bufferCompleted,
     *           "processFailed": bufferFailed
     *           }
     *    });
 * (end)
 *
 */
var ThiessenAnalystService = function (_SpatialAnalystBase) {
    _inherits(ThiessenAnalystService, _SpatialAnalystBase);

    /**
     * @method SuperMap.ThiessenAnalystService.initialize
     * @param options - {Object} 参数。
     * @param url - {String} 服务的访问地址。
     * 如 http://localhost:8090/iserver/services/spatialanalyst-changchun/restjsr/spatialanalyst 。
     * Allowed options properties:</br>
     * eventListeners - {Object} 需要被注册的监听器对象。
     */
    function ThiessenAnalystService(url, options) {
        _classCallCheck(this, ThiessenAnalystService);

        var _this = _possibleConstructorReturn(this, (ThiessenAnalystService.__proto__ || Object.getPrototypeOf(ThiessenAnalystService)).call(this, url, options));

        _this.mode = null;
        _this.CLASS_NAME = "SuperMap.ThiessenAnalystService";

        var me = _this;
        if (options) {
            _SuperMap2.default.Util.extend(me, options);
        }
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源,将引用资源的属性置空。
     */


    /**
     * Property: mode
     * {String} 缓冲区分析类型
     */


    _createClass(ThiessenAnalystService, [{
        key: 'destroy',
        value: function destroy() {
            _get(ThiessenAnalystService.prototype.__proto__ || Object.getPrototypeOf(ThiessenAnalystService.prototype), 'destroy', this).call(this);
            this.mode = null;
        }

        /**
         *
         * @method SuperMap.ThiessenAnalystService.processAsync
         * @description 负责将客户端的查询参数传递到服务端。
         * @param parameter - {SuperMap.DatasetThiessenAnalystParameters}/{GeometryThiessenAnalystParameters}
         */

    }, {
        key: 'processAsync',
        value: function processAsync(parameter) {
            var parameterObject = {};
            var me = this;

            var end = me.url.substr(me.url.length - 1, 1);
            if (end === '/') {} else {
                me.url += "/";
            }

            if (parameter instanceof _DatasetThiessenAnalystParameters2.default) {
                me.mode = "datasets";
                me.url += 'datasets/' + parameter.dataset + '/thiessenpolygon';
                _DatasetThiessenAnalystParameters2.default.toObject(parameter, parameterObject);
            } else if (parameter instanceof _GeometryThiessenAnalystParameters2.default) {
                me.mode = "geometry";
                me.url += 'geometry/thiessenpolygon';
                _GeometryThiessenAnalystParameters2.default.toObject(parameter, parameterObject);
            }

            var jsonParameters = _SuperMap2.default.Util.toJSON(parameterObject);

            if (me.isInTheSameDomain) {
                me.url += '.json?returnContent=true';
            } else {
                me.url += '.jsonp?returnContent=true';
            }

            me.request({
                method: "POST",
                data: jsonParameters,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }

        /**
         * @method SuperMap.ThiessenAnalystService.toGeoJSONResult
         * @description 将含有geometry的数据转换为geojson格式。
         * @result - {Object} 服务器返回的结果对象。
         */

    }, {
        key: 'toGeoJSONResult',
        value: function toGeoJSONResult(result) {
            if (!result) {
                return result;
            }

            result = _get(ThiessenAnalystService.prototype.__proto__ || Object.getPrototypeOf(ThiessenAnalystService.prototype), 'toGeoJSONResult', this).call(this, result);
            if (result.regions) {
                var geoJSONFormat = new _GeoJSON2.default();
                result.regions = JSON.parse(geoJSONFormat.write(result.regions));
            }
            return result;
        }
    }]);

    return ThiessenAnalystService;
}(_SpatialAnalystBase3.default);

exports.default = ThiessenAnalystService;


_SuperMap2.default.ThiessenAnalystService = ThiessenAnalystService;

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.TilesetsService
 * @description 切片列表信息查询服务类;即查询切片地图服务的切片列表，返回切片集名称、地图切片元数据信息、切片版本集信息
 * @augments SuperMap.CommonServiceBase
 * @param url - {String} 地图服务地址。URL应为：<br>
 *                        http://{服务器地址}:{服务端口号}/iserver/services/{服务名}/rest/maps/map；<br>
 *                       例如: "http://localhost:8090/iserver/services/test/rest/maps/tianlocal";
 * @param options - {Object} 交互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var TilesetsService = function (_CommonServiceBase) {
    _inherits(TilesetsService, _CommonServiceBase);

    /**
     * @function SuperMap.TilesetsService.initialize
     * @description 切片列表信息查询服务类构造函数。
     * @param url - {String} 地图服务地址。URL应为：<br>
     *                        http://{服务器地址}:{服务端口号}/iserver/services/{服务名}/rest/maps/map；<br>
     *                       例如: "http://localhost:8090/iserver/services/test/rest/maps/tianlocal";
     * @param options - {Object} 交互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */
    function TilesetsService(url, options) {
        _classCallCheck(this, TilesetsService);

        var _this = _possibleConstructorReturn(this, (TilesetsService.__proto__ || Object.getPrototypeOf(TilesetsService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.TilesetsService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(TilesetsService, [{
        key: 'destroy',
        value: function destroy() {
            _get(TilesetsService.prototype.__proto__ || Object.getPrototypeOf(TilesetsService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.TilesetsService.processAsync
         * @description 负责将客户端的查询参数传递到服务端。
         */

    }, {
        key: 'processAsync',
        value: function processAsync() {
            if (!this.url) {
                return;
            }
            var me = this;
            var end = me.url.substr(me.url.length - 1, 1);

            me.url = me.url + (end === "/" ? "tilesets" : "/tilesets") + (this.isInTheSameDomain ? ".json?" : ".jsonp?");

            me.request({
                method: "GET",
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return TilesetsService;
}(_CommonServiceBase3.default);

exports.default = TilesetsService;


_SuperMap2.default.TilesetsService = TilesetsService;

/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Class: SuperMap.TransferLine
 * 换乘路线信息类。
 */
var TransferLine = function () {

    /**
     * Constructor: SuperMap.TransferLine
     * 换乘路线信息类构造函数。
     *
     * Parameters:
     * options - {Object} 参数。
     *
     * Allowed options properties:
     * lineID - {String} 乘车路线名称。
     * lineName - {String} 乘车路线名称。
     * lineAliasName - {String} 乘车路线别名。
     * startStopIndex - {Number} 上车站点在本公交路线中的索引。
     * startStopName - {String} 上车站点名称。
     * startStopAliasName - {String} 上车站点别名。
     * endStopIndex - {Number} 下车站点在本公交路线中的索引。
     * endStopName - {String} 下车站点名称。
     * endStopAliasName - {String} 下车站点别名。
     */


    /**
     * APIProperty: endStopName
     * {String} 下车站点名称。
     */


    /**
     * APIProperty: startStopAliasName
     * {String} 上车站点别名。
     */


    /**
     * APIProperty: startStopIndex
     * {Number} 上车站点在本公交路线中的索引。
     */


    /**
     * APIProperty: lineName
     * {String} 乘车路线名称。
     */
    function TransferLine(options) {
        _classCallCheck(this, TransferLine);

        this.lineID = null;
        this.lineName = null;
        this.lineAliasName = null;
        this.startStopIndex = null;
        this.startStopName = null;
        this.startStopAliasName = null;
        this.endStopIndex = null;
        this.endStopName = null;
        this.endStopAliasName = null;
        this.CLASS_NAME = "SuperMap.TransferLine";

        options = options || {};
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: endStopAliasName
     * {String} 下车站点别名。
     */


    /**
     * APIProperty: endStopIndex
     * {Number} 下车站点在本公交路线中的索引。
     */


    /**
     * APIProperty: startStopName
     * {String} 上车站点名称。
     */


    /**
     * APIProperty: lineAliasName
     * {String} 乘车路线别名。
     */

    /**
     * APIProperty: lineID
     * {Number} 乘车路线名称。
     */


    _createClass(TransferLine, [{
        key: 'destroy',
        value: function destroy() {
            _SuperMap2.default.Util.reset(this);
        }

        /**
         * Function: SuperMap.TransferLine.fromJson
         * 将返回结果转化为 SuperMap.TransferLine 对象。
         *
         * Parameters:
         * jsonObject - {Object} 新的返回结果。
         *
         * Returns:
         * {SuperMap.TransferLine} 转化后的 SuperMap.TransferLine 对象。
         */

    }], [{
        key: 'fromJson',
        value: function fromJson(jsonObject) {
            if (!jsonObject) {
                return;
            }
            return new TransferLine({
                lineID: jsonObject['lineID'],
                lineName: jsonObject['lineName'],
                lineAliasName: jsonObject['lineAliasName'],
                startStopIndex: jsonObject['startStopIndex'],
                startStopName: jsonObject['startStopName'],
                startStopAliasName: jsonObject['startStopAliasName'],
                endStopIndex: jsonObject['endStopIndex'],
                endStopName: jsonObject['endStopName'],
                endStopAliasName: jsonObject['endStopAliasName']
            });
        }
    }]);

    return TransferLine;
}();

exports.default = TransferLine;


_SuperMap2.default.TransferLine = TransferLine;

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _TransferLine = __webpack_require__(249);

var _TransferLine2 = _interopRequireDefault(_TransferLine);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.TransferPathParameters
 * @constructs SuperMap.TransferPathParameters
 * @classdesc
 * 交通换乘线路查询参数类。
 * @api
 * @param options - {Object} 参数。
 * Allowed options properties:</br>
 * transferLines - {Array(<SuperMap.TransferLine>)} 本换乘分段内可乘车的路线集合。</br>
 * points - {Array(Integer)} 两种查询方式：按照公交站点的起止ID进行查询和按照起止点的坐标进行查询。</br>
 */
var TransferPathParameters = function () {

    /**
     * APIProperty: transferLines
     * {Array(<SuperMap.TransferLine>)} 本换乘分段内可乘车的路线集合，通过交通换乘方案查询得到
     */
    function TransferPathParameters(options) {
        _classCallCheck(this, TransferPathParameters);

        this.transferLines = null;
        this.points = false;
        this.CLASS_NAME = "SuperMap.TransferPathParameters";

        options = options || {};
        _SuperMap2.default.Util.extend(this, options);
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: points
     * {Array(String) or Array(Object)} 两种查询方式：
     *           1. 按照公交站点的起止ID进行查询，则points参数的类型为int[]，形如：[起点ID、终点ID]，
     * 公交站点的ID对应服务提供者配置中的站点ID字段；
     *           2. 按照起止点的坐标进行查询，则points参数的类型为Point2D[]，形如：[{"x":44,"y":39},{"x":45,"y":40}]。
     */


    _createClass(TransferPathParameters, [{
        key: 'destroy',
        value: function destroy() {
            _SuperMap2.default.Util.reset(this);
        }

        /**
         * @method SuperMap.TransferPathParameters.toJson
         * @description 将 <SuperMap.TransferPathParameters> 对象参数转换为 json 字符串。
         * @param params - {SuperMap.TransferPathParameters} 交通换乘参数。
         * @returns {String} 转化后的 json字符串。
         */

    }], [{
        key: 'toJson',
        value: function toJson(params) {
            if (params) {
                return _SuperMap2.default.Util.toJSON(params);
            }
        }
    }]);

    return TransferPathParameters;
}();

exports.default = TransferPathParameters;


_SuperMap2.default.TransferPathParameters = TransferPathParameters;

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _TransferPathParameters = __webpack_require__(250);

var _TransferPathParameters2 = _interopRequireDefault(_TransferPathParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.TransferPathService
 * @constructs SuperMap.TransferPathService
 * @classdesc
 * 交通换乘线路查询服务类，根据交通换乘分析结果(TransferSolutionResult)，获取某一条乘车路线的详细信息。
 * 返回结果通过该类支持的事件的监听函数参数获取
 * @extends {SuperMap.CommonServiceBase}
 * @example 例如：
 * (start code)
 * var myService = new SuperMap.TransferPathService(url, {eventListeners: {
     *     "processCompleted": TrafficTransferCompleted,
     *     "processFailed": TrafficTransferError
     *     }
     * };
 * (end)
 * @api
 * @param url - {String} 与客户端交互的交通换乘线路查询服务地址。
 * 例如:</br>"http://localhost:8090/iserver/services/traffictransferanalyst-sample/restjsr/traffictransferanalyst/Traffic-Changchun"。
 * @param options - {Object} 参数。
 *
 * Allowed options properties:</br>
 * eventListeners - {Object} 需要被注册的监听器对象。
 */
var TransferPathService = function (_CommonServiceBase) {
    _inherits(TransferPathService, _CommonServiceBase);

    function TransferPathService(url, options) {
        _classCallCheck(this, TransferPathService);

        var _this = _possibleConstructorReturn(this, (TransferPathService.__proto__ || Object.getPrototypeOf(TransferPathService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.TransferPathService";
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源,将引用资源的属性置空。
     */


    _createClass(TransferPathService, [{
        key: 'destroy',
        value: function destroy() {
            _get(TransferPathService.prototype.__proto__ || Object.getPrototypeOf(TransferPathService.prototype), 'destroy', this).call(this);
        }

        /**
         * @method SuperMap.TransferPathService.processAsync
         * @description 负责将客户端的更新参数传递到服务端。
         * @param params - {SuperMap.TransferPathParameters} 交通换乘参数。
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                method = "GET",
                jsonParameters,
                end;

            end = me.url.substr(me.url.length - 1, 1);
            me.url += end === "/" ? '' : '/';
            me.url += me.isInTheSameDomain ? "path.json?" : "path.jsonp";

            jsonParameters = {
                points: _SuperMap2.default.Util.toJSON(params.points),
                transferLines: _SuperMap2.default.Util.toJSON(params['transferLines'])
            };

            me.request({
                method: method,
                params: jsonParameters,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return TransferPathService;
}(_CommonServiceBase3.default);

exports.default = TransferPathService;


_SuperMap2.default.TransferPathService = TransferPathService;

/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.TransferSolutionParameters
 * @constructs SuperMap.TransferSolutionParameters
 * @classdesc
 * 交通换乘方案查询参数类。
 * @api
 * @param options - {Object} 参数。
 * Allowed options properties:</br>
 * solutionCount - {Boolean} 乘车方案的数量。默认为6。</br>
 * transferTactic - {SuperMap.TransferTactic} 交通换乘策略类型，
 * 包括时间最短、距离最短、最少换乘、最少步行四种选择。</br>
 * transferPreference - {SuperMap.TransferPreference} 乘车偏好枚举。</br>
 * walkingRatio - {Array(Number)} 步行与公交的消耗权重比，默认值为 10。</br>
 * points - {Array(Number)} 两种查询方式：按照公交站点的起止ID进行查询和按照起止点的坐标进行查询。</br>
 * evadeLines - {Array(Number)} 避让路线的ID，默认为null。</br>
 * evadeStops - {Array(Number)} 避让站点的ID，默认为null。</br>
 * priorLines - {Array(Number)} 优先路线的ID，默认为null。</br>
 * priorStops - {Array(Number)} 优先站点的ID，默认为null。</br>
 * travelTime - {String} 出行的时间。</br>
 */
var TransferSolutionParameters = function () {

    /**
     * APIProperty: priorStops
     * {Array(Number)} 优先站点ID。
     * */


    /**
     * APIProperty: evadeStops
     * {Array(Number)} 避让站点ID。
     * */


    /**
     * APIProperty: points
     * {Array(String) or Array(Object)} 两种查询方式：
     *           1. 按照公交站点的起止ID进行查询，则points参数的类型为int[]，形如：[起点ID、终点ID]，
     * 公交站点的ID对应服务提供者配置中的站点ID字段；
     *           2. 按照起止点的坐标进行查询，则points参数的类型为Point2D[]，形如：[{"x":44,"y":39},{"x":45,"y":40}]。
     */


    /**
     * APIProperty: transferTactic
     * {SuperMap.TransferTactic} 交通换乘策略类型，包括时间最短、距离最短、最少换乘、
     * 最少步行四种选择。默认为SuperMap.TransferTactic.LESS_TIME
     */


    /**
     * APIProperty: solutionCount
     * {Number} 乘车方案的数量。默认为6。
     */
    function TransferSolutionParameters(options) {
        _classCallCheck(this, TransferSolutionParameters);

        this.solutionCount = 6;
        this.transferPreference = _REST.TransferPreference.NONE;
        this.transferTactic = _REST.TransferTactic.LESS_TIME;
        this.walkingRatio = null;
        this.points = false;
        this.evadeLines = null;
        this.evadeStops = null;
        this.priorLines = null;
        this.priorStops = null;
        this.travelTime = null;
        this.CLASS_NAME = "SuperMap.TransferSolutionParameters";

        options = options || {};
        _SuperMap2.default.Util.extend(this, options);
    }

    /*
     * APIMethod: destroy
     * 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: travelTime
     * {String} 出行的时间； 格式是："小时:分钟"，如："08:30"。如果设置了该参数，在分析时，则会考虑线路的首末班车时间的限制，即在返回的结果中会提示公交的首末班发车时间。
     */


    /**
     * APIProperty: priorLines
     * {Array(Number)} 优先路线ID。
     * */


    /**
     * APIProperty: evadeLines
     * {Array(Number)} 避让路线ID。
     * */


    /**
     * APIProperty: walkingRatio
     * {Number} 步行与公交的消耗权重比，默认值为 10。此值越大，则步行因素对于方案选择的影响越大。例如：
     * 例如现在有两种换乘方案（在仅考虑消耗因素的情况下）：
     * 方案1：坐车10公里，走路1公里；
     * 方案2：坐车15公里，走路0.5公里；
     * 1. 假设权重比为15：
     * •方案1的总消耗为：10 + 1*15 = 25
     * •方案2的总消耗为：15 + 0.5*15 = 22.5
     * 此时方案2消耗更低。
     * 2. 假设权重比为2：
     * •方案1的总消耗为：10+1*2 = 12
     * •方案2的总消耗为：15+0.5*2 = 17
     * 此时方案1消耗更低。
     */


    /**
     * APIProperty: transferPreference
     * {SuperMap.TransferPreference} 乘车偏好枚举。默认为SuperMap.TransferPreference.NONE
     */


    _createClass(TransferSolutionParameters, [{
        key: 'destroy',
        value: function destroy() {
            _SuperMap2.default.Util.reset(this);
        }

        /**
         * @method SuperMap.TransferSolutionParameters.toJsonParameters
         * @description 将 <SuperMap.TransferSolutionParameters> 对象参数转换为 json 字符串。
         * @param  params - {SuperMap.TransferSolutionParameters} 交通换乘参数。
         * @return {String} 转化后的 json字符串。
         */

    }], [{
        key: 'toJson',
        value: function toJson(params) {
            if (params) {
                return _SuperMap2.default.Util.toJSON(params);
            }
        }
    }]);

    return TransferSolutionParameters;
}();

exports.default = TransferSolutionParameters;


_SuperMap2.default.TransferSolutionParameters = TransferSolutionParameters;

/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _CommonServiceBase2 = __webpack_require__(3);

var _CommonServiceBase3 = _interopRequireDefault(_CommonServiceBase2);

var _TransferSolutionParameters = __webpack_require__(252);

var _TransferSolutionParameters2 = _interopRequireDefault(_TransferSolutionParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.TransferSolutionService
 * @constructs SuperMap.TransferSolutionService
 * @classdesc
 * 交通换乘方案查询服务类。
 * 返回结果通过该类支持的事件的监听函数参数获取。
 * @extends {SuperMap.CommonServiceBase}
 * @api

 * @example 例如：
 * (start code)
 * var myService = new SuperMap.TransferSolutionService(url, {eventListeners: {
     *     "processCompleted": trafficTransferCompleted,
     *     "processFailed": trafficTransferError
     *     }
     * };
 * (end)
 *
 *
 */
var TransferSolutionService = function (_CommonServiceBase) {
    _inherits(TransferSolutionService, _CommonServiceBase);

    /**
     *
     * @method SuperMap.TransferSolutionService.initialize
     * @param url - {String} 与客户端交互的交通换乘方案查询服务地址。
     * 例如:</br>"http://localhost:8090/iserver/services/traffictransferanalyst-sample/restjsr/traffictransferanalyst/Traffic-Changchun"。
     * @param options - {Object} 参数。
     * Allowed options properties:</br>
     * eventListeners - {Object} 需要被注册的监听器对象。</br>
     */
    function TransferSolutionService(url, options) {
        _classCallCheck(this, TransferSolutionService);

        var _this = _possibleConstructorReturn(this, (TransferSolutionService.__proto__ || Object.getPrototypeOf(TransferSolutionService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.TransferSolutionService";
        return _this;
    }

    /*
     * APIMethod: destroy
     * 释放资源,将引用资源的属性置空。
     */


    _createClass(TransferSolutionService, [{
        key: 'destroy',
        value: function destroy() {
            _get(TransferSolutionService.prototype.__proto__ || Object.getPrototypeOf(TransferSolutionService.prototype), 'destroy', this).call(this);
        }

        /**
         * @method SuperMap.TransferSolutionService.processAsync
         * @description 负责将客户端的更新参数传递到服务端。
         * @param params - {SuperMap.TransferSolutionParameters} 交通换乘参数。
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }
            var me = this,
                method = "GET",
                jsonParameters,
                end;

            end = me.url.substr(me.url.length - 1, 1);
            me.url += end === "/" ? '' : '/';
            me.url += me.isInTheSameDomain ? "solutions.json?" : "solutions.jsonp";

            jsonParameters = {
                points: _SuperMap2.default.Util.toJSON(params.points),
                walkingRatio: params['walkingRatio'],
                transferTactic: params['transferTactic'],
                solutionCount: params['solutionCount'],
                transferPreference: params["transferPreference"]
            };
            if (params.evadeLines) jsonParameters["evadeLines"] = _SuperMap2.default.Util.toJSON(params.evadeLines);
            if (params.evadeStops) jsonParameters["evadeStops"] = _SuperMap2.default.Util.toJSON(params.evadeStops);
            if (params.priorLines) jsonParameters["priorLines"] = _SuperMap2.default.Util.toJSON(params.priorLines);
            if (params.priorStops) jsonParameters["priorStops"] = _SuperMap2.default.Util.toJSON(params.priorStops);
            if (params.travelTime) jsonParameters["travelTime"] = params.travelTime;

            me.request({
                method: method,
                params: jsonParameters,
                scope: me,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }
    }]);

    return TransferSolutionService;
}(_CommonServiceBase3.default);

exports.default = TransferSolutionService;


_SuperMap2.default.TransferSolutionService = TransferSolutionService;

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/** * Class: SuperMap.TransportationAnalystResultSetting * 交通网络分析结果参数类。 * 通过该类设置交通网络分析返回的结果，包括是否返回图片、是否返回弧段空间信息、是否返回结点空间信息等。 */
var TransportationAnalystResultSetting = function () {

  /**     * Constructor: SuperMap.TransportationAnalystResultSetting     * 交通网络分析结果参数类构造函数。     *     * Parameters:     * options - {Object} 参数。     *     * Allowed options properties:     * returnEdgeFeatures - {Boolean} 是否在分析结果中包含弧段要素集合。     * returnEdgeGeometry - {Boolean} 返回的弧段要素集合中是否包含几何对象信息。默认为 false。     * returnEdgeIDs - {Boolean} 返回结果中是否包含经过弧段 ID 集合。默认为 false。     * returnNodeFeatures - {Boolean} 是否在分析结果中包含结点要素集合。     * returnNodeGeometry - {Boolean} 返回的结点要素集合中是否包含几何对象信息。默认为 false。     * returnNodeIDs - {Boolean} 返回结果中是否包含经过结点 ID 集合。默认为 false。     * returnPathGuides - {Boolean} 返回分析结果中是否包含行驶导引集合。     * returnRoutes - {Boolean} 返回分析结果中是否包含路由对象的集合。     */


  /**     * APIProperty: returnPathGuides     * {Boolean} 返回分析结果中是否包含行驶导引集合。     */


  /**     * APIProperty: returnNodeGeometry     * {Boolean} 返回的结点要素集合中是否包含几何对象信息。默认为 false。     */


  /**     * APIProperty: returnEdgeIDs     * {Boolean} 返回结果中是否包含经过弧段 ID 集合。默认为 false。     */


  /**     * APIProperty: returnEdgeFeatures     * {Boolean} 是否在分析结果中包含弧段要素集合。弧段要素包括弧段的空间信息和属性信息。     */
  function TransportationAnalystResultSetting(options) {
    _classCallCheck(this, TransportationAnalystResultSetting);

    this.returnEdgeFeatures = false;
    this.returnEdgeGeometry = false;
    this.returnEdgeIDs = false;
    this.returnNodeFeatures = false;
    this.returnNodeGeometry = false;
    this.returnNodeIDs = false;
    this.returnPathGuides = false;
    this.returnRoutes = false;
    this.CLASS_NAME = "SuperMap.TransportationAnalystResultSetting";

    if (!options) {
      return;
    }
    _SuperMap2.default.Util.extend(this, options);
  }

  /**     * APIMethod: destroy     * 释放资源，将引用资源的属性置空。     */


  /**     * APIProperty: returnRoutes     * {Boolean} 返回分析结果中是否包含路由对象的集合。     */


  /**     * APIProperty: returnNodeIDs     * {Boolean} 返回结果中是否包含经过结点 ID 集合。默认为 false。     */


  /**     * APIProperty: returnNodeFeatures     * {Boolean} 是否在分析结果中包含结点要素集合。     * 结点要素包括结点的空间信息和属性信息。其中返回的结点要素是否包含空间信息可通过 returnNodeGeometry 字段设置。默认为 false。     */


  /**     * APIProperty: returnEdgeGeometry     * {Boolean} 返回的弧段要素集合中是否包含几何对象信息。默认为 false。     */


  _createClass(TransportationAnalystResultSetting, [{
    key: "destroy",
    value: function destroy() {
      var me = this;
      me.returnEdgeFeatures = null;
      me.returnEdgeGeometry = null;
      me.returnEdgeIDs = null;
      me.returnNodeFeatures = null;
      me.returnNodeGeometry = null;
      me.returnNodeIDs = null;
      me.returnPathGuides = null;
      me.returnRoutes = null;
    }
  }]);

  return TransportationAnalystResultSetting;
}();

exports.default = TransportationAnalystResultSetting;

_SuperMap2.default.TransportationAnalystResultSetting = TransportationAnalystResultSetting;

/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Class: SuperMap.UGCLayer
 * UGC 图层类。
 */
var UGCLayer = function () {

    /**
     * Constructor: SuperMap.UGCMapLayer
     * UGC 图层类构造函数。
     *
     * Parameters:
     * options - {Object} 参数。
     *
     * Allowed options properties:
     * bounds - {SuperMap.Bounds} 图层范围。
     * caption - {String} 图层的标题。
     * description - {String} 图层的描述信息。
     * name - {String} 图层的名称。
     * queryable - {Boolean} 图层中的对象是否可以查询。
     * subUGCLayers - {Boolean} 是否允许图层的符号大小随图缩放。
     * type - {SuperMap.UGCLayerType} 图层类型。
     * visible - {Boolean} 地图对象在同一范围内时，是否重叠显示，默认为False。
     */


    /**
     * APIProperty: type
     * {SuperMap.UGCLayerType} 图层类型。
     */


    /**
     * APIProperty: queryable
     * {Boolean} 图层中的对象是否可以查询。
     */


    /**
     * APIProperty: description
     * {String} 图层的描述信息。
     */


    /**
     * APIProperty: bounds
     * {SuperMap.Bounds} 图层范围。
     */
    function UGCLayer(options) {
        _classCallCheck(this, UGCLayer);

        this.bounds = null;
        this.caption = null;
        this.description = null;
        this.name = null;
        this.queryable = null;
        this.subLayers = null;
        this.type = null;
        this.visible = null;
        this.CLASS_NAME = "SuperMap.UGCLayer";

        options = options ? options : {};
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * APIProperty: visible
     * {Boolean} 图层是否可视。
     */


    /**
     * APIProperty: subUGCLayers
     * {Array} 子图层集。
     */


    /**
     * APIProperty: name
     * {String} 图层的名称。
     */


    /**
     * APIProperty: caption
     * {String} 图层的标题。
     */


    _createClass(UGCLayer, [{
        key: "destroy",
        value: function destroy() {
            var me = this;
            _SuperMap2.default.Util.reset(me);
        }

        /**
         * Method: fromJson
         * 将服务端JSON对象转换成当前客户端对象
         * Parameters:
         * jsonObject - {Object} 要转换的 JSON 对象。
         */

    }, {
        key: "fromJson",
        value: function fromJson(jsonObject) {
            jsonObject = jsonObject ? jsonObject : {};
            _SuperMap2.default.Util.extend(this, jsonObject);
            var b = this.bounds;
            if (b) {
                this.bounds = new _SuperMap2.default.Bounds(b.leftBottom.x, b.leftBottom.y, b.rightTop.x, b.rightTop.y);
            }
        }

        /**
         * Method: toServerJSONObject
         * 转换成对应的 JSON 格式对象。
         */

    }, {
        key: "toServerJSONObject",
        value: function toServerJSONObject() {
            var jsonObject = {};
            jsonObject = _SuperMap2.default.Util.copyAttributes(jsonObject, this);
            if (jsonObject.bounds) {
                if (jsonObject.bounds.toServerJSONObject) {
                    jsonObject.bounds = jsonObject.bounds.toServerJSONObject();
                }
            }
            return jsonObject;
        }
    }]);

    return UGCLayer;
}();

exports.default = UGCLayer;


_SuperMap2.default.UGCLayer = UGCLayer;

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _UGCLayer2 = __webpack_require__(255);

var _UGCLayer3 = _interopRequireDefault(_UGCLayer2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Class: SuperMap.UGCMapLayer
 * UGC 地图图层类。
 *
 * Inherits from:
 *  - <SuperMap.UGCLayer>
 */
var UGCMapLayer = function (_UGCLayer) {
  _inherits(UGCMapLayer, _UGCLayer);

  /**
   * Constructor: SuperMap.UGCMapLayer
   * UGC 地图图层类构造函数。
   *
   * Parameters:
   * options - {Object} 参数。
   *
   * Allowed options properties:
   * completeLineSymbolDisplayed - {Boolean} 是否显示完整线型。
   * maxScale - {Number} 地图最大比例尺。
   * minScale - {Number} 地图最小比例尺。
   * minVisibleGeometrySize - {Number} 几何对象的最小可见大小，以像素为单位。
   * opaqueRate - {Integer} 图层的不透明度。
   * symbolScalable - {Boolean} 是否允许图层的符号大小随图缩放。
   * symbolScale - {Number} 图层的符号缩放基准比例尺。
   * overlapDisplayed - {Boolean} 地图对象在同一范围内时，是否重叠显示，默认为False。
   * overlapDisplayedOptions - {SuperMap.OverlapDisplayedOptions} 地图的压盖过滤显示选项，当
   * overlapDisplayed 为 false 时有效。
   */

  /**
   * APIProperty: overlapDisplayed
   * {Boolean} 地图对象在同一范围内时，是否重叠显示，默认为False。
   */

  /**
   * APIProperty: symbolScalable
   * {Boolean} 是否允许图层的符号大小随图缩放。
   */

  /**
   * APIProperty: minVisibleGeometrySize
   * {Number} 几何对象的最小可见大小，以像素为单位。
   */

  /**
   * APIProperty: maxScale
   * {Number} 地图最大比例尺。
   */
  function UGCMapLayer(options) {
    _classCallCheck(this, UGCMapLayer);

    options = options || {};

    var _this = _possibleConstructorReturn(this, (UGCMapLayer.__proto__ || Object.getPrototypeOf(UGCMapLayer)).call(this, options));

    _this.completeLineSymbolDisplayed = null;
    _this.maxScale = null;
    _this.minScale = null;
    _this.minVisibleGeometrySize = null;
    _this.opaqueRate = null;
    _this.symbolScalable = null;
    _this.symbolScale = null;
    _this.overlapDisplayed = null;
    _this.overlapDisplayedOptions = null;
    _this.CLASS_NAME = "SuperMap.UGCMapLayer";
    return _this;
  }
  /**
   * APIProperty: overlapDisplayedOptions
   * {SuperMap.OverlapDisplayedOptions} 地图的压盖过滤显示选项，当 overlapDisplayed 为 false 时有效。
   */

  /**
   * APIProperty: symbolScale
   * {Number} 图层的符号缩放基准比例尺。
   */

  /**
   * APIProperty: opaqueRate
   * {Integer} 图层的不透明度。
   */

  /**
   * APIProperty: minScale
   * {Number} 地图最小比例尺。
   */


  /**
   * APIProperty: completeLineSymbolDisplayed
   * {Boolean} 是否显示完整线型。
   */


  _createClass(UGCMapLayer, [{
    key: 'destroy',
    value: function destroy() {
      _get(UGCMapLayer.prototype.__proto__ || Object.getPrototypeOf(UGCMapLayer.prototype), 'destroy', this).call(this);
      _SuperMap2.default.Util.reset(this);
    }

    /**
     * Method: fromJson
     * 将服务端JSON对象转换成当前客户端对象
     * Parameters:
     * jsonObject - {Object} 要转换的 JSON 对象。
     */

  }, {
    key: 'fromJson',
    value: function fromJson(jsonObject) {
      _get(UGCMapLayer.prototype.__proto__ || Object.getPrototypeOf(UGCMapLayer.prototype), 'fromJson', this).call(this, jsonObject);
    }

    /**
     * Method: toServerJSONObject
     * 转换成对应的 JSON 格式对象。
     */

  }, {
    key: 'toServerJSONObject',
    value: function toServerJSONObject() {
      return _get(UGCMapLayer.prototype.__proto__ || Object.getPrototypeOf(UGCMapLayer.prototype), 'toServerJSONObject', this).call(this);
    }
  }]);

  return UGCMapLayer;
}(_UGCLayer3.default);

exports.default = UGCMapLayer;


_SuperMap2.default.UGCMapLayer = UGCMapLayer;

/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.UpdateEdgeWeightParameters
 * @description 边的耗费权重更新服务参数类。
 * @param options - {Object} 可选参数。如：<br>
 *        edgeId - {String} 所在边的id。<br>
 *        fromNodeId - {String} 起始转向点的id。<br>
 *        toNodeId - {String} 终止转向点的id。<br>
 *        weightField - {String} 边的耗费字段。<br>
 *        edgeWeight - {String} 耗费权重。
 */
var UpdateEdgeWeightParameters = function () {

    /*
     * Constructor: SuperMap.UpdateEdgeWeightParameters
     * 边的耗费权重更新服务参数类构造函数。
     */


    /**
     * APIProperty: weightField
     * @member SuperMap.UpdateEdgeWeightParameters.prototype.weightField -{String}
     * @description 边的耗费字段
     */


    /**
     * APIProperty: fromNodeId
     * @member SuperMap.UpdateEdgeWeightParameters.prototype.fromNodeId -{String}
     * @description 起始转向点的id
     */
    function UpdateEdgeWeightParameters(option) {
        _classCallCheck(this, UpdateEdgeWeightParameters);

        this.edgeId = "";
        this.fromNodeId = "";
        this.toNodeId = "";
        this.weightField = "";
        this.edgeWeight = "";
        this.CLASS_NAME = "SuperMap.UpdateEdgeWeightParameters";

        if (!option) return;

        option.edgeId && (this.edgeId = option.edgeId);
        option.fromNodeId && (this.fromNodeId = option.fromNodeId);
        option.toNodeId && (this.toNodeId = option.toNodeId);
        option.weightField && (this.weightField = option.weightField);
        option.edgeWeight && (this.edgeWeight = option.edgeWeight);
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: edgeWeight
     * @member SuperMap.UpdateEdgeWeightParameters.prototype.edgeWeight -{String}
     * @description 耗费权重
     */


    /**
     * APIProperty: toNodeId
     * @member SuperMap.UpdateEdgeWeightParameters.prototype.toNodeId -{String}
     * @description 终止转向点的id
     */


    /**
     * APIProperty: edgeId
     * @member SuperMap.UpdateEdgeWeightParameters.prototype.edgeId -{String}
     * @description 所在边的id
     */


    _createClass(UpdateEdgeWeightParameters, [{
        key: "destroy",
        value: function destroy() {
            this.edgeId = null;
            this.fromNodeId = null;
            this.toNodeId = null;
            this.weightField = null;
            this.edgeWeight = null;
        }
    }]);

    return UpdateEdgeWeightParameters;
}();

exports.default = UpdateEdgeWeightParameters;


_SuperMap2.default.UpdateEdgeWeightParameters = UpdateEdgeWeightParameters;

/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _NetworkAnalystServiceBase = __webpack_require__(8);

var _NetworkAnalystServiceBase2 = _interopRequireDefault(_NetworkAnalystServiceBase);

var _UpdateEdgeWeightParameters = __webpack_require__(257);

var _UpdateEdgeWeightParameters2 = _interopRequireDefault(_UpdateEdgeWeightParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.UpdateEdgeWeightService
 * @description 更新边的边的耗费权重服务
 * @augments SuperMap.NetworkAnalystServiceBase
 * @example
 *(start code)
 * var updateEdgeWeightService = new SuperMap.UpdateEdgeWeightService(url, {
 *     eventListeners: {
 *         "processCompleted": UpdateEdgeWeightCompleted,      //参数为SuperMap.UpdateEdgeWeightEventArgs
 *		   "processFailed": UpdateEdgeWeightError             //参数为SuperMap.ServiceFailedEventArgs
 *		   }
 * });
 * (end)
 * @param url - {String} 服务的访问地址。 如:<br>
 *                       http://localhost:8090/iserver/services/transportationanalyst-sample/rest/networkanalyst/RoadNet@Changchun 。
 * @param options - {Object} 互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var UpdateEdgeWeightService = function (_NetworkAnalystServic) {
    _inherits(UpdateEdgeWeightService, _NetworkAnalystServic);

    /**
     * @function SuperMap.UpdateEdgeWeightService.prototype.initialize
     * @description 更新边的边的耗费权重服务类构造函数。
     * @param url - {String} 服务的访问地址。 如:<br>
     *                       http://localhost:8090/iserver/services/transportationanalyst-sample/rest/networkanalyst/RoadNet@Changchun 。
     * @param options - {Object} 互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */
    function UpdateEdgeWeightService(url, options) {
        _classCallCheck(this, UpdateEdgeWeightService);

        var _this = _possibleConstructorReturn(this, (UpdateEdgeWeightService.__proto__ || Object.getPrototypeOf(UpdateEdgeWeightService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.UpdateEdgeWeightService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(UpdateEdgeWeightService, [{
        key: 'destroy',
        value: function destroy() {
            _get(UpdateEdgeWeightService.prototype.__proto__ || Object.getPrototypeOf(UpdateEdgeWeightService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.UpdateEdgeWeightService.prototype.processAsync
         * @description 开始异步执行边的边的耗费权重的更新
         * @param params - {SuperMap.UpdateEdgeWeightParameters} 边的耗费权重更新服务参数类
         * @example
         * (code)
         *  var updateEdgeWeightParam=new SuperMapUpdateEdgeWeightParameters({
         *          edgeId:"20",
         *          fromNodeId:"26",
         *          toNodeId:"109",
         *          weightField:"time",
         *          edgeWeight:"25"
         *      });
         *  updateEdgeWeightService.processAsync(updateEdgeWeightParam);
         * (end)
         */

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }

            var me = this,
                end = me.url.substr(me.url.length - 1, 1);
            var paramStr = me.parse(params);
            if (end === "/") {
                me.url.splice(me.url.length - 1, 1);
            }
            me.url = me.url + paramStr + (this.isInTheSameDomain ? ".json?" : ".jsonp?");
            var data = params.edgeWeight ? params.edgeWeight : null;
            me.request({
                method: "PUT",
                scope: me,
                data: data,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }

        /*
         * Method: parse
         * 将更新服务参数解析为用‘/’做分隔的字符串
         */

    }, {
        key: 'parse',
        value: function parse(params) {
            if (!params) {
                return;
            }
            var paramStr = "";
            for (var attr in params) {
                if (params[attr] === "" || params[attr] === "edgeWeight") continue;
                switch (attr) {
                    case "edgeId":
                        paramStr += "/edgeweight/" + params[attr];
                        break;
                    case "fromNodeId":
                        paramStr += "/fromnode/" + params[attr];
                        break;
                    case "toNodeId":
                        paramStr += "/tonode/" + params[attr];
                        break;
                    case "weightField":
                        paramStr += "/weightfield/" + params[attr];
                        break;
                    default:
                        break;
                }
            }
            return paramStr;
        }
    }]);

    return UpdateEdgeWeightService;
}(_NetworkAnalystServiceBase2.default);

exports.default = UpdateEdgeWeightService;


_SuperMap2.default.UpdateEdgeWeightService = UpdateEdgeWeightService;

/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.UpdateTurnNodeWeightParameters
 * @description 转向耗费权重更新服务参数类
 * @param options - {Object} 可选参数。如：<br>
 *         nodeId - {String} 转向结点的id。<br>
 *        fromEdgeId - {String} 起始边的id。<br>
 *        toEdgeId - {String} 终止边的id。<br>
 *        weightField - {String} 转向结点的耗费字段。<br>
 *        turnNodeWeight - {String} 耗费权重
 */
var UpdateTurnNodeWeightParameters = function () {

    /*
     * Constructor: SuperMap.UpdateTurnNodeWeightParameters
     * 转向耗费权重更新服务参数类构造函数。
     */


    /**
     * APIProperty: weightField
     * @member SuperMap.UpdateTurnNodeWeightParameters.prototype.weightField -{String}
     * @description 转向结点的耗费字段
     */


    /**
     * APIProperty: fromEdgeId
     * @member SuperMap.UpdateTurnNodeWeightParameters.prototype.fromEdgeId -{String}
     * @description 起始边的id
     */
    function UpdateTurnNodeWeightParameters(option) {
        _classCallCheck(this, UpdateTurnNodeWeightParameters);

        this.nodeId = "";
        this.fromEdgeId = "";
        this.toEdgeId = "";
        this.weightField = "";
        this.turnNodeWeight = "";
        this.CLASS_NAME = "SuperMap.UpdateTurnNodeWeightParameters";

        if (!option) return;

        option.nodeId && (this.nodeId = option.nodeId);
        option.fromEdgeId && (this.fromEdgeId = option.fromEdgeId);
        option.toEdgeId && (this.toEdgeId = option.toEdgeId);
        option.weightField && (this.weightField = option.weightField);
        option.turnNodeWeight && (this.turnNodeWeight = option.turnNodeWeight);
    }

    /**
     * APIMethod: destroy
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * APIProperty: turnNodeWeight
     * @member SuperMap.UpdateTurnNodeWeightParameters.prototype.turnNodeWeight -{String}
     * @description 耗费权重
     */


    /**
     * APIProperty: toEdgeId
     * @member SuperMap.UpdateTurnNodeWeightParameters.prototype.toEdgeId -{String}
     * @description 终止边的id
     */


    /**
     * APIProperty:  nodeId
     * @member SuperMap.UpdateTurnNodeWeightParameters.prototype.nodeId -{String}
     * @description 转向结点的id
     */


    _createClass(UpdateTurnNodeWeightParameters, [{
        key: "destroy",
        value: function destroy() {
            this.nodeId = null;
            this.fromEdgeId = null;
            this.toEdgeId = null;
            this.weightField = null;
            this.turnNodeWeight = null;
        }
    }]);

    return UpdateTurnNodeWeightParameters;
}();

exports.default = UpdateTurnNodeWeightParameters;


_SuperMap2.default.UpdateTurnNodeWeightParameters = UpdateTurnNodeWeightParameters;

/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _NetworkAnalystServiceBase = __webpack_require__(8);

var _NetworkAnalystServiceBase2 = _interopRequireDefault(_NetworkAnalystServiceBase);

var _UpdateTurnNodeWeightParameters = __webpack_require__(259);

var _UpdateTurnNodeWeightParameters2 = _interopRequireDefault(_UpdateTurnNodeWeightParameters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.UpdateTurnNodeWeightService
 * @description 转向耗费权重更新服务类
 * @augments SuperMap.NetworkAnalystServiceBase
 * @example
 * (start code)
 * var UpdateTurnNodeWeightService = new SuperMap.UpdateTurnNodeWeightService(url, {
 *     eventListeners: {
 *         "processCompleted": UpdateTurnNodeWeightCompleted,    //参数为SuperMap.UpdateTurnNodeWeightEventArgs
 *		   "processFailed": UpdateTurnNodeWeightError          //参数为SuperMap.ServiceFailedEventArgs
 *		   }
 * });
 * (end)
 * @param url - {String} 服务的访问地址。如:<br>
 *                       http://localhost:8090/iserver/services/transportationanalyst-sample/rest/networkanalyst/RoadNet@Changchun 。
 * @param options - {Object} 互服务时所需可选参数。如：<br>
 *         eventListeners - {Object} 需要被注册的监听器对象。
 */
var UpdateTurnNodeWeightService = function (_NetworkAnalystServic) {
    _inherits(UpdateTurnNodeWeightService, _NetworkAnalystServic);

    /**
     * @function SuperMap.UpdateTurnNodeWeightService.prototype.initialize
     * @description 转向耗费权重更新服务类构造函数。
     * @param url - {String} 服务的访问地址。如:<br>
     *                       http://localhost:8090/iserver/services/transportationanalyst-sample/rest/networkanalyst/RoadNet@Changchun 。
     * @param options - {Object} 互服务时所需可选参数。如：<br>
     *         eventListeners - {Object} 需要被注册的监听器对象。
     */
    function UpdateTurnNodeWeightService(url, options) {
        _classCallCheck(this, UpdateTurnNodeWeightService);

        var _this = _possibleConstructorReturn(this, (UpdateTurnNodeWeightService.__proto__ || Object.getPrototypeOf(UpdateTurnNodeWeightService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.UpdateTurnNodeWeightService";
        return _this;
    }

    /**
     * @inheritDoc
     */


    _createClass(UpdateTurnNodeWeightService, [{
        key: 'destroy',
        value: function destroy() {
            _get(UpdateTurnNodeWeightService.prototype.__proto__ || Object.getPrototypeOf(UpdateTurnNodeWeightService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.UpdateTurnNodeWeightService.prototype.processAsync
         * @description 开始异步执行转向耗费权重的更新
         * @param params - {SuperMap.UpdateTurnNodeWeightParameters} 转向耗费权重更新服务参数类
         * @example
         * (code)
         *  var updateTurnNodeWeightParam=new SuperMap.UpdateTurnNodeWeightParameters({
         *           nodeId:"106",
         *           fromEdgeId:"6508",
         *           toEdgeId:"6504",
         *           weightField:"TurnCost",
         *           turnNodeWeight:"50"
         *       });
         *  updateTurnNodeWeightService.processAsync(updateTurnNodeWeightParam);
         * (end)
         **/

    }, {
        key: 'processAsync',
        value: function processAsync(params) {
            if (!params) {
                return;
            }

            var me = this,
                end = me.url.substr(me.url.length - 1, 1);
            var paramStr = me.parse(params);
            if (end === "/") {
                me.url.splice(me.url.length - 1, 1);
            }
            me.url = me.url + paramStr + (this.isInTheSameDomain ? ".json?" : ".jsonp?");
            var data = params.turnNodeWeight ? params.turnNodeWeight : null;
            me.request({
                method: "PUT",
                scope: me,
                data: data,
                success: me.serviceProcessCompleted,
                failure: me.serviceProcessFailed
            });
        }

        /*
         * Method: parse
         * 将更新服务参数解析为用‘/’做分隔的字符串
         * */

    }, {
        key: 'parse',
        value: function parse(params) {
            if (!params) {
                return;
            }
            var paramStr = "";
            for (var attr in params) {
                if (params[attr] === "" || params[attr] === "turnNodeWeight") continue;
                switch (attr) {
                    case "nodeId":
                        paramStr += "/turnnodeweight/" + params[attr];
                        break;
                    case "fromEdgeId":
                        paramStr += "/fromedge/" + params[attr];
                        break;
                    case "toEdgeId":
                        paramStr += "/toedge/" + params[attr];
                        break;
                    case "weightField":
                        paramStr += "/weightfield/" + params[attr];
                        break;
                    default:
                        break;
                }
            }
            return paramStr;
        }
    }]);

    return UpdateTurnNodeWeightService;
}(_NetworkAnalystServiceBase2.default);

exports.default = UpdateTurnNodeWeightService;


_SuperMap2.default.UpdateTurnNodeWeightService = UpdateTurnNodeWeightService;

/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _UGCSubLayer2 = __webpack_require__(27);

var _UGCSubLayer3 = _interopRequireDefault(_UGCSubLayer2);

var _ServerStyle = __webpack_require__(9);

var _ServerStyle2 = _interopRequireDefault(_ServerStyle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Class: SuperMap.Vector
 * UGC 矢量图层类。
 *
 * Inherits from:
 *  - <SuperMap.UGCSubLayer>
 */

var Vector = function (_UGCSubLayer) {
    _inherits(Vector, _UGCSubLayer);

    /**
     * Constructor: SuperMap.Vector
     * UGC 矢量图层类构造函数。
     *
     * Parameters:
     * options - {Object} 参数。
     *
     * Allowed options properties:
     * style - {SuperMap.ServerStyle} 矢量图层的风格。
     */
    function Vector(options) {
        _classCallCheck(this, Vector);

        options = options || {};

        var _this = _possibleConstructorReturn(this, (Vector.__proto__ || Object.getPrototypeOf(Vector)).call(this, options));

        _this.style = null;
        _this.CLASS_NAME = "SuperMap.Vector";
        return _this;
    }

    /**
     * APIMethod: destroy
     * 释放资源,将引用资源的属性置空。
     */


    /**
     * APIProperty: style
     * {SuperMap.ServerStyle} 矢量图层的风格。
     */


    _createClass(Vector, [{
        key: 'destroy',
        value: function destroy() {
            _get(Vector.prototype.__proto__ || Object.getPrototypeOf(Vector.prototype), 'destroy', this).call(this);
            _SuperMap2.default.Util.reset(this);
        }

        /**
         * Method: fromJson
         * 将服务端JSON对象转换成当前客户端对象
         * Parameters:
         * jsonObject - {Object} 要转换的 JSON 对象。
         */

    }, {
        key: 'fromJson',
        value: function fromJson(jsonObject) {
            _get(Vector.prototype.__proto__ || Object.getPrototypeOf(Vector.prototype), 'fromJson', this).call(this, jsonObject);
            var sty = this.style;
            if (sty) {
                this.style = new _ServerStyle2.default(sty);
            }
        }

        /**
         * APIMethod: toServerJSONObject
         * 转换成对应的 JSON 格式对象。
         */

    }, {
        key: 'toServerJSONObject',
        value: function toServerJSONObject() {
            var jsonObject = _SuperMap2.default.toServerJSONObject();
            if (jsonObject.style) {
                if (jsonObject.style.toServerJSONObject) {
                    jsonObject.style = jsonObject.style.toServerJSONObject();
                }
            }
            return jsonObject;
        }
    }]);

    return Vector;
}(_UGCSubLayer3.default);

exports.default = Vector;


_SuperMap2.default.Vector = Vector;

/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.VectorClipJobsParameter
 * @description 矢量裁剪分析任务参数类
 * @param options - {Object} 必填参数。<br>
 *         datasetName -{String} 数据集名。 <br>
 *         datasetOverlay -{String} 裁剪对象数据集。 <br>
 *         mode -{SuperMap.SpatialQueryMode} 裁剪分析模式 。 <br>
 */
var VectorClipJobsParameter = function () {

    /**
     * @member SuperMap.VectorClipJobsParameter.prototype.datasetOverlay -{String}
     * @description 裁剪对象数据集。
     */
    function VectorClipJobsParameter(options) {
        _classCallCheck(this, VectorClipJobsParameter);

        this.datasetName = "";
        this.datasetOverlay = "";
        this.mode = _REST.ClipAnalystMode.CLIP;
        this.CLASS_NAME = "SuperMap.VectorClipJobsParameter";

        options = options || {};
        if (options.mode && typeof options.mode === "string") {
            options.mode = options.mode.toLowerCase();
        }
        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * @function destroy
     * @description 释放资源，将引用资源的属性置空。
     */


    /**
     * @member SuperMap.VectorClipJobsParameter.prototype.mode -{SuperMap.ClipAnalystMode}
     * @description 裁剪分析模式 。
     */


    /**
     * @member SuperMap.VectorClipJobsParameter.prototype.datasetName -{String}
     * @description 数据集名。
     */


    _createClass(VectorClipJobsParameter, [{
        key: 'destroy',
        value: function destroy() {
            this.datasetName = null;
            this.datasetOverlay = null;
            this.mode = null;
        }
    }], [{
        key: 'toObject',
        value: function toObject(vectorClipJobsParameter, tempObj) {
            for (var name in vectorClipJobsParameter) {
                if (name === "datasetName") {
                    tempObj['input'] = tempObj['input'] || {};
                    tempObj['input'][name] = vectorClipJobsParameter[name];
                    continue;
                }
                tempObj['analyst'] = tempObj['analyst'] || {};
                tempObj['analyst'][name] = vectorClipJobsParameter[name];
            }
        }
    }]);

    return VectorClipJobsParameter;
}();

exports.default = VectorClipJobsParameter;


_SuperMap2.default.VectorClipJobsParameter = VectorClipJobsParameter;

/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _ProcessingServiceBase = __webpack_require__(16);

var _ProcessingServiceBase2 = _interopRequireDefault(_ProcessingServiceBase);

var _VectorClipJobsParameter = __webpack_require__(262);

var _VectorClipJobsParameter2 = _interopRequireDefault(_VectorClipJobsParameter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class SuperMap.VectorClipJobsService
 * @description 大数据矢量裁剪分析服务类
 * @augments SuperMap.ProcessingServiceBase
 * @param url -{String} 大数据矢量裁剪分析服务地址。
 * @param options - {Object} 交互服务时所需可选参数。
 */
var VectorClipJobsService = function (_ProcessingServiceBas) {
    _inherits(VectorClipJobsService, _ProcessingServiceBas);

    /**
     * @function SuperMap.VectorClipJobsService.protitype.initialize
     * @description SuperMap.VectorClipJobsService 的构造函数
     * @param url -{String} 大数据矢量裁剪分析服务地址。
     * @param options - {Object} 交互服务时所需可选参数。
     */
    function VectorClipJobsService(url, options) {
        _classCallCheck(this, VectorClipJobsService);

        var _this = _possibleConstructorReturn(this, (VectorClipJobsService.__proto__ || Object.getPrototypeOf(VectorClipJobsService)).call(this, url, options));

        _this.CLASS_NAME = "SuperMap.VectorClipJobsService";

        _this.url += "/spatialanalyst/vectorclip";
        return _this;
    }

    /**
     *@inheritDoc
     */


    _createClass(VectorClipJobsService, [{
        key: 'destroy',
        value: function destroy() {
            _get(VectorClipJobsService.prototype.__proto__ || Object.getPrototypeOf(VectorClipJobsService.prototype), 'destroy', this).call(this);
        }

        /**
         * @function SuperMap.VectorClipJobsService.protitype.getVectorClipJobs
         * @description 获取大数据矢量裁剪分析所有
         * @return {*}
         */

    }, {
        key: 'getVectorClipJobs',
        value: function getVectorClipJobs() {
            return _get(VectorClipJobsService.prototype.__proto__ || Object.getPrototypeOf(VectorClipJobsService.prototype), 'getJobs', this).call(this, this.url);
        }

        /**
         * @function SuperMap.KernelDensityJobsService.protitype.getVectorClipJob
         * @description 获取指定id的矢量裁剪分析服务
         * @param id -{String} 指定要获取数据的id
         */

    }, {
        key: 'getVectorClipJob',
        value: function getVectorClipJob(id) {
            return _get(VectorClipJobsService.prototype.__proto__ || Object.getPrototypeOf(VectorClipJobsService.prototype), 'getJobs', this).call(this, this.url + '/' + id);
        }

        /**
         * @function SuperMap.VectorClipJobsService.protitype.addVectorClipJob
         * @description 新建大数据矢量裁剪分析服务
         * @param params - {SuperMap.VectorClipJobsParameter} 创建一个空间分析的请求参数。
         * @param seconds - {Number} 开始创建后，获取创建成功结果的时间间隔。
         */

    }, {
        key: 'addVectorClipJob',
        value: function addVectorClipJob(params, seconds) {
            return _get(VectorClipJobsService.prototype.__proto__ || Object.getPrototypeOf(VectorClipJobsService.prototype), 'addJob', this).call(this, this.url, params, _VectorClipJobsParameter2.default, seconds);
        }
    }]);

    return VectorClipJobsService;
}(_ProcessingServiceBase2.default);

exports.default = VectorClipJobsService;


_SuperMap2.default.VectorClipJobsService = VectorClipJobsService;

/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _OnlineServiceBase2 = __webpack_require__(267);

var _OnlineServiceBase3 = _interopRequireDefault(_OnlineServiceBase2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Online myData服务
 */
var OnlineData = function (_OnlineServiceBase) {
    _inherits(OnlineData, _OnlineServiceBase);

    /**
     ** TODO 目前并没有对接服务支持的所有操作，日后需要补充完整
     * 所有查询返回的是一个Promise
     * 在外部使用的时候通过Promise的then方法获取异步结果
     *
     * 用法：
     * var service = new SuperMap.Online().queryDatas(param)
     *                  .then(function(services){
     *                      var service=services[0];
     *                      service.getPublishedServices();
     *                      service.update().then(function(result){
     *                              console.log(result.succeed);
     *                      })
     *                  });
     *
     */

    //数据元数据信息

    //数据坐标类型。

    //数据的描述信息。

    //用户的昵称。

    //数据的发布信息。

    //文件状态。

    //数据项 id 。

    //服务发布状态。

    //文件名称。

    //文件类型。
    function OnlineData(serviceRootUrl, options) {
        _classCallCheck(this, OnlineData);

        var _this = _possibleConstructorReturn(this, (OnlineData.__proto__ || Object.getPrototypeOf(OnlineData)).call(this, serviceUrl));

        _this.MD5 = null;
        _this.type = null;
        _this.userName = null;
        _this.fileName = null;
        _this.size = null;
        _this.serviceStatus = null;
        _this.serviceId = null;
        _this.id = null;
        _this.lastModfiedTime = null;
        _this.status = null;
        _this.storageId = null;
        _this.publishInfo = null;
        _this.authorizeSetting = null;
        _this.nickname = null;
        _this.tags = [];
        _this.description = null;
        _this.dataItemServices = null;
        _this.coordType = null;
        _this.dataCheckResult = null;
        _this.dataMetaInfo = null;
        _this.thumbnail = null;
        _this.CLASS_NAME = "SuperMap.OnlineData";

        var me = _this;
        options = options || {};
        _SuperMap2.default.Util.extend(me, options);
        me.serviceUrl = serviceRootUrl;
        if (me.id) {
            me.serviceUrl = serviceRootUrl + "/" + me.id;
        }
        return _this;
    }

    //通过url请求获取该服务完整信息

    //数据的缩略图路径。

    //数据审核信息

    //数据发布的服务信息集合。

    //数据的标签。

    //数据的权限信息。

    //数据文件存储 id 。

    //最后修改时间。

    //服务 id 。

    //文件大小，单位为 B 。

    //数据上传者名称。

    //MD5


    _createClass(OnlineData, [{
        key: 'load',
        value: function load() {
            if (!this.serviceUrl) {
                return;
            }
            var me = this;
            return me.request("GET", this.serviceUrl).then(function (result) {
                _SuperMap2.default.Util.extend(me, result);
            });
        }

        //获取数据发布的所有服务

    }, {
        key: 'getPublishedServices',
        value: function getPublishedServices() {
            return this.dataItemServices;
        }

        //获取数据的权限信息

    }, {
        key: 'getAuthorizeSetting',
        value: function getAuthorizeSetting() {
            return this.authorizeSetting;
        }
    }]);

    return OnlineData;
}(_OnlineServiceBase3.default);

exports.default = OnlineData;


_SuperMap2.default.OnlineData = OnlineData;

/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _OnlineResources = __webpack_require__(266);

var OnlineResources = _interopRequireWildcard(_OnlineResources);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Class:SuperMap.OnlineQueryDatasParameter
 *  myDatas服务资源查询参数
 */
var OnlineQueryDatasParameter = function () {
    //String[] 数据的标签。

    //String[]  	关键字。

    // String	服务 id 。

    //String    文件名称。


    //String[]    数据作者名。可以根据数据作者名查询，默认查询全部。
    function OnlineQueryDatasParameter(options) {
        _classCallCheck(this, OnlineQueryDatasParameter);

        this.userNames = null;
        this.types = null;
        this.fileName = null;
        this.serviceStatuses = null;
        this.serviceId = null;
        this.ids = null;
        this.keywords = null;
        this.orderBy = null;
        this.tags = null;
        this.filterFields = null;
        this.CLASS_NAME = "SuperMap.OnlineQueryDatasParameter";

        options = options || {};
        _SuperMap2.default.Util.extend(this, options);
    }
    //FilterFields[] 用于关键字查询时的字段过滤:

    //DataItemOrderBy    排序字段。

    //Integer[] 由数据项 id 组成的整型数组。

    //ServiceStatus[]    服务发布状态。

    //DataItemType[]    数据类型


    _createClass(OnlineQueryDatasParameter, [{
        key: 'toJSON',
        value: function toJSON() {
            var me = this;
            var jsonObj = {
                "types": me.types,
                "fileName": me.fileName,
                "serviceStatuses": me.serviceStatuses,
                "serviceId": me.serviceId,
                "ids": me.ids,
                "keywords": me.keywords,
                "orderBy": me.orderBy,
                "tags": me.tags,
                "filterFields": me.filterFields
            };
            for (var key in jsonObj) {
                if (jsonObj[key] == null) {
                    delete jsonObj[key];
                }
            }
            return jsonObj;
        }
    }]);

    return OnlineQueryDatasParameter;
}();

exports.default = OnlineQueryDatasParameter;


_SuperMap2.default.OnlineQueryDatasParameter = OnlineQueryDatasParameter;

/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FilterField = exports.DataItemOrderBy = exports.DataItemType = exports.ServiceStatus = undefined;

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * 服务发布状态
 */
var ServiceStatus = exports.ServiceStatus = _SuperMap2.default.ServiceStatus = {
    DOES_NOT_INVOLVE: "DOES_NOT_INVOLVE",
    PUBLISH_FAILED: "PUBLISH_FAILED",
    PUBLISHED: "PUBLISHED",
    PUBLISHING: "PUBLISHING",
    UNPUBLISHED: "UNPUBLISHED",
    UNPUBLISHED_FAILED: "UNPUBLISHED_FAILED"
};
/**
 * 数据项类型
 */
var DataItemType = exports.DataItemType = _SuperMap2.default.DataItemType = {
    AUDIO: "AUDIO",
    COLOR: "COLOR",
    COLORSCHEME: "COLORSCHEME",
    CSV: "CSV",
    EXCEL: "EXCEL",
    FILLSYMBOL: "FILLSYMBOL",
    IMAGE: "IMAGE",
    LAYERTEMPLATE: "LAYERTEMPLATE",
    LAYOUTTEMPLATE: "LAYOUTTEMPLATE",
    LINESYMBOL: "LINESYMBOL",
    MAPTEMPLATE: "MAPTEMPLATE",
    MARKERSYMBOL: "MARKERSYMBOL",
    MBTILES: "MBTILES",
    PHOTOS: "PHOTOS",
    SHP: "SHP",
    SMTILES: "SMTILES",
    SVTILES: "SVTILES",
    THEMETEMPLATE: "THEMETEMPLATE",
    TPK: "TPK",
    UDB: "UDB",
    UGCV5: "UGCV5",
    UNKNOWN: "UNKNOWN",
    VIDEO: "VIDEO",
    WORKENVIRONMENT: "WORKENVIRONMENT",
    WORKSPACE: "WORKSPACE"
};

/**
 * 数据排序字段
 */
var DataItemOrderBy = exports.DataItemOrderBy = _SuperMap2.default.DataItemOrderBy = {
    FILENAME: "FILENAME",
    ID: "ID",
    LASTMODIFIEDTIME: "LASTMODIFIEDTIME",
    NICKNAME: "NICKNAME",
    SERVICESTATUS: "SERVICESTATUS",
    SIZE: "SIZE",
    STATUS: "STATUS",
    TYPE: "TYPE",
    UPDATETIME: "UPDATETIME",
    USERNAME: "USERNAME"
};

/**
 * 关键字查询时的过滤字段
 */
var FilterField = exports.FilterField = _SuperMap2.default.FilterField = {
    LINKPAGE: "LINKPAGE",
    MAPTITLE: "MAPTITLE",
    NICKNAME: "NICKNAME",
    RESTITLE: "RESTITLE",
    USERNAME: "USERNAME"
};

/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

__webpack_require__(15);

var _REST = __webpack_require__(1);

var _FetchRequest = __webpack_require__(13);

var _FetchRequest2 = _interopRequireDefault(_FetchRequest);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Online服务基类(使用key作为权限限制的类需要实现此类)
 */
var OnlineServiceBase = function () {
    function OnlineServiceBase(options) {
        _classCallCheck(this, OnlineServiceBase);

        this.CLASS_NAME = "SuperMap.OnlineServiceBase";

        var me = this;
        options = options || {};
        _SuperMap2.default.Util.extend(me, options);
        me.serverType = _REST.ServerType.ONLINE;
    }

    _createClass(OnlineServiceBase, [{
        key: 'request',
        value: function request(method, url, param, requestOptions) {
            url = this.createCredentialUrl(url);
            return _FetchRequest2.default.commit(method, url, param, requestOptions).then(function (response) {
                return response.json();
            });
        }

        //追加授权信息

    }, {
        key: 'createCredentialUrl',
        value: function createCredentialUrl(url) {
            var newUrl = url,
                key = this.getCredential();
            if (key) {
                var paramStr = "key=" + key;
                var endStr = newUrl.substring(newUrl.length - 1, newUrl.length);
                if (newUrl.indexOf("?") > -1 && endStr === "?") {
                    newUrl += paramStr;
                } else if (newUrl.indexOf("?") > -1 && endStr !== "?") {
                    newUrl += "&" + paramStr;
                } else {
                    newUrl += "?" + paramStr;
                }
            }
            return newUrl;
        }

        //其子类需要重写该方法，修改其中获取key的字段
        //存储key可能是服务id字段，可能是url，或者是WebAPI类型

    }, {
        key: 'getCredential',
        value: function getCredential() {
            //return SecurityManager.getKey(this.id);
            //或
            //return SecurityManager.getKey(this.serviceUrl);
        }
    }]);

    return OnlineServiceBase;
}();

exports.default = OnlineServiceBase;


_SuperMap2.default.OnlineServiceBase = OnlineServiceBase;

/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.KeyServiceParameter
 * @constructs SuperMap.KeyServiceParameter
 * @classdesc
 * key申请参数

 * @api
 */
var KeyServiceParameter = function () {

    /**
     * @method SuperMap.KeyServiceParameter.initialize
     * @param options - {Object} 参数。
     */
    function KeyServiceParameter(options) {
        _classCallCheck(this, KeyServiceParameter);

        this.name = null;
        this.serviceIds = null;
        this.clientType = _REST.ClientType.SERVER;
        this.limitation = null;
        this.CLASS_NAME = "SuperMap.KeyServiceParameter";

        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * @method SuperMap.KeyServiceParameter.toJSON
     * @return {string} 参数的JSON字符串
     */


    _createClass(KeyServiceParameter, [{
        key: 'toJSON',
        value: function toJSON() {
            return {
                name: this.name,
                serviceIds: this.serviceIds,
                clientType: this.clientType,
                limitation: this.limitation
            };
        }
    }]);

    return KeyServiceParameter;
}();

exports.default = KeyServiceParameter;


_SuperMap2.default.KeyServiceParameter = KeyServiceParameter;

/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.ServerInfo
 * @constructs SuperMap.ServerInfo
 * @classdesc
 * 服务器信息(安全相关)，包含服务器类型，服务地址，token服务地址等
 * @api
 */

var ServerInfo =

/**
 * @method SuperMap.ServerInfo.initialize
 * @param type
 * @param options - {Object} 参数。
 */

//非必填，如：http://supermapiserver:8090/iserver/services/security/tokens.json

//服务器类型:SuperMap.ServerType
function ServerInfo(type, options) {
    _classCallCheck(this, ServerInfo);

    this.type = null;
    this.server = null;
    this.tokenServiceUrl = null;
    this.keyServiceUrl = null;
    this.CLASS_NAME = "SuperMap.ServerInfo";

    this.type = type || _REST.ServerType.ISERVER;
    _SuperMap2.default.Util.extend(this, options);
    if (!this.server) {
        console.error('server url require is not  undefined');
    }
    var patten = /http:\/\/([^\/]+)/i;
    this.server = this.server.match(patten)[0];

    var tokenServiceSuffix = "/services/security/tokens.json";
    if (this.type === _REST.ServerType.ISERVER && this.server.indexOf("iserver") < 0) {
        tokenServiceSuffix = "/iserver" + tokenServiceSuffix;
    }

    if (!this.tokenServiceUrl) {
        this.tokenServiceUrl = this.server + tokenServiceSuffix;
    }

    if (!this.keyServiceUrl) {
        if (this.type === _REST.ServerType.IPORTAL) {
            this.keyServiceUrl = this.server + "/web/mycontent/keys/register.json";
        } else if (this.type === _REST.ServerType.ONLINE) {
            this.keyServiceUrl = this.server + "/web/mycontent/keys.json";
        }
    }
}
//非必填，如：http://supermapiserver:8092/web/mycontent/keys/register.json

//如：http://supermapiserver:8090
;

exports.default = ServerInfo;


_SuperMap2.default.ServerInfo = ServerInfo;

/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _REST = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SuperMap.TokenServiceParameter
 * @constructs  SuperMap.TokenServiceParameter
 * @classdesc
 * token申请参数
 * @api
 */
var TokenServiceParameter = function () {

    /**
     * @method SuperMap.TokenServiceParameter.initialize
     * @param options - {Object} 参数。
     */

    //clientType=Referer 时，必选。如果按照指定 URL 的方式申请令牌，则传递相应的 URL。

    //token申请的客户端标识类型
    function TokenServiceParameter(options) {
        _classCallCheck(this, TokenServiceParameter);

        this.userName = null;
        this.password = null;
        this.clientType = _REST.ClientType.NONE;
        this.ip = null;
        this.referer = null;
        this.expiration = 60;
        this.CLASS_NAME = "SuperMap.TokenServiceParameter";

        _SuperMap2.default.Util.extend(this, options);
    }

    /**
     * @method SuperMap.TokenServiceParameter.toJSON
     * @return {String} 参数的JSON字符串
     */

    //申请令牌的有效期，从发布令牌的时间开始计算，单位为分钟。


    _createClass(TokenServiceParameter, [{
        key: 'toJSON',
        value: function toJSON() {
            return {
                userName: this.userName,
                password: this.password,
                clientType: this.clientType,
                ip: this.ip,
                referer: this.referer,
                expiration: this.expiration
            };
        }
    }]);

    return TokenServiceParameter;
}();

exports.default = TokenServiceParameter;


_SuperMap2.default.TokenServiceParameter = TokenServiceParameter;

/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Class: SuperMap.CartoCSS
 * CartoCSS解析类，其主要功能为将CartoCSS字符串解析为CartoCSS的shader属性风格对象
 */
var CartoCSS = function () {

    /**
     * Constructor: SuperMap.CartoCSS
     * 此类用于将CartoCSS样式表解析为Carto规则对象，然后可以将Carto规则集转化为Carto图层的渲染信息shader
     *
     * Parameters：
     * cartoStr - {String} CartoCSS样式表字符串
     *
     * Examples:
     * (code)
     * var cartocss=[
     * "@color:#111;",
     * "#China_Railway_L__China400::two{",
     * "line-color:@color;",
     * "line-width:2",
     * "}"
     * ].join("/n");
     * var carto=new SuperMap.CartoCSS(cartocss);
     * me.cartoShaders=carto.getShaders();
     * (end)
     *
     * */


    /**
     * Property: cartoStr
     * CartoCSS样式表字符串
     * */


    /**
     * APIProperty: parser
     * 解析器
     * */
    function CartoCSS(cartoStr) {
        _classCallCheck(this, CartoCSS);

        this.env = null;
        this.parser = null;
        this.ruleSet = null;
        this.cartoStr = "";
        this.shaders = null;

        if (typeof cartoStr === "string") {
            this.cartoStr = cartoStr;
            this.env = {
                frames: [],
                errors: [],
                error: function error(obj) {
                    this.errors.push(obj);
                }
            };
            this.parser = this.getParser(this.env);
            this.parse(cartoStr);
            this.shaders = this.toShaders();
        }
    }

    /**
     * Method: getParser
     * 获取CartoCSS解析器
     * */


    /**
     * Property: shaders
     * Carto着色器集
     * */


    /**
     * Property: ruleSet
     * CartoCSS规则对象
     * */


    _createClass(CartoCSS, [{
        key: "getParser",
        value: function getParser(env) {
            var input, // LeSS input string
            i, // current index in `input`
            j, // current chunk
            temp, // temporarily holds a chunk's state, for backtracking
            memo, // temporarily holds `i`, when backtracking
            furthest, // furthest index the parser has gone to
            chunks, // chunkified input
            current, // index of current chunk, in `input`
            parser;

            var that = this;

            // This function is called after all files
            // have been imported through `@import`.
            var finish = function finish() {
                //所有文件导入完成之后调用
            };

            function save() {
                temp = chunks[j];
                memo = i;
                current = i;
            }

            function restore() {
                chunks[j] = temp;
                i = memo;
                current = i;
            }

            function sync() {
                if (i > current) {
                    chunks[j] = chunks[j].slice(i - current);
                    current = i;
                }
            }

            //
            // Parse from a token, regexp or string, and move forward if match
            //
            function $(tok) {
                var match, args, length, c, index, endIndex, k;

                // Non-terminal
                if (tok instanceof Function) {
                    return tok.call(parser.parsers);
                    // Terminal
                    // Either match a single character in the input,
                    // or match a regexp in the current chunk (chunk[j]).
                } else if (typeof tok === 'string') {
                    match = input.charAt(i) === tok ? tok : null;
                    length = 1;
                    sync();
                } else {
                    sync();

                    match = tok.exec(chunks[j]);
                    if (match) {
                        length = match[0].length;
                    } else {
                        return null;
                    }
                }

                // The match is confirmed, add the match length to `i`,
                // and consume any extra white-space characters (' ' || '\n')
                // which come after that. The reason for this is that LeSS's
                // grammar is mostly white-space insensitive.
                if (match) {
                    var mem = i += length;
                    endIndex = i + chunks[j].length - length;

                    while (i < endIndex) {
                        c = input.charCodeAt(i);
                        if (!(c === 32 || c === 10 || c === 9)) {
                            break;
                        }
                        i++;
                    }
                    chunks[j] = chunks[j].slice(length + (i - mem));
                    current = i;

                    if (chunks[j].length === 0 && j < chunks.length - 1) {
                        j++;
                    }

                    if (typeof match === 'string') {
                        return match;
                    } else {
                        return match.length === 1 ? match[0] : match;
                    }
                }
            }

            // Same as $(), but don't change the state of the parser,
            // just return the match.
            function peek(tok) {
                if (typeof tok === 'string') {
                    return input.charAt(i) === tok;
                } else {
                    return !!tok.test(chunks[j]);
                }
            }

            // Make an error object from a passed set of properties.
            // Accepted properties:
            // - `message`: Text of the error message.
            // - `filename`: Filename where the error occurred.
            // - `index`: Char. index where the error occurred.
            function makeError(err) {
                var einput;

                var defautls = {
                    index: furthest,
                    filename: env.filename,
                    message: 'Parse error.',
                    line: 0,
                    column: -1
                };
                if (defautls) {
                    for (var prop in defautls) {
                        if (err[prop] === 0) err[prop] = defautls[prop];
                    }
                }

                if (err.filename && that.env.inputs && that.env.inputs[err.filename]) {
                    einput = that.env.inputs[err.filename];
                } else {
                    einput = input;
                }

                err.line = (einput.slice(0, err.index).match(/\n/g) || '').length + 1;
                for (var n = err.index; n >= 0 && einput.charAt(n) !== '\n'; n--) {
                    err.column++;
                }
                return new Error([err.filename, err.line, err.column, err.message].join(";"));
            }

            this.env = env = env || {};
            this.env.filename = this.env.filename || null;
            this.env.inputs = this.env.inputs || {};

            // The Parser
            parser = {

                // Parse an input string into an abstract syntax tree.
                // Throws an error on parse errors.
                parse: function parse(str) {
                    var root,
                        start,
                        end,
                        zone,
                        line,
                        lines,
                        buff = [],
                        c,
                        error = null;

                    i = j = current = furthest = 0;
                    chunks = [];
                    input = str.replace(/\r\n/g, '\n');
                    if (env.filename) {
                        that.env.inputs[env.filename] = input;
                    }

                    var early_exit = false;

                    // Split the input into chunks.
                    chunks = function (chunks) {
                        var j = 0,
                            skip = /(?:@\{[\w-]+\}|[^"'`\{\}\/\(\)\\])+/g,
                            comment = /\/\*(?:[^*]|\*+[^\/*])*\*+\/|\/\/.*/g,
                            string = /"((?:[^"\\\r\n]|\\.)*)"|'((?:[^'\\\r\n]|\\.)*)'|`((?:[^`]|\\.)*)`/g,
                            level = 0,
                            match,
                            chunk = chunks[0],
                            inParam;

                        for (var i = 0, c, cc; i < input.length;) {
                            skip.lastIndex = i;
                            if (match = skip.exec(input)) {
                                if (match.index === i) {
                                    i += match[0].length;
                                    chunk.push(match[0]);
                                }
                            }
                            c = input.charAt(i);
                            comment.lastIndex = string.lastIndex = i;

                            if (match = string.exec(input)) {
                                if (match.index === i) {
                                    i += match[0].length;
                                    chunk.push(match[0]);
                                    continue;
                                }
                            }

                            if (!inParam && c === '/') {
                                cc = input.charAt(i + 1);
                                if (cc === '/' || cc === '*') {
                                    if (match = comment.exec(input)) {
                                        if (match.index === i) {
                                            i += match[0].length;
                                            chunk.push(match[0]);
                                            continue;
                                        }
                                    }
                                }
                            }

                            switch (c) {
                                case '{':
                                    if (!inParam) {
                                        level++;
                                        chunk.push(c);
                                        break;
                                    }
                                case '}':
                                    if (!inParam) {
                                        level--;
                                        chunk.push(c);
                                        chunks[++j] = chunk = [];
                                        break;
                                    }
                                case '(':
                                    if (!inParam) {
                                        inParam = true;
                                        chunk.push(c);
                                        break;
                                    }
                                case ')':
                                    if (inParam) {
                                        inParam = false;
                                        chunk.push(c);
                                        break;
                                    }
                                default:
                                    chunk.push(c);
                                    break;
                            }

                            i++;
                        }
                        if (level !== 0) {
                            error = {
                                index: i - 1,
                                type: 'Parse',
                                message: level > 0 ? "missing closing `}`" : "missing opening `{`"
                            };
                        }

                        return chunks.map(function (c) {
                            return c.join('');
                        });
                    }([[]]);

                    if (error) {
                        throw makeError(error);
                    }

                    // Sort rules by specificity: this function expects selectors to be
                    // split already.
                    //
                    // Written to be used as a .sort(Function);
                    // argument.
                    //
                    // [1, 0, 0, 467] > [0, 0, 1, 520]
                    var specificitySort = function specificitySort(a, b) {
                        var as = a.specificity;
                        var bs = b.specificity;

                        if (as[0] != bs[0]) return bs[0] - as[0];
                        if (as[1] != bs[1]) return bs[1] - as[1];
                        if (as[2] != bs[2]) return bs[2] - as[2];
                        return bs[3] - as[3];
                    };

                    // Start with the primary rule.
                    // The whole syntax tree is held under a Ruleset node,
                    // with the `root` property set to true, so no `{}` are
                    // output.
                    root = new _SuperMap2.default.CartoCSS.Tree.Ruleset([], $(this.parsers.primary));
                    root.root = true;

                    // Get an array of Ruleset objects, flattened
                    // and sorted according to specificitySort
                    root.toList = function () {
                        return function (env) {
                            env.error = function (e) {
                                if (!env.errors) env.errors = new Error('');
                                if (env.errors.message) {
                                    env.errors.message += '\n' + makeError(e).message;
                                } else {
                                    env.errors.message = makeError(e).message;
                                }
                            };
                            env.frames = env.frames || [];

                            // call populates Invalid-caused errors
                            var definitions = this.flatten([], [], env);
                            definitions.sort(specificitySort);
                            return definitions;
                        };
                    }();

                    return root;
                },

                // Here in, the parsing rules/functions
                //
                // The basic structure of the syntax tree generated is as follows:
                //
                //   Ruleset ->  Rule -> Value -> Expression -> Entity
                //
                //  In general, most rules will try to parse a token with the `$()` function, and if the return
                //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check
                //  first, before parsing, that's when we use `peek()`.
                parsers: {
                    // The `primary` rule is the *entry* and *exit* point of the parser.
                    // The rules here can appear at any level of the parse tree.
                    //
                    // The recursive nature of the grammar is an interplay between the `block`
                    // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,
                    // as represented by this simplified grammar:
                    //
                    //     primary  →  (ruleset | rule)+
                    //     ruleset  →  selector+ block
                    //     block    →  '{' primary '}'
                    //
                    // Only at one point is the primary rule not called from the
                    // block rule: at the root level.
                    primary: function primary() {
                        var node,
                            root = [];

                        while ((node = $(this.rule) || $(this.ruleset) || $(this.comment)) || $(/^[\s\n]+/) || (node = $(this.invalid))) {
                            if (node) root.push(node);
                        }
                        return root;
                    },

                    invalid: function invalid() {
                        var chunk = $(/^[^;\n]*[;\n]/);

                        // To fail gracefully, match everything until a semicolon or linebreak.
                        if (chunk) {
                            return new _SuperMap2.default.CartoCSS.Tree.Invalid(chunk, memo);
                        }
                    },

                    // We create a Comment node for CSS comments `/* */`,
                    // but keep the LeSS comments `//` silent, by just skipping
                    // over them.
                    comment: function comment() {
                        var comment;

                        if (input.charAt(i) !== '/') return;

                        if (input.charAt(i + 1) === '/') {
                            return new _SuperMap2.default.CartoCSS.Tree.Comment($(/^\/\/.*/), true);
                        } else if (comment = $(/^\/\*(?:[^*]|\*+[^\/*])*\*+\/\n?/)) {
                            return new _SuperMap2.default.CartoCSS.Tree.Comment(comment);
                        }
                    },

                    // Entities are tokens which can be found inside an Expression
                    entities: {

                        // A string, which supports escaping " and ' "milky way" 'he\'s the one!'
                        quoted: function quoted() {
                            if (input.charAt(i) !== '"' && input.charAt(i) !== "'") return;
                            var str = $(/^"((?:[^"\\\r\n]|\\.)*)"|'((?:[^'\\\r\n]|\\.)*)'/);
                            if (str) {
                                return new _SuperMap2.default.CartoCSS.Tree.Quoted(str[1] || str[2]);
                            }
                        },

                        // A reference to a Mapnik field, like [NAME]
                        // Behind the scenes, this has the same representation, but Carto
                        // needs to be careful to warn when unsupported operations are used.
                        field: function field() {
                            var l = '[',
                                r = ']';
                            if (!$(l)) return;
                            var field_name = $(/(^[^\]]+)/);
                            if (!$(r)) return;
                            if (field_name) return new _SuperMap2.default.CartoCSS.Tree.Field(field_name[1]);
                        },

                        // This is a comparison operator
                        comparison: function comparison() {
                            var str = $(/^=~|=|!=|<=|>=|<|>/);
                            if (str) {
                                return str;
                            }
                        },

                        // A catch-all word, such as: hard-light
                        // These can start with either a letter or a dash (-),
                        // and then contain numbers, underscores, and letters.
                        keyword: function keyword() {
                            var k = $(/^[A-Za-z\u4e00-\u9fa5-]+[A-Za-z-0-9\u4e00-\u9fa5_]*/);
                            if (k) {
                                return new _SuperMap2.default.CartoCSS.Tree.Keyword(k);
                            }
                        },

                        // A function call like rgb(255, 0, 255)
                        // The arguments are parsed with the `entities.arguments` parser.
                        call: function call() {
                            var name, args;

                            if (!(name = /^([\w\-]+|%)\(/.exec(chunks[j]))) return;

                            name = name[1];

                            if (name === 'url') {
                                // url() is handled by the url parser instead
                                return null;
                            } else {
                                i += name.length;
                            }

                            var l = '(',
                                r = ')';
                            $(l); // Parse the '(' and consume whitespace.

                            args = $(this.entities['arguments']);

                            if (!$(r)) return;

                            if (name) {
                                return new _SuperMap2.default.CartoCSS.Tree.Call(name, args, i);
                            }
                        },
                        // Arguments are comma-separated expressions
                        'arguments': function _arguments() {
                            var args = [],
                                arg;

                            while (arg = $(this.expression)) {
                                args.push(arg);
                                var q = ',';
                                if (!$(q)) {
                                    break;
                                }
                            }

                            return args;
                        },
                        literal: function literal() {
                            return $(this.entities.dimension) || $(this.entities.keywordcolor) || $(this.entities.hexcolor) || $(this.entities.quoted);
                        },

                        // Parse url() tokens
                        //
                        // We use a specific rule for urls, because they don't really behave like
                        // standard function calls. The difference is that the argument doesn't have
                        // to be enclosed within a string, so it can't be parsed as an Expression.
                        url: function url() {
                            var value;

                            if (input.charAt(i) !== 'u' || !$(/^url\(/)) return;
                            value = $(this.entities.quoted) || $(this.entities.variable) || $(/^[\-\w%@$\/.&=:;#+?~]+/) || '';
                            var r = ')';
                            if (!$(r)) {
                                return new _SuperMap2.default.CartoCSS.Tree.Invalid(value, memo, 'Missing closing ) in URL.');
                            } else {
                                return new _SuperMap2.default.CartoCSS.Tree.URL(typeof value.value !== 'undefined' || value instanceof _SuperMap2.default.CartoCSS.Tree.Variable ? value : new _SuperMap2.default.CartoCSS.Tree.Quoted(value));
                            }
                        },

                        // A Variable entity, such as `@fink`, in
                        //
                        //     width: @fink + 2px
                        //
                        // We use a different parser for variable definitions,
                        // see `parsers.variable`.
                        variable: function variable() {
                            var name,
                                index = i;

                            if (input.charAt(i) === '@' && (name = $(/^@[\w-]+/))) {
                                return new _SuperMap2.default.CartoCSS.Tree.Variable(name, index, env.filename);
                            }
                        },

                        hexcolor: function hexcolor() {
                            var rgb;
                            if (input.charAt(i) === '#' && (rgb = $(/^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})/))) {
                                return new _SuperMap2.default.CartoCSS.Tree.Color(rgb[1]);
                            }
                        },

                        keywordcolor: function keywordcolor() {
                            var rgb = chunks[j].match(/^[a-z]+/);
                            if (rgb && rgb[0] in _SuperMap2.default.CartoCSS.Tree.Reference.data.colors) {
                                return new _SuperMap2.default.CartoCSS.Tree.Color(_SuperMap2.default.CartoCSS.Tree.Reference.data.colors[$(/^[a-z]+/)]);
                            }
                        },

                        // A Dimension, that is, a number and a unit. The only
                        // unit that has an effect is %
                        dimension: function dimension() {
                            var c = input.charCodeAt(i);
                            if (c > 57 || c < 45 || c === 47) return;
                            var value = $(/^(-?\d*\.?\d+(?:[eE][-+]?\d+)?)(\%|\w+)?/);
                            if (value) {
                                return new _SuperMap2.default.CartoCSS.Tree.Dimension(value[1], value[2], memo);
                            }
                        }
                    },

                    // The variable part of a variable definition.
                    // Used in the `rule` parser. Like @fink:
                    variable: function variable() {
                        var name;

                        if (input.charAt(i) === '@' && (name = $(/^(@[\w-]+)\s*:/))) {
                            return name[1];
                        }
                    },

                    // Entities are the smallest recognized token,
                    // and can be found inside a rule's value.
                    entity: function entity() {
                        var property1 = $(this.entities.call) || $(this.entities.literal);
                        var property2 = $(this.entities.field) || $(this.entities.variable);
                        var property3 = $(this.entities.url) || $(this.entities.keyword);
                        return property1 || property2 || property3;
                    },

                    // A Rule terminator. Note that we use `peek()` to check for '}',
                    // because the `block` rule will be expecting it, but we still need to make sure
                    // it's there, if ';' was ommitted.
                    end: function end() {
                        var q = ';';
                        return $(q) || peek('}');
                    },

                    // Elements are the building blocks for Selectors. They consist of
                    // an element name, such as a tag a class, or `*`.
                    //增加对中文的支持，[\u4e00-\u9fa5]
                    element: function element() {
                        var e = $(/^(?:[.#][\w\u4e00-\u9fa5\-]+|\*|Map)/);
                        if (e) return new _SuperMap2.default.CartoCSS.Tree.Element(e);
                    },

                    // Attachments allow adding multiple lines, polygons etc. to an
                    // object. There can only be one attachment per selector.
                    attachment: function attachment() {
                        var s = $(/^::([\w\-]+(?:\/[\w\-]+)*)/);
                        if (s) return s[1];
                    },

                    // Selectors are made out of one or more Elements, see above.
                    selector: function selector() {
                        var a,
                            attachment,
                            e,
                            elements = [],
                            f,
                            filters = new _SuperMap2.default.CartoCSS.Tree.Filterset(),
                            z,
                            zooms = [],
                            segments = 0,
                            conditions = 0;

                        while ((e = $(this.element)) || (z = $(this.zoom)) || (f = $(this.filter)) || (a = $(this.attachment))) {
                            segments++;
                            if (e) {
                                elements.push(e);
                            } else if (z) {
                                zooms.push(z);
                                conditions++;
                            } else if (f) {
                                var err = filters.add(f);
                                if (err) {
                                    throw makeError({
                                        message: err,
                                        index: i - 1
                                    });
                                }
                                conditions++;
                            } else if (attachment) {
                                throw makeError({
                                    message: 'Encountered second attachment name.',
                                    index: i - 1
                                });
                            } else {
                                attachment = a;
                            }

                            var c = input.charAt(i);
                            if (c === '{' || c === '}' || c === ';' || c === ',') {
                                break;
                            }
                        }

                        if (segments) {
                            return new _SuperMap2.default.CartoCSS.Tree.Selector(filters, zooms, elements, attachment, conditions, memo);
                        }
                    },

                    filter: function filter() {
                        save();
                        var key,
                            op,
                            val,
                            l = '[',
                            r = ']';
                        if (!$(l)) return;
                        if (key = $(/^[a-zA-Z0-9\-_]+/) || $(this.entities.quoted) || $(this.entities.variable) || $(this.entities.keyword) || $(this.entities.field)) {
                            if (key instanceof _SuperMap2.default.CartoCSS.Tree.Quoted) {
                                key = new _SuperMap2.default.CartoCSS.Tree.Field(key.toString());
                            }
                            if ((op = $(this.entities.comparison)) && (val = $(this.entities.quoted) || $(this.entities.variable) || $(this.entities.dimension) || $(this.entities.keyword) || $(this.entities.field))) {
                                if (!$(r)) {
                                    throw makeError({
                                        message: 'Missing closing ] of filter.',
                                        index: memo - 1
                                    });
                                }
                                if (!key.is) key = new _SuperMap2.default.CartoCSS.Tree.Field(key);
                                return new _SuperMap2.default.CartoCSS.Tree.Filter(key, op, val, memo, env.filename);
                            }
                        }
                    },

                    zoom: function zoom() {
                        save();
                        var op,
                            val,
                            r = ']';
                        if ($(/^\[\s*zoom/g) && (op = $(this.entities.comparison)) && (val = $(this.entities.variable) || $(this.entities.dimension)) && $(r)) {
                            return new _SuperMap2.default.CartoCSS.Tree.Zoom(op, val, memo);
                        } else {
                            // backtrack
                            restore();
                        }
                    },

                    // The `block` rule is used by `ruleset`
                    // It's a wrapper around the `primary` rule, with added `{}`.
                    block: function block() {
                        var content,
                            l = '{',
                            r = '}';

                        if ($(l) && (content = $(this.primary)) && $(r)) {
                            return content;
                        }
                    },

                    // div, .class, body > p {...}
                    ruleset: function ruleset() {
                        var selectors = [],
                            s,
                            f,
                            l,
                            rules,
                            filters = [],
                            q = ',';
                        save();

                        while (s = $(this.selector)) {
                            selectors.push(s);
                            while ($(this.comment)) {}
                            if (!$(q)) {
                                break;
                            }
                            while ($(this.comment)) {}
                        }
                        if (s) {
                            while ($(this.comment)) {}
                        }

                        if (selectors.length > 0 && (rules = $(this.block))) {
                            if (selectors.length === 1 && selectors[0].elements.length && selectors[0].elements[0].value === 'Map') {
                                var rs = new _SuperMap2.default.CartoCSS.Tree.Ruleset(selectors, rules);
                                rs.isMap = true;
                                return rs;
                            }
                            return new _SuperMap2.default.CartoCSS.Tree.Ruleset(selectors, rules);
                        } else {
                            // Backtrack
                            restore();
                        }
                    },

                    rule: function rule() {
                        var name,
                            value,
                            c = input.charAt(i);
                        save();

                        if (c === '.' || c === '#') {
                            return;
                        }

                        if (name = $(this.variable) || $(this.property)) {
                            value = $(this.value);

                            if (value && $(this.end)) {
                                return new _SuperMap2.default.CartoCSS.Tree.Rule(name, value, memo, env.filename);
                            } else {
                                furthest = i;
                                restore();
                            }
                        }
                    },

                    font: function font() {
                        var value = [],
                            expression = [],
                            weight,
                            font,
                            e,
                            q = ',';

                        while (e = $(this.entity)) {
                            expression.push(e);
                        }

                        value.push(new _SuperMap2.default.CartoCSS.Tree.Expression(expression));

                        if ($(q)) {
                            while (e = $(this.expression)) {
                                value.push(e);
                                if (!$(q)) {
                                    break;
                                }
                            }
                        }
                        return new _SuperMap2.default.CartoCSS.Tree.Value(value);
                    },

                    // A Value is a comma-delimited list of Expressions
                    // In a Rule, a Value represents everything after the `:`,
                    // and before the `;`.
                    value: function value() {
                        var e,
                            expressions = [],
                            q = ',';

                        while (e = $(this.expression)) {
                            expressions.push(e);
                            if (!$(q)) {
                                break;
                            }
                        }

                        if (expressions.length > 1) {
                            return new _SuperMap2.default.CartoCSS.Tree.Value(expressions.map(function (e) {
                                return e.value[0];
                            }));
                        } else if (expressions.length === 1) {
                            return new _SuperMap2.default.CartoCSS.Tree.Value(expressions);
                        }
                    },
                    // A sub-expression, contained by parenthensis
                    sub: function sub() {
                        var e,
                            l = '(',
                            r = ")";
                        if ($(l) && (e = $(this.expression)) && $(r)) {
                            return e;
                        }
                    },
                    // This is a misnomer because it actually handles multiplication
                    // and division.
                    multiplication: function multiplication() {
                        var m,
                            a,
                            op,
                            operation,
                            q = '/';
                        if (m = $(this.operand)) {
                            while ((op = $(q) || $('*') || $('%')) && (a = $(this.operand))) {
                                operation = new _SuperMap2.default.CartoCSS.Tree.Operation(op, [operation || m, a], memo);
                            }
                            return operation || m;
                        }
                    },
                    addition: function addition() {
                        var m,
                            a,
                            op,
                            operation,
                            plus = '+';
                        if (m = $(this.multiplication)) {
                            while ((op = $(/^[-+]\s+/) || input.charAt(i - 1) != ' ' && ($(plus) || $('-'))) && (a = $(this.multiplication))) {
                                operation = new _SuperMap2.default.CartoCSS.Tree.Operation(op, [operation || m, a], memo);
                            }
                            return operation || m;
                        }
                    },

                    // An operand is anything that can be part of an operation,
                    // such as a Color, or a Variable
                    operand: function operand() {
                        return $(this.sub) || $(this.entity);
                    },

                    // Expressions either represent mathematical operations,
                    // or white-space delimited Entities.  @var * 2
                    expression: function expression() {
                        var e,
                            delim,
                            entities = [],
                            d;

                        while (e = $(this.addition) || $(this.entity)) {
                            entities.push(e);
                        }

                        if (entities.length > 0) {
                            return new _SuperMap2.default.CartoCSS.Tree.Expression(entities);
                        }
                    },
                    property: function property() {
                        var name = $(/^(([a-z][-a-z_0-9]*\/)?\*?-?[-a-z_0-9]+)\s*:/);
                        if (name) return name[1];
                    }
                }
            };
            return parser;
        }

        /**
         * Method: parse
         * 利用CartoCSS解析器里面的parse方法，将CartoCSS样式表字符串转化为CartoCSS规则集
         *
         * Returns:
         * {Object} CartoCSS规则集
         * */

    }, {
        key: "parse",
        value: function parse(str) {
            var parser = this.parser;
            var ruleSet = this.ruleSet = parser.parse(str);
            return ruleSet;
        }

        /**
         * Method: toShaders
         * 将CartoCSS规则集转化为着色器
         *
         * Returns:
         * {Array} CartoCSS着色器集
         * */

    }, {
        key: "toShaders",
        value: function toShaders() {
            if (this.ruleSet) {
                var ruleset = this.ruleSet;
                if (ruleset) {
                    var defs = ruleset.toList(this.env);
                    defs.reverse();

                    var shaders = {};
                    var keys = [];
                    for (var i = 0, len0 = defs.length; i < len0; ++i) {
                        var def = defs[i];
                        var element_str = [];
                        for (var j = 0, len1 = def.elements.length; j < len1; j++) {
                            element_str.push(def.elements[j]);
                        }
                        var filters = def.filters.filters;
                        var filterStr = [];
                        for (var attr in filters) {
                            filterStr.push(filters[attr].id);
                        }
                        var key = element_str.join("/") + "::" + def.attachment + "_" + filterStr.join("_");
                        keys.push(key);
                        var shader = shaders[key] = shaders[key] || {};
                        //shader.frames = [];
                        shader.zoom = _SuperMap2.default.CartoCSS.Tree.Zoom.all;
                        var props = def.toJS(this.env);
                        for (var v in props) {
                            (shader[v] = shader[v] || []).push(props[v].join('\n'));
                        }
                    }

                    var ordered_shaders = [];

                    var done = {};
                    for (var i = 0, len0 = defs.length; i < len0; ++i) {
                        var def = defs[i];
                        var k = def.attachment;
                        var shader = shaders[keys[i]];
                        var shaderArray = [];
                        if (!done[k]) {
                            var j = 0;
                            for (var prop in shader) {
                                if (prop !== 'zoom' && prop !== 'frames' && prop !== "attachment" && prop != "elements") {
                                    //对layer-index作特殊处理以实现图层的控制
                                    if (prop === "layer-index") {
                                        /*var getLayerIndex = Function("attributes", "zoom", "var _value = null;" + shader[prop].join('\n') + "; return _value; ");*/
                                        var getLayerIndex = function getLayerIndex(attributes, zoom) {
                                            var _value = null;
                                            shader[prop].join('\n');
                                            return _value;
                                        };
                                        var layerIndex = getLayerIndex();
                                        Object.defineProperty(shaderArray, "layerIndex", {
                                            configurable: true,
                                            enumerable: false,
                                            value: layerIndex
                                        });
                                    } else {
                                        shaderArray[j++] = function (ops, shaderArray) {
                                            if (!Array.isArray(ops)) {
                                                return ops;
                                            }
                                            var body = ops.join('\n');
                                            var myKeyword = 'attributes["FEATUREID"]&&attributes["FEATUREID"]';
                                            var index = body.indexOf(myKeyword);
                                            if (index >= 0) {
                                                //对featureID作一些特殊处理，以将featureID提取出来
                                                if (!shaderArray.featureFilter) {
                                                    var featureFilterStart = index + myKeyword.length;
                                                    var featureFilterEnd = body.indexOf(")", featureFilterStart + 1);
                                                    var featureFilterStr = "featureId&&(featureId" + body.substring(featureFilterStart, featureFilterEnd) + ")";
                                                    /*var featureFilter = Function("featureId", "if(" + featureFilterStr + "){return true;}return false;");*/
                                                    var featureFilter = function featureFilter(featureId) {
                                                        if (featureFilterStr) {
                                                            return true;
                                                        }
                                                        return false;
                                                    };
                                                    Object.defineProperty(shaderArray, "featureFilter", {
                                                        configurable: true,
                                                        enumerable: false,
                                                        value: featureFilter
                                                    });
                                                }
                                                return {
                                                    "property": prop,
                                                    "getValue": Function("attributes", "zoom", "seftFilter", "var _value = null; var isExcute=typeof seftFilter=='function'?sefgFilter():seftFilter;if(isExcute){" + body + ";} return _value; ")
                                                };
                                            } else {
                                                return {
                                                    "property": prop,
                                                    "getValue": Function("attributes", "zoom", "var _value = null;" + body + "; return _value; ")
                                                };
                                            }
                                        }(shader[prop], shaderArray);
                                    }
                                }
                            }
                            Object.defineProperty(shaderArray, "attachment", {
                                configurable: true,
                                enumerable: false,
                                value: k
                            });
                            Object.defineProperty(shaderArray, "elements", {
                                configurable: true,
                                enumerable: false,
                                value: def.elements
                            });
                            ordered_shaders.push(shaderArray);
                            done[keys[i]] = true;
                        }
                        Object.defineProperty(shaderArray, "zoom", {
                            configurable: true,
                            enumerable: false,
                            value: def.zoom
                        });
                        //shader.frames.push(def.frame_offset);
                    }
                    return ordered_shaders;
                }
            }
            return null;
        }

        /**
         * APIMethod: getShaders
         * 获取CartoCSS着色器
         *
         * Returns:
         * {Array} 着色器集
         *
         * Examples:
         * (code)
         *   //shaders的结构大概如下：
         *   var shaders=[
         *   {
         *       attachment:"one",
         *       elements:[],
         *       zoom:23,
         *       length:2,
         *       0:{property:"line-color",value:function(attribute,zoom){var _value=null;if(zoom){_value="#123456"}return _vlaue;}},
         *       1:{preoperty:"line-width",value:function(attribute,zoom){var _value=null;if(zoom){_value=3}return _vlaue;}}
         *   },
         *   {
         *       attachment:"two",
         *       elements:[],
         *       zoom:23,
         *       length:2,
         *       0:{property:"polygon-color",value:function(attribute,zoom){var _value=null;if(zoom){_value="#123456"}return _vlaue;}},
         *       1:{property:"line-width",value:function(attribute,zoom){var _value=null;if(zoom){_value=3}return _vlaue;}}
         *   }
         *   ];
         * (end)
         * */

    }, {
        key: "getShaders",
        value: function getShaders() {
            return this.shaders;
        }

        /**
         * APIMethod: destroy
         * CartoCSS解析对象的析构函数，用于销毁CartoCSS解析对象
         * */

    }, {
        key: "destroy",
        value: function destroy() {
            this.cartoStr = null;
            this.env = null;
            this.ruleSet = null;
            this.parser = null;
            this.shaders = null;
        }
    }]);

    return CartoCSS;
}();

exports.default = CartoCSS;


_SuperMap2.default._mapnik_reference_latest = {
    "version": "2.1.1",
    "style": {
        "filter-mode": {
            "type": ["all", "first"],
            "doc": "Control the processing behavior of Rule filters within a Style. If 'all' is used then all Rules are processed sequentially independent of whether any previous filters matched. If 'first' is used then it means processing ends after the first match (a positive filter evaluation) and no further Rules in the Style are processed ('first' is usually the default for CSS implementations on top of Mapnik to simplify translation from CSS to Mapnik XML)",
            "default-value": "all",
            "default-meaning": "All Rules in a Style are processed whether they have filters or not and whether or not the filter conditions evaluate to true."
        },
        "image-filters": {
            "css": "image-filters",
            "default-value": "none",
            "default-meaning": "no filters",
            "type": "functions",
            "functions": [["agg-stack-blur", 2], ["emboss", 0], ["blur", 0], ["gray", 0], ["sobel", 0], ["edge-detect", 0], ["x-gradient", 0], ["y-gradient", 0], ["invert", 0], ["sharpen", 0]],
            "doc": "A list of image filters."
        },
        "comp-op": {
            "css": "comp-op",
            "default-value": "src-over",
            "default-meaning": "add the current layer on top of other layers",
            "doc": "Composite operation. This defines how this layer should behave relative to layers atop or below it.",
            "type": ["clear", "src", "dst", "src-over", "dst-over", "src-in", "dst-in", "src-out", "dst-out", "src-atop", "dst-atop", "xor", "plus", "minus", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "contrast", "invert", "invert-rgb", "grain-merge", "grain-extract", "hue", "saturation", "color", "value"]
        },
        "opacity": {
            "css": "opacity",
            "type": "float",
            "doc": "An alpha value for the style (which means an alpha applied to all features in separate buffer and then composited back to main buffer)",
            "default-value": 1,
            "default-meaning": "no separate buffer will be used and no alpha will be applied to the style after rendering"
        }
    },
    "layer": {
        "name": {
            "default-value": "",
            "type": "string",
            "required": true,
            "default-meaning": "No layer name has been provided",
            "doc": "The name of a layer. Can be anything you wish and is not strictly validated, but ideally unique  in the map"
        },
        "srs": {
            "default-value": "",
            "type": "string",
            "default-meaning": "No srs value is provided and the value will be inherited from the Map's srs",
            "doc": "The spatial reference system definition for the layer, aka the projection. Can either be a proj4 literal string like '+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs' or, if the proper proj4 epsg/nad/etc identifier files are installed, a string that uses an id like: '+init=epsg:4326'"
        },
        "status": {
            "default-value": true,
            "type": "boolean",
            "default-meaning": "This layer will be marked as active and available for processing",
            "doc": "A property that can be set to false to disable this layer from being processed"
        },
        "minzoom": {
            "default-value": "0",
            "type": "float",
            "default-meaning": "The layer will be visible at the minimum possible scale",
            "doc": "The minimum scale denominator that this layer will be visible at. A layer's visibility is determined by whether its status is true and if the Map scale >= minzoom - 1e-6 and scale < maxzoom + 1e-6"
        },
        "maxzoom": {
            "default-value": "1.79769e+308",
            "type": "float",
            "default-meaning": "The layer will be visible at the maximum possible scale",
            "doc": "The maximum scale denominator that this layer will be visible at. The default is the numeric limit of the C++ double type, which may vary slightly by system, but is likely a massive number like 1.79769e+308 and ensures that this layer will always be visible unless the value is reduced. A layer's visibility is determined by whether its status is true and if the Map scale >= minzoom - 1e-6 and scale < maxzoom + 1e-6"
        },
        "queryable": {
            "default-value": false,
            "type": "boolean",
            "default-meaning": "The layer will not be available for the direct querying of data values",
            "doc": "This property was added for GetFeatureInfo/WMS compatibility and is rarely used. It is off by default meaning that in a WMS context the layer will not be able to be queried unless the property is explicitly set to true"
        },
        "clear-label-cache": {
            "default-value": false,
            "type": "boolean",
            "default-meaning": "The renderer's collision detector cache (used for avoiding duplicate labels and overlapping markers) will not be cleared immediately before processing this layer",
            "doc": "This property, by default off, can be enabled to allow a user to clear the collision detector cache before a given layer is processed. This may be desirable to ensure that a given layers data shows up on the map even if it normally would not because of collisions with previously rendered labels or markers"
        },
        "group-by": {
            "default-value": "",
            "type": "string",
            "default-meaning": "No special layer grouping will be used during rendering",
            "doc": "https://github.com/mapnik/mapnik/wiki/Grouped-rendering"
        },
        "buffer-size": {
            "default-value": "0",
            "type": "float",
            "default-meaning": "No buffer will be used",
            "doc": "Extra tolerance around the Layer extent (in pixels) used to when querying and (potentially) clipping the layer data during rendering"
        },
        "maximum-extent": {
            "default-value": "none",
            "type": "bbox",
            "default-meaning": "No clipping extent will be used",
            "doc": "An extent to be used to limit the bounds used to query this specific layer data during rendering. Should be minx, miny, maxx, maxy in the coordinates of the Layer."
        }
    },
    "symbolizers": {
        "*": {
            "image-filters": {
                "css": "image-filters",
                "default-value": "none",
                "default-meaning": "no filters",
                "type": "functions",
                "functions": [["agg-stack-blur", 2], ["emboss", 0], ["blur", 0], ["gray", 0], ["sobel", 0], ["edge-detect", 0], ["x-gradient", 0], ["y-gradient", 0], ["invert", 0], ["sharpen", 0]],
                "doc": "A list of image filters."
            },
            "comp-op": {
                "css": "comp-op",
                "default-value": "src-over",
                "default-meaning": "add the current layer on top of other layers",
                "doc": "Composite operation. This defines how this layer should behave relative to layers atop or below it.",
                "type": ["clear", "src", "dst", "src-over", "dst-over", "src-in", "dst-in", "src-out", "dst-out", "src-atop", "dst-atop", "xor", "plus", "minus", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "contrast", "invert", "invert-rgb", "grain-merge", "grain-extract", "hue", "saturation", "color", "value"]
            },
            "opacity": {
                "css": "opacity",
                "type": "float",
                "doc": "An alpha value for the style (which means an alpha applied to all features in separate buffer and then composited back to main buffer)",
                "default-value": 1,
                "default-meaning": "no separate buffer will be used and no alpha will be applied to the style after rendering"
            }
        },
        "map": {
            "background-color": {
                "css": "background-color",
                "default-value": "none",
                "default-meaning": "transparent",
                "type": "color",
                "doc": "Map Background color"
            },
            "background-image": {
                "css": "background-image",
                "type": "uri",
                "default-value": "",
                "default-meaning": "transparent",
                "doc": "An image that is repeated below all features on a map as a background.",
                "description": "Map Background image"
            },
            "srs": {
                "css": "srs",
                "type": "string",
                "default-value": "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs",
                "default-meaning": "The proj4 literal of EPSG:4326 is assumed to be the Map's spatial reference and all data from layers within this map will be plotted using this coordinate system. If any layers do not declare an srs value then they will be assumed to be in the same srs as the Map and not transformations will be needed to plot them in the Map's coordinate space",
                "doc": "Map spatial reference (proj4 string)"
            },
            "buffer-size": {
                "css": "buffer-size",
                "default-value": "0",
                "type": "float",
                "default-meaning": "No buffer will be used",
                "doc": "Extra tolerance around the map (in pixels) used to ensure labels crossing tile boundaries are equally rendered in each tile (e.g. cut in each tile). Not intended to be used in combination with \"avoid-edges\"."
            },
            "maximum-extent": {
                "css": "",
                "default-value": "none",
                "type": "bbox",
                "default-meaning": "No clipping extent will be used",
                "doc": "An extent to be used to limit the bounds used to query all layers during rendering. Should be minx, miny, maxx, maxy in the coordinates of the Map."
            },
            "base": {
                "css": "base",
                "default-value": "",
                "default-meaning": "This base path defaults to an empty string meaning that any relative paths to files referenced in styles or layers will be interpreted relative to the application process.",
                "type": "string",
                "doc": "Any relative paths used to reference files will be understood as relative to this directory path if the map is loaded from an in memory object rather than from the filesystem. If the map is loaded from the filesystem and this option is not provided it will be set to the directory of the stylesheet."
            },
            "paths-from-xml": {
                "css": "",
                "default-value": true,
                "default-meaning": "Paths read from XML will be interpreted from the location of the XML",
                "type": "boolean",
                "doc": "value to control whether paths in the XML will be interpreted from the location of the XML or from the working directory of the program that calls load_map()"
            },
            "minimum-version": {
                "css": "",
                "default-value": "none",
                "default-meaning": "Mapnik version will not be detected and no error will be thrown about compatibility",
                "type": "string",
                "doc": "The minumum Mapnik version (e.g. 0.7.2) needed to use certain functionality in the stylesheet"
            },
            "font-directory": {
                "css": "font-directory",
                "type": "uri",
                "default-value": "none",
                "default-meaning": "No map-specific fonts will be registered",
                "doc": "Path to a directory which holds fonts which should be registered when the Map is loaded (in addition to any fonts that may be automatically registered)."
            }
        },
        "polygon": {
            "fill": {
                "css": "polygon-fill",
                "type": "color",
                "default-value": "rgba(128,128,128,1)",
                "default-meaning": "gray and fully opaque (alpha = 1), same as rgb(128,128,128)",
                "doc": "Fill color to assign to a polygon"
            },
            "fill-opacity": {
                "css": "polygon-opacity",
                "type": "float",
                "doc": "The opacity of the polygon",
                "default-value": 1,
                "default-meaning": "opaque"
            },
            "gamma": {
                "css": "polygon-gamma",
                "type": "float",
                "default-value": 1,
                "default-meaning": "fully antialiased",
                "range": "0-1",
                "doc": "Level of antialiasing of polygon edges"
            },
            "gamma-method": {
                "css": "polygon-gamma-method",
                "type": ["power", "linear", "none", "threshold", "multiply"],
                "default-value": "power",
                "default-meaning": "pow(x,gamma) is used to calculate pixel gamma, which produces slightly smoother line and polygon antialiasing than the 'linear' method, while other methods are usually only used to disable AA",
                "doc": "An Antigrain Geometry specific rendering hint to control the quality of antialiasing. Under the hood in Mapnik this method is used in combination with the 'gamma' value (which defaults to 1). The methods are in the AGG source at https://github.com/mapnik/mapnik/blob/master/deps/agg/include/agg_gamma_functions.h"
            },
            "clip": {
                "css": "polygon-clip",
                "type": "boolean",
                "default-value": true,
                "default-meaning": "geometry will be clipped to map bounds before rendering",
                "doc": "geometries are clipped to map bounds by default for best rendering performance. In some cases users may wish to disable this to avoid rendering artifacts."
            },
            "smooth": {
                "css": "polygon-smooth",
                "type": "float",
                "default-value": 0,
                "default-meaning": "no smoothing",
                "range": "0-1",
                "doc": "Smooths out geometry angles. 0 is no smoothing, 1 is fully smoothed. Values greater than 1 will produce wild, looping geometries."
            },
            "geometry-transform": {
                "css": "polygon-geometry-transform",
                "type": "functions",
                "default-value": "none",
                "default-meaning": "geometry will not be transformed",
                "doc": "Allows transformation functions to be applied to the geometry.",
                "functions": [["matrix", 6], ["translate", 2], ["scale", 2], ["rotate", 3], ["skewX", 1], ["skewY", 1]]
            },
            "comp-op": {
                "css": "polygon-comp-op",
                "default-value": "src-over",
                "default-meaning": "add the current symbolizer on top of other symbolizer",
                "doc": "Composite operation. This defines how this symbolizer should behave relative to symbolizers atop or below it.",
                "type": ["clear", "src", "dst", "src-over", "dst-over", "src-in", "dst-in", "src-out", "dst-out", "src-atop", "dst-atop", "xor", "plus", "minus", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "contrast", "invert", "invert-rgb", "grain-merge", "grain-extract", "hue", "saturation", "color", "value"]
            }
        },
        "line": {
            "stroke": {
                "css": "line-color",
                "default-value": "rgba(0,0,0,1)",
                "type": "color",
                "default-meaning": "black and fully opaque (alpha = 1), same as rgb(0,0,0)",
                "doc": "The color of a drawn line"
            },
            "stroke-width": {
                "css": "line-width",
                "default-value": 1,
                "type": "float",
                "doc": "The width of a line in pixels"
            },
            "stroke-opacity": {
                "css": "line-opacity",
                "default-value": 1,
                "type": "float",
                "default-meaning": "opaque",
                "doc": "The opacity of a line"
            },
            "stroke-linejoin": {
                "css": "line-join",
                "default-value": "miter",
                "type": ["miter", "round", "bevel"],
                "doc": "The behavior of lines when joining"
            },
            "stroke-linecap": {
                "css": "line-cap",
                "default-value": "butt",
                "type": ["butt", "round", "square"],
                "doc": "The display of line endings"
            },
            "stroke-gamma": {
                "css": "line-gamma",
                "type": "float",
                "default-value": 1,
                "default-meaning": "fully antialiased",
                "range": "0-1",
                "doc": "Level of antialiasing of stroke line"
            },
            "stroke-gamma-method": {
                "css": "line-gamma-method",
                "type": ["power", "linear", "none", "threshold", "multiply"],
                "default-value": "power",
                "default-meaning": "pow(x,gamma) is used to calculate pixel gamma, which produces slightly smoother line and polygon antialiasing than the 'linear' method, while other methods are usually only used to disable AA",
                "doc": "An Antigrain Geometry specific rendering hint to control the quality of antialiasing. Under the hood in Mapnik this method is used in combination with the 'gamma' value (which defaults to 1). The methods are in the AGG source at https://github.com/mapnik/mapnik/blob/master/deps/agg/include/agg_gamma_functions.h"
            },
            "stroke-dasharray": {
                "css": "line-dasharray",
                "type": "numbers",
                "doc": "A pair of length values [a,b], where (a) is the dash length and (b) is the gap length respectively. More than two values are supported for more complex patterns.",
                "default-value": "none",
                "default-meaning": "solid line"
            },
            "stroke-dashoffset": {
                "css": "line-dash-offset",
                "type": "numbers",
                "doc": "valid parameter but not currently used in renderers (only exists for experimental svg support in Mapnik which is not yet enabled)",
                "default-value": "none",
                "default-meaning": "solid line"
            },
            "stroke-miterlimit": {
                "css": "line-miterlimit",
                "type": "float",
                "doc": "The limit on the ratio of the miter length to the stroke-width. Used to automatically convert miter joins to bevel joins for sharp angles to avoid the miter extending beyond the thickness of the stroking path. Normally will not need to be set, but a larger value can sometimes help avoid jaggy artifacts.",
                "default-value": 4.0,
                "default-meaning": "Will auto-convert miters to bevel line joins when theta is less than 29 degrees as per the SVG spec: 'miterLength / stroke-width = 1 / sin ( theta / 2 )'"
            },
            "clip": {
                "css": "line-clip",
                "type": "boolean",
                "default-value": true,
                "default-meaning": "geometry will be clipped to map bounds before rendering",
                "doc": "geometries are clipped to map bounds by default for best rendering performance. In some cases users may wish to disable this to avoid rendering artifacts."
            },
            "smooth": {
                "css": "line-smooth",
                "type": "float",
                "default-value": 0,
                "default-meaning": "no smoothing",
                "range": "0-1",
                "doc": "Smooths out geometry angles. 0 is no smoothing, 1 is fully smoothed. Values greater than 1 will produce wild, looping geometries."
            },
            "offset": {
                "css": "line-offset",
                "type": "float",
                "default-value": 0,
                "default-meaning": "no offset",
                "doc": "Offsets a line a number of pixels parallel to its actual path. Postive values move the line left, negative values move it right (relative to the directionality of the line)."
            },
            "rasterizer": {
                "css": "line-rasterizer",
                "type": ["full", "fast"],
                "default-value": "full",
                "doc": "Exposes an alternate AGG rendering method that sacrifices some accuracy for speed."
            },
            "geometry-transform": {
                "css": "line-geometry-transform",
                "type": "functions",
                "default-value": "none",
                "default-meaning": "geometry will not be transformed",
                "doc": "Allows transformation functions to be applied to the geometry.",
                "functions": [["matrix", 6], ["translate", 2], ["scale", 2], ["rotate", 3], ["skewX", 1], ["skewY", 1]]
            },
            "comp-op": {
                "css": "line-comp-op",
                "default-value": "src-over",
                "default-meaning": "add the current symbolizer on top of other symbolizer",
                "doc": "Composite operation. This defines how this symbolizer should behave relative to symbolizers atop or below it.",
                "type": ["clear", "src", "dst", "src-over", "dst-over", "src-in", "dst-in", "src-out", "dst-out", "src-atop", "dst-atop", "xor", "plus", "minus", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "contrast", "invert", "invert-rgb", "grain-merge", "grain-extract", "hue", "saturation", "color", "value"]
            }
        },
        "markers": {
            "file": {
                "css": "marker-file",
                "doc": "An SVG file that this marker shows at each placement. If no file is given, the marker will show an ellipse.",
                "default-value": "",
                "default-meaning": "An ellipse or circle, if width equals height",
                "type": "uri"
            },
            "opacity": {
                "css": "marker-opacity",
                "doc": "The overall opacity of the marker, if set, overrides both the opacity of both the fill and stroke",
                "default-value": 1,
                "default-meaning": "The stroke-opacity and fill-opacity will be used",
                "type": "float"
            },
            "fill-opacity": {
                "css": "marker-fill-opacity",
                "doc": "The fill opacity of the marker",
                "default-value": 1,
                "default-meaning": "opaque",
                "type": "float"
            },
            "stroke": {
                "css": "marker-line-color",
                "doc": "The color of the stroke around a marker shape.",
                "default-value": "black",
                "type": "color"
            },
            "stroke-width": {
                "css": "marker-line-width",
                "doc": "The width of the stroke around a marker shape, in pixels. This is positioned on the boundary, so high values can cover the area itself.",
                "type": "float"
            },
            "stroke-opacity": {
                "css": "marker-line-opacity",
                "default-value": 1,
                "default-meaning": "opaque",
                "doc": "The opacity of a line",
                "type": "float"
            },
            "placement": {
                "css": "marker-placement",
                "type": ["point", "line", "interior"],
                "default-value": "point",
                "default-meaning": "Place markers at the center point (centroid) of the geometry",
                "doc": "Attempt to place markers on a point, in the center of a polygon, or if markers-placement:line, then multiple times along a line. 'interior' placement can be used to ensure that points placed on polygons are forced to be inside the polygon interior"
            },
            "multi-policy": {
                "css": "marker-multi-policy",
                "type": ["each", "whole", "largest"],
                "default-value": "each",
                "default-meaning": "If a feature contains multiple geometries and the placement type is either point or interior then a marker will be rendered for each",
                "doc": "A special setting to allow the user to control rendering behavior for 'multi-geometries' (when a feature contains multiple geometries). This setting does not apply to markers placed along lines. The 'each' policy is default and means all geometries will get a marker. The 'whole' policy means that the aggregate centroid between all geometries will be used. The 'largest' policy means that only the largest (by bounding box areas) feature will get a rendered marker (this is how text labeling behaves by default)."
            },
            "marker-type": {
                "css": "marker-type",
                "type": ["arrow", "ellipse"],
                "default-value": "ellipse",
                "doc": "The default marker-type. If a SVG file is not given as the marker-file parameter, the renderer provides either an arrow or an ellipse (a circle if height is equal to width)"
            },
            "width": {
                "css": "marker-width",
                "default-value": 10,
                "doc": "The width of the marker, if using one of the default types.",
                "type": "expression"
            },
            "height": {
                "css": "marker-height",
                "default-value": 10,
                "doc": "The height of the marker, if using one of the default types.",
                "type": "expression"
            },
            "fill": {
                "css": "marker-fill",
                "default-value": "blue",
                "doc": "The color of the area of the marker.",
                "type": "color"
            },
            "allow-overlap": {
                "css": "marker-allow-overlap",
                "type": "boolean",
                "default-value": false,
                "doc": "Control whether overlapping markers are shown or hidden.",
                "default-meaning": "Do not allow makers to overlap with each other - overlapping markers will not be shown."
            },
            "ignore-placement": {
                "css": "marker-ignore-placement",
                "type": "boolean",
                "default-value": false,
                "default-meaning": "do not store the bbox of this geometry in the collision detector cache",
                "doc": "value to control whether the placement of the feature will prevent the placement of other features"
            },
            "spacing": {
                "css": "marker-spacing",
                "doc": "Space between repeated labels",
                "default-value": 100,
                "type": "float"
            },
            "max-error": {
                "css": "marker-max-error",
                "type": "float",
                "default-value": 0.2,
                "doc": "The maximum difference between actual marker placement and the marker-spacing parameter. Setting a high value can allow the renderer to try to resolve placement conflicts with other symbolizers."
            },
            "transform": {
                "css": "marker-transform",
                "type": "functions",
                "functions": [["matrix", 6], ["translate", 2], ["scale", 2], ["rotate", 3], ["skewX", 1], ["skewY", 1]],
                "default-value": "",
                "default-meaning": "No transformation",
                "doc": "SVG transformation definition"
            },
            "clip": {
                "css": "marker-clip",
                "type": "boolean",
                "default-value": true,
                "default-meaning": "geometry will be clipped to map bounds before rendering",
                "doc": "geometries are clipped to map bounds by default for best rendering performance. In some cases users may wish to disable this to avoid rendering artifacts."
            },
            "smooth": {
                "css": "marker-smooth",
                "type": "float",
                "default-value": 0,
                "default-meaning": "no smoothing",
                "range": "0-1",
                "doc": "Smooths out geometry angles. 0 is no smoothing, 1 is fully smoothed. Values greater than 1 will produce wild, looping geometries."
            },
            "geometry-transform": {
                "css": "marker-geometry-transform",
                "type": "functions",
                "default-value": "none",
                "default-meaning": "geometry will not be transformed",
                "doc": "Allows transformation functions to be applied to the geometry.",
                "functions": [["matrix", 6], ["translate", 2], ["scale", 2], ["rotate", 3], ["skewX", 1], ["skewY", 1]]
            },
            "comp-op": {
                "css": "marker-comp-op",
                "default-value": "src-over",
                "default-meaning": "add the current symbolizer on top of other symbolizer",
                "doc": "Composite operation. This defines how this symbolizer should behave relative to symbolizers atop or below it.",
                "type": ["clear", "src", "dst", "src-over", "dst-over", "src-in", "dst-in", "src-out", "dst-out", "src-atop", "dst-atop", "xor", "plus", "minus", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "contrast", "invert", "invert-rgb", "grain-merge", "grain-extract", "hue", "saturation", "color", "value"]
            }
        },
        "shield": {
            "name": {
                "css": "shield-name",
                "type": "expression",
                "serialization": "content",
                "doc": "Value to use for a shield\"s text label. Data columns are specified using brackets like [column_name]"
            },
            "file": {
                "css": "shield-file",
                "required": true,
                "type": "uri",
                "default-value": "none",
                "doc": "Image file to render behind the shield text"
            },
            "face-name": {
                "css": "shield-face-name",
                "type": "string",
                "validate": "font",
                "doc": "Font name and style to use for the shield text",
                "default-value": "",
                "required": true
            },
            "unlock-image": {
                "css": "shield-unlock-image",
                "type": "boolean",
                "doc": "This parameter should be set to true if you are trying to position text beside rather than on top of the shield image",
                "default-value": false,
                "default-meaning": "text alignment relative to the shield image uses the center of the image as the anchor for text positioning."
            },
            "size": {
                "css": "shield-size",
                "type": "float",
                "doc": "The size of the shield text in pixels"
            },
            "fill": {
                "css": "shield-fill",
                "type": "color",
                "doc": "The color of the shield text"
            },
            "placement": {
                "css": "shield-placement",
                "type": ["point", "line", "vertex", "interior"],
                "default-value": "point",
                "doc": "How this shield should be placed. Point placement attempts to place it on top of points, line places along lines multiple times per feature, vertex places on the vertexes of polygons, and interior attempts to place inside of polygons."
            },
            "avoid-edges": {
                "css": "shield-avoid-edges",
                "doc": "Tell positioning algorithm to avoid labeling near intersection edges.",
                "type": "boolean",
                "default-value": false
            },
            "allow-overlap": {
                "css": "shield-allow-overlap",
                "type": "boolean",
                "default-value": false,
                "doc": "Control whether overlapping shields are shown or hidden.",
                "default-meaning": "Do not allow shields to overlap with other map elements already placed."
            },
            "minimum-distance": {
                "css": "shield-min-distance",
                "type": "float",
                "default-value": 0,
                "doc": "Minimum distance to the next shield symbol, not necessarily the same shield."
            },
            "spacing": {
                "css": "shield-spacing",
                "type": "float",
                "default-value": 0,
                "doc": "The spacing between repeated occurrences of the same shield on a line"
            },
            "minimum-padding": {
                "css": "shield-min-padding",
                "default-value": 0,
                "doc": "Determines the minimum amount of padding that a shield gets relative to other shields",
                "type": "float"
            },
            "wrap-width": {
                "css": "shield-wrap-width",
                "type": "unsigned",
                "default-value": 0,
                "doc": "Length of a chunk of text in characters before wrapping text"
            },
            "wrap-before": {
                "css": "shield-wrap-before",
                "type": "boolean",
                "default-value": false,
                "doc": "Wrap text before wrap-width is reached. If false, wrapped lines will be a bit longer than wrap-width."
            },
            "wrap-character": {
                "css": "shield-wrap-character",
                "type": "string",
                "default-value": " ",
                "doc": "Use this character instead of a space to wrap long names."
            },
            "halo-fill": {
                "css": "shield-halo-fill",
                "type": "color",
                "default-value": "#FFFFFF",
                "default-meaning": "white",
                "doc": "Specifies the color of the halo around the text."
            },
            "halo-radius": {
                "css": "shield-halo-radius",
                "doc": "Specify the radius of the halo in pixels",
                "default-value": 0,
                "default-meaning": "no halo",
                "type": "float"
            },
            "character-spacing": {
                "css": "shield-character-spacing",
                "type": "unsigned",
                "default-value": 0,
                "doc": "Horizontal spacing between characters (in pixels). Currently works for point placement only, not line placement."
            },
            "line-spacing": {
                "css": "shield-line-spacing",
                "doc": "Vertical spacing between lines of multiline labels (in pixels)",
                "type": "unsigned"
            },
            "dx": {
                "css": "shield-text-dx",
                "type": "float",
                "doc": "Displace text within shield by fixed amount, in pixels, +/- along the X axis.  A positive value will shift the text right",
                "default-value": 0
            },
            "dy": {
                "css": "shield-text-dy",
                "type": "float",
                "doc": "Displace text within shield by fixed amount, in pixels, +/- along the Y axis.  A positive value will shift the text down",
                "default-value": 0
            },
            "shield-dx": {
                "css": "shield-dx",
                "type": "float",
                "doc": "Displace shield by fixed amount, in pixels, +/- along the X axis.  A positive value will shift the text right",
                "default-value": 0
            },
            "shield-dy": {
                "css": "shield-dy",
                "type": "float",
                "doc": "Displace shield by fixed amount, in pixels, +/- along the Y axis.  A positive value will shift the text down",
                "default-value": 0
            },
            "opacity": {
                "css": "shield-opacity",
                "type": "float",
                "doc": "(Default 1.0) - opacity of the image used for the shield",
                "default-value": 1
            },
            "text-opacity": {
                "css": "shield-text-opacity",
                "type": "float",
                "doc": "(Default 1.0) - opacity of the text placed on top of the shield",
                "default-value": 1
            },
            "horizontal-alignment": {
                "css": "shield-horizontal-alignment",
                "type": ["left", "middle", "right", "auto"],
                "doc": "The shield's horizontal alignment from its centerpoint",
                "default-value": "auto"
            },
            "vertical-alignment": {
                "css": "shield-vertical-alignment",
                "type": ["top", "middle", "bottom", "auto"],
                "doc": "The shield's vertical alignment from its centerpoint",
                "default-value": "middle"
            },
            "text-transform": {
                "css": "shield-text-transform",
                "type": ["none", "uppercase", "lowercase", "capitalize"],
                "doc": "Transform the case of the characters",
                "default-value": "none"
            },
            "justify-alignment": {
                "css": "shield-justify-alignment",
                "type": ["left", "center", "right", "auto"],
                "doc": "Define how text in a shield's label is justified",
                "default-value": "auto"
            },
            "clip": {
                "css": "shield-clip",
                "type": "boolean",
                "default-value": true,
                "default-meaning": "geometry will be clipped to map bounds before rendering",
                "doc": "geometries are clipped to map bounds by default for best rendering performance. In some cases users may wish to disable this to avoid rendering artifacts."
            },
            "comp-op": {
                "css": "shield-comp-op",
                "default-value": "src-over",
                "default-meaning": "add the current symbolizer on top of other symbolizer",
                "doc": "Composite operation. This defines how this symbolizer should behave relative to symbolizers atop or below it.",
                "type": ["clear", "src", "dst", "src-over", "dst-over", "src-in", "dst-in", "src-out", "dst-out", "src-atop", "dst-atop", "xor", "plus", "minus", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "contrast", "invert", "invert-rgb", "grain-merge", "grain-extract", "hue", "saturation", "color", "value"]
            }
        },
        "line-pattern": {
            "file": {
                "css": "line-pattern-file",
                "type": "uri",
                "default-value": "none",
                "required": true,
                "doc": "An image file to be repeated and warped along a line"
            },
            "clip": {
                "css": "line-pattern-clip",
                "type": "boolean",
                "default-value": true,
                "default-meaning": "geometry will be clipped to map bounds before rendering",
                "doc": "geometries are clipped to map bounds by default for best rendering performance. In some cases users may wish to disable this to avoid rendering artifacts."
            },
            "smooth": {
                "css": "line-pattern-smooth",
                "type": "float",
                "default-value": 0,
                "default-meaning": "no smoothing",
                "range": "0-1",
                "doc": "Smooths out geometry angles. 0 is no smoothing, 1 is fully smoothed. Values greater than 1 will produce wild, looping geometries."
            },
            "geometry-transform": {
                "css": "line-pattern-geometry-transform",
                "type": "functions",
                "default-value": "none",
                "default-meaning": "geometry will not be transformed",
                "doc": "Allows transformation functions to be applied to the geometry.",
                "functions": [["matrix", 6], ["translate", 2], ["scale", 2], ["rotate", 3], ["skewX", 1], ["skewY", 1]]
            },
            "comp-op": {
                "css": "line-pattern-comp-op",
                "default-value": "src-over",
                "default-meaning": "add the current symbolizer on top of other symbolizer",
                "doc": "Composite operation. This defines how this symbolizer should behave relative to symbolizers atop or below it.",
                "type": ["clear", "src", "dst", "src-over", "dst-over", "src-in", "dst-in", "src-out", "dst-out", "src-atop", "dst-atop", "xor", "plus", "minus", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "contrast", "invert", "invert-rgb", "grain-merge", "grain-extract", "hue", "saturation", "color", "value"]
            }
        },
        "polygon-pattern": {
            "file": {
                "css": "polygon-pattern-file",
                "type": "uri",
                "default-value": "none",
                "required": true,
                "doc": "Image to use as a repeated pattern fill within a polygon"
            },
            "alignment": {
                "css": "polygon-pattern-alignment",
                "type": ["local", "global"],
                "default-value": "local",
                "doc": "Specify whether to align pattern fills to the layer or to the map."
            },
            "gamma": {
                "css": "polygon-pattern-gamma",
                "type": "float",
                "default-value": 1,
                "default-meaning": "fully antialiased",
                "range": "0-1",
                "doc": "Level of antialiasing of polygon pattern edges"
            },
            "opacity": {
                "css": "polygon-pattern-opacity",
                "type": "float",
                "doc": "(Default 1.0) - Apply an opacity level to the image used for the pattern",
                "default-value": 1,
                "default-meaning": "The image is rendered without modifications"
            },
            "clip": {
                "css": "polygon-pattern-clip",
                "type": "boolean",
                "default-value": true,
                "default-meaning": "geometry will be clipped to map bounds before rendering",
                "doc": "geometries are clipped to map bounds by default for best rendering performance. In some cases users may wish to disable this to avoid rendering artifacts."
            },
            "smooth": {
                "css": "polygon-pattern-smooth",
                "type": "float",
                "default-value": 0,
                "default-meaning": "no smoothing",
                "range": "0-1",
                "doc": "Smooths out geometry angles. 0 is no smoothing, 1 is fully smoothed. Values greater than 1 will produce wild, looping geometries."
            },
            "geometry-transform": {
                "css": "polygon-pattern-geometry-transform",
                "type": "functions",
                "default-value": "none",
                "default-meaning": "geometry will not be transformed",
                "doc": "Allows transformation functions to be applied to the geometry.",
                "functions": [["matrix", 6], ["translate", 2], ["scale", 2], ["rotate", 3], ["skewX", 1], ["skewY", 1]]
            },
            "comp-op": {
                "css": "polygon-pattern-comp-op",
                "default-value": "src-over",
                "default-meaning": "add the current symbolizer on top of other symbolizer",
                "doc": "Composite operation. This defines how this symbolizer should behave relative to symbolizers atop or below it.",
                "type": ["clear", "src", "dst", "src-over", "dst-over", "src-in", "dst-in", "src-out", "dst-out", "src-atop", "dst-atop", "xor", "plus", "minus", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "contrast", "invert", "invert-rgb", "grain-merge", "grain-extract", "hue", "saturation", "color", "value"]
            }
        },
        "raster": {
            "opacity": {
                "css": "raster-opacity",
                "default-value": 1,
                "default-meaning": "opaque",
                "type": "float",
                "doc": "The opacity of the raster symbolizer on top of other symbolizers."
            },
            "filter-factor": {
                "css": "raster-filter-factor",
                "default-value": -1,
                "default-meaning": "Allow the datasource to choose appropriate downscaling.",
                "type": "float",
                "doc": "This is used by the Raster or Gdal datasources to pre-downscale images using overviews. Higher numbers can sometimes cause much better scaled image output, at the cost of speed."
            },
            "scaling": {
                "css": "raster-scaling",
                "type": ["near", "fast", "bilinear", "bilinear8", "bicubic", "spline16", "spline36", "hanning", "hamming", "hermite", "kaiser", "quadric", "catrom", "gaussian", "bessel", "mitchell", "sinc", "lanczos", "blackman"],
                "default-value": "near",
                "doc": "The scaling algorithm used to making different resolution versions of this raster layer. Bilinear is a good compromise between speed and accuracy, while lanczos gives the highest quality."
            },
            "mesh-size": {
                "css": "raster-mesh-size",
                "default-value": 16,
                "default-meaning": "Reprojection mesh will be 1/16 of the resolution of the source image",
                "type": "unsigned",
                "doc": "A reduced resolution mesh is used for raster reprojection, and the total image size is divided by the mesh-size to determine the quality of that mesh. Values for mesh-size larger than the default will result in faster reprojection but might lead to distortion."
            },
            "comp-op": {
                "css": "raster-comp-op",
                "default-value": "src-over",
                "default-meaning": "add the current symbolizer on top of other symbolizer",
                "doc": "Composite operation. This defines how this symbolizer should behave relative to symbolizers atop or below it.",
                "type": ["clear", "src", "dst", "src-over", "dst-over", "src-in", "dst-in", "src-out", "dst-out", "src-atop", "dst-atop", "xor", "plus", "minus", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "contrast", "invert", "invert-rgb", "grain-merge", "grain-extract", "hue", "saturation", "color", "value"]
            }
        },
        "point": {
            "file": {
                "css": "point-file",
                "type": "uri",
                "required": false,
                "default-value": "none",
                "doc": "Image file to represent a point"
            },
            "allow-overlap": {
                "css": "point-allow-overlap",
                "type": "boolean",
                "default-value": false,
                "doc": "Control whether overlapping points are shown or hidden.",
                "default-meaning": "Do not allow points to overlap with each other - overlapping markers will not be shown."
            },
            "ignore-placement": {
                "css": "point-ignore-placement",
                "type": "boolean",
                "default-value": false,
                "default-meaning": "do not store the bbox of this geometry in the collision detector cache",
                "doc": "value to control whether the placement of the feature will prevent the placement of other features"
            },
            "opacity": {
                "css": "point-opacity",
                "type": "float",
                "default-value": 1.0,
                "default-meaning": "Fully opaque",
                "doc": "A value from 0 to 1 to control the opacity of the point"
            },
            "placement": {
                "css": "point-placement",
                "type": ["centroid", "interior"],
                "doc": "How this point should be placed. Centroid calculates the geometric center of a polygon, which can be outside of it, while interior always places inside of a polygon.",
                "default-value": "centroid"
            },
            "transform": {
                "css": "point-transform",
                "type": "functions",
                "functions": [["matrix", 6], ["translate", 2], ["scale", 2], ["rotate", 3], ["skewX", 1], ["skewY", 1]],
                "default-value": "",
                "default-meaning": "No transformation",
                "doc": "SVG transformation definition"
            },
            "comp-op": {
                "css": "point-comp-op",
                "default-value": "src-over",
                "default-meaning": "add the current symbolizer on top of other symbolizer",
                "doc": "Composite operation. This defines how this symbolizer should behave relative to symbolizers atop or below it.",
                "type": ["clear", "src", "dst", "src-over", "dst-over", "src-in", "dst-in", "src-out", "dst-out", "src-atop", "dst-atop", "xor", "plus", "minus", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "contrast", "invert", "invert-rgb", "grain-merge", "grain-extract", "hue", "saturation", "color", "value"]
            }
        },
        "text": {
            "name": {
                "css": "text-name",
                "type": "expression",
                "required": true,
                "default-value": "",
                "serialization": "content",
                "doc": "Value to use for a text label. Data columns are specified using brackets like [column_name]"
            },
            "face-name": {
                "css": "text-face-name",
                "type": "string",
                "validate": "font",
                "doc": "Font name and style to render a label in",
                "required": true
            },
            "size": {
                "css": "text-size",
                "type": "float",
                "default-value": 10,
                "doc": "Text size in pixels"
            },
            "text-ratio": {
                "css": "text-ratio",
                "doc": "Define the amount of text (of the total) present on successive lines when wrapping occurs",
                "default-value": 0,
                "type": "unsigned"
            },
            "wrap-width": {
                "css": "text-wrap-width",
                "doc": "Length of a chunk of text in characters before wrapping text",
                "default-value": 0,
                "type": "unsigned"
            },
            "wrap-before": {
                "css": "text-wrap-before",
                "type": "boolean",
                "default-value": false,
                "doc": "Wrap text before wrap-width is reached. If false, wrapped lines will be a bit longer than wrap-width."
            },
            "wrap-character": {
                "css": "text-wrap-character",
                "type": "string",
                "default-value": " ",
                "doc": "Use this character instead of a space to wrap long text."
            },
            "spacing": {
                "css": "text-spacing",
                "type": "unsigned",
                "doc": "Distance between repeated text labels on a line (aka. label-spacing)"
            },
            "character-spacing": {
                "css": "text-character-spacing",
                "type": "float",
                "default-value": 0,
                "doc": "Horizontal spacing adjustment between characters in pixels"
            },
            "line-spacing": {
                "css": "text-line-spacing",
                "default-value": 0,
                "type": "unsigned",
                "doc": "Vertical spacing adjustment between lines in pixels"
            },
            "label-position-tolerance": {
                "css": "text-label-position-tolerance",
                "default-value": 0,
                "type": "unsigned",
                "doc": "Allows the label to be displaced from its ideal position by a number of pixels (only works with placement:line)"
            },
            "max-char-angle-delta": {
                "css": "text-max-char-angle-delta",
                "type": "float",
                "default-value": "22.5",
                "doc": "The maximum angle change, in degrees, allowed between adjacent characters in a label. This value internally is converted to radians to the default is 22.5*math.pi/180.0. The higher the value the fewer labels will be placed around around sharp corners."
            },
            "fill": {
                "css": "text-fill",
                "doc": "Specifies the color for the text",
                "default-value": "#000000",
                "type": "color"
            },
            "opacity": {
                "css": "text-opacity",
                "doc": "A number from 0 to 1 specifying the opacity for the text",
                "default-value": 1.0,
                "default-meaning": "Fully opaque",
                "type": "float"
            },
            "halo-fill": {
                "css": "text-halo-fill",
                "type": "color",
                "default-value": "#FFFFFF",
                "default-meaning": "white",
                "doc": "Specifies the color of the halo around the text."
            },
            "halo-radius": {
                "css": "text-halo-radius",
                "doc": "Specify the radius of the halo in pixels",
                "default-value": 0,
                "default-meaning": "no halo",
                "type": "float"
            },
            "dx": {
                "css": "text-dx",
                "type": "float",
                "doc": "Displace text by fixed amount, in pixels, +/- along the X axis.  A positive value will shift the text right",
                "default-value": 0
            },
            "dy": {
                "css": "text-dy",
                "type": "float",
                "doc": "Displace text by fixed amount, in pixels, +/- along the Y axis.  A positive value will shift the text down",
                "default-value": 0
            },
            "vertical-alignment": {
                "css": "text-vertical-alignment",
                "type": ["top", "middle", "bottom", "auto"],
                "doc": "Position of label relative to point position.",
                "default-value": "auto",
                "default-meaning": "Default affected by value of dy; \"bottom\" for dy>0, \"top\" for dy<0."
            },
            "avoid-edges": {
                "css": "text-avoid-edges",
                "doc": "Tell positioning algorithm to avoid labeling near intersection edges.",
                "default-value": false,
                "type": "boolean"
            },
            "minimum-distance": {
                "css": "text-min-distance",
                "doc": "Minimum permitted distance to the next text symbolizer.",
                "type": "float"
            },
            "minimum-padding": {
                "css": "text-min-padding",
                "doc": "Determines the minimum amount of padding that a text symbolizer gets relative to other text",
                "type": "float"
            },
            "minimum-path-length": {
                "css": "text-min-path-length",
                "type": "float",
                "default-value": 0,
                "default-meaning": "place labels on all paths",
                "doc": "Place labels only on paths longer than this value."
            },
            "allow-overlap": {
                "css": "text-allow-overlap",
                "type": "boolean",
                "default-value": false,
                "doc": "Control whether overlapping text is shown or hidden.",
                "default-meaning": "Do not allow text to overlap with other text - overlapping markers will not be shown."
            },
            "orientation": {
                "css": "text-orientation",
                "type": "expression",
                "doc": "Rotate the text."
            },
            "placement": {
                "css": "text-placement",
                "type": ["point", "line", "vertex", "interior"],
                "default-value": "point",
                "doc": "Control the style of placement of a point versus the geometry it is attached to."
            },
            "placement-type": {
                "css": "text-placement-type",
                "doc": "Re-position and/or re-size text to avoid overlaps. \"simple\" for basic algorithm (using text-placements string,) \"dummy\" to turn this feature off.",
                "type": ["dummy", "simple"],
                "default-value": "dummy"
            },
            "placements": {
                "css": "text-placements",
                "type": "string",
                "default-value": "",
                "doc": "If \"placement-type\" is set to \"simple\", use this \"POSITIONS,[SIZES]\" string. An example is `text-placements: \"E,NE,SE,W,NW,SW\";` "
            },
            "text-transform": {
                "css": "text-transform",
                "type": ["none", "uppercase", "lowercase", "capitalize"],
                "doc": "Transform the case of the characters",
                "default-value": "none"
            },
            "horizontal-alignment": {
                "css": "text-horizontal-alignment",
                "type": ["left", "middle", "right", "auto"],
                "doc": "The text's horizontal alignment from its centerpoint",
                "default-value": "auto"
            },
            "justify-alignment": {
                "css": "text-align",
                "type": ["left", "right", "center", "auto"],
                "doc": "Define how text is justified",
                "default-value": "auto",
                "default-meaning": "Auto alignment means that text will be centered by default except when using the `placement-type` parameter - in that case either right or left justification will be used automatically depending on where the text could be fit given the `text-placements` directives"
            },
            "clip": {
                "css": "text-clip",
                "type": "boolean",
                "default-value": true,
                "default-meaning": "geometry will be clipped to map bounds before rendering",
                "doc": "geometries are clipped to map bounds by default for best rendering performance. In some cases users may wish to disable this to avoid rendering artifacts."
            },
            "comp-op": {
                "css": "text-comp-op",
                "default-value": "src-over",
                "default-meaning": "add the current symbolizer on top of other symbolizer",
                "doc": "Composite operation. This defines how this symbolizer should behave relative to symbolizers atop or below it.",
                "type": ["clear", "src", "dst", "src-over", "dst-over", "src-in", "dst-in", "src-out", "dst-out", "src-atop", "dst-atop", "xor", "plus", "minus", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "contrast", "invert", "invert-rgb", "grain-merge", "grain-extract", "hue", "saturation", "color", "value"]
            }
        },
        "building": {
            "fill": {
                "css": "building-fill",
                "default-value": "#FFFFFF",
                "doc": "The color of the buildings walls.",
                "type": "color"
            },
            "fill-opacity": {
                "css": "building-fill-opacity",
                "type": "float",
                "doc": "The opacity of the building as a whole, including all walls.",
                "default-value": 1
            },
            "height": {
                "css": "building-height",
                "doc": "The height of the building in pixels.",
                "type": "expression",
                "default-value": "0"
            }
        }
    },
    "colors": {
        "aliceblue": [240, 248, 255],
        "antiquewhite": [250, 235, 215],
        "aqua": [0, 255, 255],
        "aquamarine": [127, 255, 212],
        "azure": [240, 255, 255],
        "beige": [245, 245, 220],
        "bisque": [255, 228, 196],
        "black": [0, 0, 0],
        "blanchedalmond": [255, 235, 205],
        "blue": [0, 0, 255],
        "blueviolet": [138, 43, 226],
        "brown": [165, 42, 42],
        "burlywood": [222, 184, 135],
        "cadetblue": [95, 158, 160],
        "chartreuse": [127, 255, 0],
        "chocolate": [210, 105, 30],
        "coral": [255, 127, 80],
        "cornflowerblue": [100, 149, 237],
        "cornsilk": [255, 248, 220],
        "crimson": [220, 20, 60],
        "cyan": [0, 255, 255],
        "darkblue": [0, 0, 139],
        "darkcyan": [0, 139, 139],
        "darkgoldenrod": [184, 134, 11],
        "darkgray": [169, 169, 169],
        "darkgreen": [0, 100, 0],
        "darkgrey": [169, 169, 169],
        "darkkhaki": [189, 183, 107],
        "darkmagenta": [139, 0, 139],
        "darkolivegreen": [85, 107, 47],
        "darkorange": [255, 140, 0],
        "darkorchid": [153, 50, 204],
        "darkred": [139, 0, 0],
        "darksalmon": [233, 150, 122],
        "darkseagreen": [143, 188, 143],
        "darkslateblue": [72, 61, 139],
        "darkslategrey": [47, 79, 79],
        "darkturquoise": [0, 206, 209],
        "darkviolet": [148, 0, 211],
        "deeppink": [255, 20, 147],
        "deepskyblue": [0, 191, 255],
        "dimgray": [105, 105, 105],
        "dimgrey": [105, 105, 105],
        "dodgerblue": [30, 144, 255],
        "firebrick": [178, 34, 34],
        "floralwhite": [255, 250, 240],
        "forestgreen": [34, 139, 34],
        "fuchsia": [255, 0, 255],
        "gainsboro": [220, 220, 220],
        "ghostwhite": [248, 248, 255],
        "gold": [255, 215, 0],
        "goldenrod": [218, 165, 32],
        "gray": [128, 128, 128],
        "grey": [128, 128, 128],
        "green": [0, 128, 0],
        "greenyellow": [173, 255, 47],
        "honeydew": [240, 255, 240],
        "hotpink": [255, 105, 180],
        "indianred": [205, 92, 92],
        "indigo": [75, 0, 130],
        "ivory": [255, 255, 240],
        "khaki": [240, 230, 140],
        "lavender": [230, 230, 250],
        "lavenderblush": [255, 240, 245],
        "lawngreen": [124, 252, 0],
        "lemonchiffon": [255, 250, 205],
        "lightblue": [173, 216, 230],
        "lightcoral": [240, 128, 128],
        "lightcyan": [224, 255, 255],
        "lightgoldenrodyellow": [250, 250, 210],
        "lightgray": [211, 211, 211],
        "lightgreen": [144, 238, 144],
        "lightgrey": [211, 211, 211],
        "lightpink": [255, 182, 193],
        "lightsalmon": [255, 160, 122],
        "lightseagreen": [32, 178, 170],
        "lightskyblue": [135, 206, 250],
        "lightslategray": [119, 136, 153],
        "lightslategrey": [119, 136, 153],
        "lightsteelblue": [176, 196, 222],
        "lightyellow": [255, 255, 224],
        "lime": [0, 255, 0],
        "limegreen": [50, 205, 50],
        "linen": [250, 240, 230],
        "magenta": [255, 0, 255],
        "maroon": [128, 0, 0],
        "mediumaquamarine": [102, 205, 170],
        "mediumblue": [0, 0, 205],
        "mediumorchid": [186, 85, 211],
        "mediumpurple": [147, 112, 219],
        "mediumseagreen": [60, 179, 113],
        "mediumslateblue": [123, 104, 238],
        "mediumspringgreen": [0, 250, 154],
        "mediumturquoise": [72, 209, 204],
        "mediumvioletred": [199, 21, 133],
        "midnightblue": [25, 25, 112],
        "mintcream": [245, 255, 250],
        "mistyrose": [255, 228, 225],
        "moccasin": [255, 228, 181],
        "navajowhite": [255, 222, 173],
        "navy": [0, 0, 128],
        "oldlace": [253, 245, 230],
        "olive": [128, 128, 0],
        "olivedrab": [107, 142, 35],
        "orange": [255, 165, 0],
        "orangered": [255, 69, 0],
        "orchid": [218, 112, 214],
        "palegoldenrod": [238, 232, 170],
        "palegreen": [152, 251, 152],
        "paleturquoise": [175, 238, 238],
        "palevioletred": [219, 112, 147],
        "papayawhip": [255, 239, 213],
        "peachpuff": [255, 218, 185],
        "peru": [205, 133, 63],
        "pink": [255, 192, 203],
        "plum": [221, 160, 221],
        "powderblue": [176, 224, 230],
        "purple": [128, 0, 128],
        "red": [255, 0, 0],
        "rosybrown": [188, 143, 143],
        "royalblue": [65, 105, 225],
        "saddlebrown": [139, 69, 19],
        "salmon": [250, 128, 114],
        "sandybrown": [244, 164, 96],
        "seagreen": [46, 139, 87],
        "seashell": [255, 245, 238],
        "sienna": [160, 82, 45],
        "silver": [192, 192, 192],
        "skyblue": [135, 206, 235],
        "slateblue": [106, 90, 205],
        "slategray": [112, 128, 144],
        "slategrey": [112, 128, 144],
        "snow": [255, 250, 250],
        "springgreen": [0, 255, 127],
        "steelblue": [70, 130, 180],
        "tan": [210, 180, 140],
        "teal": [0, 128, 128],
        "thistle": [216, 191, 216],
        "tomato": [255, 99, 71],
        "turquoise": [64, 224, 208],
        "violet": [238, 130, 238],
        "wheat": [245, 222, 179],
        "white": [255, 255, 255],
        "whitesmoke": [245, 245, 245],
        "yellow": [255, 255, 0],
        "yellowgreen": [154, 205, 50],
        "transparent": [0, 0, 0, 0]
    },
    "filter": {
        "value": ["true", "false", "null", "point", "linestring", "polygon", "collection"]
    }
};

CartoCSS['mapnik_reference'] = {
    version: {
        latest: _SuperMap2.default._mapnik_reference_latest,
        '2.1.1': _SuperMap2.default._mapnik_reference_latest
    }
};

_SuperMap2.default.CartoCSS = CartoCSS;
_SuperMap2.default.CartoCSS.Tree = {};

_SuperMap2.default.CartoCSS.Tree.functions = {
    rgb: function rgb(r, g, b) {
        return this.rgba(r, g, b, 1.0);
    },
    rgba: function rgba(r, g, b, a) {
        var me = this;
        var rgb = [r, g, b].map(function (c) {
            return me.number(c);
        });
        a = me.number(a);
        if (rgb.some(isNaN) || isNaN(a)) return null;
        return new _SuperMap2.default.CartoCSS.Tree.Color(rgb, a);
    },
    // Only require val
    stop: function stop(val) {
        var color, mode;
        if (arguments.length > 1) color = arguments[1];
        if (arguments.length > 2) mode = arguments[2];

        return {
            is: 'tag',
            val: val,
            color: color,
            mode: mode,
            toString: function toString(env) {
                return '\n\t<stop value="' + val.ev(env) + '"' + (color ? ' color="' + color.ev(env) + '" ' : '') + (mode ? ' mode="' + mode.ev(env) + '" ' : '') + '/>';
            }
        };
    },
    hsl: function hsl(h, s, l) {
        return this.hsla(h, s, l, 1.0);
    },
    hsla: function hsla(h, s, l, a) {
        h = this.number(h) % 360 / 360;
        s = this.number(s);
        l = this.number(l);
        a = this.number(a);
        if ([h, s, l, a].some(isNaN)) return null;

        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s,
            m1 = l * 2 - m2;

        return this.rgba(hue(h + 1 / 3) * 255, hue(h) * 255, hue(h - 1 / 3) * 255, a);

        function hue(h) {
            h = h < 0 ? h + 1 : h > 1 ? h - 1 : h;
            if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;else if (h * 2 < 1) return m2;else if (h * 3 < 2) return m1 + (m2 - m1) * (2 / 3 - h) * 6;else return m1;
        }
    },
    hue: function hue(color) {
        if (!('toHSL' in color)) return null;
        return new _SuperMap2.default.CartoCSS.Tree.Dimension(Math.round(color.toHSL().h));
    },
    saturation: function saturation(color) {
        if (!('toHSL' in color)) return null;
        return new _SuperMap2.default.CartoCSS.Tree.Dimension(Math.round(color.toHSL().s * 100), '%');
    },
    lightness: function lightness(color) {
        if (!('toHSL' in color)) return null;
        return new _SuperMap2.default.CartoCSS.Tree.Dimension(Math.round(color.toHSL().l * 100), '%');
    },
    alpha: function alpha(color) {
        if (!('toHSL' in color)) return null;
        return new _SuperMap2.default.CartoCSS.Tree.Dimension(color.toHSL().a);
    },
    saturate: function saturate(color, amount) {
        if (!('toHSL' in color)) return null;
        var hsl = color.toHSL();

        hsl.s += amount.value / 100;
        hsl.s = this.clamp(hsl.s);
        return this.hsla_simple(hsl);
    },
    desaturate: function desaturate(color, amount) {
        if (!('toHSL' in color)) return null;
        var hsl = color.toHSL();

        hsl.s -= amount.value / 100;
        hsl.s = this.clamp(hsl.s);
        return this.hsla_simple(hsl);
    },
    lighten: function lighten(color, amount) {
        if (!('toHSL' in color)) return null;
        var hsl = color.toHSL();

        hsl.l += amount.value / 100;
        hsl.l = this.clamp(hsl.l);
        return this.hsla_simple(hsl);
    },
    darken: function darken(color, amount) {
        if (!('toHSL' in color)) return null;
        var hsl = color.toHSL();

        hsl.l -= amount.value / 100;
        hsl.l = this.clamp(hsl.l);
        return this.hsla_simple(hsl);
    },
    fadein: function fadein(color, amount) {
        if (!('toHSL' in color)) return null;
        var hsl = color.toHSL();

        hsl.a += amount.value / 100;
        hsl.a = this.clamp(hsl.a);
        return this.hsla_simple(hsl);
    },
    fadeout: function fadeout(color, amount) {
        if (!('toHSL' in color)) return null;
        var hsl = color.toHSL();

        hsl.a -= amount.value / 100;
        hsl.a = this.clamp(hsl.a);
        return this.hsla_simple(hsl);
    },
    spin: function spin(color, amount) {
        if (!('toHSL' in color)) return null;
        var hsl = color.toHSL();
        var hue = (hsl.h + amount.value) % 360;

        hsl.h = hue < 0 ? 360 + hue : hue;

        return this.hsla_simple(hsl);
    },
    replace: function replace(entity, a, b) {
        if (entity.is === 'field') {
            return entity.toString + '.replace(' + a.toString() + ', ' + b.toString() + ')';
        } else {
            return entity.replace(a, b);
        }
    },
    //
    // Copyright (c) 2006-2009 Hampton Catlin, Nathan Weizenbaum, and Chris Eppstein
    // http://sass-lang.com
    //
    mix: function mix(color1, color2, weight) {
        var p = weight.value / 100.0;
        var w = p * 2 - 1;
        var a = color1.toHSL().a - color2.toHSL().a;

        var w1 = ((w * a == -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;
        var w2 = 1 - w1;

        var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2, color1.rgb[1] * w1 + color2.rgb[1] * w2, color1.rgb[2] * w1 + color2.rgb[2] * w2];

        var alpha = color1.alpha * p + color2.alpha * (1 - p);

        return new _SuperMap2.default.CartoCSS.Tree.Color(rgb, alpha);
    },
    greyscale: function greyscale(color) {
        return this.desaturate(color, new _SuperMap2.default.CartoCSS.Tree.Dimension(100));
    },
    '%': function _(quoted /* arg, arg, ...*/) {
        var args = Array.prototype.slice.call(arguments, 1),
            str = quoted.value;

        for (var i = 0; i < args.length; i++) {
            str = str.replace(/%s/, args[i].value).replace(/%[da]/, args[i].toString());
        }
        str = str.replace(/%%/g, '%');
        return new _SuperMap2.default.CartoCSS.Tree.Quoted(str);
    },

    hsla_simple: function hsla_simple(h) {
        return this.hsla(h.h, h.s, h.l, h.a);
    },

    number: function number(n) {
        if (n instanceof _SuperMap2.default.CartoCSS.Tree.Dimension) {
            return parseFloat(n.unit === '%' ? n.value / 100 : n.value);
        } else if (typeof n === 'number') {
            return n;
        } else {
            return NaN;
        }
    },

    clamp: function clamp(val) {
        return Math.min(1, Math.max(0, val));
    }
};

_SuperMap2.default.CartoCSS.Tree.Call = _SuperMap2.default.Class({
    is: 'call',

    initialize: function initialize(name, args, index) {
        this.name = name;
        this.args = args;
        this.index = index;
    },
    // When evuating a function call,
    // we either find the function in `tree.functions` [1],
    // in which case we call it, passing the  evaluated arguments,
    // or we simply print it out as it appeared originally [2].
    // The *functions.js* file contains the built-in functions.
    // The reason why we evaluate the arguments, is in the case where
    // we try to pass a variable to a function, like: `saturate(@color)`.
    // The function should receive the value, not the variable.
    'ev': function ev(env) {
        var args = this.args.map(function (a) {
            return a.ev(env);
        });

        for (var i = 0; i < args.length; i++) {
            if (args[i].is === 'undefined') {
                return {
                    is: 'undefined',
                    value: 'undefined'
                };
            }
        }

        if (this.name in _SuperMap2.default.CartoCSS.Tree.functions) {
            if (_SuperMap2.default.CartoCSS.Tree.functions[this.name].length <= args.length) {
                var val = _SuperMap2.default.CartoCSS.Tree.functions[this.name].apply(_SuperMap2.default.CartoCSS.Tree.functions, args);
                if (val === null) {
                    env.error({
                        message: 'incorrect arguments given to ' + this.name + '()',
                        index: this.index,
                        type: 'runtime',
                        filename: this.filename
                    });
                    return { is: 'undefined', value: 'undefined' };
                }
                return val;
            } else {
                env.error({
                    message: 'incorrect number of arguments for ' + this.name + '(). ' + _SuperMap2.default.CartoCSS.Tree.functions[this.name].length + ' expected.',
                    index: this.index,
                    type: 'runtime',
                    filename: this.filename
                });
                return {
                    is: 'undefined',
                    value: 'undefined'
                };
            }
        } else {
            var fn = _SuperMap2.default.CartoCSS.Tree.Reference.mapnikFunctions[this.name];
            if (fn === undefined) {
                var functions = _.pairs(_SuperMap2.default.CartoCSS.Tree.Reference.mapnikFunctions);
                // cheap closest, needs improvement.
                var name = this.name;
                var mean = functions.map(function (f) {
                    return [f[0], _SuperMap2.default.CartoCSS.Tree.Reference.editDistance(name, f[0]), f[1]];
                }).sort(function (a, b) {
                    return a[1] - b[1];
                });
                env.error({
                    message: 'unknown function ' + this.name + '(), did you mean ' + mean[0][0] + '(' + mean[0][2] + ')',
                    index: this.index,
                    type: 'runtime',
                    filename: this.filename
                });
                return {
                    is: 'undefined',
                    value: 'undefined'
                };
            }
            if (fn !== args.length &&
            // support variable-arg functions like `colorize-alpha`
            fn !== -1) {
                env.error({
                    message: 'function ' + this.name + '() takes ' + fn + ' arguments and was given ' + args.length,
                    index: this.index,
                    type: 'runtime',
                    filename: this.filename
                });
                return {
                    is: 'undefined',
                    value: 'undefined'
                };
            } else {
                // Save the evaluated versions of arguments
                this.args = args;
                return this;
            }
        }
    },

    toString: function toString(env, format) {
        if (this.args.length) {
            return this.name + '(' + this.args.join(',') + ')';
        } else {
            return this.name;
        }
    }
});

_SuperMap2.default.CartoCSS.Tree.Color = _SuperMap2.default.Class({
    is: 'color',
    initialize: function initialize(rgb, a) {
        // The end goal here, is to parse the arguments
        // into an integer triplet, such as `128, 255, 0`
        //
        // This facilitates operations and conversions.
        if (Array.isArray(rgb)) {
            this.rgb = rgb.slice(0, 3);
        } else if (rgb.length == 6) {
            this.rgb = rgb.match(/.{2}/g).map(function (c) {
                return parseInt(c, 16);
            });
        } else {
            this.rgb = rgb.split('').map(function (c) {
                return parseInt(c + c, 16);
            });
        }

        if (typeof a === 'number') {
            this.alpha = a;
        } else if (rgb.length === 4) {
            this.alpha = rgb[3];
        } else {
            this.alpha = 1;
        }
    },
    'ev': function ev() {
        return this;
    },

    // If we have some transparency, the only way to represent it
    // is via `rgba`. Otherwise, we use the hex representation,
    // which has better compatibility with older browsers.
    // Values are capped between `0` and `255`, rounded and zero-padded.
    toString: function toString() {
        /* if (this.alpha < 1.0) {*/
        return 'rgba(' + this.rgb.map(function (c) {
            return Math.round(c);
        }).concat(this.alpha).join(', ') + ')';
        /*} else {
         return '#' + this.rgb.map(function(i) {
         i = Math.round(i);
         i = (i > 255 ? 255 : (i < 0 ? 0 : i)).toString(16);
         return i.length === 1 ? '0' + i : i;
         }).join('');
         }*/
    },

    // Operations have to be done per-channel, if not,
    // channels will spill onto each other. Once we have
    // our result, in the form of an integer triplet,
    // we create a new Color node to hold the result.
    operate: function operate(env, op, other) {
        var result = [];

        if (!(other instanceof _SuperMap2.default.CartoCSS.Tree.Color)) {
            other = other.toColor();
        }

        for (var c = 0; c < 3; c++) {
            result[c] = _SuperMap2.default.CartoCSS.Tree.operate(op, this.rgb[c], other.rgb[c]);
        }
        return new _SuperMap2.default.CartoCSS.Tree.Color(result);
    },

    toHSL: function toHSL() {
        var r = this.rgb[0] / 255,
            g = this.rgb[1] / 255,
            b = this.rgb[2] / 255,
            a = this.alpha;

        var max = Math.max(r, g, b),
            min = Math.min(r, g, b);
        var h,
            s,
            l = (max + min) / 2,
            d = max - min;

        if (max === min) {
            h = s = 0;
        } else {
            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);

            switch (max) {
                case r:
                    h = (g - b) / d + (g < b ? 6 : 0);
                    break;
                case g:
                    h = (b - r) / d + 2;
                    break;
                case b:
                    h = (r - g) / d + 4;
                    break;
                default:
                    break;
            }
            h /= 6;
        }
        return { h: h * 360, s: s, l: l, a: a };
    }
});

_SuperMap2.default.CartoCSS.Tree.Comment = _SuperMap2.default.Class({
    initialize: function initialize(value, silent) {
        this.value = value;
        this.silent = !!silent;
    },
    toString: function toString(env) {
        return '<!--' + this.value + '-->';
    },
    'ev': function ev() {
        return this;
    }
});

_SuperMap2.default.CartoCSS.Tree.Definition = _SuperMap2.default.Class({
    initialize: function initialize(selector, rules) {
        this.elements = selector.elements;
        //assert.ok(selector.filters instanceof SuperMap.CartoCSS.Tree.Filterset);
        this.rules = rules;
        this.ruleIndex = {};
        for (var i = 0; i < this.rules.length; i++) {
            if ('zoom' in this.rules[i]) this.rules[i] = this.rules[i].clone();
            this.rules[i].zoom = selector.zoom;
            this.ruleIndex[this.rules[i].updateID()] = true;
        }
        this.filters = selector.filters;
        this.zoom = selector.zoom;
        this.attachment = selector.attachment || '__default__';
        this.specificity = selector.specificity();
    },
    toString: function toString() {
        var str = this.filters.toString();
        for (var i = 0; i < this.rules.length; i++) {
            str += '\n    ' + this.rules[i];
        }
        return str;
    },
    toJS: function toJS(env) {
        var shaderAttrs = {};

        // merge conditions from filters with zoom condition of the
        // definition
        var zoom = this.zoom;
        var frame_offset = this.frame_offset;
        var _if = this.filters.toJS(env);
        var filters = [zoom];
        if (_if) filters.push(_if);
        //if(frame_offset) filters.push('ctx["frame-offset"] === ' + frame_offset);
        _if = filters.join(" && ");
        function eachRule(rule) {
            if (rule instanceof _SuperMap2.default.CartoCSS.Tree.Rule) {
                shaderAttrs[rule.name] = shaderAttrs[rule.name] || [];
                if (_if) {
                    shaderAttrs[rule.name].push("if(" + _if + "){" + rule.value.toJS(env) + "}");
                } else {
                    shaderAttrs[rule.name].push(rule.value.toJS(env));
                }
            } else {
                if (rule instanceof _SuperMap2.default.CartoCSS.Tree.Ruleset) {
                    var sh = rule.toJS(env);
                    for (var v in sh) {
                        shaderAttrs[v] = shaderAttrs[v] || [];
                        for (var attr in sh[v]) {
                            shaderAttrs[v].push(sh[v][attr]);
                        }
                    }
                }
            }
        };
        for (var id in this.rules) {
            eachRule(this.rules[id]);
        }
        return shaderAttrs;
    },
    clone: function clone(filters) {
        //if (filters) assert.ok(filters instanceof SuperMap.CartoCSS.Tree.Filterset);
        var clone = Object.create(_SuperMap2.default.CartoCSS.Tree.Definition.prototype);
        clone.rules = this.rules.slice();
        clone.ruleIndex = _.clone(this.ruleIndex);
        clone.filters = filters ? filters : this.filters.clone();
        clone.attachment = this.attachment;
        return clone;
    },

    addRules: function addRules(rules) {
        var added = 0;

        // Add only unique rules.
        for (var i = 0; i < rules.length; i++) {
            if (!this.ruleIndex[rules[i].id]) {
                this.rules.push(rules[i]);
                this.ruleIndex[rules[i].id] = true;
                added++;
            }
        }

        return added;
    },
    appliesTo: function appliesTo(id, classes) {
        for (var i = 0, l = this.elements.length; i < l; i++) {
            var elem = this.elements[i];
            if (!(elem.wildcard || elem.type === 'class' && classes[elem.clean] || elem.type === 'id' && id === elem.clean)) return false;
        }
        return true;
    },
    symbolizersToXML: function symbolizersToXML(env, symbolizers, zoom) {
        var xml = zoom.toXML(env).join('') + this.filters.toXML(env);

        // Sort symbolizers by the index of their first property definition
        var sym_order = [],
            indexes = [];
        for (var key in symbolizers) {
            indexes = [];
            for (var prop in symbolizers[key]) {
                indexes.push(symbolizers[key][prop].index);
            }
            var min_idx = Math.min.apply(Math, indexes);
            sym_order.push([key, min_idx]);
        }

        // Get a simple list of the symbolizers, in order
        function symbolizerList(sym_order) {
            return sym_order.sort(function (a, b) {
                return a[1] - b[1];
            }).map(function (v) {
                return v[0];
            });
        }

        sym_order = symbolizerList(sym_order);
        var sym_count = 0;

        for (var i = 0; i < sym_order.length; i++) {
            var symbolizerName = function symbolizerName(symbolizer) {
                function capitalize(str) {
                    return str[1].toUpperCase();
                }

                return symbolizer.charAt(0).toUpperCase() + symbolizer.slice(1).replace(/\-./, capitalize) + 'Symbolizer';
            };

            var attributes = symbolizers[sym_order[i]];
            var symbolizer = sym_order[i].split('/').pop();

            // Skip the magical * symbolizer which is used for universal properties
            // which are bubbled up to Style elements intead of Symbolizer elements.
            if (symbolizer === '*') continue;
            sym_count++;

            var fail = _SuperMap2.default.CartoCSS.Tree.Reference.requiredProperties(symbolizer, attributes);
            if (fail) {
                var rule = attributes[Object.keys(attributes).shift()];
                env.error({
                    message: fail,
                    index: rule.index,
                    filename: rule.filename
                });
            }


            var name = symbolizerName(symbolizer);

            var selfclosing = true,
                tagcontent;
            xml += '    <' + name + ' ';
            for (var j in attributes) {
                if (symbolizer === 'map') env.error({
                    message: 'Map properties are not permitted in other rules',
                    index: attributes[j].index,
                    filename: attributes[j].filename
                });
                var x = _SuperMap2.default.CartoCSS.Tree.Reference.selector(attributes[j].name);
                if (x && x.serialization && x.serialization === 'content') {
                    selfclosing = false;
                    tagcontent = attributes[j].ev(env).toXML(env, true);
                } else if (x && x.serialization && x.serialization === 'tag') {
                    selfclosing = false;
                    tagcontent = attributes[j].ev(env).toXML(env, true);
                } else {
                    xml += attributes[j].ev(env).toXML(env) + ' ';
                }
            }
            if (selfclosing) {
                xml += '/>\n';
            } else if (typeof tagcontent !== "undefined") {
                if (tagcontent.indexOf('<') != -1) {
                    xml += '>' + tagcontent + '</' + name + '>\n';
                } else {
                    xml += '><![CDATA[' + tagcontent + ']]></' + name + '>\n';
                }
            }
        }
        if (!sym_count || !xml) return '';
        return '  <Rule>\n' + xml + '  </Rule>\n';
    },
    collectSymbolizers: function collectSymbolizers(zooms, i) {
        var symbolizers = {},
            child;

        for (var j = i; j < this.rules.length; j++) {
            child = this.rules[j];
            var key = child.instance + '/' + child.symbolizer;
            if (zooms.current & child.zoom && (!(key in symbolizers) || !(child.name in symbolizers[key]))) {
                zooms.current &= child.zoom;
                if (!(key in symbolizers)) {
                    symbolizers[key] = {};
                }
                symbolizers[key][child.name] = child;
            }
        }

        if (Object.keys(symbolizers).length) {
            zooms.rule &= zooms.available &= ~zooms.current;
            return symbolizers;
        }
    },
    toXML: function toXML(env, existing) {
        var filter = this.filters.toString();
        if (!(filter in existing)) existing[filter] = _SuperMap2.default.CartoCSS.Tree.Zoom.all;

        var available = _SuperMap2.default.CartoCSS.Tree.Zoom.all,
            xml = '',
            zoom,
            symbolizers,
            zooms = { available: _SuperMap2.default.CartoCSS.Tree.Zoom.all };
        for (var i = 0; i < this.rules.length && available; i++) {
            zooms.rule = this.rules[i].zoom;
            if (!(existing[filter] & zooms.rule)) continue;

            while (zooms.current = zooms.rule & available) {
                if (symbolizers = this.collectSymbolizers(zooms, i)) {
                    if (!(existing[filter] & zooms.current)) continue;
                    xml += this.symbolizersToXML(env, symbolizers, new _SuperMap2.default.CartoCSS.Tree.Zoom().setZoom(existing[filter] & zooms.current));
                    existing[filter] &= ~zooms.current;
                }
            }
        }

        return xml;
    }
});

_SuperMap2.default.CartoCSS.Tree.Dimension = _SuperMap2.default.Class({
    is: 'float',
    physical_units: ['m', 'cm', 'in', 'mm', 'pt', 'pc'],
    screen_units: ['px', '%'],
    all_units: ['m', 'cm', 'in', 'mm', 'pt', 'pc', 'px', '%'],
    densities: {
        m: 0.0254,
        mm: 25.4,
        cm: 2.54,
        pt: 72,
        pc: 6
    },

    initialize: function initialize(value, unit, index) {
        this.value = parseFloat(value);
        this.unit = unit || null;
        this.index = index;
    },

    ev: function ev(env) {
        if (this.unit && !_.contains(this.all_units, this.unit)) {
            env.error({
                message: "Invalid unit: '" + this.unit + "'",
                index: this.index
            });
            return { is: 'undefined', value: 'undefined' };
        }

        // normalize units which are not px or %
        if (this.unit && _.contains(this.physical_units, this.unit)) {
            if (!env.ppi) {
                env.error({
                    message: "ppi is not set, so metric units can't be used",
                    index: this.index
                });
                return { is: 'undefined', value: 'undefined' };
            }
            // convert all units to inch
            // convert inch to px using ppi
            this.value = this.value / this.densities[this.unit] * env.ppi;
            this.unit = 'px';
        }

        return this;
    },
    toColor: function toColor() {
        return new _SuperMap2.default.CartoCSS.Tree.Color([this.value, this.value, this.value]);
    },
    round: function round() {
        this.value = Math.round(this.value);
        return this;
    },
    toString: function toString() {
        return this.value.toString();
    },
    operate: function operate(env, op, other) {
        if (this.unit === '%' && other.unit !== '%') {
            env.error({
                message: 'If two operands differ, the first must not be %',
                index: this.index
            });
            return {
                is: 'undefined',
                value: 'undefined'
            };
        }

        if (this.unit !== '%' && other.unit === '%') {
            if (op === '*' || op === '/' || op === '%') {
                env.error({
                    message: 'Percent values can only be added or subtracted from other values',
                    index: this.index
                });
                return {
                    is: 'undefined',
                    value: 'undefined'
                };
            }

            return new _SuperMap2.default.CartoCSS.Tree.Dimension(_SuperMap2.default.CartoCSS.Tree.operate(op, this.value, this.value * other.value * 0.01), this.unit);
        }

        //here the operands are either the same (% or undefined or px), or one is undefined and the other is px
        return new _SuperMap2.default.CartoCSS.Tree.Dimension(_SuperMap2.default.CartoCSS.Tree.operate(op, this.value, other.value), this.unit || other.unit);
    }
});

_SuperMap2.default.CartoCSS.Tree.Element = _SuperMap2.default.Class({
    initialize: function initialize(value) {
        this.value = value.trim();
        if (this.value[0] === '#') {
            this.type = 'id';
            this.clean = this.value.replace(/^#/, '');
        }
        if (this.value[0] === '.') {
            this.type = 'class';
            this.clean = this.value.replace(/^\./, '');
        }
        if (this.value.indexOf('*') !== -1) {
            this.type = 'wildcard';
        }
    },

    specificity: function specificity() {
        return [this.type === 'id' ? 1 : 0, // a
        this.type === 'class' ? 1 : 0 // b
        ];
    },

    toString: function toString() {
        return this.value;
    }
});

_SuperMap2.default.CartoCSS.Tree.Expression = _SuperMap2.default.Class({
    is: 'expression',
    initialize: function initialize(value) {
        this.value = value;
    },
    ev: function ev(env) {
        if (this.value.length > 1) {
            return new _SuperMap2.default.CartoCSS.Tree.Expression(this.value.map(function (e) {
                return e.ev(env);
            }));
        } else {
            return this.value[0].ev(env);
        }
    },

    toString: function toString(env) {
        return this.value.map(function (e) {
            return e.toString(env);
        }).join(' ');
    }
});

_SuperMap2.default.CartoCSS.Tree.Field = _SuperMap2.default.Class({
    is: 'field',
    initialize: function initialize(content) {
        this.value = content || '';
    },
    toString: function toString() {
        return '["' + this.value.toUpperCase() + '"]';
    },
    'ev': function ev() {
        return this;
    }
});

_SuperMap2.default.CartoCSS.Tree.Filter = _SuperMap2.default.Class({
    initialize: function initialize(key, op, val, index, filename) {
        this.key = key;
        this.op = op;
        this.val = val;
        this.index = index;
        this.filename = filename;

        this.id = this.key + this.op + this.val;
    },

    ops: {
        '<': [' &lt; ', 'numeric'],
        '>': [' &gt; ', 'numeric'],
        '=': [' = ', 'both'],
        '!=': [' != ', 'both'],
        '<=': [' &lt;= ', 'numeric'],
        '>=': [' &gt;= ', 'numeric'],
        '=~': ['.match(', 'string', ')']
    },

    ev: function ev(env) {
        this.key = this.key.ev(env);
        this.val = this.val.ev(env);
        return this;
    },

    toXML: function toXML(env) {
        if (_SuperMap2.default.CartoCSS.Tree.Reference.data.filter) {
            if (this.key.is === 'keyword' && -1 === _SuperMap2.default.CartoCSS.Tree.Reference.data.filter.value.indexOf(this.key.toString())) {
                env.error({
                    message: this.key.toString() + ' is not a valid keyword in a filter expression',
                    index: this.index,
                    filename: this.filename
                });
            }
            if (this.val.is === 'keyword' && -1 === _SuperMap2.default.CartoCSS.Tree.Reference.data.filter.value.indexOf(this.val.toString())) {
                env.error({
                    message: this.val.toString() + ' is not a valid keyword in a filter expression',
                    index: this.index,
                    filename: this.filename
                });
            }
        }
        var key = this.key.toString(false);
        var val = this.val.toString(this.val.is == 'string');

        if (this.ops[this.op][1] === 'numeric' && isNaN(val) && this.val.is !== 'field' || this.ops[this.op][1] === 'string' && val[0] != "'") {
            env.error({
                message: 'Cannot use operator "' + this.op + '" with value ' + this.val,
                index: this.index,
                filename: this.filename
            });
        }

        return key + this.ops[this.op][0] + val + (this.ops[this.op][2] || '');
    },

    toString: function toString() {
        return '[' + this.id + ']';
    }
});

_SuperMap2.default.CartoCSS.Tree.Filterset = _SuperMap2.default.Class({
    initialize: function initialize() {
        this.filters = {};
    },

    toXML: function toXML(env) {
        var filters = [];
        for (var id in this.filters) {
            filters.push('(' + this.filters[id].toXML(env).trim() + ')');
        }
        if (filters.length) {
            return '    <Filter>' + filters.join(' and ') + '</Filter>\n';
        } else {
            return '';
        }
    },

    toJS: function toJS(env) {
        function eachFilter(filter) {
            var op = filter.op;
            if (op === "=") {
                op = "==";
            }
            var val = filter.val;
            if (filter._val !== undefined) {
                val = filter._val.toString(true);
            }

            //对scale进行特殊处理，将值转换成数值
            if (filter.key && filter.key.value === 'scale') {
                val = +val;
            } else if (typeof val === 'string' || (typeof val === "undefined" ? "undefined" : _typeof(val)) === 'object') {
                val = "'" + val + "'";
            }
            var attrs = "attributes";
            return attrs + "&&" + attrs + filter.key + "&&" + attrs + filter.key + " " + op + val;
        };
        var results = [];
        for (var id in this.filters) {
            results.push(eachFilter(this.filters[id]));
        }
        return results.join(' && ');
    },

    toString: function toString() {
        var arr = [];
        for (var id in this.filters) {
            arr.push(this.filters[id].id);
        }return arr.sort().join('\t');
    },

    ev: function ev(env) {
        for (var i in this.filters) {
            this.filters[i].ev(env);
        }
        return this;
    },

    clone: function clone() {
        var clone = new _SuperMap2.default.CartoCSS.Tree.Filterset();
        for (var id in this.filters) {
            clone.filters[id] = this.filters[id];
        }
        return clone;
    },

    cloneWith: function cloneWith(other) {
        var additions = [];
        for (var id in other.filters) {
            var status = this.addable(other.filters[id]);
            // status is true, false or null. if it's null we don't fail this
            // clone nor do we add the filter.
            if (status === false) {
                return false;
            }
            if (status === true) {
                // Adding the filter will override another value.
                additions.push(other.filters[id]);
            }
        }

        // Adding the other filters doesn't make this filterset invalid, but it
        // doesn't add anything to it either.
        if (!additions.length) {
            return null;
        }

        // We can successfully add all filters. Now clone the filterset and add the
        // new rules.
        var clone = new _SuperMap2.default.CartoCSS.Tree.Filterset();

        // We can add the rules that are already present without going through the
        // add function as a Filterset is always in it's simplest canonical form.
        for (id in this.filters) {
            clone.filters[id] = this.filters[id];
        }

        // Only add new filters that actually change the filter.
        while (id = additions.shift()) {
            clone.add(id);
        }

        return clone;
    },

    addable: function addable(filter) {
        var key = filter.key.toString(),
            value = filter.val.toString();

        if (value.match(/^[0-9]+(\.[0-9]*)?$/)) value = parseFloat(value);

        switch (filter.op) {
            case '=':
                // if there is already foo= and we're adding foo=
                if (this.filters[key + '='] !== undefined) {
                    if (this.filters[key + '='].val.toString() != value) {
                        return false;
                    } else {
                        return null;
                    }
                }
                if (this.filters[key + '!=' + value] !== undefined) return false;
                if (this.filters[key + '>'] !== undefined && this.filters[key + '>'].val >= value) return false;
                if (this.filters[key + '<'] !== undefined && this.filters[key + '<'].val <= value) return false;
                if (this.filters[key + '>='] !== undefined && this.filters[key + '>='].val > value) return false;
                if (this.filters[key + '<='] !== undefined && this.filters[key + '<='].val < value) return false;
                return true;

            case '=~':
                return true;

            case '!=':
                if (this.filters[key + '='] !== undefined) return this.filters[key + '='].val === value ? false : null;
                if (this.filters[key + '!=' + value] !== undefined) return null;
                if (this.filters[key + '>'] !== undefined && this.filters[key + '>'].val >= value) return null;
                if (this.filters[key + '<'] !== undefined && this.filters[key + '<'].val <= value) return null;
                if (this.filters[key + '>='] !== undefined && this.filters[key + '>='].val > value) return null;
                if (this.filters[key + '<='] !== undefined && this.filters[key + '<='].val < value) return null;
                return true;

            case '>':
                if (key + '=' in this.filters) {
                    if (this.filters[key + '='].val <= value) {
                        return false;
                    } else {
                        return null;
                    }
                }
                if (this.filters[key + '<'] !== undefined && this.filters[key + '<'].val <= value) return false;
                if (this.filters[key + '<='] !== undefined && this.filters[key + '<='].val <= value) return false;
                if (this.filters[key + '>'] !== undefined && this.filters[key + '>'].val >= value) return null;
                if (this.filters[key + '>='] !== undefined && this.filters[key + '>='].val > value) return null;
                return true;

            case '>=':
                if (this.filters[key + '='] !== undefined) return this.filters[key + '='].val < value ? false : null;
                if (this.filters[key + '<'] !== undefined && this.filters[key + '<'].val <= value) return false;
                if (this.filters[key + '<='] !== undefined && this.filters[key + '<='].val < value) return false;
                if (this.filters[key + '>'] !== undefined && this.filters[key + '>'].val >= value) return null;
                if (this.filters[key + '>='] !== undefined && this.filters[key + '>='].val >= value) return null;
                return true;

            case '<':
                if (this.filters[key + '='] !== undefined) return this.filters[key + '='].val >= value ? false : null;
                if (this.filters[key + '>'] !== undefined && this.filters[key + '>'].val >= value) return false;
                if (this.filters[key + '>='] !== undefined && this.filters[key + '>='].val >= value) return false;
                if (this.filters[key + '<'] !== undefined && this.filters[key + '<'].val <= value) return null;
                if (this.filters[key + '<='] !== undefined && this.filters[key + '<='].val < value) return null;
                return true;

            case '<=':
                if (this.filters[key + '='] !== undefined) return this.filters[key + '='].val > value ? false : null;
                if (this.filters[key + '>'] !== undefined && this.filters[key + '>'].val >= value) return false;
                if (this.filters[key + '>='] !== undefined && this.filters[key + '>='].val > value) return false;
                if (this.filters[key + '<'] !== undefined && this.filters[key + '<'].val <= value) return null;
                if (this.filters[key + '<='] !== undefined && this.filters[key + '<='].val <= value) return null;
                return true;

            default:
                break;
        }
    },

    conflict: function conflict(filter) {
        var key = filter.key.toString(),
            value = filter.val.toString();

        if (!isNaN(parseFloat(value))) value = parseFloat(value);

        // if (a=b) && (a=c)
        // if (a=b) && (a!=b)
        // or (a!=b) && (a=b)
        if (filter.op === '=' && this.filters[key + '='] !== undefined && value != this.filters[key + '='].val.toString() || filter.op === '!=' && this.filters[key + '='] !== undefined && value == this.filters[key + '='].val.toString() || filter.op === '=' && this.filters[key + '!='] !== undefined && value === this.filters[key + '!='].val.toString()) {
            return filter.toString() + ' added to ' + this.toString() + ' produces an invalid filter';
        }

        return false;
    },

    add: function add(filter, env) {
        var key = filter.key.toString(),
            id,
            op = filter.op,
            conflict = this.conflict(filter),
            numval;
        if (conflict) return conflict;

        if (op === '=') {
            for (var i in this.filters) {
                if (this.filters[i].key === key) delete this.filters[i];
            }
            this.filters[key + '='] = filter;
        } else if (op === '!=') {
            this.filters[key + '!=' + filter.val] = filter;
        } else if (op === '=~') {
            this.filters[key + '=~' + filter.val] = filter;
        } else if (op === '>') {
            // If there are other filters that are also >
            // but are less than this one, they don't matter, so
            // remove them.
            for (var j in this.filters) {
                if (this.filters[j].key === key && this.filters[j].val <= filter.val) {
                    delete this.filters[j];
                }
            }
            this.filters[key + '>'] = filter;
        } else if (op === '>=') {
            for (var k in this.filters) {
                numval = +this.filters[k].val.toString();
                if (this.filters[k].key === key && numval < filter.val) {
                    delete this.filters[k];
                }
            }
            if (this.filters[key + '!=' + filter.val] !== undefined) {
                delete this.filters[key + '!=' + filter.val];
                filter.op = '>';
                this.filters[key + '>'] = filter;
            } else {
                this.filters[key + '>='] = filter;
            }
        } else if (op === '<') {
            for (var l in this.filters) {
                numval = +this.filters[l].val.toString();
                if (this.filters[l].key === key && numval >= filter.val) {
                    delete this.filters[l];
                }
            }
            this.filters[key + '<'] = filter;
        } else if (op === '<=') {
            for (var m in this.filters) {
                numval = +this.filters[m].val.toString();
                if (this.filters[m].key === key && numval > filter.val) {
                    delete this.filters[m];
                }
            }
            if (this.filters[key + '!=' + filter.val] !== undefined) {
                delete this.filters[key + '!=' + filter.val];
                filter.op = '<';
                this.filters[key + '<'] = filter;
            } else {
                this.filters[key + '<='] = filter;
            }
        }
    }
});

_SuperMap2.default.CartoCSS.Tree.Fontset = _SuperMap2.default.Class({
    initialize: function initialize(env, fonts) {
        this.fonts = fonts;
        this.name = 'fontset-' + env.effects.length;
    },
    toXML: function toXML(env) {
        return '<FontSet name="' + this.name + '">\n' + this.fonts.map(function (f) {
            return '  <Font face-name="' + f + '"/>';
        }).join('\n') + '\n</FontSet>';
    }
});

_SuperMap2.default.CartoCSS.Tree.Imagefilter = _SuperMap2.default.Class({
    is: 'imagefilter',
    initialize: function initialize(filter, args) {
        this.filter = filter;
        this.args = args || null;
    },

    ev: function ev() {
        return this;
    },

    toString: function toString() {
        if (this.args) {
            return this.filter + '(' + this.args.join(',') + ')';
        } else {
            return this.filter;
        }
    }
});

_SuperMap2.default.CartoCSS.Tree.Invalid = _SuperMap2.default.Class({
    is: 'invalid',
    initialize: function initialize(chunk, index, message) {
        this.chunk = chunk;
        this.index = index;
        this.type = 'syntax';
        this.message = message || "Invalid code: " + this.chunk;
    },
    ev: function ev(env) {
        env.error({
            chunk: this.chunk,
            index: this.index,
            type: 'syntax',
            message: this.message || "Invalid code: " + this.chunk
        });
        return {
            is: 'undefined'
        };
    }
});

_SuperMap2.default.CartoCSS.Tree.Keyword = _SuperMap2.default.Class({
    ev: function ev() {
        return this;
    },
    initialize: function initialize(value) {
        this.value = value;
        var special = {
            'transparent': 'color',
            'true': 'boolean',
            'false': 'boolean'
        };
        this.is = special[value] ? special[value] : 'keyword';
    },
    toString: function toString() {
        return this.value;
    }
});

/*Layer:SuperMap.Class(),*/

_SuperMap2.default.CartoCSS.Tree.Literal = _SuperMap2.default.Class({
    initialize: function initialize(content) {
        this.value = content || '';
        this.is = 'field';
    },
    toString: function toString() {
        return this.value;
    },
    'ev': function ev() {
        return this;
    }
});

_SuperMap2.default.CartoCSS.Tree.Operation = _SuperMap2.default.Class({
    is: 'operation',
    initialize: function initialize(op, operands, index) {
        this.op = op.trim();
        this.operands = operands;
        this.index = index;
    },
    ev: function ev(env) {
        var a = this.operands[0].ev(env),
            b = this.operands[1].ev(env),
            temp;

        if (a.is === 'undefined' || b.is === 'undefined') {
            return {
                is: 'undefined',
                value: 'undefined'
            };
        }

        if (a instanceof _SuperMap2.default.CartoCSS.Tree.Dimension && b instanceof _SuperMap2.default.CartoCSS.Tree.Color) {
            if (this.op === '*' || this.op === '+') {
                temp = b, b = a, a = temp;
            } else {
                env.error({
                    name: "OperationError",
                    message: "Can't substract or divide a color from a number",
                    index: this.index
                });
            }
        }

        // Only concatenate plain strings, because this is easily
        // pre-processed
        if (a instanceof _SuperMap2.default.CartoCSS.Tree.Quoted && b instanceof _SuperMap2.default.CartoCSS.Tree.Quoted && this.op !== '+') {
            env.error({
                message: "Can't subtract, divide, or multiply strings.",
                index: this.index,
                type: 'runtime',
                filename: this.filename
            });
            return {
                is: 'undefined',
                value: 'undefined'
            };
        }

        // Fields, literals, dimensions, and quoted strings can be combined.
        if (a instanceof _SuperMap2.default.CartoCSS.Tree.Field || b instanceof _SuperMap2.default.CartoCSS.Tree.Field || a instanceof _SuperMap2.default.CartoCSS.Tree.Literal || b instanceof _SuperMap2.default.CartoCSS.Tree.Literal) {
            if (a.is === 'color' || b.is === 'color') {
                env.error({
                    message: "Can't subtract, divide, or multiply colors in expressions.",
                    index: this.index,
                    type: 'runtime',
                    filename: this.filename
                });
                return {
                    is: 'undefined',
                    value: 'undefined'
                };
            } else {
                return new _SuperMap2.default.CartoCSS.Tree.Literal(a.ev(env).toString(true) + this.op + b.ev(env).toString(true));
            }
        }

        if (a.operate === undefined) {
            env.error({
                message: 'Cannot do math with type ' + a.is + '.',
                index: this.index,
                type: 'runtime',
                filename: this.filename
            });
            return {
                is: 'undefined',
                value: 'undefined'
            };
        }

        return a.operate(env, this.op, b);
    }
});

_SuperMap2.default.CartoCSS.Tree.Quoted = _SuperMap2.default.Class({
    is: 'string',
    initialize: function initialize(content) {
        this.value = content || '';
    },
    toString: function toString(quotes) {
        var escapedValue = this.value.replace(/&/g, '&amp;');
        var xmlvalue = escapedValue.replace(/\'/g, '\\\'').replace(/\"/g, '&quot;').replace(/</g, '&lt;').replace(/\>/g, '&gt;');
        return quotes === true ? "'" + xmlvalue + "'" : escapedValue;
    },

    'ev': function ev() {
        return this;
    },

    operate: function operate(env, op, other) {
        return new _SuperMap2.default.CartoCSS.Tree.Quoted(_SuperMap2.default.CartoCSS.Tree.operate(op, this.toString(), other.toString(this.contains_field)));
    }
});

_SuperMap2.default.CartoCSS.Tree.Reference = {
    _validateValue: {
        'font': function font(env, value) {
            if (env.validation_data && env.validation_data.fonts) {
                return env.validation_data.fonts.indexOf(value) != -1;
            } else {
                return true;
            }
        }
    },
    setData: function setData(data) {
        this.data = data;
        this.selector_cache = generateSelectorCache(data);
        this.mapnikFunctions = generateMapnikFunctions(data);
        this.required_cache = generateRequiredProperties(data);

        function generateSelectorCache(data) {
            var index = {};
            for (var i in data.symbolizers) {
                for (var j in data.symbolizers[i]) {
                    if (data.symbolizers[i][j].hasOwnProperty('css')) {
                        index[data.symbolizers[i][j].css] = [data.symbolizers[i][j], i, j];
                    }
                }
            }
            return index;
        }

        function generateMapnikFunctions(data) {
            var functions = {};
            for (var i in data.symbolizers) {
                for (var j in data.symbolizers[i]) {
                    if (data.symbolizers[i][j].type === 'functions') {
                        for (var k = 0; k < data.symbolizers[i][j].functions.length; k++) {
                            var fn = data.symbolizers[i][j].functions[k];
                            functions[fn[0]] = fn[1];
                        }
                    }
                }
            }
            return functions;
        }

        function generateRequiredProperties(data) {
            var cache = {};
            for (var symbolizer_name in data.symbolizers) {
                cache[symbolizer_name] = [];
                for (var j in data.symbolizers[symbolizer_name]) {
                    if (data.symbolizers[symbolizer_name][j].required) {
                        cache[symbolizer_name].push(data.symbolizers[symbolizer_name][j].css);
                    }
                }
            }
            return cache;
        }
    },
    setVersion: function setVersion(version) {
        if (_SuperMap2.default.CartoCSS.mapnik_reference.version.hasOwnProperty(version)) {
            this.setData(_SuperMap2.default.CartoCSS.mapnik_reference.version[version]);
            return true;
        } else {
            return false;
        }
        return false;
    },
    selectorData: function selectorData(selector, i) {
        if (this.selector_cache && this.selector_cache[selector]) return this.selector_cache[selector][i];
    },
    validSelector: function validSelector(selector) {
        return !!this.selector_cache[selector];
    },
    selectorName: function selectorName(selector) {
        return this.selectorData(selector, 2);
    },
    selector: function selector(_selector) {
        return this.selectorData(_selector, 0);
    },
    symbolizer: function symbolizer(selector) {
        return this.selectorData(selector, 1);
    },
    requiredProperties: function requiredProperties(symbolizer_name, rules) {
        var req = this.required_cache[symbolizer_name];
        for (var i in req) {
            if (!(req[i] in rules)) {
                return 'Property ' + req[i] + ' required for defining ' + symbolizer_name + ' styles.';
            }
        }
    },
    isFont: function isFont(selector) {
        return this.selector(selector).validate === 'font';
    },
    editDistance: function editDistance(a, b) {
        if (a.length === 0) return b.length;
        if (b.length === 0) return a.length;
        var matrix = [];
        for (var i = 0; i <= b.length; i++) {
            matrix[i] = [i];
        }
        for (var j = 0; j <= a.length; j++) {
            matrix[0][j] = j;
        }
        for (i = 1; i <= b.length; i++) {
            for (j = 1; j <= a.length; j++) {
                if (b.charAt(i - 1) === a.charAt(j - 1)) {
                    matrix[i][j] = matrix[i - 1][j - 1];
                } else {
                    matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1, // substitution
                    Math.min(matrix[i][j - 1] + 1, // insertion
                    matrix[i - 1][j] + 1)); // deletion
                }
            }
        }
        return matrix[b.length][a.length];
    },
    validValue: function validValue(env, selector, value) {
        function validateFunctions(value, selector) {
            if (value.value[0].is === 'string') return true;
            for (var i in value.value) {
                for (var j in value.value[i].value) {
                    if (value.value[i].value[j].is !== 'call') return false;
                    var f = _.find(this.selector(selector).functions, function (x) {
                        return x[0] === value.value[i].value[j].name;
                    });
                    if (!(f && f[1] === -1)) {
                        // This filter is unknown or given an incorrect number of arguments
                        if (!f || f[1] !== value.value[i].value[j].args.length) return false;
                    }
                }
            }
            return true;
        }

        function validateKeyword(value, selector) {
            if (_typeof(this.selector(selector).type) === 'object') {
                return this.selector(selector).type.indexOf(value.value[0].value) !== -1;
            } else {
                // allow unquoted keywords as strings
                return this.selector(selector).type === 'string';
            }
        }

        var i, j;
        if (!this.selector(selector)) {
            return false;
        } else if (value.value[0].is === 'keyword') {
            return validateKeyword(value, selector);
        } else if (value.value[0].is === 'undefined') {
            // caught earlier in the chain - ignore here so that
            // error is not overridden
            return true;
        } else if (this.selector(selector).type === 'numbers') {
            for (i in value.value) {
                if (value.value[i].is !== 'float') {
                    return false;
                }
            }
            return true;
        } else if (this.selector(selector).type === 'tags') {
            if (!value.value) return false;
            if (!value.value[0].value) {
                return value.value[0].is === 'tag';
            }
            for (i = 0; i < value.value[0].value.length; i++) {
                if (value.value[0].value[i].is !== 'tag') return false;
            }
            return true;
        } else if (this.selector(selector).type == 'functions') {
            // For backwards compatibility, you can specify a string for `functions`-compatible
            // values, though they will not be validated.
            return validateFunctions(value, selector);
        } else if (this.selector(selector).type === 'expression') {
            return true;
        } else if (this.selector(selector).type === 'unsigned') {
            if (value.value[0].is === 'float') {
                value.value[0].round();
                return true;
            } else {
                return false;
            }
        } else {
            if (this.selector(selector).validate) {
                var valid = false;
                for (i = 0; i < value.value.length; i++) {
                    if (this.selector(selector).type === value.value[i].is && this._validateValue[this.selector(selector).validate](env, value.value[i].value)) {
                        return true;
                    }
                }
                return valid;
            } else {
                return this.selector(selector).type === value.value[0].is;
            }
        }
    }
};
_SuperMap2.default.CartoCSS.Tree.Reference.setVersion("latest");

_SuperMap2.default.CartoCSS.Tree.Rule = _SuperMap2.default.Class({
    is: 'rule',
    initialize: function initialize(name, value, index, filename) {
        var parts = name.split('/');
        this.name = parts.pop();
        this.instance = parts.length ? parts[0] : '__default__';
        this.value = value instanceof _SuperMap2.default.CartoCSS.Tree.Value ? value : new _SuperMap2.default.CartoCSS.Tree.Value([value]);
        this.index = index;
        this.symbolizer = _SuperMap2.default.CartoCSS.Tree.Reference.symbolizer(this.name);
        this.filename = filename;
        this.variable = name.charAt(0) === '@';
    },
    clone: function clone() {
        var clone = Object.create(_SuperMap2.default.CartoCSS.Tree.Rule.prototype);
        clone.name = this.name;
        clone.value = this.value;
        clone.index = this.index;
        clone.instance = this.instance;
        clone.symbolizer = this.symbolizer;
        clone.filename = this.filename;
        clone.variable = this.variable;
        return clone;
    },
    updateID: function updateID() {
        return this.id = this.zoom + '#' + this.instance + '#' + this.name;
    },
    toString: function toString() {
        return '[' + _SuperMap2.default.CartoCSS.Tree.Zoom.toString(this.zoom) + '] ' + this.name + ': ' + this.value;
    },
    toXML: function toXML(env, content, sep, format) {
        if (!_SuperMap2.default.CartoCSS.Tree.Reference.validSelector(this.name)) {
            var getMean = function getMean(name) {
                return Object.keys(_SuperMap2.default.CartoCSS.Tree.Reference.selector_cache).map(function (f) {
                    return [f, _SuperMap2.default.CartoCSS.Tree.Reference.editDistance(name, f)];
                }).sort(function (a, b) {
                    return a[1] - b[1];
                });
            };

            var mean = getMean(this.name);
            var mean_message = '';
            if (mean[0][1] < 3) {
                mean_message = '. Did you mean ' + mean[0][0] + '?';
            }
            return env.error({
                message: "Unrecognized rule: " + this.name + mean_message,
                index: this.index,
                type: 'syntax',
                filename: this.filename
            });
        }

        if (this.value instanceof _SuperMap2.default.CartoCSS.Tree.Value && !_SuperMap2.default.CartoCSS.Tree.Reference.validValue(env, this.name, this.value)) {
            if (!_SuperMap2.default.CartoCSS.Tree.Reference.selector(this.name)) {
                return env.error({
                    message: 'Unrecognized property: ' + this.name,
                    index: this.index,
                    type: 'syntax',
                    filename: this.filename
                });
            } else {
                var typename;
                if (_SuperMap2.default.CartoCSS.Tree.Reference.selector(this.name).validate) {
                    typename = _SuperMap2.default.CartoCSS.Tree.Reference.selector(this.name).validate;
                } else if (_typeof(_SuperMap2.default.CartoCSS.Tree.Reference.selector(this.name).type) === 'object') {
                    typename = 'keyword (options: ' + _SuperMap2.default.CartoCSS.Tree.Reference.selector(this.name).type.join(', ') + ')';
                } else {
                    typename = _SuperMap2.default.CartoCSS.Tree.Reference.selector(this.name).type;
                }
                return env.error({
                    message: 'Invalid value for ' + this.name + ', the type ' + typename + ' is expected. ' + this.value + ' (of type ' + this.value.value[0].is + ') ' + ' was given.',
                    index: this.index,
                    type: 'syntax',
                    filename: this.filename
                });
            }
        }

        if (this.variable) {
            return '';
        } else if (_SuperMap2.default.CartoCSS.Tree.Reference.isFont(this.name) && this.value.value.length > 1) {
            var f = _SuperMap2.default.CartoCSS.Tree._getFontSet(env, this.value.value);
            return 'fontset-name="' + f.name + '"';
        } else if (content) {
            return this.value.toString(env, this.name, sep);
        } else {
            return _SuperMap2.default.CartoCSS.Tree.Reference.selectorName(this.name) + '="' + this.value.toString(env, this.name) + '"';
        }
    },
    ev: function ev(context) {
        return new _SuperMap2.default.CartoCSS.Tree.Rule(this.name, this.value.ev(context), this.index, this.filename);
    }
});

_SuperMap2.default.CartoCSS.Tree.Ruleset = _SuperMap2.default.Class({
    is: 'ruleset',
    initialize: function initialize(selectors, rules) {
        this.selectors = selectors;
        this.rules = rules;
        // static cache of find() function
        this._lookups = {};
    },
    'ev': function ev(env) {
        var i,
            rule,
            ruleset = new _SuperMap2.default.CartoCSS.Tree.Ruleset(this.selectors, this.rules.slice(0));
        ruleset.root = this.root;

        // push the current ruleset to the frames stack
        env.frames.unshift(ruleset);

        // Evaluate everything else
        for (i = 0, rule; i < ruleset.rules.length; i++) {
            rule = ruleset.rules[i];
            ruleset.rules[i] = rule.ev ? rule.ev(env) : rule;
        }

        // Pop the stack
        env.frames.shift();

        return ruleset;
    },
    match: function match(args) {
        return !args || args.length === 0;
    },
    variables: function variables() {
        if (this._variables) {
            return this._variables;
        } else {
            return this._variables = this.rules.reduce(function (hash, r) {
                if (r instanceof _SuperMap2.default.CartoCSS.Tree.Rule && r.variable === true) {
                    hash[r.name] = r;
                }
                return hash;
            }, {});
        }
    },
    variable: function variable(name) {
        return this.variables()[name];
    },
    rulesets: function rulesets() {
        if (this._rulesets) {
            return this._rulesets;
        } else {
            return this._rulesets = this.rules.filter(function (r) {
                return r instanceof _SuperMap2.default.CartoCSS.Tree.Ruleset;
            });
        }
    },
    find: function find(selector, self) {
        self = self || this;
        var rules = [],
            rule,
            match,
            key = selector.toString();

        if (key in this._lookups) {
            return this._lookups[key];
        }

        this.rulesets().forEach(function (rule) {
            if (rule !== self) {
                for (var j = 0; j < rule.selectors.length; j++) {
                    match = selector.match(rule.selectors[j]);
                    if (match) {
                        if (selector.elements.length > 1) {
                            Array.prototype.push.apply(rules, rule.find(new _SuperMap2.default.CartoCSS.Tree.Selector(null, null, selector.elements.slice(1)), self));
                        } else {
                            rules.push(rule);
                        }
                        break;
                    }
                }
            }
        });
        return this._lookups[key] = rules;
    },
    // Zooms can use variables. This replaces SuperMap.CartoCSS.Tree.Zoom objects on selectors
    // with simple bit-arrays that we can compare easily.
    evZooms: function evZooms(env) {
        for (var i = 0; i < this.selectors.length; i++) {
            var zval = _SuperMap2.default.CartoCSS.Tree.Zoom.all;
            for (var z = 0; z < this.selectors[i].zoom.length; z++) {
                zval = this.selectors[i].zoom[z].ev(env).zoom;
            }
            this.selectors[i].zoom = zval;
        }
    },
    flatten: function flatten(result, parents, env) {
        var selectors = [],
            i,
            j;
        if (this.selectors.length === 0) {
            env.frames = env.frames.concat(this.rules);
        }
        // evaluate zoom variables on this object.
        this.evZooms(env);
        for (i = 0; i < this.selectors.length; i++) {
            var child = this.selectors[i];

            if (!child.filters) {
                // This is an invalid filterset.
                continue;
            }

            if (parents.length) {
                for (j = 0; j < parents.length; j++) {
                    var parent = parents[j];

                    var mergedFilters = parent.filters.cloneWith(child.filters);
                    if (mergedFilters === null) {
                        // Filters could be added, but they didn't change the
                        // filters. This means that we only have to clone when
                        // the zoom levels or the attachment is different too.
                        if (parent.zoom === child.zoom && parent.attachment === child.attachment && parent.elements.join() === child.elements.join()) {
                            selectors.push(parent);
                            continue;
                        } else {
                            mergedFilters = parent.filters;
                        }
                    } else if (!mergedFilters) {
                        // The merged filters are invalid, that means we don't
                        // have to clone.
                        continue;
                    }

                    var clone = Object.create(_SuperMap2.default.CartoCSS.Tree.Selector.prototype);
                    clone.filters = mergedFilters;
                    clone.zoom = child.zoom;
                    clone.elements = parent.elements.concat(child.elements);
                    if (parent.attachment && child.attachment) {
                        clone.attachment = parent.attachment + '/' + child.attachment;
                    } else clone.attachment = child.attachment || parent.attachment;
                    clone.conditions = parent.conditions + child.conditions;
                    clone.index = child.index;
                    selectors.push(clone);
                }
            } else {
                selectors.push(child);
            }
        }

        var rules = [];
        for (i = 0; i < this.rules.length; i++) {
            var rule = this.rules[i];

            // Recursively flatten any nested rulesets
            if (rule instanceof _SuperMap2.default.CartoCSS.Tree.Ruleset) {
                rule.flatten(result, selectors, env);
            } else if (rule instanceof _SuperMap2.default.CartoCSS.Tree.Rule) {
                rules.push(rule);
            } else if (rule instanceof _SuperMap2.default.CartoCSS.Tree.Invalid) {
                env.error(rule);
            }
        }

        var index = rules.length ? rules[0].index : false;
        for (i = 0; i < selectors.length; i++) {
            // For specificity sort, use the position of the first rule to allow
            // defining attachments that are under current element as a descendant
            // selector.
            if (index !== false) {
                selectors[i].index = index;
            }
            result.push(new _SuperMap2.default.CartoCSS.Tree.Definition(selectors[i], rules.slice()));
        }

        return result;
    }
});

_SuperMap2.default.CartoCSS.Tree.Selector = _SuperMap2.default.Class({
    initialize: function initialize(filters, zoom, elements, attachment, conditions, index) {
        this.elements = elements || [];
        this.attachment = attachment;
        this.filters = filters || {};
        this.zoom = typeof zoom !== 'undefined' ? zoom : _SuperMap2.default.CartoCSS.Tree.Zoom.all;
        this.conditions = conditions;
        this.index = index;
    },
    specificity: function specificity() {
        return this.elements.reduce(function (memo, e) {
            var spec = e.specificity();
            memo[0] += spec[0];
            memo[1] += spec[1];
            return memo;
        }, [0, 0, this.conditions, this.index]);
    }
});

/*style:SuperMap.Class(),*/

_SuperMap2.default.CartoCSS.Tree.URL = _SuperMap2.default.Class({
    is: 'uri',
    initialize: function initialize(val, paths) {
        this.value = val;
        this.paths = paths;
    },
    toString: function toString() {
        return this.value.toString();
    },
    ev: function ev(ctx) {
        return new _SuperMap2.default.CartoCSS.Tree.URL(this.value.ev(ctx), this.paths);
    }
});

_SuperMap2.default.CartoCSS.Tree.Value = _SuperMap2.default.Class({
    is: 'value',
    initialize: function initialize(value) {
        this.value = value;
    },
    ev: function ev(env) {
        if (this.value.length === 1) {
            return this.value[0].ev(env);
        } else {
            return new _SuperMap2.default.CartoCSS.Tree.Value(this.value.map(function (v) {
                return v.ev(env);
            }));
        }
    },
    toJS: function toJS(env) {
        //var v = this.value[0].value[0];
        var val = this.ev(env);
        var v = val.toString();
        if (val.is === "color" || val.is === 'uri' || val.is === 'string' || val.is === 'keyword') {
            v = "'" + v + "'";
        } else if (val.is === 'field') {
            // replace [varuable] by ctx['variable']
            v = v.replace(/\[(.*)\]/g, "attributes['\$1']");
        } else if (val.value && _typeof(val.value) === "object") {
            v = "[" + v + "]";
        }

        return "_value = " + v + ";";
    },
    toString: function toString(env, selector, sep, format) {
        return this.value.map(function (e) {
            return e.toString(env, format);
        }).join(sep || ', ');
    },
    clone: function clone() {
        var obj = Object.create(_SuperMap2.default.CartoCSS.Tree.Value.prototype);
        if (Array.isArray(obj)) obj.value = this.value.slice();else obj.value = this.value;
        obj.is = this.is;
        return obj;
    }
});

_SuperMap2.default.CartoCSS.Tree.Variable = _SuperMap2.default.Class({
    is: 'variable',
    initialize: function initialize(name, index, filename) {
        this.name = name;
        this.index = index;
        this.filename = filename;
    },
    toString: function toString() {
        return this.name;
    },
    ev: function ev(env) {
        var variable,
            v,
            name = this.name;

        if (this._css) return this._css;

        var thisframe = env.frames.filter(function (f) {
            return f.name === this.name;
        }.bind(this));
        if (thisframe.length) {
            return thisframe[0].value.ev(env);
        } else {
            env.error({
                message: 'variable ' + this.name + ' is undefined',
                index: this.index,
                type: 'runtime',
                filename: this.filename
            });
            return {
                is: 'undefined',
                value: 'undefined'
            };
        }
    }
});

_SuperMap2.default.CartoCSS.Tree.Zoom = _SuperMap2.default.Class({
    initialize: function initialize(op, value, index) {
        this.op = op;
        this.value = value;
        this.index = index;
    },
    setZoom: function setZoom(zoom) {
        this.zoom = zoom;
        return this;
    },
    ev: function ev(env) {
        var start = 0,
            end = Infinity,
            value = parseInt(this.value.ev(env).toString(), 10),
            zoom = 0;

        if (value > _SuperMap2.default.CartoCSS.Tree.Zoom.maxZoom || value < 0) {
            env.error({
                message: 'Only zoom levels between 0 and ' + _SuperMap2.default.CartoCSS.Tree.Zoom.maxZoom + ' supported.',
                index: this.index
            });
        }

        switch (this.op) {
            case '=':
                this.zoom = "zoom && zoom === " + value;
                return this;
            case '>':
                this.zoom = "zoom && zoom > " + value;
                break;
            case '>=':
                this.zoom = "zoom && zoom >= " + value;
                break;
            case '<':
                this.zoom = "zoom && zoom < " + value;
                break;
            case '<=':
                this.zoom = "zoom && zoom <= " + value;
                break;
            default:
                return this;
                break;
        }
        /*
         for (var i = 0; i <= SuperMap.CartoCSS.Tree.Zoom.maxZoom; i++) {
         if (i >= start && i <= end) {
         zoom |= (1 << i);
         }
         }
         this.zoom = zoom;
         this.zoom=value+this.op+"zoom";*/
        return this;
    },
    toString: function toString() {
        var str = '';
        for (var i = 0; i <= _SuperMap2.default.CartoCSS.Tree.Zoom.maxZoom; i++) {
            str += this.zoom & 1 << i ? 'X' : '.';
        }
        return str;
    },
    toXML: function toXML() {
        var conditions = [];
        if (this.zoom != _SuperMap2.default.CartoCSS.Tree.Zoom.all) {
            var start = null,
                end = null;
            for (var i = 0; i <= _SuperMap2.default.CartoCSS.Tree.Zoom.maxZoom; i++) {
                if (this.zoom & 1 << i) {
                    if (start === null) start = i;
                    end = i;
                }
            }
            if (start > 0) conditions.push('    <MaxScaleDenominator>' + _SuperMap2.default.CartoCSS.Tree.Zoom.ranges[start] + '</MaxScaleDenominator>\n');
            if (end < 22) conditions.push('    <MinScaleDenominator>' + _SuperMap2.default.CartoCSS.Tree.Zoom.ranges[end + 1] + '</MinScaleDenominator>\n');
        }
        return conditions;
    }

});

// Covers all zoomlevels from 0 to 22
_SuperMap2.default.CartoCSS.Tree.Zoom.all = 23;

_SuperMap2.default.CartoCSS.Tree.Zoom.maxZoom = 22;

_SuperMap2.default.CartoCSS.Tree.Zoom.ranges = {
    0: 1000000000,
    1: 500000000,
    2: 200000000,
    3: 100000000,
    4: 50000000,
    5: 25000000,
    6: 12500000,
    7: 6500000,
    8: 3000000,
    9: 1500000,
    10: 750000,
    11: 400000,
    12: 200000,
    13: 100000,
    14: 50000,
    15: 25000,
    16: 12500,
    17: 5000,
    18: 2500,
    19: 1500,
    20: 750,
    21: 500,
    22: 250,
    23: 100
};

/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Class=SuperMap.ThemeStyle
 * 客户端专题图风格类
 */
var ThemeStyle =
// {Number} 附加文本在x轴方向的偏移量。

// {string} 附加文本水平对齐。可以是 'left', 'right', 'center'; 默认值 'center'。

// {String} 附加文本字体系列。fontFamily 值是字体族名称或/及类族名称的一个优先表，每个值逗号分割，浏览器会使用它可识别的第一个值。
// 可以使用具体的字体名称（"times"、"courier"、"arial"）或字体系列名称（"serif"、"sans-serif"、"cursive"、"fantasy"、"monospace"）。
// 默认值："arial,sans-serif".

// {String} 附加文本字体变体。可设值："normal", "small-caps"; 默认值："normal" 。

// {Number} 附加文本字体大小。默认值 12，单位是像素。

// {String} 专题要素附加文本标签内容。

// {number} 阴影 X 方向偏移值; 默认值 0。

// {number} 阴影模糊度，（大于 0 有效; 默认值 0）。注：请将 shadowColor 属性与 shadowBlur 属性一起使用，来创建阴影。

// {Sting} 虚线类型； strokeDashstyle 有八种类型 “dot",“dash",“dashot",“longdash",“longdashdot",“solid", "dashed", "dotted";
// 默认值 "solid"。solid 表示实线。

// {String} 线帽样式；strokeLinecap 有三种类型 “butt", "round", "square"; 默认为"butt"。

// {Number} 描边的不透明度。取值范围[0, 1]，默认值 1。

// {Boolean} 是否描边，不需要描边则设置为false，默认值为 false。
// 此属性与 fill 不能同时为 false，如果 fill 与 stroke 同时为 false，将按 fill 与 stroke 的默认值渲染图层。

// {String} 十六进制填充颜色。默认值为 "#000000"。
function ThemeStyle(options) {
    _classCallCheck(this, ThemeStyle);

    this.fill = true;
    this.fillColor = "#000000";
    this.fillOpacity = 1;
    this.stroke = false;
    this.strokeColor = "#000000";
    this.strokeOpacity = 1;
    this.strokeWidth = 1;
    this.strokeLinecap = "butt";
    this.strokeLineJoin = "miter";
    this.strokeDashstyle = "solid";
    this.pointRadius = 6;
    this.shadowBlur = 0;
    this.shadowColor = "#000000";
    this.shadowOffsetX = 0;
    this.shadowOffsetY = 0;
    this.label = "";
    this.fontColor = "";
    this.fontSize = 12;
    this.fontStyle = "normal";
    this.fontVariant = "normal";
    this.fontWeight = "normal";
    this.fontFamily = "arial,sans-serif";
    this.labelPosition = "top";
    this.labelAlign = "center";
    this.labelBaseline = "middle";
    this.labelXOffset = "miter";
    this.labelYOffset = 0;

    options = options || {};
    _SuperMap2.default.Util.extend(this, options);
}
// {Number} 附加文本在y轴方向的偏移量。

// {string} 附加文本垂直对齐。 可以是 'top', 'bottom', 'middle';默认值 'middle'。

// {string} 附加文本位置, 可以是 'inside', 'left', 'right', 'top', 'bottom'; 默认值 'top'。

// {String} 附加文本字体粗细。可设值："normal", "bold", "bolder", "lighter"; 默认值："normal" 。

// {String} 附加文本字体样式。可设值："normal", "italic", "oblique"; 默认值："normal" 。

// {String} 附加文本字体颜色。

// {number} 阴影 Y 方向偏移值; 默认值 0。

// {string} 阴影颜色; 默认值 '#000000'。  注：请将 shadowColor 属性与 shadowBlur 属性一起使用，来创建阴影。

// {Number} 点半径，默认为 6 （像素）。

// {String} 线段连接样式；strokeLineJoin 有三种类型 “miter", "round", "bevel"; 默认为"miter"。

// {Number} 线宽度/描边宽度，默认值 1。

// {String}十六进制描边颜色

// {Number} 填充不透明度。取值范围[0, 1]，默认值 1。


// {Boolean} 是否填充，不需要填充则设置为 false，默认值为 true。
// 此属性与 stroke 不能同时为 false，如果 fill 与 stroke 同时为 false，将按 fill 与 stroke 的默认值渲染图层。
;

exports.default = ThemeStyle;

_SuperMap2.default.ThemeStyle = ThemeStyle;

/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Graphic = function (_ol$Object) {
    _inherits(Graphic, _ol$Object);

    function Graphic(geometry) {
        _classCallCheck(this, Graphic);

        var _this = _possibleConstructorReturn(this, (Graphic.__proto__ || Object.getPrototypeOf(Graphic)).call(this));

        if (geometry instanceof _olDebug2.default.geom.Geometry) {
            _this.geometry_ = geometry;
        }
        _this.setStyle();
        return _this;
    }

    _createClass(Graphic, [{
        key: 'clone',
        value: function clone() {
            var clone = new _olDebug2.default.supermap.Graphic();
            clone.setId(this.id_);
            clone.setGeometry(this.geometry_);
            clone.setStyle(this.style_);
            return clone;
        }
    }, {
        key: 'getId',
        value: function getId() {
            return this.id_;
        }
    }, {
        key: 'setId',
        value: function setId(id) {
            this.id_ = id;
        }
    }, {
        key: 'getGeometry',
        value: function getGeometry() {
            return this.geometry_;
        }
    }, {
        key: 'setGeometry',
        value: function setGeometry(geometry) {
            this.geometry_ = geometry;
        }
    }, {
        key: 'getStyle',
        value: function getStyle() {
            return this.style_;
        }
    }, {
        key: 'setStyle',
        value: function setStyle(style) {
            this.style_ = style;
            this.styleFunction_ = !style ? undefined : _olDebug2.default.Graphic.createStyleFunction(style);
            this.changed();
        }
    }, {
        key: 'getStyleFunction',
        value: function getStyleFunction() {
            return this.styleFunction_;
        }
    }, {
        key: 'destroy',
        value: function destroy() {
            this.id_ = null;
            this.geometry_ = null;
            this.style_ = null;
        }
    }], [{
        key: 'createStyleFunction',
        value: function createStyleFunction(obj) {
            var styleFunction;
            if (typeof obj === 'function') {
                if (obj.length == 2) {
                    styleFunction = function styleFunction(resolution) {
                        return obj(this, resolution);
                    };
                } else {
                    styleFunction = obj;
                }
            } else {
                var styles;
                if (Array.isArray(obj)) {
                    styles = obj;
                } else {
                    styles = [obj];
                }
                styleFunction = function styleFunction() {
                    return styles;
                };
            }
            return styleFunction;
        }
    }]);

    return Graphic;
}(_olDebug2.default.Object);

exports.default = Graphic;

_olDebug2.default.Graphic = Graphic;

/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var MapvCanvasLayer = function () {
    function MapvCanvasLayer(options) {
        _classCallCheck(this, MapvCanvasLayer);

        this.options = options || {};
        this.paneName = this.options.paneName || 'mapPane';
        this.context = this.options.context || '2d';
        this.zIndex = this.options.zIndex || 2;
        this.mixBlendMode = this.options.mixBlendMode || null;
        this.enableMassClear = this.options.enableMassClear;
        this._map = options.map;
        this.initialize();
    }

    _createClass(MapvCanvasLayer, [{
        key: 'initialize',
        value: function initialize() {
            var me = this;
            var canvas = me.canvas = document.createElement("canvas");
            canvas.style.cssText = "position:absolute;" + "left:0;" + "top:0;" + "z-index:" + me.zIndex + ";user-select:none;";
            canvas.style.mixBlendMode = me.mixBlendMode;
            canvas.className = "mapvClass";
            var size = me._map.getSize();
            var global$2 = typeof window === 'undefined' ? {} : window;
            var devicePixelRatio = me.devicePixelRatio = global$2.devicePixelRatio;
            canvas.width = size[0];
            canvas.height = size[1];
            if (me.context == '2d') {
                canvas.getContext(me.context).scale(devicePixelRatio, devicePixelRatio);
            }
            canvas.style.width = canvas.width + "px";
            canvas.style.height = canvas.height + "px";
        }
    }, {
        key: 'draw',
        value: function draw() {
            var size = this._map.getSize();
            var center = this._map.getView().getCenter();
            if (center) {
                var _p = this._map.getPixelFromCoordinate(center);
                if (_p) {
                    this.canvas.style.left = _p[0] - size[0] / 2 + 'px';
                    this.canvas.style.top = _p[1] - size[1] / 2 + 'px';
                    this.options.update && this.options.update.call(this);
                }
            }
        }
    }, {
        key: 'getContainer',
        value: function getContainer() {
            return this.canvas;
        }
    }, {
        key: 'setZIndex',
        value: function setZIndex(zIndex) {
            this.canvas.style.zIndex = zIndex;
        }
    }, {
        key: 'getZIndex',
        value: function getZIndex() {
            return this.zIndex;
        }
    }]);

    return MapvCanvasLayer;
}();

exports.default = MapvCanvasLayer;

/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _MapvCanvasLayer = __webpack_require__(274);

var _MapvCanvasLayer2 = _interopRequireDefault(_MapvCanvasLayer);

var _mapv = __webpack_require__(284);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BaiduMapLayer = _mapv.baiduMapLayer ? _mapv.baiduMapLayer.__proto__ : Function;

var MapvLayer = function (_BaiduMapLayer) {
    _inherits(MapvLayer, _BaiduMapLayer);

    function MapvLayer(map, dataSet, options, source) {
        _classCallCheck(this, MapvLayer);

        var _this = _possibleConstructorReturn(this, (MapvLayer.__proto__ || Object.getPrototypeOf(MapvLayer)).call(this, map, dataSet, options));

        _this.dataSet = dataSet;
        var self = _this;
        options = options || {};
        _this.source = source;
        self.animator = null;
        self.map = map;
        self.init(options);
        self.argCheck(options);
        _this.canvasLayer = new _MapvCanvasLayer2.default({
            map: map,
            context: _this.context,
            paneName: options.paneName,
            mixBlendMode: options.mixBlendMode,
            enableMassClear: options.enableMassClear,
            zIndex: options.zIndex,
            update: function update() {
                self._canvasUpdate();
            }
        });
        _this.clickEvent = _this.clickEvent.bind(_this);
        _this.mousemoveEvent = _this.mousemoveEvent.bind(_this);
        _this.bindEvent();
        return _this;
    }

    _createClass(MapvLayer, [{
        key: 'init',
        value: function init(options) {
            var self = this;
            self.options = options;
            this.initDataRange(options);
            this.context = self.options.context || '2d';
            if (self.options.zIndex) {
                this.canvasLayer && this.canvasLayer.setZIndex(self.options.zIndex);
            }
            this.initAnimator();
        }
    }, {
        key: 'clickEvent',
        value: function clickEvent(e) {
            var pixel = e.pixel;
            _get(MapvLayer.prototype.__proto__ || Object.getPrototypeOf(MapvLayer.prototype), 'clickEvent', this).call(this, { x: pixel[0], y: pixel[1] }, e);
        }
    }, {
        key: 'mousemoveEvent',
        value: function mousemoveEvent(e) {
            var pixel = e.pixel;
            _get(MapvLayer.prototype.__proto__ || Object.getPrototypeOf(MapvLayer.prototype), 'mousemoveEvent', this).call(this, { x: pixel[0], y: pixel[1] }, e);
        }
    }, {
        key: 'bindEvent',
        value: function bindEvent() {
            var me = this;
            var map = me.map;
            if (me.options.methods) {
                if (me.options.methods.click) {
                    map.on('click', me.clickEvent);
                }
                if (me.options.methods.mousemove) {
                    me.pointerInteraction = new _olDebug2.default.interaction.Pointer();
                    me.pointerInteraction.handleMoveEvent_ = function (event) {
                        me.mousemoveEvent(event);
                    };
                    map.addInteraction(me.pointerInteraction);
                }
            }
        }
    }, {
        key: 'unbindEvent',
        value: function unbindEvent() {
            var map = this.map;
            if (this.options.methods) {
                if (this.options.methods.click) {
                    map.un('click', this.clickEvent);
                }
                if (this.options.methods.mousemove) {
                    map.removeInteraction(this.pointerInteraction);
                }
            }
        }
    }, {
        key: '_canvasUpdate',
        value: function _canvasUpdate(time) {
            if (!this.canvasLayer) {
                return;
            }
            var self = this;
            var animationOptions = self.options.animation;
            var map = self.map;
            var context = self.canvasLayer.canvas.getContext(self.context);
            if (self.isEnabledTime()) {
                if (time === undefined) {
                    this.clear(context);
                    return;
                }
                if (self.context == '2d') {
                    context.save();
                    context.globalCompositeOperation = 'destination-out';
                    context.fillStyle = 'rgba(0, 0, 0, .1)';
                    context.fillRect(0, 0, context.canvas.width, context.canvas.height);
                    context.restore();
                }
            } else {
                this.clear(context);
            }
            if (self.context == '2d') {
                for (var key in self.options) {
                    context[key] = self.options[key];
                }
            } else {
                context.clear(context.COLOR_BUFFER_BIT);
            }
            var dataGetOptions = {
                transferCoordinate: function transferCoordinate(coordinate) {
                    return map.getPixelFromCoordinate(coordinate);
                }
            };
            if (time !== undefined) {
                dataGetOptions.filter = function (item) {
                    var trails = animationOptions.trails || 10;
                    if (time && item.time > time - trails && item.time < time) {
                        return true;
                    } else {
                        return false;
                    }
                };
            }
            var data = self.dataSet.get(dataGetOptions);

            this.processData(data);

            self.options._size = self.options.size;

            var pixel = map.getPixelFromCoordinate([0, 0]);
            this.drawContext(context, new mapv.DataSet(data), self.options, { x: pixel[0], y: pixel[1] });
            if (self.isEnabledTime()) {
                this.source.changed();
            }
            self.options.updateCallback && self.options.updateCallback(time);
        }
    }, {
        key: 'isEnabledTime',
        value: function isEnabledTime() {
            var animationOptions = this.options.animation;
            return animationOptions && !(animationOptions.enabled === false);
        }
    }, {
        key: 'argCheck',
        value: function argCheck(options) {
            if (options.draw === 'heatmap') {
                if (options.strokeStyle) {
                    console.warn('[heatmap] options.strokeStyle is discard, pleause use options.strength [eg: options.strength = 0.1]');
                }
            }
        }
    }, {
        key: 'clear',
        value: function clear(context) {
            context && context.clearRect && context.clearRect(0, 0, context.canvas.width, context.canvas.height);
        }
    }, {
        key: 'update',
        value: function update(obj) {
            var self = this;
            var _options = obj.options;
            var options = self.options;
            for (var i in _options) {
                options[i] = _options[i];
            }
            self.init(options);
        }
    }]);

    return MapvLayer;
}(BaiduMapLayer);

exports.default = MapvLayer;

/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

__webpack_require__(1);

__webpack_require__(91);

__webpack_require__(92);

__webpack_require__(104);

__webpack_require__(191);

__webpack_require__(192);

__webpack_require__(183);

__webpack_require__(203);

__webpack_require__(26);

__webpack_require__(272);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _theme = __webpack_require__(49);

var _theme2 = _interopRequireDefault(_theme);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Graph = function (_Theme) {
    _inherits(Graph, _Theme);

    function Graph(name, chartsType, opt_options) {
        _classCallCheck(this, Graph);

        var _this = _possibleConstructorReturn(this, (Graph.__proto__ || Object.getPrototypeOf(Graph)).call(this, name, opt_options));

        _this.getShapesByFeatureID = function (featureID) {
            var list = [];
            var shapeList = this.renderer.getAllShapes();
            if (!featureID) {
                return shapeList;
            }
            for (var i = 0, len = shapeList.length; i < len; i++) {
                var si = shapeList[i];
                if (si.refDataID && featureID === si.refDataID) {
                    list.push(si);
                }
            }
            return list;
        };

        _this.chartsSetting = {};
        _this.themeFields = null;
        _this.overlayWeightField = null;
        _this.isOverLay = true;
        _this.charts = [];
        _this.cache = {};
        _this.chartsType = chartsType;
        return _this;
    }

    _createClass(Graph, [{
        key: 'destroy',
        value: function destroy() {
            this.chartsType = null;
            this.chartsSetting = null;
            this.themeFields = null;
            this.overlayWeightField = null;
            this.isOverLay = null;
            _theme2.default.prototype.destroy.apply(this, arguments);
            // charts  cache 为缓存，需要在父类destory后置为null（父类destory中有方法会初始化缓存参数）
            this.charts = null;
            this.cache = null;
        }
    }, {
        key: 'setChartsType',
        value: function setChartsType(chartsType) {
            this.chartsType = chartsType;
            this.redraw();
        }
    }, {
        key: 'addFeatures',
        value: function addFeatures(features) {
            //数组
            if (!_SuperMap2.default.Util.isArray(features)) {
                features = [features];
            }
            var event = { features: features };
            var ret = this.dispatchEvent({ type: 'beforefeaturesadded', value: event });
            if (ret === false) {
                return;
            }
            features = event.features;
            var featuresFailAdded = [];
            for (var i = 0, len = features.length; i < len; i++) {
                this.features.push(this.toiClientFeature(features[i]));
            }
            var succeed = featuresFailAdded.length == 0 ? true : false;
            this.dispatchEvent({ type: 'featuresadded', value: { features: featuresFailAdded, succeed: succeed } });
            //绘制专题要素
            if (this.renderer) {
                this.redrawThematicFeatures(this.map.getView().calculateExtent());
            }
        }
    }, {
        key: 'redrawThematicFeatures',
        value: function redrawThematicFeatures(extent, zoomChanged, dragging) {
            //清除当前所有可视元素
            this.renderer.clearAll();
            var features = this.features;
            for (var i = 0, len = features.length; i < len; i++) {
                var feature = features[i];
                // 要素范围判断
                var feaBounds = feature.geometry.getBounds();
                //剔除当前视图（地理）范围以外的数据
                if (extent) {
                    var bounds = new _SuperMap2.default.Bounds(extent[0], extent[1], extent[2], extent[3]);
                    if (!bounds.intersectsBounds(feaBounds)) continue;
                }
                var cache = this.cache;
                // 用 feature id 做缓存标识
                var cacheField = feature.id;
                // 数据对应的图表是否已缓存，没缓存则重新创建图表
                if (cache[cacheField]) {
                    continue;
                }
                cache[cacheField] = cacheField;
                var chart = this.createThematicFeature(feature);
                // 压盖处理权重值
                if (chart && this.overlayWeightField) {
                    if (feature.attributes[this.overlayWeightField] && !isNaN(feature.attributes[this.overlayWeightField])) {
                        chart["__overlayWeight"] = feature.attributes[this.overlayWeightField];
                    }
                }
                if (chart) {
                    this.charts.push(chart);
                }
            }
            this.drawCharts();
        }
    }, {
        key: 'createThematicFeature',
        value: function createThematicFeature(feature) {
            var thematicFeature;
            // 检查图表创建条件并创建图形
            if (_SuperMap2.default.Feature.Theme[this.chartsType] && this.themeFields && this.chartsSetting) {
                thematicFeature = new _SuperMap2.default.Feature.Theme[this.chartsType](feature, this, this.themeFields, this.chartsSetting);
            }
            // thematicFeature 是否创建成功
            if (!thematicFeature) return false;
            // 对专题要素执行图形装载
            thematicFeature.assembleShapes();
            return thematicFeature;
        }
    }, {
        key: 'drawCharts',
        value: function drawCharts() {
            // 判断 rendere r就绪
            if (!this.renderer) return;
            var charts = this.charts;
            // 图表权重值处理
            if (this.overlayWeightField) {
                charts.sort(function (cs, ce) {
                    if (typeof cs["__overlayWeight"] == "undefined" && typeof ce["__overlayWeight"] == "undefined") {
                        return 0;
                    } else if (typeof cs["__overlayWeight"] != "undefined" && typeof ce["__overlayWeight"] == "undefined") {
                        return -1;
                    } else if (typeof cs["__overlayWeight"] == "undefined" && typeof ce["__overlayWeight"] != "undefined") {
                        return 1;
                    } else if (typeof cs["__overlayWeight"] != "undefined" && typeof ce["__overlayWeight"] != "undefined") {
                        if (parseFloat(cs["__overlayWeight"]) < parseFloat(ce["__overlayWeight"])) {
                            return 1;
                        } else {
                            return -1;
                        }
                    }
                });
            }
            // 不进行避让
            if (!this.isOverLay) {
                for (var m = 0, len_m = charts.length; m < len_m; m++) {
                    var chart_m = charts[m];
                    // 图形参考位置  (reSetLocation 会更新 chartBounds)
                    var shapeROP_m = chart_m.resetLocation();
                    // 添加图形
                    var shapes_m = chart_m.shapes;
                    for (var n = 0, slen_n = shapes_m.length; n < slen_n; n++) {
                        shapes_m[n].refOriginalPosition = shapeROP_m;
                        this.renderer.addShape(shapes_m[n]);
                    }
                }
            } else {
                // 压盖判断所需 chartsBounds 集合
                var chartsBounds = [];
                var extent = this.map.getView().calculateExtent();
                var mapBounds = new _SuperMap2.default.Bounds(extent[0], extent[1], extent[2], extent[3]);
                if (mapBounds) {
                    // 获取地图像素 bounds
                    var mapPxLT = this.getLocalXY(new _SuperMap2.default.LonLat(mapBounds.left, mapBounds.top));
                    var mapPxRB = this.getLocalXY(new _SuperMap2.default.LonLat(mapBounds.right, mapBounds.bottom));
                    var mBounds = new _SuperMap2.default.Bounds(mapPxLT[0], mapPxRB[1], mapPxRB[0], mapPxLT[1]);
                    // 压盖处理 & 添加图形
                    for (var i = 0, len = charts.length; i < len; i++) {
                        var chart = charts[i];
                        // 图形参考位置  (reSetLocation 会更新 chartBounds)
                        var shapeROP = chart.resetLocation();
                        // 图表框
                        var cbs = chart.chartBounds;
                        var cBounds = [{ "x": cbs.left, "y": cbs.top }, { "x": cbs.left, "y": cbs.bottom }, {
                            "x": cbs.right,
                            "y": cbs.bottom
                        }, { "x": cbs.right, "y": cbs.top }, { "x": cbs.left, "y": cbs.top }];
                        // 地图范围外不绘制
                        if (mBounds) {
                            if (!this.isChartInMap(mBounds, cBounds)) continue;
                        }
                        // 是否压盖
                        var isOL = false;
                        if (i !== 0) {
                            for (var j = 0; j < chartsBounds.length; j++) {
                                //压盖判断
                                if (this.isQuadrilateralOverLap(cBounds, chartsBounds[j])) {
                                    isOL = true;
                                    break;
                                }
                            }
                        }
                        if (isOL) {
                            continue;
                        } else {
                            chartsBounds.push(cBounds);
                        }
                        // 添加图形
                        var shapes = chart.shapes;
                        for (var j = 0, slen = shapes.length; j < slen; j++) {
                            shapes[j].refOriginalPosition = shapeROP;
                            this.renderer.addShape(shapes[j]);
                        }
                    }
                }
            }
            // 绘制图形
            this.renderer.render();
        }
    }, {
        key: 'isQuadrilateralOverLap',
        value: function isQuadrilateralOverLap(quadrilateral, quadrilateral2) {
            var quadLen = quadrilateral.length,
                quad2Len = quadrilateral2.length;
            if (quadLen !== 5 || quad2Len !== 5) return null; //不是四边形

            var OverLap = false;
            //如果两四边形互不包含对方的节点，则两个四边形不相交
            for (var i = 0; i < quadLen; i++) {
                if (this.isPointInPoly(quadrilateral[i], quadrilateral2)) {
                    OverLap = true;
                    break;
                }
            }
            for (var i = 0; i < quad2Len; i++) {
                if (this.isPointInPoly(quadrilateral2[i], quadrilateral)) {
                    OverLap = true;
                    break;
                }
            }
            //加上两矩形十字相交的情况
            for (var i = 0; i < quadLen - 1; i++) {
                if (OverLap) {
                    break;
                }
                for (var j = 0; j < quad2Len - 1; j++) {
                    var isLineIn = _SuperMap2.default.Util.lineIntersection(quadrilateral[i], quadrilateral[i + 1], quadrilateral2[j], quadrilateral2[j + 1]);
                    if (isLineIn.CLASS_NAME === "SuperMap.Geometry.Point") {
                        OverLap = true;
                        break;
                    }
                }
            }
            return OverLap;
        }
    }, {
        key: 'isPointInPoly',
        value: function isPointInPoly(pt, poly) {
            for (var isIn = false, i = -1, l = poly.length, j = l - 1; ++i < l; j = i) {
                (poly[i].y <= pt.y && pt.y < poly[j].y || poly[j].y <= pt.y && pt.y < poly[i].y) && pt.x < (poly[j].x - poly[i].x) * (pt.y - poly[i].y) / (poly[j].y - poly[i].y) + poly[i].x && (isIn = !isIn);
            }return isIn;
        }
    }, {
        key: 'isChartInMap',
        value: function isChartInMap(mapPxBounds, chartPxBounds) {
            var mb = mapPxBounds;
            var isIn = false;
            for (var i = 0, len = chartPxBounds.length; i < len; i++) {
                var cb = chartPxBounds[i];

                if (cb.x >= mb.left && cb.x <= mb.right && cb.y >= mb.top && cb.y <= mb.bottom) {
                    isIn = true;
                    break;
                }
            }
            return isIn;
        }
    }, {
        key: 'clearCache',
        value: function clearCache() {
            this.cache = {};
            this.charts = [];
        }
    }, {
        key: 'removeFeatures',
        value: function removeFeatures(features) {
            this.clearCache();
            _SuperMap2.default.Layer.Theme.prototype.removeFeatures.apply(this, arguments);
        }
    }, {
        key: 'removeAllFeatures',
        value: function removeAllFeatures() {
            this.clearCache();
            _SuperMap2.default.Layer.Theme.prototype.removeAllFeatures.apply(this, arguments);
        }
    }, {
        key: 'redraw',
        value: function redraw() {
            this.clearCache();
            return _SuperMap2.default.Layer.Theme.prototype.redraw.apply(this, arguments);
        }
    }, {
        key: 'clear',
        value: function clear() {
            if (this.renderer) {
                this.renderer.clearAll();
                this.renderer.refresh();
            }
            this.removeAllFeatures();
            this.clearCache();
        }
    }, {
        key: 'canvasFunctionInternal_',
        value: function canvasFunctionInternal_(extent, resolution, pixelRatio, size, projection) {
            return _theme2.default.prototype.canvasFunctionInternal_.apply(this, arguments);
        }
    }]);

    return Graph;
}(_theme2.default);

exports.default = Graph;

_olDebug2.default.source.Graph = Graph;

/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

_olDebug2.default.supermap = _olDebug2.default.supermap || {};

var ThemeFeature = function () {
    function ThemeFeature(geometry, attributes) {
        _classCallCheck(this, ThemeFeature);

        this.geometry = geometry;
        this.attributes = attributes;
    }

    _createClass(ThemeFeature, [{
        key: 'toFeature',
        value: function toFeature() {
            var geometry = this.geometry;
            if (geometry instanceof _olDebug2.default.geom.Point) {
                geometry = new _SuperMap2.default.Geometry.Point(geometry.getCoordinates()[0], geometry.getCoordinates()[1]);
            }
            if (geometry instanceof _olDebug2.default.geom.LineString) {
                var coords = geometry.getCoordinates();
                var points = [];
                for (var i = 0; i < coords.length; i++) {
                    points.push(new _SuperMap2.default.Geometry.Point(coords[i][0], coords[i][1]));
                }
                geometry = new _SuperMap2.default.Geometry.LineString(points);
            }
            if (geometry instanceof _olDebug2.default.geom.Polygon) {
                var coords = geometry.getCoordinates();
                var points = [];
                for (var i = 0; i < coords.length; i++) {
                    points.push(new _SuperMap2.default.Geometry.Point(coords[i][0], coords[i][1]));
                }
                var linearRings = new _SuperMap2.default.Geometry.LinearRing(points);
                geometry = new _SuperMap2.default.Geometry.Polygon([linearRings]);
            }
            return new _SuperMap2.default.Feature.Vector(geometry, this.attributes);
        }
    }]);

    return ThemeFeature;
}();

exports.default = ThemeFeature;


_olDebug2.default.supermap.ThemeFeature = ThemeFeature;

/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var pointStyle = exports.pointStyle = {
    pointFile: "",

    /*expand*/
    pointRadius: 3,
    pointHaloRadius: 1,
    pointHaloColor: "#c33",
    offsetX: 0,
    offsetY: 0,
    fillStyle: "#fc0",

    globalAlpha: 1,
    globalCompositeOperation: "source-over",
    imageSmoothingEnabled: true
};

var lineStyle = exports.lineStyle = {
    strokeStyle: "rgba(0,0,0,0)",
    lineWidth: 1,
    lineCap: "butt",
    lineJoin: "round",
    miterLimit: 10,
    lineDashOffset: 0,
    /*expand*/
    lineDasharray: [],
    strokeOpacity: 1,
    offset: 0,

    globalAlpha: 1,
    globalCompositeOperation: "source-over",
    imageSmoothingEnabled: true
};

var polygonStyle = exports.polygonStyle = {
    /*包含LINE的部分*/
    strokeStyle: "rgba(0,0,0,0)",
    lineWidth: 1,
    lineCap: "butt",
    lineJoin: "round",
    miterLimit: 10,
    lineDashOffset: 0,
    /*expand*/
    lineOpacity: 1,
    fillOpacity: 1,
    lineDasharray: [],

    fillStyle: "rgba(0,0,0,0)",
    polygonOpacity: 1,

    /*expand*/
    offsetX: 0,
    offsetY: 0,

    globalAlpha: 1,
    globalCompositeOperation: "source-over",
    imageSmoothingEnabled: true
};

var DeafultCanvasStyle = exports.DeafultCanvasStyle = {
    "TEXT": {
        font: "10px sans-serif",
        textAlign: "middle",
        textBaseline: "center",
        direction: "ltr",
        /*expand*/
        bold: false,
        haloRadius: 0,
        backColor: "rgba(255,255,255,1)",
        foreColor: "rgba(0,0,0,1)",
        // foreColor: "rgba(0,0,0,0)",
        offsetX: 0,
        offsetY: 0,
        textHeight: 0,

        globalAlpha: 1,
        globalCompositeOperation: "source-over",
        imageSmoothingEnabled: true
    },
    "POINT": pointStyle,
    "MULTIPOINT": pointStyle,
    "LINE": lineStyle,
    "LINESTRING": lineStyle,
    "MULTILINESTRING": lineStyle,
    "REGION": polygonStyle,
    "POLYGON": polygonStyle,
    "MULTIPOLYGON": polygonStyle,
    "SHADOW": {
        shadowBlur: 0,
        shadowColor: "rgba(0,0,0,0)",
        shadowOffsetX: 0,
        shadowOffsetY: 0
    },
    "GLOBAL": {
        globalAlpha: 1,
        globalCompositeOperation: "source-over",
        imageSmoothingEnabled: true
    }
};

/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var pointMap = exports.pointMap = {
    "point-file": "pointFile",
    "point-fill": "fillStyle",
    "point-radius": "pointRadius",
    "point-halo-radius": "pointHaloRadius",
    "point-halo-color": "pointHaloColor",
    "point-dx": "offsetX",
    "point-dy": "offsetY",
    "point-opacity": "globalAlpha",
    "point-comp-op": "globalCompositeOperation"
};

var lineMap = exports.lineMap = {
    "line-color": "strokeStyle",
    "line-width": "lineWidth",
    "line-cap": "lineCap",
    "line-join": "lineJoin",
    "line-miterlimit": "miterLimit",
    "line-dash-offset": "lineDashOffset",
    /*expand*/
    "line-opacity": "strokeOpacity",
    "line-dasharray": "lineDasharray",
    "line-offset": "offset",
    "line-comp-op": "globalCompositeOperation"
};

var polygonMap = exports.polygonMap = {
    /*包括LINE的部分，用以设置面的外围边界*/
    "line-color": "strokeStyle",
    "line-width": "lineWidth",
    "line-cap": "lineCap",
    "line-join": "lineJoin",
    "line-miterlimit": "miterLimit",
    "line-dash-offset": "lineDashOffset",
    /*expand*/
    "line-opacity": "strokeOpacity",
    "line-dasharray": "lineDasharray",

    /*以下为面的特性*/
    "polygon-fill": "fillStyle",
    "polygon-dx": "offsetX",
    "polygon-dy": "offsetY",
    "polygon-opacity": "fillOpacity",
    "polygon-comp-op": "globalCompositeOperation"
};

var StyleMap = exports.StyleMap = {
    /**
     * CartoCSS中的style属性名与Canvas的style属性名的对应表
     * */
    CartoStyleMap: {
        "TEXT": {
            //前两个属性值组成font
            "text-size": "fontSize",
            "text-face-name": "fontFamily",

            "text-align": "textAlign",
            "text-vertical-alignment": "textBaseline",
            "text-horizontal-alignment": "textAlign",
            /*expand*/
            'text-bold': 'bold',
            'text-weight': 'fontWeight',
            "text-name": "textName",
            "text-halo-radius": "haloRadius",
            "text-halo-color": "backColor",
            "text-fill": "foreColor",
            "text-opacity": "globalAlpha",
            "text-dx": "offsetX",
            "text-dy": "offsetY",
            "text-comp-op": "globalCompositeOperation"
        },
        /*expand*/
        "POINT": pointMap,
        "MULTIPOINT": pointMap,
        "LINE": lineMap,
        "LINESTRING": lineMap,
        "MULTILINESTRING": lineMap,
        "REGION": polygonMap,
        "POLYGON": polygonMap,
        "MULTIPOLYGON": polygonMap
    },
    /**
     * 服务端传过来的style属性名与Canvas的style属性名的对应表
     * */
    ServerStyleMap: {
        fillBackOpaque: {
            canvasStyle: "",
            type: "bool",
            defaultValue: true
        },
        lineWidth: {
            canvasStyle: "lineWidth",
            type: "number",
            unit: "mm",
            defaultValue: 0.1
        },
        fillBackColor: {
            canvasStyle: "",
            type: "color",
            defaultValue: "rgba(0,0,0,0)"
        },
        markerWidth: {
            canvasStyle: "",
            type: "number",
            unit: "mm",
            defaultValue: ""
        },
        markerAngle: {
            canvasStyle: "",
            type: "number",
            unit: "degree",
            defaultValue: ""
        },
        fillForeColor: {
            canvasStyle: "fillStyle",
            type: "color",
            defaultValue: "rgba(0,0,0,0)"
        },
        foreColor: {
            canvasStyle: "fillStyle",
            type: "color",
            defaultValue: "rgba(0,0,0,0)"
        },
        markerSize: {
            canvasStyle: "markerSize",
            type: "number",
            unit: "mm",
            defaultValue: 2.4
        },
        fillGradientOffsetRatioX: {
            canvasStyle: "",
            type: "number",
            defaultValue: 0
        },
        fillGradientOffsetRatioY: {
            canvasStyle: "",
            type: "number",
            defaultValue: 0
        },
        lineColor: {
            canvasStyle: "strokeStyle",
            type: "color",
            defaultValue: "rgba(0,0,0,0)"
        },
        fillOpaqueRate: {
            canvasStyle: "",
            type: "number",
            defaultValue: 100
        },
        markerHeight: {
            canvasStyle: "",
            type: "number",
            unit: "mm",
            defaultValue: 0
        },
        fillGradientMode: {
            canvasStyle: "",
            type: "string",
            defaultValue: "NONE"
        },
        fillSymbolID: {
            canvasStyle: "",
            type: "number",
            defaultValue: 0
        },
        fillGradientAngle: {
            canvasStyle: "",
            type: "number",
            unit: "degree",
            defaultValue: 0
        },
        markerSymbolID: {
            canvasStyle: "",
            type: "number",
            defaultValue: 0
        },
        lineSymbolID: {
            canvasStyle: "",
            type: "number",
            defaultValue: 0
        }
    },
    /**
     * Canvas中的globalCompositeOperation属性值与CartoCSS中的CompOp属性值对照表
     * */
    CartoCompOpMap: {
        "clear": "",
        "src": "",
        "dst": "",
        "src-over": "source-over",
        "dst-over": "destination-over",
        "src-in": "source-in",
        "dst-in": "destination-in",
        "src-out": "source-out",
        "dst-out": "destination-out",
        "src-atop": "source-atop",
        "dst-atop": "destination-atop",
        "xor": "xor",
        "plus": "lighter",
        "minus": "",
        "multiply": "",
        "screen": "",
        "overlay": "",
        "darken": "",
        "lighten": "lighter",
        "color-dodge": "",
        "color-burn": "",
        "hard-light": "",
        "soft-light": "",
        "difference": "",
        "exclusion": "",
        "contrast": "",
        "invert": "",
        "invert-rgb": "",
        "grain-merge": "",
        "grain-extract": "",
        "hue": "",
        "saturation": "",
        "color": "",
        "value": ""
    }
};

/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _olDebug = __webpack_require__(2);

var _olDebug2 = _interopRequireDefault(_olDebug);

__webpack_require__(271);

var _SuperMap = __webpack_require__(0);

var _SuperMap2 = _interopRequireDefault(_SuperMap);

var _StyleUtils = __webpack_require__(47);

var _StyleUtils2 = _interopRequireDefault(_StyleUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

_olDebug2.default.supermap = _olDebug2.default.supermap || {};

var VectorTileStyles = function (_ol$Observable) {
    _inherits(VectorTileStyles, _ol$Observable);

    function VectorTileStyles(options) {
        _classCallCheck(this, VectorTileStyles);

        var _this = _possibleConstructorReturn(this, (VectorTileStyles.__proto__ || Object.getPrototypeOf(VectorTileStyles)).call(this));

        if (!options) {
            return _possibleConstructorReturn(_this);
        }
        var donotNeedServerCartoCss = false;
        if (options.donotNeedServerCartoCss !== undefined) {
            donotNeedServerCartoCss = options.donotNeedServerCartoCss;
        }
        _olDebug2.default.supermap.VectorTileStyles.setDonotNeedServerCartoCss(donotNeedServerCartoCss);
        if (options.view) {
            _olDebug2.default.supermap.VectorTileStyles.setView(options.view);
        }
        if (options.url) {
            _olDebug2.default.supermap.VectorTileStyles.setUrl(options.url);
        }
        if (options.cartoCss) {
            _olDebug2.default.supermap.VectorTileStyles.setCartoCss(options.cartoCss);
        }
        var selectdPointStyle = getDefaultSelectedPointStyle();
        if (options.selectdPointStyle) {
            selectdPointStyle = options.selectdPointStyle;
        }
        _olDebug2.default.supermap.VectorTileStyles.setSelectedPointStyle(selectdPointStyle);
        var selectdLineStyle = getDefaultSelectedLineStyle();
        if (options.selectdLineStyle) {
            selectdLineStyle = options.selectdLineStyle;
        }
        _olDebug2.default.supermap.VectorTileStyles.setSelectedLineStyle(selectdLineStyle);
        var selectdRegionStyle = getDefaultSelectedRegionStyle();
        if (options.selectdRegionStyle) {
            selectdRegionStyle = options.selectdRegionStyle;
        }
        _olDebug2.default.supermap.VectorTileStyles.setSelectedRegionStyle(selectdRegionStyle);
        var selectdTextStyle = getDefaultSelectedTextStyle();
        if (options.selectdTextStyle) {
            selectdTextStyle = options.selectdTextStyle;
        }
        _olDebug2.default.supermap.VectorTileStyles.setSelectedTextStyle(selectdTextStyle);
        var layersXHR = new XMLHttpRequest();
        layersXHR.onreadystatechange = function () {
            if (layersXHR.readyState == 4) {
                var result = JSON.parse(layersXHR.responseText);
                var layersInfo = {};
                for (var i = 0, len = result.length; i < len; i++) {
                    var layers = result[i].subLayers.layers;
                    for (var j = 0, len1 = layers.length; j < len1; j++) {
                        layers[j].layerIndex = len1 - j;
                        layersInfo[layers[j].name] = layers[j];
                    }
                }
                _olDebug2.default.supermap.VectorTileStyles.setLayersInfo(layersInfo);
                if (!_olDebug2.default.supermap.VectorTileStyles.getDonotNeedServerCartoCss()) {
                    var vectorStylesXHR = new XMLHttpRequest();
                    vectorStylesXHR.open("GET", _olDebug2.default.supermap.VectorTileStyles.getUrl() + "/tileFeature/vectorstyles.json", false);
                    vectorStylesXHR.onreadystatechange = function () {
                        if (vectorStylesXHR.readyState == 4) {
                            var vectorStyles = new _SuperMap2.default.Format.JSON().read(vectorStylesXHR.responseText);
                            var cartoCss;
                            if (vectorStyles.style && vectorStyles.type === 'cartoCSS') {
                                cartoCss = vectorStyles.style;
                                cartoCss = cartoCss.replace(/[@]/gi, "___");
                                cartoCss = cartoCss.replace(/\\#/gi, "___");
                                //替换一些关键符号
                                for (var attr in layersInfo) {
                                    var newAttr = attr.replace(/[@#\s]/gi, "___");
                                    cartoCss = cartoCss.replace(attr.replace(/[#]/gi, "\\#"), newAttr);
                                }
                                cartoCss = cartoCss.replace(/[#]/gi, "\n#");
                                //将zoom转化为scale，以免引起混淆
                                cartoCss = cartoCss.replace(/\[zoom/gi, "[scale");
                            }
                            var cartoShadersArray = new _SuperMap2.default.CartoCSS(cartoCss).getShaders();
                            var cartoShaders = {};
                            cartoShadersArray.map(function (cartoShader) {
                                cartoShaders[cartoShader.elements[0].clean] = cartoShaders[cartoShader.elements[0].clean] || {};
                                cartoShaders[cartoShader.elements[0].clean][cartoShader.attachment] = cartoShaders[cartoShader.elements[0].clean][cartoShader.attachment] || [];
                                cartoShaders[cartoShader.elements[0].clean][cartoShader.attachment].push(cartoShader);
                            });
                            _olDebug2.default.supermap.VectorTileStyles.setCartoShaders(cartoShaders);
                        }
                    };
                    vectorStylesXHR.send(null);
                }
                if (_olDebug2.default.supermap.VectorTileStyles.getCartoCss()) {
                    var clientCartoShadersArray = new _SuperMap2.default.CartoCSS(_olDebug2.default.supermap.VectorTileStyles.getCartoCss()).getShaders();
                    var clientCartoShaders = {};
                    clientCartoShadersArray.map(function (cartoShader) {
                        clientCartoShaders[cartoShader.elements[0].clean] = clientCartoShaders[cartoShader.elements[0].clean] || {};
                        clientCartoShaders[cartoShader.elements[0].clean][cartoShader.attachment] = clientCartoShaders[cartoShader.elements[0].clean][cartoShader.attachment] || [];
                        clientCartoShaders[cartoShader.elements[0].clean][cartoShader.attachment].push(cartoShader);
                    });
                    _olDebug2.default.supermap.VectorTileStyles.setClientCartoShaders(clientCartoShaders);
                }
            }
        };
        layersXHR.open("GET", _olDebug2.default.supermap.VectorTileStyles.getUrl() + '/layers.json', false);
        layersXHR.send(null);
        _this.on('featureSelected', function (e) {
            _olDebug2.default.supermap.VectorTileStyles.setSelectedId(e.element.selectedId);
            _olDebug2.default.supermap.VectorTileStyles.setLayerName(e.element.layerName);
        });

        function getDefaultSelectedPointStyle() {
            return new _olDebug2.default.style.Style({
                image: new _olDebug2.default.style.Circle({
                    radius: 5,
                    fill: new _olDebug2.default.style.Fill({
                        color: 'blue'
                    })
                })
            });
        }

        function getDefaultSelectedLineStyle() {
            return new _olDebug2.default.style.Style({
                stroke: new _olDebug2.default.style.Stroke({
                    color: 'blue',
                    width: 3
                })
            });
        }

        function getDefaultSelectedRegionStyle() {
            return new _olDebug2.default.style.Style({
                fill: new _olDebug2.default.style.Fill({
                    color: [0, 0, 255, 0.5]
                }),
                stroke: new _olDebug2.default.style.Stroke({
                    color: 'blue',
                    width: 3
                })
            });
        }

        function getDefaultSelectedTextStyle() {
            return new _olDebug2.default.style.Style({
                text: new _olDebug2.default.style.Text({
                    font: '15px 微软雅黑',
                    fill: new _olDebug2.default.style.Fill({
                        color: 'blue'
                    }),
                    stroke: new _olDebug2.default.style.Stroke({
                        color: 'white',
                        width: 1
                    })
                })
            });
        }
        return _this;
    }

    _createClass(VectorTileStyles, [{
        key: 'getFeatureStyle',
        value: function getFeatureStyle(feature) {
            var selectedStyle;
            var layerName = feature.getProperties().layerName || feature.getProperties().layer;
            var id = feature.getProperties().id || feature.id_;
            if (feature.getProperties().type && feature.getProperties().type.toUpperCase() === 'TEXT') {
                selectedStyle = _olDebug2.default.supermap.VectorTileStyles.getSelectedStyle(feature.getProperties().type.toUpperCase());
                selectedStyle.getText().text_ = feature.getProperties().texts[0];
            } else {
                selectedStyle = _olDebug2.default.supermap.VectorTileStyles.getSelectedStyle(feature.getGeometry().getType().toUpperCase());
            }
            if (selectedStyle) {
                var selectedLayerName = _olDebug2.default.supermap.VectorTileStyles.getLayerName();
                var selectedId = _olDebug2.default.supermap.VectorTileStyles.getSelectedId();
                if (selectedLayerName === layerName && id === selectedId) {
                    return selectedStyle;
                }
            }
            return _olDebug2.default.supermap.VectorTileStyles.getStyle(layerName, feature);
        }
    }], [{
        key: 'setCartoShaders',
        value: function setCartoShaders(cartoShaders) {
            this.cartoShaders = cartoShaders;
        }
    }, {
        key: 'getCartoShaders',
        value: function getCartoShaders() {
            return this.cartoShaders;
        }
    }, {
        key: 'setClientCartoShaders',
        value: function setClientCartoShaders(clientCartoShaders) {
            this.clientCartoShaders = clientCartoShaders;
        }
    }, {
        key: 'getClientCartoShaders',
        value: function getClientCartoShaders() {
            return this.clientCartoShaders;
        }
    }, {
        key: 'setCartoCss',
        value: function setCartoCss(cartoCss) {
            this.cartoCss = cartoCss;
        }
    }, {
        key: 'getCartoCss',
        value: function getCartoCss() {
            return this.cartoCss;
        }
    }, {
        key: 'setDonotNeedServerCartoCss',
        value: function setDonotNeedServerCartoCss(donotNeedServerCartoCss) {
            this.donotNeedServerCartoCss = donotNeedServerCartoCss;
        }
    }, {
        key: 'getDonotNeedServerCartoCss',
        value: function getDonotNeedServerCartoCss() {
            return this.donotNeedServerCartoCss;
        }
    }, {
        key: 'setLayersInfo',
        value: function setLayersInfo(layersInfo) {
            this.layersInfo = layersInfo;
        }
    }, {
        key: 'getLayersInfo',
        value: function getLayersInfo() {
            return this.layersInfo;
        }
    }, {
        key: 'setUrl',
        value: function setUrl(url) {
            this.url = url;
        }
    }, {
        key: 'getUrl',
        value: function getUrl() {
            return this.url;
        }
    }, {
        key: 'setView',
        value: function setView(view) {
            this.view = view;
        }
    }, {
        key: 'getView',
        value: function getView() {
            return this.view;
        }
    }, {
        key: 'setSelectedId',
        value: function setSelectedId(selectedId) {
            this.selectedId = selectedId;
        }
    }, {
        key: 'getSelectedId',
        value: function getSelectedId() {
            return this.selectedId;
        }
    }, {
        key: 'setLayerName',
        value: function setLayerName(layerName) {
            this.layerName = layerName;
        }
    }, {
        key: 'getLayerName',
        value: function getLayerName() {
            return this.layerName;
        }
    }, {
        key: 'setSelectedPointStyle',
        value: function setSelectedPointStyle(selectedPointStyle) {
            this.selectedPointStyle = selectedPointStyle;
        }
    }, {
        key: 'setSelectedLineStyle',
        value: function setSelectedLineStyle(selectedLineStyle) {
            this.selectedLineStyle = selectedLineStyle;
        }
    }, {
        key: 'setSelectedRegionStyle',
        value: function setSelectedRegionStyle(selectedRegionStyle) {
            this.selectedRegionStyle = selectedRegionStyle;
        }
    }, {
        key: 'setSelectedTextStyle',
        value: function setSelectedTextStyle(selectedTextStyle) {
            this.selectedTextStyle = selectedTextStyle;
        }
    }, {
        key: 'getSelectedStyle',
        value: function getSelectedStyle(type) {
            if (type === 'POINT' || type === 'MULTIPOINT') {
                return this.selectedPointStyle;
            }
            if (type === 'LINESTRING' || type === 'MULTILINESTRING') {
                return this.selectedLineStyle;
            }
            if (type === 'POLYGON' || type === 'MULTIPOLYGON') {
                return this.selectedRegionStyle;
            }
            if (type === 'TEXT') {
                return this.selectedTextStyle;
            }
        }
    }, {
        key: 'getLayerInfo',
        value: function getLayerInfo(layerName) {
            var layersInfo = _olDebug2.default.supermap.VectorTileStyles.getLayersInfo();
            if (layersInfo === undefined) {
                return null;
            }
            var layerInfo = layersInfo[layerName];
            if (!layerInfo) return null;
            var layerInfo_simple = { layerIndex: layerInfo.layerIndex, ugcLayerType: layerInfo.ugcLayerType };
            switch (layerInfo.ugcLayerType) {
                case "VECTOR":
                    layerInfo_simple.layerStyle = layerInfo.style ? layerInfo.style : null;
                    break;
                case "THEME":
                    var theme = layerInfo.theme;
                    layerInfo_simple.layerStyle = theme ? theme.defaultStyle : null;
                    if (theme && theme.type === "LABEL") {
                        layerInfo_simple.type = theme.type;
                        layerInfo_simple.textField = theme.labelExpression;
                    }
                    break;
                default:
                    //SVTile发布出来的地图没有ugcLayerType属性
                    if (layerInfo.style) {
                        layerInfo_simple.layerStyle = layerInfo.style;
                    }
                    break;
            }
            return layerInfo_simple;
        }
    }, {
        key: 'getStyle',
        value: function getStyle(originalLayerName, feature) {
            var url = _olDebug2.default.supermap.VectorTileStyles.getUrl(),
                view = _olDebug2.default.supermap.VectorTileStyles.getView(),
                zoom = view.getZoom(),
                dpi = 96,
                scale = _olDebug2.default.supermap.Util.resolutionToScale(view.getResolution(), dpi, _SuperMap2.default.Unit.METER),
                layerName = originalLayerName.replace(/(@)/gi, '___').replace(/(#)/gi, '___');
            // feature对象样式的配置遵循以下优先级：
            // 客户端CartoCSS > 服务器端CartoCSS > 服务器端layer样式 > 客户端默认样式。
            if (_olDebug2.default.supermap.VectorTileStyles.getCartoCss() && _olDebug2.default.supermap.VectorTileStyles.getClientCartoShaders()[layerName]) {
                return getStyleArray(_olDebug2.default.supermap.VectorTileStyles.getClientCartoShaders()[layerName]);
            }
            var layerInfo = _olDebug2.default.supermap.VectorTileStyles.getLayerInfo(originalLayerName);
            if (!_olDebug2.default.supermap.VectorTileStyles.getDonotNeedServerCartoCss() && _olDebug2.default.supermap.VectorTileStyles.getCartoShaders()[layerName]) {
                //如果是文本，这里特殊处理。
                if (feature.getProperties().textStyle || feature.getProperties().TEXT_FEATURE_CONTENT || layerInfo.type == 'LABEL' && layerInfo.textField) {
                    return _StyleUtils2.default.getValidStyleFromLayerInfo(layerInfo, feature, url);
                }
                return getStyleArray(_olDebug2.default.supermap.VectorTileStyles.getCartoShaders()[layerName]);
            }
            if (layerInfo) {
                return _StyleUtils2.default.getValidStyleFromLayerInfo(layerInfo, feature, url);
            }

            function getStyleArray(shaderAttachment) {
                var styleArray = [];
                for (var j in shaderAttachment) {
                    shaderAttachment[j].map(function (shader) {
                        styleArray.push(_StyleUtils2.default.getStyleFromCarto(zoom, scale, shader, feature, true, url));
                    });
                }
                return styleArray;
            }
        }
    }]);

    return VectorTileStyles;
}(_olDebug2.default.Observable);

exports.default = VectorTileStyles;


_olDebug2.default.supermap.VectorTileStyles = VectorTileStyles;

/***/ }),
/* 281 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 282 */
/***/ (function(module, exports) {

eval(function(p,a,c,k,e,d){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)d[e(c)]=k[c]||e(c);k=[function(e){return d[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('1G.A={b6:"b5 7.1.0",5T:(U(){B f=18 b4("(^|(.*?\\\\/))(A.b3.b2)(\\\\?|$)"),e=1d.b1("4P"),g,b,c="";15(B d=0,a=e.V;d<a;d++){g=e[d].b0("1F");C(g){B b=g.1W(f);C(b){c=b[1];1t}}}T(U(){T c})})()};A.6j=A.6j||{};A.L=A.L||{};A.6i=A.6i||{};A.6h=A.6h||{};A.6g=A.6g||{};A.6f=A.6f||{};A.6e=A.6e||{};A.6d=A.6d||{};A.aZ=U(){B a=1y.V;B d=1y[0];B c=1y[a-1];B e=1h c.4q==="U"?c.4q:U(){d.1O.4q.6c(1c,1y)};C(a>1){B b=[e,d].4C(1A.1O.3M.6a(1y).3M(1,a-1),c);A.6b.6c(11,b)}X{e.1O=c}T e};A.6b=U(f,d){B c=U(){};c.1O=d.1O;f.1O=18 c;B b,a,e;15(b=2,a=1y.V;b<a;b++){e=1y[b];C(1h e==="U"){e=e.1O}A.L.3w(f.1O,e)}};A.L=A.L||{};A.L.3w=U(a,e){a=a||{};C(e){15(B d 1i e){B c=e[d];C(c!==1k){a[d]=c}}B b=1h 1G.2w==="U"&&e 1K 1G.2w;C(!b&&e.1E&&e.1E("1B")){a.1B=e.1B}}T a};A.L.4G=U(c,b){c=c||{};B a;C(b){15(B d 1i c){a=b[d];C(1h a!=="1k"){c[d]=a}}}};A.L.aY=U(c){c=c||{};15(B b 1i c){C(c.1E(b)){C(1h c[b]==="27"&&c[b]1K 1A){15(B a 1i c[b]){C(c[b][a].3z){c[b][a].3z()}}c[b].V=0}X{C(1h c[b]==="27"&&c[b]1K 3L){C(c[b].3z){c[b].3z()}}}c[b]=11}}};A.L.aX=U(){B d=[];15(B c=0,a=1y.V;c<a;c++){B b=1y[c];C(1h b==="3Q"){b=1d.aW(b)}C(1y.V===1){T b}d.1b(b)}T d};A.L.aV=U(a){T!!(a&&a.aU===1)};A.L.62=U(b){T(3L.1O.1B.6a(b)==="[27 1A]")};A.L.aT=U(c,b){15(B a=c.V-1;a>=0;a--){C(c[a]===b){c.aS(a,1)}}T c};A.L.19=U(d,c){C(d==11){T-1}X{C(1h d.19==="U"){T d.19(c)}X{15(B b=0,a=d.V;b<a;b++){C(d[b]===c){T b}}T-1}}};A.L.2W=U(e,h,d,f,a,c,g,b){C(h){e.1p=h}C(d){e.Z.1n=d.x+"2e";e.Z.1m=d.y+"2e"}C(f){e.Z.2h=f.w+"2e";e.Z.2x=f.h+"2e"}C(a){e.Z.23=a}C(c){e.Z.aR=c}C(g){e.Z.2L=g}C(1z(b)>=0&&1z(b)<1){e.Z.2V="4o(1Z="+(b*2s)+")";e.Z.1Z=b}X{C(1z(b)===1){e.Z.2V="";e.Z.1Z=""}}};A.L.5X=U(a,i,h,f,e,c,b,g){B d=1d.1N("2M");C(f){d.Z.aQ="1j("+f+")"}C(!a){a=A.L.4i("69")}C(!e){e="2t"}A.L.2W(d,a,i,h,e,c,b,g);T d};A.L.5W=U(a,h,g,e,d,c,f,i){B b=1d.1N("aP");C(!a){a=A.L.4i("69")}C(!d){d="4u"}A.L.2W(b,a,h,g,d,c,11,f);C(i){b.Z.22="5Y";A.2w.68(b,"aO",A.2o.2n(A.L.67,b));A.2w.68(b,"aN",A.2o.2n(A.L.64,b))}b.Z.aM=a;b.aL="aK";C(e){b.1F=e}T b};A.L.67=U(){C(!1c.4p||(1c.65&&1c.4p===1c.65.4p)){1c.Z.22=""}A.2O.aJ(1c,"61")};A.63=0;A.L.64=U(){1c.3y=(1c.3y)?(1c.3y+1):1;C(1c.3y<=A.63){B d=1c.aI;C(d&&A.L.62(d)&&d.V>1){B e=1c.1F.1B();B c,a;15(a=0;c=d[a];a++){C(e.19(c)!==-1){1t}}B f=13.2E(d.V*13.3U());B b=d[f];a=0;1L(b===c&&a++<4){f=13.2E(d.V*13.3U());b=d[f]}1c.1F=e.1H(c,b)}X{1c.1F=1c.1F}}X{A.2O.aH(1c,"61")}1c.Z.22=""};A.L.3x=11;A.L.5Z=U(){C(A.L.3x==11){B d=32.aG.1X("aF");B a=1z(d[1]);B b=1f;2C{b=!!(1d.1s.aE)}2B(c){}A.L.3x=(b&&(a>=5.5)&&(a<7))}T A.L.3x};A.L.5V=U(a,b,k,j,g,f,c,d,h,i){A.L.2W(a,b,k,j,f,11,11,h);B e=a.2N[0];C(g){e.1F=g}C(!!i){e.Z.22=i}A.L.2W(e,a.1p+"aD",11,j,f,c);C(A.L.5Z()){C(a.Z.22!=="5Y"){a.Z.22="4s-3A"}C(d==11){d="aC"}a.Z.2V="aB:aA.az.ay(1F=\'"+e.1F+"\', ax=\'"+d+"\')";C(1z(a.Z.1Z)>=0&&1z(a.Z.1Z)<1){a.Z.2V+=" 4o(1Z="+a.Z.1Z*2s+")"}e.Z.2V="4o(1Z=0)"}};A.L.aw=U(b,j,i,g,f,c,d,h,k){B a=A.L.5X();B e=A.L.5W(11,11,11,11,f,11,11,k);e.55="av";a.1P(e);A.L.5V(a,b,j,i,g,f,c,d,h,"3A");T a};A.L.au=U(b){B a={};15(B c 1i b){a[c.at()]=b[c]}T a};A.L.5k=U(d,c){d=d||{};B b=1h 1G.2w==="U"&&c 1K 1G.2w;15(B a 1i c){C(d[a]===1k||(!b&&c.1E&&c.1E(a)&&!d.1E(a))){d[a]=c[a]}}C(!b&&c&&c.1E&&c.1E("1B")&&!d.1E("1B")){d.1B=c.1B}T d};A.L.4U=U(c){B b=[];15(B h 1i c){B g=c[h];C((g!=11)&&(1h g!=="U")){B d;C(1h g==="27"&&g.4V===1A){B e=[];B i;15(B a=0,f=g.V;a<f;a++){i=g[a];e.1b(2a((i===11||i===1k)?"":i))}d=e.2r(",")}X{d=2a(g)}b.1b(2a(h)+"="+d)}}T b.2r("&")};A.L.as=U(a,b){B d=a;C(b){B c=(a+" ").1X(/[?&]/);d+=(c.5j()===" "?b:c.V?"&"+b:"?"+b)}T d};A.5U="";A.L.ar=U(){T A.5U||(A.5T()+"../aq/ap/")};A.L.5S=U(){B d=11;15(B c=0,a=1y.V;c<a;c++){B b=1y[c];2C{d=b();1t}2B(f){}}T d};A.L.ao=U(a){B b=11;A.L.5S(U(){b=a.4N;C(!b){b=a.5R}C(!b){b=a.an.am}},U(){b=a.5R});T b};A.L.al=U(a,c){B b=(a.5Q)?a.5Q:a.ak;1L(b!==c&&b!=11){b=b.31}T(b!==c)};A.L.5P=14;A.L.aj=U(b,a){C(a==11){a=A.L.5P}C(1h b!=="ai"){b=1z(b)}T a===0?b:1z(b.ah(a))};A.L.2v=U(a){T a*13.2c/44};A.L.4j=U(a){T a*44/13.2c};A.L.4n={a:3k,b:ag.af,f:1/ae.ad};A.L.ac=U(g,e){B k=A.L.4n;B M=k.a,K=k.b,G=k.f;B n=A.L.2v(e.3q-g.3q);B J=13.5O((1-G)*13.4l(A.L.2v(g.4m)));B I=13.5O((1-G)*13.4l(A.L.2v(e.4m)));B m=13.2u(J),i=13.1Y(J);B l=13.2u(I),h=13.1Y(I);B r=n,o=2*13.2c;B q=20;1L(13.43(r-o)>1e-12&&--q>0){B z=13.2u(r),c=13.1Y(r);B N=13.4k((h*z)*(h*z)+(i*l-m*h*c)*(i*l-m*h*c));C(N==0){T 0}B E=m*l+i*h*c;B y=13.2U(N,E);B j=13.ab(i*h*z/N);B F=13.1Y(j)*13.1Y(j);B p=E-2*m*l/F;B v=G/16*F*(4+G*(4-3*F));o=r;r=n+(1-v)*G*13.2u(j)*(y+v*N*(p+v*E*(-1+2*p*p)))}C(q==0){T aa}B u=F*(M*M-K*K)/(K*K);B x=1+u/5N*(5M+u*(-5L+u*(5K-5J*u)));B w=u/5I*(5H+u*(-3Y+u*(74-47*u)));B D=w*N*(p+w/4*(E*(-1+2*p*p)-w/6*p*(-3+4*N*N)*(-3+4*p*p)));B t=K*x*(y-D);B H=t.a9(3)/2D;T H};A.L.a8=U(l,P,E){B o=A.L;B i=o.4n;B Q=i.a,O=i.b,J=i.f;B N=l.3q;B g=l.4m;B q=E;B D=o.2v(P);B G=13.2u(D);B h=13.1Y(D);B F=(1-J)*13.4l(o.2v(g));B c=1/13.4k((1+F*F)),j=F*c;B p=13.2U(F,h);B y=c*G;B I=1-y*y;B t=I*(Q*Q-O*O)/(O*O);B x=1+t/5N*(5M+t*(-5L+t*(5K-5J*t)));B v=t/5I*(5H+t*(-3Y+t*(74-47*t)));B w=q/(O*x),K=2*13.2c;1L(13.43(w-K)>1e-12){B m=13.1Y(2*p+w);B R=13.2u(w);B H=13.1Y(w);B z=v*R*(m+v/4*(H*(-1+2*m*m)-v/6*m*(-3+4*R*R)*(-3+4*m*m)));K=w;w=q/(O*x)+z}B M=j*R-c*H*h;B d=13.2U(j*H+c*R*h,(1-J)*13.4k(y*y+M*M));B n=13.2U(R*G,c*H-j*R*h);B r=J/16*I*(4+J*(4-3*I));B k=n-(1-r)*J*y*(w+r*R*(m+r*H*(-1+2*m*m)));B e=13.2U(y,-M);T 18 A.a7(N+o.4j(k),o.4j(d))};A.L.5d=U(b){b=(b===11||b===1k)?1G.3m.5h:b;B a="";C(A.2J.2i(b,"?")){B c=b.19("?")+1;B f=A.2J.2i(b,"#")?b.19("#"):b.V;a=b.1r(c,f)}B m={};B d=a.1X(/[&;]/);15(B h=0,j=d.V;h<j;++h){B g=d[h].1X("=");C(g[0]){B l=g[0];2C{l=3T(l)}2B(e){l=5G(l)}B k=(g[1]||"").1H(/\\+/g," ");2C{k=3T(k)}2B(e){k=5G(k)}k=k.1X(",");C(k.V==1){k=k[0]}m[l]=k}}T m};A.L.4h=0;A.L.4i=U(a){C(a==11){a="a6"}A.L.4h+=1;T a+A.L.4h};A.17={2K:1,3o:12,42:a5,m:39.a4,41:a3.1,2q:a2,3n:36};A.17["1i"]=A.17.2K;A.17.2d=A.17.2q;A.17.5B=5E*A.17.m;A.Y=0.a1;A.L.3w(A.17,{a0:A.17.2K,2T:1/A.Y,5x:0.9Z/A.Y,9Y:0.9X/A.Y,9W:0.9V/A.Y,9U:0.9T/A.Y,9S:0.9R/A.Y,9Q:0.2b/A.Y,9P:0.9O/A.Y,9N:2.9M-8/A.Y,9L:0.9K/A.Y,9J:2D/A.Y,5w:0.9I/A.Y,9H:0.9G/A.Y,9F:0.9E/A.Y,5t:0.9D/A.Y,9C:0.9B/A.Y,9A:0.9z/A.Y,9y:0.9x/A.Y,5s:0.9w/A.Y,9v:0.9u/A.Y,9t:0.9s/A.Y,5u:5F.9r/A.Y,9q:0.9p/A.Y,9o:5F.9n/A.Y,5C:5E/A.Y,"5D-66":9m.9l/A.Y,"5D-83":9k.9j/A.Y,9i:0.1/A.Y,9h:0.9g/A.Y,9f:10/A.Y,9e:10/A.Y,9d:2s/A.Y,9c:1.9b/A.Y,9a:0.99/A.Y,98:20.97/A.Y,5v:20.95/A.Y,94:20.93/A.Y,92:20.91/A.Y,90:0.8Z/A.Y,8Y:0.8X/A.Y,8W:0.8V/A.Y,8U:0.8T/A.Y,8S:5.4g/A.Y,5z:20.8R/A.Y,5y:0.8Q/A.Y,8P:5.4g/A.Y,8O:5.4g/A.Y,8N:8M.8L/A.Y,8K:3.8J/A.Y,8I:0.8H/A.Y,8G:8F/A.Y,8E:0.8D/A.Y,5A:1.8C/A.Y,"5C-8B":8A.8z/A.Y,"8y":8x/A.Y,"8w":8v/A.Y});A.L.3w(A.17,{8u:A.17.2T/2D,8t:A.17.2T/2s,4Z:A.17.2T*2s,41:A.17.2T*2D,8s:A.17.5B,8r:A.17.5A,4e:A.17.5z,8q:A.17.5y,"2S-1i":A.17.2K,"2S-3o":A.17.5x,"2S-3n":A.17.5w,"2S-4e":A.17.5v,"2S-42":A.17.5u,"4f-3n":A.17.5t,"4f-3o":A.17.5s,"4f-4e":20.8p/A.Y});A.4d=96;A.L.40=U(b){B a=(b>1)?(1/b):b;T a};A.L.8o=U(d,a){B b;C(d){C(a==11){a="2d"}B c=A.L.40(d);b=1/(c*A.17[a]*A.4d)}T b};A.L.8n=U(b,a){C(a==11){a="2d"}B c=b*A.17[a]*A.4d;T c};A.L.8m=U(d){B i=[0,0];B h=A.L.5l();C(!d||d===1G||d===h){T i}B f=A.5c&&1d.3v&&A.2O.46(d,"23")==="2t"&&(d.Z.1m==""||d.Z.1n=="");B j=11;B g;C(d.5r){g=d.5r();B b=h.5m;B c=h.5n;i[0]=g.1n+c;i[1]=g.1m+b}X{C(1d.3v&&!f){g=1d.3v(d);B a=1d.3v(h);i[0]=g.5q-a.5q;i[1]=g.5p-a.5p}X{i[0]=d.5o;i[1]=d.4c;j=d.3u;C(j!==d){1L(j){i[0]+=j.5o;i[1]+=j.4c;j=j.3u}}B e=A.3t.2f;C(e==="2Q"||(e==="3r"&&A.2O.46(d,"23")==="2t")){i[1]-=1d.1s.4c}j=d.3u;1L(j&&j!==1d.1s){i[0]-=j.5n;C(e!=="2Q"||j.56!=="8l"){i[1]-=j.5m}j=j.3u}}}T i};A.L.5l=U(){B a=1y.8k.8j;C(a==1k){a=(A.3t.2f==="2P"&&1d.8i!=="8h")?1d.1s:1d.8g}T a};A.L.8f=U(f,e,c){c=c||{};A.L.5k(c,{5i:1g,5f:1g,5e:1g});B b=A.L.4b(f,c);B a=A.L.4b(e,c);15(B d 1i b){C(d!=="2g"){C(b[d]!==a[d]){T 1f}}}15(B d 1i b.2g){C(b.2g[d]!==a.2g[d]){T 1f}30 a.2g[d]}15(B d 1i a.2g){T 1f}T 1g};A.L.4b=U(c,k){k=k||{};C(!(/^\\w+:\\/\\//).8e(c)){B g=1G.3m;B e=g.1I?":"+g.1I:"";B h=g.3l+"//"+g.4a.1X(":").5g()+e;C(c.19("/")===0){c=h+c}X{B f=g.2R.1X("/");f.5j();c=h+f.2r("/")+"/"+c}}C(k.5i){c=c.1o()}B i=1d.1N("a");i.5h=c;B d={};d.4a=i.4a.1X(":").5g();d.3l=i.3l;C(k.5f){d.1I=(i.1I==="80"||i.1I=="0")?"":i.1I}X{d.1I=(i.1I==""||i.1I=="0")?"80":i.1I}d.49=(k.5e||i.49==="#")?"":i.49;B b=i.8d;C(!b){B j=c.19("?");b=(j!==-1)?c.2I(j):""}d.2g=A.L.5d(b);d.2R=(i.2R.8c(0)==="/")?i.2R:"/"+i.2R;T d};A.L.8b=U(b){B c=11;B a=b.19("?");B d=b.19("#");C(a==-1){c=(d!==-1)?b.2I(0,d):b}X{c=(d!==-1)?b.2I(0,13.3J(a,d)):b.2I(0,a)}T c};A.5c=(U(){B a=32.3S.1o();T a.19("8a")===-1&&a.19("89")!==-1})();A.3t=(U(){B c="",a="",e="88",b;B d=32.3S.1o();C(d.19("2P")>-1||(d.19("87")>-1&&d.19("5b")>-1)){c="2P";b=d.1W(/2P ([\\d.]+)/)||d.1W(/5b:([\\d.]+)/)}X{C(d.19("48")>-1){c="48";b=d.1W(/48\\/([\\d.]+)/)}X{C(d.19("3s")>-1){c="3s";b=d.1W(/3s\\/([\\d.]+)/)}X{C(d.19("2Q")>-1){c="2Q";b=d.1W(/1V\\/([\\d.]+)/)}X{C(d.19("3r")>-1){c="3r";b=d.1W(/1V\\/([\\d.]+)/)}}}}}a=b?b[1]:"";C(d.19("86")>-1||d.19("85")>-1||d.19("84")>-1){e="82"}X{C(d.19("5a")>-1){b=d.1W(/1V\\/([\\d.]+)/);a=b?b[1]:"";e="5a"}}T{2f:c,1V:a,81:e}})();A.L.59=U(){T A.3t};A.L.58=(U(){B a=1g,b=A.L.59();C(1d.1N("7Z").7Y){C(b.2f==="3s"&&1z(b.1V)<5){a=1f}C(b.2f==="3r"&&1z(b.1V)<4){a=1f}C(b.2f==="2Q"&&1z(b.1V)<10){a=1f}C(b.2f==="2P"&&1z(b.1V)<9){a=1f}}X{a=1f}T a})();A.L.7X=U(){T A.L.58};A.L.7W=U(b,o,p){B m,e;B a=1d.1N("2M");a.Z.4t="3B";B n=(p&&p.57)?p.57:1d.1s;B q=1f;B g=11;B k=n;1L(k&&k.56.1o()!=="1s"){B j=A.2O.46(k,"23");C(j==="2t"){q=1g;1t}X{C(j&&j!=="7V"){1t}}k=k.31}C(!q){a.Z.23="2t"}C(o){C(o.w){m=o.w;a.Z.2h=m+"2e"}X{C(o.h){e=o.h;a.Z.2x=e+"2e"}}}C(p&&p.54){a.55=p.54}B f=1d.1N("2M");f.4r=b;f.Z.2L="53";C(f.2N){15(B d=0,c=f.2N.V;d<c;d++){C(!f.2N[d].Z){2Y}f.2N[d].Z.2L="53"}}a.1P(f);n.1P(a);n.1P(a);C(!m){m=52(f.7U);a.Z.2h=m+"2e"}C(!e){e=52(f.7T)}a.21(f);n.21(a);T 18 A.7S(m,e)};A.L.7R=U(){B c=A.L.45;C(c==11){B e=11;B d=11;B a=0;B b=0;e=1d.1N("2M");e.Z.23="2t";e.Z.1m="-51";e.Z.1n="-51";e.Z.2h="7Q";e.Z.2x="7P";e.Z.2L="3B";d=1d.1N("2M");d.Z.2h="2s%";d.Z.2x="7O";e.1P(d);1d.1s.1P(e);a=d.50;e.Z.2L="7N";b=d.50;1d.1s.21(1d.1s.7M);A.L.45=(a-b);c=A.L.45}T c};A.L.7L=U(h,b,e){C(!e){e="4Y"}h=(h+7K)%3i-44;B d=13.43(h);B i=13.2E(d);B a=(d-i)/(1/60);B c=a;a=13.2E(a);B g=(c-a)/(1/60);g=13.7J(g*10);g/=10;C(g>=60){g-=60;a+=1;C(a>=60){a-=60;i+=1}}C(i<10){i="0"+i}B f=i+"\\7I";C(e.19("4Z")>=0){C(a<10){a="0"+a}f+=a+"\'";C(e.19("4Y")>=0){C(g<10){g="0"+g}f+=g+\'"\'}}C(b==="3q"){f+=h<0?A.3p("W"):A.3p("E")}X{f+=h<0?A.3p("S"):A.3p("N")}T f};A.17.3j=A.17.2q;A.17.7H=A.17.m;A.17.7G=A.17.3o;A.17.7F=A.17.2K;A.17.7E=A.17.42;A.17.7D=A.17.41;A.17.7C=A.17.3n;A.L.2H=U(a){C(!a){T 1g}B i=a.19("//");B m=1d.3m.1B();B c=m.19("//");C(i===-1){T 1g}X{B n;B h=n=a.1r(0,i);B j=m.1r(c+2);c=j.19("/");B f=j.19(":");B l=j.1r(0,c);B b;B o=1d.3m.3l;C(f!==-1){b=+j.1r(f,c)}X{l+=":"+(o.1o()==="4X:"?80:4W)}C(o.1o()!==h.1o()){T 1f}h=a.1r(i+2);B d=h.19(":");i=h.19("/");B k=h.1r(0,i);B e;C(d!==-1){e=h.1r(0,d)}X{e=h.1r(0,i);k+=":"+(n.1o()==="4X:"?80:4W)}B g=1d.7B;C(e===g&&k===l){T 1g}}T 1f};A.L.7A=U(e,f,c,k,n){C(!e||!f||!c){T}B j=3Z,g=e.7z(),d=e.7y(),m=f.w,i=f.h;n=n||3k;k=k||"2d";C(k.1o()==="3j"||k.1o()==="2d"||k.1o()==="2q"){B l=g/m,h=d/i,b=l>h?l:h,a=0.2b*j/b/c/((13.2c*2*n)/3i)/j;T a}X{B b=g/m,a=0.2b*j/b/c/j;T a}};A.L.1U=U(g){B d=g;C(d==11){T 11}3X(d.4V){1x 2J:d=\'"\'+d.1H(/(["\\\\])/g,"\\\\$1")+\'"\';d=d.1H(/\\n/g,"\\\\n");d=d.1H(/\\r/g,"\\\\r");d=d.1H("<","&7x;");d=d.1H(">","&7w;");d=d.1H(/%/g,"%25");d=d.1H(/&/g,"%26");T d;1x 1A:B c=[];15(B f=0,b=d.V;f<b;f++){c.1b(A.L.1U(d[f]))}T"["+c.2r(",")+"]";1x 7v:T 7u(d)?2J(d):11;1x 7t:T 2J(d);1x 2z:B e="{\'7s\':\\"7r.7q\\",\'7p\':"+d.7o()+",\'7n\':"+(d.7m()+1)+",\'7l\':"+d.7k()+",\'7j\':"+d.7i()+",\'7h\':"+d.7g()+",\'7f\':"+d.7e()+",\'7d\':"+d.7c()+",\'7b\':"+d.7a()+"}";T e;79:C(d.1U!=11&&1h d.1U==="U"){T d.1U()}C(1h d==="27"){C(d.V){B c=[];15(B f=0,b=d.V;f<b;f++){c.1b(A.L.1U(d[f]))}T"["+c.2r(",")+"]"}B c=[];15(B a 1i d){C(1h d[a]!=="U"&&a!=="1J"&&a!=="78"){c.1b("\'"+a+"\':"+A.L.1U(d[a]))}}C(c.V>0){T"{"+c.2r(",")+"}"}X{T"{}"}}T d.1B()}};A.L.77=U(f,c,b,e){B a=11,d=3Z;e=e||3k;b=b||"";C(f>0&&c>0){f=A.L.40(f);C(b.1o()==="3j"||b.1o()==="2d"||b.1o()==="2q"){a=0.2b*d/c/f/((13.2c*2*e)/3i)/d;T a}X{a=0.2b*d/c/f/d;T a}}T-1};A.L.76=U(b,c,a,e){B f=11,d=3Z;e=e||3k;a=a||"";C(b>0&&c>0){C(a.1o()==="3j"||a.1o()==="2d"||a.1o()==="2q"){f=0.2b*d/c/b/((13.2c*2*e)/3i)/d;T f}X{f=0.2b*d/c/b/d;T f}}T-1};A.L.4T=U(c){B e=0,b=11;15(B d=0,a=c.V;d<a;d++){b=c.75(d);C(b<73){e++}X{C((3Y<=b)&&(b<=72)){e+=2}X{C((71<=b)&&(b<=70)){e+=3}}}}T(e<6Z)?1f:1g};A.L.6Y=U(k){C(!k){T}B a=k.1j,h=a.19("?")>-1?"&":"?",f=a.2I(a.V-1,1);C(1h 6X==="1k"){k.1j=1G.4S(k.1j);k.2H=k.2H||A.L.2H(k.1j);C(k.2H){C(k.2p==="1S"&&k.1R){B e=k.1R,d=A.L.4U(e);C(A.L.4T(d)){B g=k.28;k.2p="29";k.1j+=h+"3g=1S";g="{";15(B i 1i e){g+="\'"+i+"\':"+2a(e[i])+","}g+="}";k.28=g}X{C(d.V>0){a+=h+d}k.1j=a}30 k.1R}B c=k.3W||{};k.3W=c;3X(k.2p){1x"1S":A.3h.1S(k);1t;1x"29":c["3f-3e"]="3d/x-3c-3b-3a;38=37-8";A.3h.29(k);1t;1x"2l":c["3f-3e"]="3d/x-3c-3b-3a;38=37-8";A.3h.2l(k);1t;1x"2k":c["3f-3e"]="3d/x-3c-3b-3a;38=37-8";A.3h.2k(k);1t}}X{3X(k.2p){1x"1S":A.L.2m.1S(k);1t;1x"29":k.1j+=h+"3g=29";A.L.2m.29(k);1t;1x"2l":k.1j+=h+"3g=2l";A.L.2m.2l(k);1t;1x"2k":k.1j+=h+"3g=2k";A.L.2m.2k(k);1t}}}X{B b="",j=1g;C(k.1R&&k.2p==="1S"){15(B i 1i k.1R){C(!j){b+="&"+i+"="+k.1R[i]}X{j=1f;b+=i+"="+k.1R[i]}}}k.1j=k.1j.1H(/6W/,"6V");C(b){k.1j+=h+b}C(k.3V){k.1j=k.3V+2a(k.1j)}X{k.1j=1G.4S(k.1j)}6U.6T({1j:k.1j,3K:k.2p,28:k.28,3W:{"3f-3e":"3d/x-3c-3b-3a;38=37-8"}}).6S(U(l){B m=(k.1T)?A.2o.2n(k.2G,k.1T):k.2G;m(l)},U(m){B l=(k.1T)?A.2o.2n(k.2F,k.1T):k.2F;l(m)})}};A.L.2m={33:6R,1u:[],1M:[],34:{},2j:U(a){B d=1c;15(B b 1i a){d.1u.1b(b);C(1h a[b]!=="3Q"){a[b]=A.L.1U(a[b])}B c=2a(a[b]);d.1M.1b(c)}},2A:U(e){B m=1c,k=m.4R(),b=e.1j,p=11,d=11,n=[];C(e.2G){p=(e.1T)?A.2o.2n(e.2G,e.1T):e.2G}C(e.2F){d=(e.1T)?A.2o.2n(e.2F,e.1T):e.2F}m.34[k]=U(q){B i=A.L.4J(q);i.35=i.35==1k?1g:i.35;C(i.35&&p){p(q)}X{C(d){d(q)}}30 m.34[k]};m.2j({6Q:"A.L.2m.34["+k+"]"});B j=m.1u,l=b,g=0;B c=m.1u?m.1u.V:0;15(B f=0;f<c;f++){C(l.V+m.1u[f].V+2>=m.33){C(g==0){T 1f}C(n==11){n=18 1A()}n.1b(l);l=b;g=0;f--}X{C(l.V+m.1u[f].V+2+m.1M[f].V>m.33){B a=m.1M[f];1L(a.V>0){B o=m.33-l.V-m.1u[f].V-2;C(l.19("?")>-1){l+="&"}X{l+="?"}B h=a.1r(0,o);C(h.1r(o-1,o)==="%"){o-=1;h=a.1r(0,o)}X{C(h.1r(o-2,o-1)==="%"){o-=2;h=a.1r(0,o)}}l+=m.1u[f]+"="+h;a=a.1r(o);C(h.V>0){C(n==11){n=18 1A()}n.1b(l);l=b;g=0}}}X{g++;C(l.19("?")>-1){l+="&"}X{l+="?"}B h=m.1M[f];l+=m.1u[f]+"="+h}}}C(n==11){n=18 1A()}l!==b&&n.1b(l);m.4Q(n,e&&e.3V)},4R:U(){B a=18 2z().3N(),b=13.2E(13.3U()*6P);T a*2D+b},4Q:U(f,e){B a=f.V;C(a>0){B g=18 2z().3N();15(B d=0;d<a;d++){B b=1d.1N("4P");B c=f[d];C(c.19("?")>-1){c+="&"}X{c+="?"}c+="6O="+a;c+="&6N="+d;c+="&6M="+g;C(e){c=3T(c);c=e+2a(c)}b.4O("1F",c);b.4O("3K","4N/6L");C(32.3S.19("6K")>=0){b.4L=U(){C(1c&&("6J"===1c.4M||"6I"===1c.4M)){1c.4L=11;2C{1d.1s.21(1c)}2B(h){C(1c.31){1c.31.21(1c)}30 1c}}}}X{b.4K=U(){1c.4K=11;1d.1s.21(1c)}}1d.1s.1P(b)}}},1S:U(a){B b=1c;b.1u.V=0;b.1M.V=0;b.2j(a.1R);b.2A(a)},29:U(a){B b=1c;b.1u.V=0;b.1M.V=0;b.2j({3R:a.28});b.2A(a)},2l:U(a){B b=1c;b.1u.V=0;b.1M.V=0;b.2j({3R:a.28});b.2A(a)},2k:U(a){B b=1c;b.1u.V=0;b.1M.V=0;b.2j({3R:a.28});b.2A(a)}};A.L.4J=U(1Q){C(1Q.2Z&&1h 1Q.2Z==="3Q"){C(1h 3P!="1k"&&3P.4I){1Q=3P.4I(1Q.2Z)}X{1Q=6H("("+1Q.2Z+")")}}T 1Q};A.L.6G=U(a,d){a=a||{};C(d){15(B c 1i d){B b=d[c];C(b!==1k&&c!=="1J"&&1h b!=="U"){a[c]=b}}}T a};A.L.6F=U(b,h,d){b=b||{};C(h){15(B g 1i h){B f=1f;C(d&&d.V){15(B c=0,a=d.V;c<a;c++){C(g===d[c]){f=1g;1t}}}C(f===1g){2Y}B e=h[g];C(e!==1k&&g!=="1J"&&1h e!=="U"){b[g]=e}}}T b};A.L.3O=U(b,h){b=b||{};C(h){C(h 1K 1A){b=[];15(B e=0,a=h.V;e<a;e++){B d=h[e];b.1b(A.L.3O({},d))}}X{15(B g 1i h){B f=h[g];C(1h f==="27"){B c={};b[g]=A.L.3O(c,f)}b[g]=f}}}T b};A.L.6E=U(a){A.6D=!!a};A.L.4H=U(b){C(11===b||"27"!==1h b){T b}C(b 1K 2z){B c=18 2z();c.6C(b.3N());T c}C(b 1K 1A){B c=b.3M(0);T c}C(b 1K 3L){B c={};15(B a 1i b){C(b.1E(a)){c[a]=A.L.4H(b[a])}}T c}6B 18 6A("6z 6y 4G 6x! 6w 3K 6v\'t 6u.")};A.L.24=U(d,c,l,i){B o=11;B g;B e;B j=(i.x-l.x)*(d.y-l.y)-(i.y-l.y)*(d.x-l.x);B k=(c.x-d.x)*(d.y-l.y)-(c.y-d.y)*(d.x-l.x);B p=(i.y-l.y)*(c.x-d.x)-(i.x-l.x)*(c.y-d.y);C(p!=0){g=j/p;e=k/p;C(g>=0&&e<=1&&g<=1&&e>=0){o=18 A.1a.1q(d.x+g*(c.x-d.x),d.y+g*(c.y-d.y))}X{o="6t 6s"}}X{C(j==0&&k==0){B f=13.4F(d.y,c.y);B m=13.3J(d.y,c.y);B h=13.4F(d.x,c.x);B n=13.3J(d.x,c.x);C(((l.y>=m&&l.y<=f)||(i.y>=m&&i.y<=f))&&(l.x>=n&&l.x<=h)||(i.x>=n&&i.x<=h)){o="6r"}X{o="4E"}}X{o="4E"}}T o};A.L.4D=U(d,e,h){B c=[];B b=18 A.1a.1q(h.1n,h.1v);B k=18 A.1a.1q(h.1w,h.1m);B g=18 A.1a.1q(h.1w,h.1v);B j=18 A.1a.1q(h.1n,h.1m);B a=[];a.1b(A.L.24(b,g,d,e));a.1b(A.L.24(g,k,d,e));a.1b(A.L.24(k,j,d,e));a.1b(A.L.24(j,b,d,e));B f=0;1L(f<a.V){C(a[f].1J==="A.1a.1q"){c.1b(a[f])}f++}T c};A.L.3H=U(l,j,b,c){b=b!=1k?b:1g;c=c!=1k?c:1f;C(!j.2X(l.1D())){T 11}C(j.2y(l.1D())){T[l]}B n=l.1l;B g=[];15(B e=0;e<n.V-1;e++){B k=18 A.1a.1q(n[e].x,n[e].y);B h=18 A.1a.1q(n[e+1].x,n[e+1].y);B f=A.L.4D(k,h,j);B o;C(f.V===2){C(((f[0].x-k.x)*(f[0].x-k.x)+(f[0].y-k.y)*(f[0].y-k.y))>((f[1].x-k.x)*(f[1].x-k.x)+(f[1].y-k.y)*(f[1].y-k.y))){B m=f[0];f[0]=f[1];f[1]=m}C(b){o=18 A.1a.1C(f);g.1b(o)}X{g.1b(f[0],f[1])}}X{C(f.V===1){C(j.2i(k.x,k.y,1f)){C(b){o=18 A.1a.1C([k,f[0]]);g.1b(o)}X{g.1b(k,f[0])}}X{C(j.2i(h.x,h.y,1f)){C(b){o=18 A.1a.1C([f[0],h]);g.1b(o)}X{g.1b(f[0],h)}}X{}}}X{C(f.V==0){C(j.2i(k.x,k.y)&&j.2i(h.x,h.y)){C(b){o=18 A.1a.1C([k,h]);g.1b(o)}X{g.1b(k,h)}}X{}}}}}C(g.V>0){C(!b){B d=18 A.1a.1C(g);C(c){d.1p=l.1p}T d}X{C(c){g[0].1p=l.1p;C(g.V>1){15(B e=1;e<g.V;e++){g[e].1p=l.1p+"6q"+e}}}}T g}};A.L.4z=U(g,f,a,b){a=a!=1k?a:1g;b=b!=1k?b:1f;C(!f.2X(g.1D())){T 11}C(f.2y(g.1D())){T g}B c=g.1l;B j=[];15(B d=0;d<c.V;d++){B e=A.L.3H(c[d],f,a,b);C(!e){2Y}C(e 1K 1A){j=j.4C(e)}X{j.1b(e)}}C(j.V>0){B h=18 A.1a.3G(j);C(b){h.1p=g.1p;T h}T h}};A.L.4B=U(k,i){B f=18 A.1a.1q(k.1n,k.1v<i.1v?k.1v:i.1v);B b=18 A.1a.1q(k.1n,k.1m>i.1m?k.1m:i.1m);B l=18 A.1a.1C([f,b]);B m=18 A.1a.1q(k.1n<i.1n?k.1n:i.1n,k.1m);B a=18 A.1a.1q(k.1w>i.1w?k.1w:i.1w,k.1m);B g=18 A.1a.1C([m,a]);B n=18 A.1a.1q(k.1w,k.1m>i.1m?k.1m:i.1m);B j=18 A.1a.1q(k.1w,k.1v<i.1v?k.1v:i.1v);B e=18 A.1a.1C([n,j]);B c=18 A.1a.1q(k.1w>i.1w?k.1w:i.1w,k.1v);B h=18 A.1a.1q(k.1n<i.1n?k.1n:i.1n,k.1v);B d=18 A.1a.1C([c,h]);T[l,g,e,d]};A.L.3I=U(a,c,b){C((b==0)&&a.x>=c.1n){T 1g}X{C((b===1)&&a.y<=c.1m){T 1g}X{C((b===2)&&a.x<=c.1w){T 1g}X{C((b===3)&&a.y>=c.1v){T 1g}}}}T 1f};A.L.3F=U(m,a,t){C(!a.2X(m.1D())){T 11}C(a.2y(m.1D())){T m}t=t!=1k?t:1f;B y=[];B z=m.1l;15(B s=0;s<z.V;s++){C(a.2y(z[s].1D())){y.1b(z[s]);2Y}B b=A.L.4B(a,z[s].1D());B w=z[s].1l;B c=[],h=[],g=[];B x=4,f=w.V;B d=w[f-1];15(B q=0;q<f;q++){h.1b(w[q])}B r;15(B q=0;q<x;q++){C(A.L.3I(d,a,q)){r=1f}X{r=1g}B p=h.V;15(B o=0;o<p;o++){C(A.L.3I(h[o],a,q)){C(r){r=1f;c.1b(A.L.24(d,h[o],b[q].1l[0],b[q].1l[1]))}c.1b(h[o])}X{C(!r){r=1g;c.1b(A.L.24(d,h[o],b[q].1l[0],b[q].1l[1]))}}d=h[o]}B u=c.V;h.V=0;15(B n=0;n<u;n++){h.1b(c[n])}c.V=0}15(B q=0;q<h.V;q++){g.1b(h[q])}C(g.V>2){B v=18 A.1a.4A(g);C(t){v.1p=z[s].1p}y.1b(v)}}C(y.V>0){B e=18 A.1a.4y(y);C(t){e.1p=m.1p;T e}T e}};A.L.4w=U(g,f,a){C(!f.2X(g.1D())){T 11}C(f.2y(g.1D())){T g}a=a!=1k?a:1f;B d=[];15(B c=0;c<g.1l.V;c++){B b=A.L.3F(g.1l[c],f,a);C(b){d.1b(b)}}C(d.V>0){B e=18 A.1a.4x(d);C(a){e.1p=g.1p}T e}};A.L.6p=U(e,c,d,b){C(e){d=d!=1k?d:1g;b=b!=1k?b:1f;C(((e.1J==="A.1a.1C")||(e.1J==="A.1a.4A"))&&(e.1l.V>1)){B a=A.L.3H(e,c,d,b);C(a){C(a.V===1){T a[0]}X{T 18 A.1a.3G(a)}}}X{C((e.1J==="A.1a.3G")&&(e.1l.V>0)&&(e.1l[0].1l.V>1)){T A.L.4z(e,c,d,b)}X{C((e.1J==="A.1a.4y")&&(e.1l.V>0)&&(e.1l[0].1l.V>2)){T A.L.3F(e,c,b)}X{C((e.1J==="A.1a.4x")&&(e.1l.V>0)){T A.L.4w(e,c,1g)}X{T e}}}}}};A.L.6o=U(b,e,a){1d.1s.1P(a);a.Z.2h="4v";a.Z.2x="4v";C(b.3E){a.Z.3E=b.3E}C(b.3D){a.Z.3D=b.3D}C(b.3C){a.Z.3C=b.3C}a.Z.23="4u";a.Z.4t="3B";a.Z.22="4s-3A";a.4r=e;B d=a.6n;B c=a.6m;1d.1s.21(a);T{6l:d,6k:c}};',62,689,'||||||||||||||||||||||||||||||||||||SuperMap|var|if|||||||||Util||||||||return|function|length||else|METERS_PER_INCH|style||null||Math||for||INCHES_PER_UNIT|new|indexOf|Geometry|push|this|document||false|true|typeof|in|url|undefined|components|top|left|toLowerCase|id|Point|substring|body|break|queryKeys|bottom|right|case|arguments|parseFloat|Array|toString|LineString|getBounds|hasOwnProperty|src|window|replace|port|CLASS_NAME|instanceof|while|queryValues|createElement|prototype|appendChild|result|params|GET|scope|toJSON|version|match|split|cos|opacity||removeChild|display|position|lineIntersection|||object|data|POST|encodeURIComponent|0254|PI|degrees|px|name|args|width|contains|addQueryStrings|DELETE|PUT|RequestJSONP|bind|Function|method|dd|join|100|absolute|sin|rad|Event|height|containsBounds|Date|issue|catch|try|1000|floor|failure|success|isInTheSameDomain|substr|String|inches|overflow|div|childNodes|Element|msie|opera|pathname|us|Meter|atan2|filter|modifyDOMElement|intersectsBounds|continue|responseText|delete|parentNode|navigator|limitLength|supermap_callbacks|succeed||UTF|charset||urlencoded|form|www|application|Type|Content|_method|Request|360|degree|6378137|protocol|location|yd|ft|i18n|lon|safari|firefox|Browser|offsetParent|getBoxObjectFor|extend|alphaHackNeeded|_attempts|destroy|block|hidden|fontWeight|fontFamily|fontSize|clipPolygonRect|MultiLineString|clipLineStringRect|isInside|min|type|Object|slice|getTime|JSONClone|JSON|string|requestEntity|userAgent|decodeURIComponent|random|proxy|headers|switch|128|10000|normalizeScale|km|mi|abs|180|_scrollbarWidth|getStyle||chrome|hash|host|createUrlObject|offsetTop|DOTS_PER_INCH|ch|ind|02921005842012|lastSeqID|createUniqueID|deg|sqrt|tan|lat|VincentyConstants|alpha|viewRequestID|initialize|innerHTML|inline|visibility|relative|auto|clipMultiPolygonRect|MultiPolygon|Polygon|clipMultiLineStringRect|LinearRing|getIntersectLineArray|concat|clipLineRect|Parallel|max|copy|cloneObject|parse|transformResult|onload|onreadystatechange|readyState|text|setAttribute|script|send|getUid|encodeURI|urlIsLong|getParameterString|constructor|443|http|dms|dm|offsetWidth|1000px|parseInt|visible|displayClass|className|tagName|containerElement|isSupportCanvas|getBrowser|android|rv|IS_GECKO|getParameters|ignoreHash|ignorePort80|shift|href|ignoreCase|pop|applyDefaults|getViewportElement|scrollTop|scrollLeft|offsetLeft|screenY|screenX|getBoundingClientRect|IndianFt37|IndianYd37|Mile|GunterChain|Yard|Foot|IntnlLink|IntnlChain|Fathom|nmi|NautM|Lat|1852|1609|unescape|256|1024|175|320|768|4096|16384|atan|DEFAULT_PRECISION|relatedTarget|textContent|Try|_getScriptLocation|ImgPath|modifyAlphaImageDiv|createImage|createDiv|none|alphaHack||smImageLoadError|isArray|IMAGE_RELOAD_ATTEMPTS|onImageLoadError|map||onImageLoad|observe|SuperMapDiv|call|inherit|apply|Plot|Tool|Scheme|Tile|Layer|REST|Control|textHeight|textWidth|clientHeight|clientWidth|getTextBounds|clipGeometryRect|_clip_|Coincident|Intersection|No|supported|isn|Its|obj|to|Unable|Error|throw|setTime|isApp|setApp|copyAttributesWithClip|copyAttributes|eval|complete|loaded|IE|javascript|jsonpUserID|sectionIndex|sectionCount|100000000000000000|callback|1500|then|xhr|WinJS|json|jsonp|Windows|committer|2000|65535|2048|2047|127||charCodeAt|getScaleFromResolutionDpi|getResolutionFromScaleDpi|parent|default|getTimezoneOffset|TimezoneOffset|getMilliseconds|Millisecond|getSeconds|Second|getMinutes|Minute|getHours|Hour|getDate|Day|getMonth|Month|getFullYear|Year|DateTime|System|__type|Boolean|isFinite|Number|gt|lt|getHeight|getWidth|calculateDpi|domain|yard|kilometer|mile|inch|foot|meter|u00B0|round|540|getFormattedLonLat|lastChild|scroll|200px|50px|100px|getScrollbarWidth|Size|scrollHeight|scrollWidth|static|getRenderedDimensions|supportCanvas|getContext|canvas||device|apple||iphone|ipod|ipad|trident|pc|gecko|webkit|removeTail|charAt|search|test|isEquivalentUrl|documentElement|CSS1Compat|compatMode|viewportElement|callee|TR|pagePosition|getScaleFromResolution|getResolutionFromScale|11669506|link|fath|kmi|cm|mm|150000|150kilometers|50000|50kilometers|184|1853|UK|8288|304812252984506|ModAmFt|375|Brealey|3047972615|CapeFoot|778266898|Rood|1684023368046|201|Furlong|Pole|Perch|201168|1168|Rod|2011676512155|SearsLink|20116782494375873|BenoitLink|2011684023368047|GunterLink|201166194976|ClarkeLink|11676512155|SearsChain|116782494375872|BenoitChain|11684023368047||1166194976|ClarkeChain|999738|CaGrid|0000135965|GermanMeter|Hectometer|Decameter|Dekameter|001|Millimeter|Decimeter|25736872235|110946|31648893273|110943|344|IMile|9144|IYard|3472186944373|3047995|IndianFt75|3047996|IndianFt62|30479841|30479951|IndianFoot|9143985|IndianYd75|9143988|IndianYd62|91439523|9143985307444408|IndianYard|914398414616029|SearsYard|9144018288036576|Kilometer|01|Centimeter|54e|Mil|0000254|MicroInch|IInch|3047997101815088|GoldCoastFoot|30479947153867626|SearsFoot|3047972651151|ClarkeFoot|3048|IFoot|3048006096012192|Inch|0254000508001016|4374754|39370|3701|63360|id_|LonLat|destinationVincenty|toFixed|NaN|asin|distVincenty|257223563|298|3142|6356752|toPrecision|number|toFloat|toElement|mouseLeft|nodeValue|firstChild|getXmlNodeValue|images|theme|getImagesLocation|urlAppend|toUpperCase|upperCaseObject|olAlphaImg|createAlphaImageDiv|sizingMethod|AlphaImageLoader|Microsoft|DXImageTransform|progid|scale|_innerImage|filters|MSIE|appVersion|addClass|urls|removeClass|no|galleryImg|alt|error|load|img|backgroundImage|border|splice|removeItem|nodeType|isElement|getElementById|getElement|reset|Class|getAttribute|getElementsByTagName|js|Include|RegExp|Release|VERSION_NUMBER'.split('|'),0,{}))

eval(function(p,a,c,k,e,d){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)d[e(c)]=k[c]||e(c);k=[function(e){return d[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('O.5t={10g:Q(b,a){R(b.2N(a)==0)},cB:Q(b,a){R(b.2N(a)!=-1)},li:Q(a){R a.42(/^\\s\\s*/,"").42(/\\s\\s*$/,"")},Ak:Q(f){N d=f.4B("-");N b=d[0];1f(N c=1,a=d.1a;c<a;c++){N e=d[c];b+=e.ef(0).i0()+e.bv(1)}R b},5d:Q(d,c,a){if(!c){c=1W}N b=Q(j,e){N h;N g=e.4B(/\\.+/);1f(N f=0;f<g.1a;f++){if(f==0){h=c}h=h[g[f]]}if(2v h==="Q"){h=a?h.1j(P,a):h()}if(2v h=="2b"){R"2b"}V{R h}};R d.42(O.5t.Nt,b)},Nt:/\\$\\{([\\w.]+?)\\}/g,Ns:/^([+-]?)(?=\\d|\\.\\d)\\d*(\\.\\d*)?([Ee]([+-]?\\d+))?$/,Nr:Q(a){R O.5t.Ns.dr(a)},10f:Q(a){R O.5t.Nr(a)?3r(a):a}};O.6c={Np:".",Nq:",",lG:Q(a,c){N b=0;if(c>0){b=3r(a.10e(c))}R b},5d:Q(c,a,g,i){a=(2v a!="2b")?a:0;g=(2v g!="2b")?g:O.6c.Nq;i=(2v i!="2b")?i:O.6c.Np;if(a!=P){c=3r(c.lB(a))}N b=c.7A().4B(".");if(b.1a===1&&a==P){a=0}N d=b[0];if(g){N e=/(-?[0-9]+)([0-9]{3})/;4U(e.dr(d)){d=d.42(e,"$1"+g+"$2")}}N f;if(a==0){f=d}V{N h=b.1a>1?b[1]:"0";if(a!=P){h=h+S 3T(a-h.1a+1).6d("0")}f=d+i+h}R f}};if(!6c.1g.lG){6c.1g.lG=Q(a){R O.6c.lG(K,a)}}O.2z={3P:Q(c,b){N a=3T.1g.a3.1j(1s,[2]);R Q(){N d=a.7E(3T.1g.a3.1j(1s,[0]));R c.1j(b,d)}},5e:Q(b,a){R Q(c){R b.47(a,c||1W.bH)}},iB:Q(){R 1b},rj:Q(){R 1d},10d:Q(){}};O.3T={58:Q(g,f,b){N d=[];if(3T.1g.58){d=g.58(f,b)}V{N a=g.1a;if(2v f!="Q"){6F S ik()}1f(N c=0;c<a;c++){if(c in g){N e=g[c];if(f.47(b,e,c,g)){d.1u(e)}}}}R d}};O.1U=O.1A({1r:P,1N:P,1I:P,1t:P,hG:P,1o:Q(d,a,b,c){if(O.1c.4k(d)){c=d[3];b=d[2];a=d[1];d=d[0]}K.1r=d!=P?O.1c.da(d):K.1r;K.1N=a!=P?O.1c.da(a):K.1N;K.1I=b!=P?O.1c.da(b):K.1I;K.1t=c!=P?O.1c.da(c):K.1t},1R:Q(){R S O.1U(K.1r,K.1N,K.1I,K.1t)},3A:Q(b){N a=1b;if(b!=P){a=((K.1r===b.1r)&&(K.1I===b.1I)&&(K.1t===b.1t)&&(K.1N===b.1N))}R a},7A:Q(){R[K.1r,K.1N,K.1I,K.1t].6d(",")},10c:Q(a){if(a===1d){R[K.1N,K.1r,K.1t,K.1I]}V{R[K.1r,K.1N,K.1I,K.1t]}},10b:Q(b,e){if(b==P){b=6}N g=1k.2W(10,b);N f=1k.2s(K.1r*g)/g;N d=1k.2s(K.1N*g)/g;N c=1k.2s(K.1I*g)/g;N a=1k.2s(K.1t*g)/g;if(e===1d){R d+","+f+","+a+","+c}V{R f+","+d+","+c+","+a}},fX:Q(){R S O.1h.3R([S O.1h.4C([S O.1h.1F(K.1r,K.1N),S O.1h.1F(K.1I,K.1N),S O.1h.1F(K.1I,K.1t),S O.1h.1F(K.1r,K.1t)])])},3J:Q(){R(K.1I-K.1r)},4J:Q(){R(K.1t-K.1N)},5i:Q(){R S O.2J(K.3J(),K.4J())},wR:Q(){R S O.2C((K.1r+K.1I)/2,(K.1N+K.1t)/2)},64:Q(){if(!K.hG){K.hG=S O.3k((K.1r+K.1I)/2,(K.1N+K.1t)/2)}R K.hG},3M:Q(e,c){e=e?e:1;if(c==P){c=K.64()}N a,h;if(c.1p==="O.3k"){a=c.1P;h=c.1S}V{a=c.x;h=c.y}N g=(K.1r-a)*e+a;N b=(K.1N-h)*e+h;N d=(K.1I-a)*e+a;N f=(K.1t-h)*e+h;R S O.1U(g,b,d,f)},3t:Q(a,b){if((a==P)||(b==P)){6F S ik("1U.3t Aj Ai P so")}R S O.1U(K.1r+a,K.1N+b,K.1I+a,K.1t+b)},1M:Q(a){N b=P;if(a){5m(a.1p){1K"O.3k":b=S O.1U(a.1P,a.1S,a.1P,a.1S);1D;1K"O.1h.1F":b=S O.1U(a.x,a.y,a.x,a.y);1D;1K"O.1U":b=a;1D}if(b){K.hG=P;if((K.1r==P)||(b.1r<K.1r)){K.1r=b.1r}if((K.1N==P)||(b.1N<K.1N)){K.1N=b.1N}if((K.1I==P)||(b.1I>K.1I)){K.1I=b.1I}if((K.1t==P)||(b.1t>K.1t)){K.1t=b.1t}}}},f3:Q(f,c){if(2v c==="A8"){c={bt:c}}c=c||{};N d=K.cB(f.1P,f.1S,c.bt),e=c.dL;if(e&&!d){N g=e.3J();N a=(e.1r+e.1I)/2;N b=1k.2s((f.1P-a)/g);d=K.f3({1P:f.1P-b*g,1S:f.1S},{bt:c.bt})}R d},10a:Q(b,a){R K.cB(b.x,b.y,a)},cB:Q(b,d,a){if(a==P){a=1d}if(b==P||d==P){R 1b}b=O.1c.da(b);d=O.1c.da(d);N c=1b;if(a){c=((b>=K.1r)&&(b<=K.1I)&&(d>=K.1N)&&(d<=K.1t))}V{c=((b>K.1r)&&(b<K.1I)&&(d>K.1N)&&(d<K.1t))}R c},9E:Q(a,m){if(2v m==="A8"){m={bt:m}}m=m||{};if(m.dL){N l=K.5z(m.dL);a=a.5z(m.dL)}V{l=K}if(m.bt==P){m.bt=1d}N h=1b;N i=(l.1r===a.1I||l.1I===a.1r||l.1t===a.1N||l.1N===a.1t);if(m.bt||!i){N j=(((a.1N>=l.1N)&&(a.1N<=l.1t))||((l.1N>=a.1N)&&(l.1N<=a.1t)));N k=(((a.1t>=l.1N)&&(a.1t<=l.1t))||((l.1t>a.1N)&&(l.1t<a.1t)));N d=(((a.1r>=l.1r)&&(a.1r<=l.1I))||((l.1r>=a.1r)&&(l.1r<=a.1I)));N c=(((a.1I>=l.1r)&&(a.1I<=l.1I))||((l.1I>=a.1r)&&(l.1I<=a.1I)));h=((j||k)&&(d||c))}if(m.dL&&!h){N g=m.dL;N b=g.3J();N f=!g.a0(l);N e=!g.a0(a);if(f&&!e){a=a.3t(-b,0);h=l.9E(a,{bt:m.bt})}V{if(e&&!f){l=l.3t(-b,0);h=a.9E(l,{bt:m.bt})}}}R h},a0:Q(g,b,a){if(b==P){b=1b}if(a==P){a=1d}N c=K.cB(g.1r,g.1N,a);N d=K.cB(g.1I,g.1N,a);N f=K.cB(g.1r,g.1t,a);N e=K.cB(g.1I,g.1t,a);R(b)?(c||d||f||e):(c&&d&&f&&e)},D9:Q(c){N b="";N a=K.64();b+=(c.1S<a.1S)?"b":"t";b+=(c.1P<a.1P)?"l":"r";R b},3N:Q(d,b){K.hG=P;N e=O.3h.3N({x:K.1r,y:K.1N},d,b);N a=O.3h.3N({x:K.1I,y:K.1N},d,b);N c=O.3h.3N({x:K.1r,y:K.1t},d,b);N f=O.3h.3N({x:K.1I,y:K.1t},d,b);K.1r=1k.4q(e.x,c.x);K.1N=1k.4q(e.y,a.y);K.1I=1k.3l(a.x,f.x);K.1t=1k.3l(c.y,f.y);R K},5z:Q(a,c){c=c||{};N e=c.Mr||0;N b=c.Ms||0;N g=K.1R();if(a){N d=a.3J();4U(g.1r<a.1r&&g.1I-b<=a.1r){g=g.3t(d,0)}4U(g.1r+e>=a.1I&&g.1I>a.1I){g=g.3t(-d,0)}N f=g.1r+e;if(f<a.1I&&f>a.1r&&g.1I-b>a.1I){g=g.3t(-d,0)}}R g},3X:Q(){N a={bx:{x:K.1I,y:K.1t},9Z:{x:K.1r,y:K.1N},1r:K.1r,1I:K.1I,1t:K.1t,1N:K.1N};R a},1m:Q(){K.1r=P;K.1I=P;K.1t=P;K.1N=P;K.hG=P},1p:"O.1U"});O.1U.Nn=Q(c,b){N a=c.4B(",");R O.1U.rD(a,b)};O.1U.rD=Q(b,a){R a===1d?S O.1U(b[1],b[0],b[3],b[2]):S O.1U(b[0],b[1],b[2],b[3])};O.1U.108=Q(a){R S O.1U(0,a.h,a.w,0)};O.1U.D8=Q(a){N b="";b+=(a.ef(0)==="t")?"b":"t";b+=(a.ef(1)==="l")?"r":"l";R b};O.78={Al:(Q(){if("Al"in 78.1g){R Q(b){R b.Al()}}V{Q a(c,b){N d=c+"";4U(d.1a<b){d="0"+d}R d}R Q(b){N c;if(2w(b.bo())){c="104 78"}V{c=b.103()+"-"+a(b.102()+1,2)+"-"+a(b.101(),2)+"T"+a(b.ZZ(),2)+":"+a(b.ZY(),2)+":"+a(b.ZX(),2)+"."+a(b.ZW(),3)+"Z"}R c}}})(),ZV:Q(j){N b;N h=j.eL(/^(?:(\\d{4})(?:-(\\d{2})(?:-(\\d{2}))?)?)?(?:(?:T(\\d{1,2}):(\\d{2}):(\\d{2}(?:\\.\\d+)?)(Z|(?:[+-]\\d{1,2}(?::(\\d{2}))?)))|Z)?$/);if(h&&(h[1]||h[7])){N k=2l(h[1],10)||0;N i=(2l(h[2],10)-1)||0;N m=2l(h[3],10)||1;b=S 78(78.ZU(k,i,m));N l=h[7];if(l){N n=2l(h[4],10);N d=2l(h[5],10);N a=3r(h[6]);N o=a|0;N c=1k.2s(gM*(a-o));b.ZT(n,d,o,c);if(l!=="Z"){N g=2l(l,10);N f=2l(h[8],10)||0;N e=-gM*(60*(g*60)+f*60);b=S 78(b.bo()+e)}}}V{b=S 78("Nk")}R b}};O.2I={7e:Q(a){R O.1c.6t(a).W.2g!=="2L"},8x:Q(){1f(N c=0,a=1s.1a;c<a;c++){N b=O.1c.6t(1s[c]);N d=O.2I.7e(b)?"2L":"";b.W.2g=d}},iG:Q(a){a=O.1c.6t(a);a.2Y.2U(a)},4J:Q(a){a=O.1c.6t(a);R a.ME},iO:Q(b,a){if(!b||!b.3U){R 1b}N c=b.3U;R(!!c&&S No("(^|\\\\s)"+a+"(\\\\s|$)").dr(c))},5b:Q(b,a){if(!b){R}if(!O.2I.iO(b,a)){b.3U+=(b.3U?" ":"")+a}R b},aq:Q(b,a){if(!O.2I.iO(b,a)){R}N c=b.3U;if(c){b.3U=O.5t.li(c.42(S No("(^|\\\\s+)"+a+"(\\\\s+|$)")," "))}R b},ZS:Q(b,a){if(O.2I.iO(b,a)){O.2I.aq(b,a)}V{O.2I.5b(b,a)}R b},9O:Q(c,d){c=O.1c.6t(c);N e=P;if(c&&c.W){e=c.W[O.5t.Ak(d)];if(!e){if(1O.je&&1O.je.jd){N b=1O.je.jd(c,P);e=b?b.xl(d):P}V{if(c.jf){e=c.jf[O.5t.Ak(d)]}}}N a=["1r","1t","1I","1N"];if(1W.ra&&(O.1c.2N(a,d)!==-1)&&(O.2I.9O(c,"2x")==="ZR")){e="4w"}}R e==="4w"?P:e},pQ:Q(b){N d=1O.fD.cJ||1O.8a.cJ,a=1O.fD.sO||1O.8a.sO;N c=b.ZQ();R{1t:c.1t+a,1I:c.1I+d,1N:c.1N+a,1r:c.1r+d}}};O.3k=O.1A({1P:0,1S:0,1o:Q(b,a){if(O.1c.4k(b)){a=b[1];b=b[0]}K.1P=b?O.1c.da(b):K.1P;K.1S=a?O.1c.da(a):K.1S},7A:Q(){R("1P="+K.1P+",1S="+K.1S)},vS:Q(){R(K.1P+","+K.1S)},1R:Q(){R S O.3k(K.1P,K.1S)},3t:Q(b,a){if((b==P)||(a==P)){6F S ik("3k.3t Aj Ai P so")}R S O.3k(K.1P+O.1c.da(b),K.1S+O.1c.da(a))},3A:Q(b){N a=1b;if(b!=P){a=((K.1P===b.1P&&K.1S===b.1S)||(2w(K.1P)&&2w(K.1S)&&2w(b.1P)&&2w(b.1S)))}R a},3N:Q(c,b){N a=O.3h.3N({x:K.1P,y:K.1S},c,b);K.1P=a.x;K.1S=a.y;R K},5z:Q(a){N b=K.1R();if(a){4U(b.1P<a.1r){b.1P+=a.3J()}4U(b.1P>a.1I){b.1P-=a.3J()}}R b},1m:Q(){K.1P=P;K.1S=P},1p:"O.3k"});O.3k.Nn=Q(b){N a=b.4B(",");R S O.3k(a[0],a[1])};O.3k.rD=Q(a){N b=O.1c.4k(a),d=b&&a[0],c=b&&a[1];R S O.3k(d,c)};O.2C=O.1A({x:0,y:0,99:P,1o:Q(a,c,b){K.x=a?3r(a):K.x;K.y=c?3r(c):K.y;K.99=b},7A:Q(){R("x="+K.x+",y="+K.y)},1R:Q(){R S O.2C(K.x,K.y,K.99)},3A:Q(a){N b=1b;if(a!=P){b=((K.x==a.x&&K.y==a.y)||(2w(K.x)&&2w(K.y)&&2w(a.x)&&2w(a.y)))}R b},7d:Q(a){R 1k.5A(1k.2W(K.x-a.x,2)+1k.2W(K.y-a.y,2))},3t:Q(a,b){if((a==P)||(b==P)){6F S ik("2C.3t Aj Ai P so")}R S O.2C(K.x+a,K.y+b)},3j:Q(a){N b=K.1R();if(a){b=K.3t(a.x,a.y)}R b},1m:Q(){K.x=P;K.y=P;K.99=P},1p:"O.2C"});O.2C.GP={GO:"hw",GN:"ZP",GM:"ZO",GL:"ZN"};O.2J=O.1A({w:0,h:0,1o:Q(a,b){K.w=a?3r(a):K.w;K.h=a?3r(b):K.h},7A:Q(){R("w="+K.w+",h="+K.h)},1R:Q(){R S O.2J(K.w,K.h)},3A:Q(b){N a=1b;if(b!=P){a=((K.w===b.w&&K.h===b.h)||(2w(K.w)&&2w(K.h)&&2w(b.w)&&2w(b.h)))}R a},1m:Q(){K.w=P;K.h=P},1p:"O.2J"});O.aJ=O.1A({dx:"",2c:"ZM",1o:Q(b,a){K.dx=b?b:K.dx;K.2c=a?a:K.2c},kw:Q(){R K.2c+"="+K.dx},yY:Q(){R K.dx},1m:Q(){K.dx=P;K.2c=P},1p:"O.aJ"});O.aJ.dk=P;O.sD=O.1A({Nm:10,Ah:P,b1:P,sR:P,fA:P,3H:P,ns:P,77:P,sS:1b,1o:Q(a){K.Ah=(a)?a:O.d8.sF.nh},3V:Q(c,b,d,a){K.sS=1d;K.b1=c;K.sR=b;K.fA=d;K.3H=a.3H;K.ns=0;if(K.77){1W.mo(K.77);K.77=P}if(K.3H&&K.3H.3V){K.3H.3V.47(K,K.b1)}K.77=1W.xj(O.2z.3P(K.Nl,K),K.Nm)},2Q:Q(){if(!K.sS){R}if(K.3H&&K.3H.7j){K.3H.7j.47(K,K.sR)}1W.mo(K.77);K.77=P;K.sS=1b},Nl:Q(){N g={};1f(N d in K.b1){if(!K.b1.cj(d)){5K}N a=K.b1[d];N e=K.sR[d];if(a==P||e==P||2w(a)||2w(e)){6F S ik("Nk dx 1f sD")}N h=e-a;g[d]=K.Ah.1j(K,[K.ns,a,h,K.fA])}K.ns++;if(K.3H&&K.3H.zF){K.3H.zF.47(K,g)}if(K.ns>K.fA){K.2Q()}},1p:"O.sD"});O.d8={1p:"O.d8"};O.d8.Nj={Ag:Q(e,a,g,f){R g*e/f+a},nh:Q(e,a,g,f){R g*e/f+a},Af:Q(e,a,g,f){R g*e/f+a},1p:"O.d8.Nj"};O.d8.sF={Ag:Q(e,a,g,f){R(e==0)?a:g*1k.2W(2,10*(e/f-1))+a},nh:Q(e,a,g,f){R(e==f)?a+g:g*(-1k.2W(2,-10*e/f)+1)+a},Af:Q(e,a,g,f){if(e==0){R a}if(e==f){R a+g}if((e/=f/2)<1){R g/2*1k.2W(2,10*(e-1))+a}R g/2*(-1k.2W(2,-10*--e)+2)+a},1p:"O.d8.sF"};O.d8.Ni={Ag:Q(e,a,g,f){R g*(e/=f)*e+a},nh:Q(e,a,g,f){R-g*(e/=f)*(e-2)+a},Af:Q(e,a,g,f){if((e/=f/2)<1){R g/2*e*e+a}R-g/2*((--e)*(e-2)-1)+a},1p:"O.d8.Ni"};O.xe=O.1A({Ng:0,77:10,Ac:0.ZL,Nh:100,hi:dj,5I:2b,3W:2b,1o:Q(a){O.1c.1M(K,a)},b1:Q(){mo(K.3W);K.3W=2b;K.5I=[]},6U:Q(a){K.5I.iI({xy:a,Ae:S 78().bo()});if(K.5I.1a>K.Nh){K.5I.8F()}},gd:Q(k){N j,a=S 78().bo();1f(N f=0,e=K.5I.1a,h;f<e;f++){h=K.5I[f];if(a-h.Ae>K.hi){1D}j=h}if(!j){R}N d=S 78().bo()-j.Ae;N g=1k.5A(1k.2W(k.x-j.xy.x,2)+1k.2W(k.y-j.xy.y,2));N c=g/d;if(c==0||c<K.Ng){R}N b=1k.ZK((k.y-j.xy.y)/g);if(j.xy.x<=k.x){b=1k.PI-b}R{Nf:c,Ad:b}},3B:Q(c,j){N i=c.Nf;N g=1k.8T(c.Ad);N f=-1k.7Z(c.Ad);N e=0;N d=S 78().bo();N b=0;N a=0;N h=Q(){if(K.3W==P){R}e+=K.77;N q=S 78().bo()-d;N n=(e+q)/2;N o=(-K.Ac*1k.2W(n,2))/2+i*n;N k=o*g;N r=o*f;N m={};m.gd=1b;N l=-K.Ac*n+i;if(l<=0){mo(K.3W);K.3W=P;m.gd=1d}m.x=k-b;m.y=r-a;b=k;a=r;j(m.x,m.y,m.gd)};K.3W=1W.xj(O.2z.3P(h,K),K.77)},1p:"O.xe"});O.1J={aF:1b,ZJ:32,ZI:8,ZH:9,ZG:13,ZF:27,G7:37,G5:38,G6:39,G4:40,ZE:46,2o:Q(a){R a.ai||a.pS},qK:Q(a){R a.6L&&a.6L.1a===1},rk:Q(a){R a.6L&&a.6L.1a>1},b7:Q(a){R(((a.ij)&&(a.ij===1))||((a.lW)&&(a.lW===1)))},xE:Q(a){R(((a.ij)&&(a.ij===3))||((a.lW)&&(a.lW===2)))},2Q:Q(b,a){if(!a){if(b.c2){b.c2()}V{b.Hk=1b}}if(b.zV){b.zV()}V{b.ZD=1d}},ZC:Q(c,b){N a=O.1J.2o(c);4U(a.2Y&&(!a.zP||(a.zP.i0()!=b.i0()))){a=a.2Y}R a},3q:Q(b,d,c,a){N e=O.1c.6t(b);a=a||1b;if(d==="Ne"&&(bE.Nd.eL(/Nc|Nb|Na/)||e.jl)){d="fF"}if(!K.aF){K.aF={}}if(!e.nr){N f="ZB";if(e.id){f=e.id+"49"+f}e.nr=O.1c.7L(f)}N g=e.nr;if(!K.aF[g]){K.aF[g]=[]}K.aF[g].1u({2o:e,2c:d,Ab:c,Aa:a});if(e.zX){e.zX(d,c,a)}V{if(e.jl){e.jl("on"+d,c)}}},a5:Q(a){N b=O.1c.6t(a);N c=b.nr;K.A9(O.1J.aF[c])},A9:Q(e){if(e){1f(N b=e.1a-1;b>=0;b--){N c=e[b];N a=S 3T(c.2o,c.2c,c.Ab,c.Aa);N d=O.1J.au.1j(K,a)}}},au:Q(h,a,g,b){b=b||1b;N f=O.1c.6t(h);N d=f.nr;if(a==="Ne"){if(bE.Nd.eL(/Nc|Nb|Na/)||f.sN){a="fF"}}N k=1b;N c=O.1J.aF[d];if(c){N e=0;4U(!k&&e<c.1a){N j=c[e];if((j.2c===a)&&(j.Ab===g)&&(j.Aa===b)){c.6f(e,1);if(c.1a==0){2t O.1J.aF[d]}k=1d;1D}e++}}if(k){if(f.zW){f.zW(a,g,b)}V{if(f&&f.sN){f.sN("on"+a,g)}}}R k},N9:Q(){if(O.1J&&O.1J.aF){1f(N a in O.1J.aF){N b=O.1J.aF[a];O.1J.A9.1j(K,[b])}O.1J.aF=1b}},1p:"O.1J"};O.1J.3q(1W,"at",O.1J.N9,1b);O.4o=O.1A({mA:["dU","bf","4g","4x","4y","2X","4H","fh","xa","7Q","DO","ZA","9e","9N","ff","fF","xs","xr","Hc","Hb","Ha","H9","wW","jt"],9q:P,6z:P,2o:P,nq:P,sQ:P,h9:P,dX:1b,fE:P,np:P,sP:P,N7:Zz,1o:Q(c,e,g,f,b){O.1c.1M(K,b);K.6z=c;K.h9=f;K.9q={};K.fE={};K.np={};K.nq=[];if(g!=P){1f(N d=0,a=g.1a;d<a;d++){K.fw(g[d])}}if(e!=P){K.N8(e)}},1m:Q(){1f(N a in K.fE){if(2v K.fE[a]!=="A8"){K.fE[a].1m()}}K.fE=P;if(K.2o){O.1J.a5(K.2o);if(K.2o.A6){O.1J.au(1W,"xk",K.sP)}}K.2o=P;K.9q=P;K.6z=P;K.nq=P;K.h9=P;K.sQ=P},fw:Q(a){if(!K.9q[a]){K.nq.1u(a);K.9q[a]=[]}},N8:Q(d){if(K.2o){O.1J.a5(K.2o)}V{K.sQ=O.2z.5e(K.qa,K);K.sP=O.2z.3P(K.sE,K)}K.2o=d;1f(N c=0,a=K.mA.1a;c<a;c++){N b=K.mA[c];K.fw(b);O.1J.3q(d,b,K.sQ)}O.1J.3q(d,"j2",O.1J.2Q)},on:Q(a){1f(N b in a){if(b!=="2y"&&a.cj(b)){K.4Q(b,a.2y,a[b])}}},4Q:Q(c,f,d,a){if(c in O.4o&&!K.fE[c]){K.fE[c]=S O.4o[c](K)}if((d!=P)&&(O.1c.2N(K.nq,c)!==-1)){if(f==P){f=K.6z}N b=K.9q[c];if(!b){b=[];K.9q[c]=b;K.np[c]=0}N e={ev:f,A7:d};if(a){b.6f(K.np[c],0,e);if(2v a==="6z"&&a.Zy){K.np[c]++}}V{b.1u(e)}}},mx:Q(a,c,b){K.4Q(a,c,b,1d)},un:Q(a){1f(N b in a){if(b!=="2y"&&a.cj(b)){K.6H(b,a.2y,a[b])}}},6H:Q(d,f,e){if(f==P){f=K.6z}N c=K.9q[d];if(c!=P){1f(N b=0,a=c.1a;b<a;b++){if(c[b].ev===f&&c[b].A7===e){c.6f(b,1);1D}}}},iG:Q(a){if(K.9q[a]!=P){K.9q[a]=[]}},1L:Q(e,b){N d=K.9q[e];if(!d||d.1a==0){R 2b}if(b==P){b={}}b.6z=K.6z;b.2o=K.2o;if(!b.2A){b.2A=e}d=d.a3();N f;1f(N c=0,a=d.1a;c<a;c++){N g=d[c];f=g.A7.1j(g.ev,[b]);if((f!=2b)&&(f==1b)){1D}}if(!K.h9){O.1J.2Q(b,1d)}R f},qa:Q(m){N h=m.2A,j=K.9q[h];if(!j||j.1a==0){R}N e=m.6L;if(e&&e[0]){N l=0;N k=0;N f=e.1a;N c;1f(N b=0;b<f;++b){c=e[b];l+=c.b8;k+=c.ar}m.b8=l/f;m.ar=k/f}if(K.dX){m.xy=K.N6(m)}N g=K;N a=1d;N d=O.1c.Zx();if(d.2c==="i1"&&6c(d.9g)<=8){a=1b}if(!a){K.hF&&1W.5J(K.hF);g.1L(h,m)}V{if(h==="2X"){K.hF&&1W.5J(K.hF);K.hF=1W.6h(Q(n,i){R Q(){g.1L(n,i)}}(h,m),K.N7)}V{if(h==="4H"){K.hF&&1W.5J(K.hF)}K.1L(h,m)}}},sE:Q(){K.2o.nn=P;K.2o.hw=P;N a=1O.8a;if(a&&!((a.sO!=0||a.cJ!=0)&&bE.iz.eL(/Zw/i))){K.2o.jh=P}},N6:Q(a){if(!K.dX){K.sE()}V{if(!K.2o.A6){O.1J.3q(1W,"xk",K.sP);K.2o.A6=1d}}if(!K.2o.nn){N b=O.1c.Zv();K.2o.nn=[b.cJ,b.sO]}if(!K.2o.hw){K.2o.hw=[(1O.fD.Zu||0),(1O.fD.Zt||0)]}if(!K.2o.jh){K.2o.jh=O.1c.wE(K.2o)}R S O.2C((a.b8+K.2o.nn[0])-K.2o.jh[0]-K.2o.hw[0],(a.ar+K.2o.nn[1])-K.2o.jh[1]-K.2o.hw[1])},1p:"O.4o"});O.d9={N5:{5W:"cl",1z:1W.gU.88,sI:1d,ol:2b,om:2b,3L:P,7h:O.N4,aE:{},52:P,3n:Q(){},6x:P,5V:P,2y:P},N3:/([^:]*:)\\/\\/([^:]*:?[^@]*@)?([^:\\/\\?]*):?([^\\/\\?]*)/,1n:S O.4o(K,P,["bY","6x","5V"]),hE:Q(d){N g=O.1c.1M(K.N5,{7h:O.N4});d=O.1c.4D(d,g);N f=S O.d9.k7();N a=O.1c.mV(d.1z,O.1c.gV(d.3L||{}));N i=!(a.2N("4s")==0);N b=!i&&a.eL(K.N3);if(b){N j=1W.gU;i=b[1]===j.9v&&b[3]===j.Zs;N e=b[4],c=j.Zr;if(e!==80&&e!=""||c!=="80"&&c!=""){i=i&&e===c}}if(!i){if(d.7h){if(2v d.7h==="Q"){a=d.7h(a)}V{a=Zq(a);a=d.7h+z5(a)}}}f.nm(d.5W,a,d.sI,d.ol,d.om);1f(N h in d.aE){f.sM(h,d.aE[h])}if(d.sL!=P){f.MT(d.sL)}N l=K.1n;N k=K;f.bZ=Q(){if(f.7g===O.d9.k7.hC){N m=l.1L("bY",{8n:f,A5:d,N2:a});if(m!==1b){k.N1({8n:f,A5:d,N2:a})}}};if(d.sI===1b){f.sK(d.52)}V{1W.6h(Q(){if(f.7g!==0){f.sK(d.52)}},0)}R f},N1:Q(d){N e=d.8n;N c=d.A5;N a=(c.2y)?O.2z.3P(c.3n,c.2y):c.3n;N f;if(c.6x){f=(c.2y)?O.2z.3P(c.6x,c.2y):c.6x}N b;if(c.5V){b=(c.2y)?O.2z.3P(c.5V,c.2y):c.5V}if(O.1c.Zp(c.1z).9v==="Jt:"&&e.hY){e.bC=dj}a(e);if(!e.bC||(e.bC>=dj&&e.bC<fW)){K.1n.1L("6x",d);if(f){f(e)}}if(e.bC&&(e.bC<dj||e.bC>=fW)){K.1n.1L("5V",d);if(b){b(e)}}},cl:Q(a){a=O.1c.1M(a,{5W:"cl"});R O.d9.hE(a)},de:Q(a){a=O.1c.1M(a,{5W:"de"});a.aE=a.aE?a.aE:{};if(!("N0-MZ"in O.1c.rY(a.aE))){a.aE["nj-fZ"]="zZ/ni"}R O.d9.hE(a)},kc:Q(a){a.1z=O.1c.mV(a.1z,"5W=kc");a=O.1c.1M(a,{5W:"de"});a.aE=a.aE?a.aE:{};if(!("N0-MZ"in O.1c.rY(a.aE))){a.aE["nj-fZ"]="zZ/ni"}R O.d9.hE(a)},cf:Q(a){a.1z=O.1c.mV(a.1z,"5W=cf");a=O.1c.1M(a,{5W:"de"});R O.d9.hE(a)},MY:Q(a){a=O.1c.1M(a,{5W:"MY"});R O.d9.hE(a)},MX:Q(a){a=O.1c.1M(a,{5W:"MX"});R O.d9.hE(a)}};(Q(){N g=1W.k7;N a=!!1W.Zo;N j=!!1W.1O.pN;N k=j&&1W.bE.iz.eL(/Zn 7.0/);Q d(){K.7z=g&&!k?S g:S 1W.MO("lu.Zm");K.k8=[]}Q c(){R S d}c.1g=d.1g;if(a&&g.A4){c.A4=g.A4}c.hD=0;c.nk=1;c.A3=2;c.A2=3;c.hC=4;c.1g.hD=c.hD;c.1g.nk=c.nk;c.1g.A3=c.A3;c.1g.A2=c.A2;c.1g.hC=c.hC;c.1g.7g=c.hD;c.1g.hY="";c.1g.zO=P;c.1g.bC=0;c.1g.zN="";c.1g.Zl="Lo";c.1g.bZ=P;c.bZ=P;c.A1=P;c.A0=P;c.zY=P;c.1g.nm=Q(q,m,o,s,p){N l=q.dm();if(l==="tE"||l==="Zk"||l==="Zj"){6F S eO(18)}2t K.nl;if(1s.1a<3){o=1d}K.MR=o;N n=K;N r=K.7g;N t=P;if(j&&o){t=Q(){if(r!==c.hC){e(n);n.oU()}};1W.jl("MW",t)}if(c.A1){c.A1.1j(K,1s)}if(1s.1a>4){K.7z.nm(q,m,o,s,p)}V{if(1s.1a>3){K.7z.nm(q,m,o,s)}V{K.7z.nm(q,m,o)}}K.7g=c.nk;b(K);K.7z.bZ=Q(){if(a&&!o){R}n.7g=n.7z.7g;h(n);if(n.zU){n.7g=c.hD;R}if(n.7g===c.hC){2t n.sJ;e(n);if(j&&o){1W.sN("MW",t)}if(r!==n.7g){b(n)}r=n.7g}}};c.1g.sK=Q(l){if(c.A0){c.A0.1j(K,1s)}if(!1s.1a){l=P}if(l&&l.Ki){l=1W.MV?S 1W.MV().Zi(l):l.ni;if(!K.nl["nj-fZ"]){K.7z.sM("nj-fZ","zZ/ni")}}K.sJ=l;f(K)};c.1g.oU=Q(){if(c.zY){c.zY.1j(K,1s)}if(K.7g>c.hD){K.zU=1d}K.7z.oU();e(K);K.7g=c.hD;2t K.sJ};c.1g.MU=Q(){R K.7z.MU()};c.1g.zQ=Q(l){R K.7z.zQ(l)};c.1g.sM=Q(l,m){if(!K.nl){K.nl={}}K.nl[l]=m;R K.7z.sM(l,m)};c.1g.MT=Q(l){if("sL"in K.7z){K.7z.sL=!!l;R 1d}R 1b};c.1g.zX=Q(o,n,m){1f(N l=0,p;p=K.k8[l];l++){if(p[0]===o&&p[1]===n&&p[2]===m){R}}K.k8.1u([o,n,m])};c.1g.zW=Q(o,n,m){1f(N l=0,p;p=K.k8[l];l++){if(p[0]===o&&p[1]===n&&p[2]===m){1D}}if(p){K.k8.6f(l,1)}};c.1g.MQ=Q(m){N n={2A:m.2A,ai:K,Zh:K,Zg:2,zT:m.zT,zS:m.zS,zR:m.zR,zV:Q(){},c2:Q(){},Zf:Q(){}};if(n.2A==="MP"&&K.bZ){(K.bZ.MS||K.bZ).1j(K,[n])}1f(N l=0,o;o=K.k8[l];l++){if(o[0]===n.2A&&!o[2]){(o[1].MS||o[1]).1j(K,[n])}}};c.1g.7A=Q(){R"[6z k7]"};c.7A=Q(){R"[k7]"};Q f(l){l.7z.sK(l.sJ);if(a&&!l.MR){l.7g=c.nk;h(l);4U(l.7g<c.hC){l.7g++;b(l);if(l.zU){R}}}}Q b(l){if(c.bZ){c.bZ.1j(l)}l.MQ({2A:"MP",zT:1b,zS:1b,zR:S 78+0})}Q i(n){N m=n.zO;N l=n.hY;if(j&&l&&m&&!m.fD&&n.zQ("nj-fZ").eL(/[^\\/]+\\/[^\\+]+\\+ni/)){m=S 1W.MO("lu.Ze");m.sI=1b;m.Zd=1b;m.Zc(l)}if(m){if((j&&m.Zb!==0)||!m.fD||(m.fD&&m.fD.zP==="Za")){R P}}R m}Q h(l){c1{l.hY=l.7z.hY}c0(m){}c1{l.zO=i(l.7z)}c0(m){}c1{l.bC=l.7z.bC}c0(m){}c1{l.zN=l.7z.zN}c0(m){}}Q e(l){l.7z.bZ=S 1W.2z}if(!1W.2z.1g.1j){1W.2z.1g.1j=Q(l,m){if(!m){m=[]}l.zM=K;l.zM(m[0],m[1],m[2],m[3],m[4]);2t l.zM}}O.d9.k7=c})();O.3h=O.1A({8i:P,hW:P,zL:/\\+7H=[^\\+]*/,1o:Q(b,a){O.1c.1M(K,a);K.hW=b;if(1W.sG){K.8i=S sG.Z9(b)}},7X:Q(){R K.8i?K.8i.Z8:K.hW},cr:Q(){R K.8i?K.8i.2P:P},7A:Q(){R K.7X()},3A:Q(a){N e=a,b=1b;if(e){if(!(e 1V O.3h)){e=S O.3h(e)}if(1W.sG&&K.8i.sH&&e.8i.sH){b=K.8i.sH.42(K.zL,"")===e.8i.sH.42(K.zL,"")}V{if(e.7X){N c=K.7X(),d=e.7X();b=c===d||!!O.3h.hB[c]&&O.3h.hB[c][d]===O.3h.mN}}}R b},1m:Q(){2t K.8i;2t K.hW},1p:"O.3h"});O.3h.hB={};O.3h.k4={"4t:9r":{2P:"zK",3a:[-2R,-90,2R,90],yx:1d},"MN:84":{2P:"zK",3a:[-2R,-90,2R,90]},"4t:jG":{2P:"m",3a:[-5U.34,-5U.34,5U.34,5U.34]},"4t:fn":{2P:"m",3a:[-5U.34,-5U.34,5U.34,5U.34]}};O.3h.yQ=Q(d,c,b){if(b===O.3h.mN){N a=O.3h.k4[d];if(a&&!O.3h.k4[c]){O.3h.k4[c]=a}}if(!O.3h.hB[d]){O.3h.hB[d]={}}O.3h.hB[d][c]=b};O.3h.3N=Q(a,e,b){if(e&&b){if(!(e 1V O.3h)){e=S O.3h(e)}if(!(b 1V O.3h)){b=S O.3h(b)}if(e.8i&&b.8i){a=sG.3N(e.8i,b.8i,a)}V{N d=e.7X();N f=b.7X();N c=O.3h.hB;if(c[d]&&c[d][f]){c[d][f](a)}}}R a};O.3h.mN=Q(a){R a};(Q(){N e=5U.34;Q g(h){h.x=2R*h.x/e;h.y=2R/1k.PI*(2*1k.q3(1k.IW((h.y/e)*1k.PI))-1k.PI/2);R h}Q b(h){h.x=h.x*e/2R;h.y=1k.fc(1k.IX((90+h.y)*1k.PI/l1))/1k.PI*e;R h}Q f(k,h){N r=O.3h.yQ;N q=O.3h.mN;N n,o,l,p,m;1f(n=0,o=h.1a;n<o;++n){l=h[n];r(k,l,b);r(l,k,g);1f(m=n+1;m<o;++m){p=h[m];r(l,p,q);r(p,l,q)}}}N a=["4t:jG","4t:fn","4t:IV","4t:IU"],d=["MN:84","DR:Z7:Z6:Z5:4t:6.6:9r","4t:9r"],c;1f(c=a.1a-1;c>=0;--c){f(a[c],d)}1f(c=d.1a-1;c>=0;--c){f(d[c],a)}})();O.e0=O.1A({c6:{MK:100,rq:Z4,3o:Z3,hl:Z2,4a:gM,1y:Z1},2K:["MJ","f4","MI","dR","7w","hy","3B","6V","qM","Z0","YZ","YY","YX","YW","dU","bf","4y","j2","5B","rl","97"],id:P,jr:1d,YV:1b,jg:1b,1n:P,fC:1b,1q:P,41:1b,1G:P,3D:P,mb:P,3s:P,1Q:P,3Z:P,ce:P,2a:P,3G:P,7K:P,5j:0,MC:1.5,cc:0,3c:P,2O:"4t:9r",2P:"zK",1T:P,4A:P,4r:P,55:P,56:P,3a:P,7b:P,5F:P,5l:16,8p:P,5S:P,h9:1d,ed:P,2E:P,zG:O.d8.sF.nh,MB:50,9k:P,8j:P,cd:P,r3:S O.2C(0,0),k6:P,k5:P,1o:Q(b,l){if(1s.1a===1&&2v b==="6z"){l=b;b=l&&l.1q}K.3c=S O.2J(O.e0.Mx,O.e0.Mw);K.9k=S O.1U(15,15,15,15);O.1c.1M(K,l);N a=K.2O 1V O.3h?K.2O.hW:K.2O;O.1c.4D(K,O.3h.k4[a]);if(K.3a&&!(K.3a 1V O.1U)){K.3a=S O.1U(K.3a)}if(K.7b&&!(K.7b 1V O.1U)){K.7b=S O.1U(K.7b)}if(K.5F&&!(K.5F 1V O.1U)){K.5F=S O.1U(K.5F)}if(K.3G&&!(K.3G 1V O.3k)){K.3G=S O.3k(K.3G)}K.1Q=[];K.id=O.1c.7L("O.YU");K.1q=O.1c.6t(b);if(!K.1q){K.1q=1O.2G("1q");K.1q.W.1E="pF";K.1q.W.1B="pF"}K.1q.W.YT="2L";O.2I.5b(K.1q,"ML");N k=O.1c.4X();K.1q.W.3I="1z(\'"+k+"xA/Hf.xz\'),4m";N d=K.id+"YS";K.3D=O.1c.7v(d,P,P,P,"gl",P,"9y");K.3D.W.1B="100%";K.3D.W.1E="100%";K.3D.3U="YR";K.1q.1X(K.3D);N f=1O.2G("1q");f.id=K.id+"YQ";f.W.2x="3i";f.W.1B="100%";f.W.1E="100%";f.W.5u=K.c6.1y-1;K.3D.1X(f);K.6A=f;K.1n=S O.4o(K,K.6A,K.2K,K.h9,{dX:1d});d=K.id+"YP";K.3s=O.1c.7v(d);K.3s.W.5u=K.c6.4a-1;K.l5=O.1c.7v("YO");K.l5.W.5u=K.c6.3o-1;K.3s.1X(K.l5);K.6A.1X(K.3s);K.ec();if(K.2E 1V 6O){K.1n.on(K.2E)}K.1n.4Q("hy",K,K.ec);K.ng=O.2z.3P(K.ec,K);O.1J.3q(1W,"7Q",K.ng);if(K.8p){N e=1d;N c=1O.iC("MM");1f(N g=0,h=c.1a;g<h;++g){if(O.1c.JV(c.YN(g).88,K.8p)){e=1b;1D}}if(e){N j=1O.2G("MM");j.cC("YM","YL");j.cC("2A","8y/YK");j.cC("88",K.8p);1O.iC("I5")[0].1X(j)}}if(K.3Z==P){if(O.1y!=P){K.3Z=[S O.1y.x6(),S O.1y.j7(),S O.1y.w6()]}V{K.3Z=[]}}1f(N g=0,h=K.3Z.1a;g<h;g++){K.zH(K.3Z[g])}K.ce=[];K.h8=O.2z.3P(K.1m,K);O.1J.3q(1W,"at",K.h8);if(l&&l.1Q){2t K.3G;K.qR(l.1Q);if(l.3G&&!K.b9()){K.6g(l.3G,l.5j)}}},dA:Q(a){K.1q=O.1c.6t(a);O.2I.5b(K.1q,"ML");K.3D.2Y.2U(K.3D);K.1q.1X(K.3D);K.ec()},h8:P,ng:P,1m:Q(){if(!K.h8){R 1b}if(K.ed){K.ed.2Q();K.ed=P}O.1J.au(1W,"at",K.h8);K.h8=P;if(K.ng){O.1J.au(1W,"7Q",K.ng)}V{K.1n.6H("7Q",K,K.ec)}K.9k=P;if(K.3Z!=P){1f(N a=K.3Z.1a-1;a>=0;--a){K.3Z[a].1m()}K.3Z=P}if(K.1Q!=P){1f(N a=K.1Q.1a-1;a>=0;--a){K.1Q[a].1m(1b)}K.1Q=P}if(K.3D){K.1q.2U(K.3D)}K.3D=P;if(K.2E){K.1n.un(K.2E);K.2E=P}K.1n.1m();K.1n=P},kb:Q(a){N b=K.8j&&a.5F!==K.5F;O.1c.1M(K,a);b&&K.2S(K.az(),K.5j,{zE:1d})},s3:Q(){R K.3c},zI:Q(e,c,a){N d=(2v a.dr==="Q");N b=O.3T.58(K[e],Q(f){R f[c]===a||(d&&a.dr(f[c]))});R b},zJ:Q(b,a){R K.zI("1Q",b,a)},YJ:Q(a){R K.zJ("2c",a)},YI:Q(a){R K.zJ("1p",a)},kK:Q(b,a){R K.zI("3Z",b,a)},Cj:Q(a){R K.kK("1p",a)},va:Q(e){N b=P;1f(N d=0,a=K.1Q.1a;d<a;d++){N c=K.1Q[d];if(c.id===e){b=c;1D}}R b},mt:Q(b,a){if(b 1V O.1C.yT){b.hd(K.c6.hl+a*5)}V{b.hd(K.c6[b.5y?"MK":"rq"]+a*5)}},MH:Q(){1f(N c=0,a=K.1Q.1a;c<a;c++){N b=K.1Q[c];K.mt(b,c)}},g8:Q(c){1f(N b=0,a=K.1Q.1a;b<a;b++){if(K.1Q[b]===c){N d=O.a4("YH",{8K:c.2c});R 1b}}if(K.1n.1L("MJ",{1i:c})===1b){R 1b}if(K.fC){c.5y=1b}c.1q.3U="YG";c.1q.W.ac="";K.mt(c,K.1Q.1a);K.3s.1X(c.1q);K.1Q.1u(c);c.2Z(K);if(c.5y||(K.fC&&!K.2a)){if(K.2a==P){K.f6(c)}V{c.f5(1b)}}V{c.3p()}K.1n.1L("f4",{1i:c});c.1n.1L("Mv",{U:K,1i:c});c.uQ();R 1d},qR:Q(c){1f(N b=0,a=c.1a;b<a;b++){K.g8(c[b])}},bG:Q(c,e){if(K.1n.1L("MI",{1i:c})===1b){R}if(e==P){e=1d}K.3s.2U(c.1q);O.1c.aM(K.1Q,c);c.ae(K);c.U=P;if(K.2a===c){K.2a=P;if(e){1f(N b=0,a=K.1Q.1a;b<a;b++){N d=K.1Q[b];if(d.5y||K.fC){K.f6(d);1D}}}}K.MH();K.1n.1L("dR",{1i:c});c.1n.1L("Mu",{U:K,1i:c})},YF:Q(){R K.1Q.1a},rp:Q(a){R O.1c.2N(K.1Q,a)},MG:Q(d,b){N e=K.rp(d);if(b<0){b=0}V{if(b>K.1Q.1a){b=K.1Q.1a}}if(e!==b){K.1Q.6f(e,1);K.1Q.6f(b,0,d);1f(N c=0,a=K.1Q.1a;c<a;c++){K.mt(K.1Q[c],c)}K.1n.1L("7w",{1i:d,aV:"8v"});if(K.fC){if(b===0){K.f6(d)}V{if(K.2a!==K.1Q[0]){K.f6(K.1Q[0])}}}}},YE:Q(b,c){N a=K.rp(b)+c;K.MG(b,a)},f6:Q(e){if(e!==K.2a){if(O.1c.2N(K.1Q,e)!==-1){N b=K.az();N f=O.1c.hA(K.uo(),e.2P);if(K.2a!=P&&!K.fC){K.2a.f5(1b)}K.2a=e;if(K.1Q.1a>1){1f(N d=0,a=K.1Q.1a;d<a;d++){if(K.1Q[d]!==e){K.1Q[d].Mt();K.1Q[d].fq&&K.1Q[d].fq()}}}K.cc++;if(!K.fC||K.2a.3v){K.2a.f5(1d);if(K.2a.8c===1b){K.2a.3p()}}if(b!=P){N c=K.aw(f||K.7K,1d);K.6g(b,c,1b,1d)}K.1n.1L("97",{1i:K.2a})}}},kL:Q(b,a){K.3Z.1u(b);K.zH(b,a)},Co:Q(b,g){N e=(1s.1a===1)?[]:g;1f(N d=0,a=b.1a;d<a;d++){N f=b[d];N c=(e[d])?e[d]:P;K.kL(f,c)}},zH:Q(b,a){b.qC=(b.1q!=P);if(K.5S&&!b.5S){b.5S=K.5S}b.2Z(K);N c=b.2H(a);if(c){if(!b.qC){c.W.5u=K.c6.1y+K.3Z.1a;K.3D.1X(c)}}if(b.9t){b.2r()}},oE:Q(e){N b=P;1f(N c=0,a=K.3Z.1a;c<a;c++){N d=K.3Z[c];if(d.id===e){b=d;1D}}R b},GR:Q(a){if((a)&&(a===K.oE(a.id))){if(a.1q&&(a.1q.2Y===K.3D)){K.3D.2U(a.1q)}O.1c.aM(K.3Z,a)}},YD:Q(a,d){if(d){1f(N b=K.ce.1a-1;b>=0;--b){K.mB(K.ce[b])}}a.U=K;K.ce.1u(a);N c=a.2H();if(c){c.W.5u=K.c6.4a+K.ce.1a;K.3s.1X(c)}},mB:Q(a){O.1c.aM(K.ce,a);if(a.1q){c1{K.3s.2U(a.1q)}c0(b){}}if(a.cH){c1{K.l5.2U(a.cH)}c0(b){}}a.U=P},YC:Q(){1f(N a=K.ce.1a-1;a>=0;--a){K.mB(K.ce[a])}},5i:Q(){N a=P;if(K.1G!=P){a=K.1G.1R()}R a},ec:Q(){N c=K.MF();if(c&&!2w(c.h)&&!2w(c.w)){K.1n.sE();N f=K.5i();if(f==P){K.1G=f=c}if(!c.3A(f)){K.1G=c;1f(N d=0,b=K.1Q.1a;d<b;d++){K.1Q[d].dD()}N a=K.az();if(K.2a!=P&&a!=P){N e=K.4I();K.5j=P;K.6g(a,e)}}}},MF:Q(){N a=S O.2J(K.1q.lr,K.1q.pE);if(a.w==0&&a.h==0||2w(a.w)&&2w(a.h)){a.w=K.1q.YB;a.h=K.1q.ME}if(a.w==0&&a.h==0||2w(a.w)&&2w(a.h)){a.w=2l(K.1q.W.1B);a.h=2l(K.1q.W.1E)}R a},a9:Q(a,b){N c=P;if(a==P){a=K.az()}if(b==P){b=K.2u()}if((a!=P)&&(b!=P)){N d=(K.1G.w*b)/2;N e=(K.1G.h*b)/2;c=S O.1U(a.1P-d,a.1S-e,a.1P+d,a.1S+e)}R c},b9:Q(){N a=P;N b=K.az();if(b){a=b.1R()}R a},az:Q(){if(!K.3G&&K.1G){K.3G=K.5w({x:K.1G.w/2,y:K.1G.h/2})}R K.3G},4I:Q(){R K.5j},MD:Q(){if(K.1Q===P){R 1d}N d=1d;1f(N c=0,e=K.1Q,a=e.1a;c<a;c++){N b=e[c];if(b.jV){d=1b;1D}}R d},74:Q(d,c,e){e=O.1c.4D(e,{mh:1d,41:1b});if(e.41){if((d!=0||c!=0)&&K.MD()){K.b0(d,c)}}V{N f=K.8A(K.az());N b=f.3t(d,c);if(K.41||!b.3A(f)){N a=K.5w(b);if(e.mh){K.wK(a)}V{K.2S(a);if(K.41){K.41=1b}K.1n.1L("6V",{})}}}},wK:Q(d){if(K.zG&&K.48().3M(K.MC).f3(d)){if(!K.ed){K.ed=S O.sD(K.zG)}N a=K.az();if(d.3A(a)){R}N f=K.dF(a);N e=K.dF(d);N b={x:e.x-f.x,y:e.y-f.y};N c={x:0,y:0};K.ed.3V({x:0,y:0},b,K.MB,{3H:{zF:O.2z.3P(Q(h){N g=h.x-c.x,i=h.y-c.y;K.b0(g,i);c.x=1k.2s(h.x);c.y=1k.2s(h.y)},K),7j:O.2z.3P(Q(g){K.2S(d);K.41=1b;K.1n.1L("6V",{})},K)}})}V{K.6g(d)}},6g:Q(c,a,b,d){K.ed&&K.ed.2Q();K.2S(c,a,{41:b,zE:d})},b0:Q(o,n){N h=K.1G.w/2;N c=K.1G.h/2;N l=h+o;N k=c+n;N d=K.2a.5z;N m=0;N j=0;if(K.5F){m=h;j=c;d=1b}o=d||l<=K.cd.x-m&&l>=K.8j.x+m?1k.2s(o):0;n=k<=K.cd.y-j&&k>=K.8j.y+j?1k.2s(n):0;N b=K.8j.x,a=K.cd.x;if(o||n){if(!K.41){K.41=1d;K.1n.1L("hy",{})}K.3G=P;if(o){K.3s.W.1r=2l(K.3s.W.1r)-o+"px";K.8j.x-=o;K.cd.x-=o;if(d){if(K.cd.x>a){K.cd.x-=(a-b)}if(K.8j.x<b){K.8j.x+=(a-b)}}}if(n){K.3s.W.1t=2l(K.3s.W.1t)-n+"px";K.8j.y-=n;K.cd.y-=n}N f,e,g;1f(e=0,g=K.1Q.1a;e<g;++e){f=K.1Q[e];if(f.3v&&(f===K.2a||f.8c)){f.b0(o,n);f.1n.1L("3B",{x:o,y:n})}}K.1n.1L("3B",{x:o,y:n})}},YA:Q(f){N c,a=K.2a.1T,b=K.9F().3J()/K.1G.w;if(K.ax(f)>b){1f(N d=f|0,e=a.1a;d<e;++d){if(a[d]<=b){f=d;1D}}}R f},2S:Q(j,a,e){if(a!=P){a=3r(a);if(!K.jg){a=1k.2s(a)}}N b=1d;if(a!==2b){if(a!==K.4I()){N v=K.2a.ax(a);N p=K.4A;if(K.4A==="4w"){p=K.Mz()}if(K.4r!==P&&p!==P){b=((v>=K.4r)&&(v<=p))}V{if(K.4r!==P&&p===P){b=(v>=K.4r)}V{if(K.4r===P&&p!==P){b=(v<=p)}}}if(K.k6!==P&&K.k5!==P){b=((a>=K.k6)&&(a<=K.k5))}V{if(K.k6!==P&&K.k5===P){b=a>=K.k6}V{if(K.k6===P&&K.k5!==P){b=a<=K.k5}}}if(!b){R}}}V{a=K.4I()}if(j!=P&&!(j 1V O.3k)){j=S O.3k(j)}if(!e){e={}}if(K.2a.5z){N m=a;if(a!==m){j=K.b9()}}N q=e.41||K.41;N k=e.zE;if(!K.az()&&!K.zD(j)){j=K.3a.64();K.3G=j.1R()}if(K.5F!=P){if(j==P){j=K.3G}if(a==P){a=K.4I()}if(a<K.hq(K.5F,1d)){a=K.hq(K.5F,1d)}N r=K.ax(a);N n=K.a9(j,r);if(!K.5F.a0(n)){N y=K.5F.64();if(n.3J()>K.5F.3J()){j=S O.3k(y.1P,j.1S)}V{if(n.1r<K.5F.1r){j=j.3t(K.5F.1r-n.1r,0)}V{if(n.1I>K.5F.1I){j=j.3t(K.5F.1I-n.1I,0)}}}if(n.4J()>K.5F.4J()){j=S O.3k(j.1P,y.1S)}V{if(n.1N<K.5F.1N){j=j.3t(0,K.5F.1N-n.1N)}V{if(n.1t>K.5F.1t){j=j.3t(0,K.5F.1t-n.1t)}}}}}N l=k||((K.zC(a))&&(a!==K.4I()));N g=(K.zD(j))&&(!j.3A(K.3G));if(l||g||q){q||K.1n.1L("hy",{bU:l});if(g){if(!l&&K.3G){K.MA(j)}K.3G=j.1R()}N z=l?K.ax(a):K.2u();if(l||K.mb==P){K.mb=K.az();K.3s.W.1r="bS";K.3s.W.1t="bS";N o=K.9F();N d=o.64();N h=K.3G.1P-d.1P;N c=d.1S-K.3G.1S;N w=1k.2s(o.3J()/z);N u=1k.2s(o.4J()/z);K.8j={x:(K.1G.w-w)/2-h/z,y:(K.1G.h-u)/2-c/z};K.cd={x:K.8j.x+1k.2s(o.3J()/z),y:K.8j.y+1k.2s(o.4J()/z)}}if(l){K.5j=a;K.7K=z;K.cc++}N f=K.48();if(K.2a.3v){K.2a.2S(f,l,e.41);e.41||K.2a.1n.1L("6V",{bU:l})}f=K.2a.48();1f(N s=K.1Q.1a-1;s>=0;--s){N x=K.1Q[s];if(x!==K.2a&&!x.5y){N b=x.cF();if(x.8c!==b){x.8c=b;if(!b){x.2g(1b)}K.1n.1L("7w",{1i:x,aV:"3v"})}if(b&&x.3v){x.2S(f,l,e.41);e.41||x.1n.1L("6V",{bU:l})}}}K.1n.1L("3B",{bU:l});q||K.1n.1L("6V",{bU:l});if(l){1f(N s=0,t=K.ce.1a;s<t;s++){K.ce[s].uE()}K.1n.1L("qM",{})}}},MA:Q(c){N d=K.8A(K.mb);N g=K.8A(c);if((d!=P)&&(g!=P)){N a=2l(K.3s.W.1r);N b=2l(K.3s.W.1t);N f=1k.2s(d.x-g.x);N e=1k.2s(d.y-g.y);K.3s.W.1r=f+"px";K.3s.W.1t=e+"px";N i=a-f;N h=b-e;K.8j.x-=i;K.cd.x-=i;K.8j.y-=h;K.cd.y-=h}},zC:Q(a){R((a!=P)&&(a>=0)&&(a<K.9M()))},zD:Q(d){N c=1b;if(d!=P){N a=K.9F();N b=K.2a.5z&&a;c=a.f3(d,{dL:b})}R c},c5:Q(){N a=K.5X();R a?a.7X():P},5X:Q(){N a=P;if(K.2a!=P){a=K.2a.2O}R a},Mz:Q(){N a=P;if(K.2a!=P){a=K.2a.4A}R a},9F:Q(b){N a=P;if(b&&b.zB&&K.5F){a=K.5F}V{if(K.2a!=P){a=K.2a.3a}}R a},9M:Q(){N a=P;if(K.2a!=P){a=K.2a.5l}R a},48:Q(){N a=P;if(K.2a!=P){a=K.2a.48()}R a},2u:Q(){N a=P;if(K.2a!=P){a=K.2a.2u()}V{if(K.fC===1d&&K.1Q.1a>0){a=K.1Q[0].2u()}}R a},cr:Q(){N a=P;if(K.2a!=P){a=K.2a.2P}R a},uo:Q(){N c=P;if(K.2a!=P){N b=K.2u();N a=K.2a.2P;if(K.2a.4l){c=O.1c.fr(b,K.2a.4l,a,K.2a.5c)}V{c=O.1c.nf(b,a);if(c){c=1/c}}}R c},hq:Q(c,b){N a=P;if(K.2a!=P){a=K.2a.hq(c,b)}R a},ax:Q(b){N a=P;if(K.2a){a=K.2a.ax(b)}R a},aw:Q(a,c){N b=P;if(K.2a!=P){b=K.2a.aw(a,c)}R b},h1:Q(a){if(K.zC(a)){K.6g(P,a)}},fd:Q(){K.h1(K.4I()+1)},cY:Q(){K.h1(K.4I()-1)},r6:Q(d,c){if(!(d 1V O.1U)){d=S O.1U(d)}N b=d.64();if(K.2a.5z){N a=K.9F();d=d.1R();4U(d.1I<d.1r){d.1I+=a.3J()}b=d.64().5z(a)}K.6g(b,K.hq(d,c))},qE:Q(c){N b=(c)?c.zB:1d;N a=K.9F({zB:b});K.r6(a)},Yz:Q(g,d){N b=O.1c.hA(g,K.2a.2P);N e=(K.1G.w*b)/2;N f=(K.1G.h*b)/2;N a=K.az();N c=S O.1U(a.1P-e,a.1S-f,a.1P+e,a.1S+f);K.r6(c,d)},5w:Q(a){N b=P;if(K.2a!=P){b=K.2a.5w(a)}R b},8A:Q(b){N a=P;if(K.2a!=P){a=K.2a.8A(b)}R a},6Q:Q(a){R K.5w(a)},dF:Q(b){N a=K.8A(b);a.x=1k.2s(a.x);a.y=1k.2s(a.y);R a},FG:Q(g){N d=g?K.6Q(g):(K.az()||S O.3k(0,0));N e=K.2u();N c=d.3t(-e/2,0);N i=d.3t(e/2,0);N b=d.3t(0,-e/2);N f=d.3t(0,e/2);N h=S O.3h("4t:9r");N a=K.5X()||h;if(!a.3A(h)){c.3N(a,h);i.3N(a,h);b.3N(a,h);f.3N(a,h)}R S O.2J(O.1c.vQ(c,i),O.1c.vQ(b,f))},ir:Q(d){N c=P;if(d!=P){N b=2l(K.3s.W.1r);N a=2l(K.3s.W.1t);c=d.3t(b,a)}R c},My:Q(c){N d=P;if(c!=P){N b=-2l(K.3s.W.1r);N a=-2l(K.3s.W.1t);d=c.3t(b,a);if(2w(d.x)||2w(d.y)){d=P}}R d},gp:Q(a){a=K.ir(a);R K.5w(a)},bT:Q(b){N a=K.dF(b);R K.My(a)},1p:"O.e0"});O.e0.Mx=eP;O.e0.Mw=eP;O.1C=O.1A({id:P,2c:P,1q:P,2M:P,fv:P,sa:1d,2K:["aU","7t","Yy","ge","3B","6V","Mv","Mu","zo"],9R:["3F","1T","55","56","4A","4r","5l","bN"],1n:P,U:P,5y:1b,ls:1b,l9:1d,3v:1d,8c:1b,gm:P,zw:P,2D:P,2E:P,fB:0,2O:P,2P:P,3F:P,1T:P,3a:P,7b:P,4A:P,4r:P,5l:P,56:P,55:P,zx:1b,5z:1b,mF:{},1o:Q(b,a){K.yh(a);K.2c=b;if(K.id==P){K.id=O.1c.7L(K.1p+"49");K.1q=O.1c.7v(K.id);K.1q.W.1B="100%";K.1q.W.1E="100%";K.1q.Yx="Yw";K.1n=S O.4o(K,K.1q,K.2K);if(K.2E 1V 6O){K.1n.on(K.2E)}}if(K.5z){K.zx=1d}},1m:Q(a){if(a==P){a=1d}if(K.U!=P){K.U.bG(K,a)}K.2O=P;K.U=P;K.2c=P;K.1q=P;K.2D=P;if(K.1n){if(K.2E){K.1n.un(K.2E)}K.1n.1m()}K.2E=P;K.1n=P},Mt:Q(){K.1T=P;K.3F=P},1R:Q(a){if(a==P){a=S O.1C(K.2c,K.85())}O.1c.4D(a,K);a.U=P;R a},85:Q(){N a={};1f(N b in K.2D){a[b]=K[b]}R a},Yv:Q(a){if(a!==K.2c){K.2c=a;if(K.U!=P){K.U.1n.1L("7w",{1i:K,aV:"2c"})}}},yh:Q(e,a){if(K.2D==P){K.2D={}}if(e){if(2v e.2O==="cp"){e.2O=S O.3h(e.2O)}if(e.2O){O.1c.4D(e,O.3h.k4[e.2O.7X()])}if(e.3a&&!(e.3a 1V O.1U)){e.3a=S O.1U(e.3a)}if(e.7b&&!(e.7b 1V O.1U)){e.7b=S O.1U(e.7b)}}O.1c.1M(K.2D,e);O.1c.1M(K,e);if(K.2O&&K.2O.cr()){K.2P=K.2O.cr()}if(K.U){N b=K.U.2u();N c=K.9R.7E(["2O","2P","7b","3a"]);1f(N d in e){if(e.cj(d)&&O.1c.2N(c,d)>=0){K.fq();if(a&&K.U.2a===K){K.U.6g(K.U.b9(),K.U.aw(b),1b,1d);K.U.1n.1L("97",{1i:K})}1D}}}},dD:Q(){},3p:Q(){N b=1b;if(K.U){K.8c=K.cF();N c=K.48();if(c&&K.8c&&K.3v){N a=1d;K.2S(c,a,1b);K.1n.1L("6V",{bU:a});b=1d}}R b},2S:Q(b,a,c){N d=K.3v;if(!K.5y){d=d&&K.8c}K.2g(d)},b0:Q(b,a){},2Z:Q(b){if(K.U==P){K.U=b;K.3a=K.3a||K.U.3a;K.7b=K.7b||K.U.7b;K.2O=K.2O||K.U.2O;if(2v K.2O==="cp"){K.2O=S O.3h(K.2O)}if(!K.2P){K.2P=K.2O.cr()||K.U.2P}K.fq();if(!K.5y){K.8c=K.cF();N a=((K.3v)&&(K.8c));K.1q.W.2g=a?"":"2L"}K.ht()}},uQ:Q(){},ae:Q(a){},zv:Q(a){R(K.gm||K.3c)},ht:Q(a){N b=(a)?a:((K.3c)?K.3c:K.U.s3());K.3c=b;if(K.fB){K.zw=S O.2C(-K.fB,-K.fB);K.gm=S O.2J(b.w+(2*K.fB),b.h+(2*K.fB))}},dn:Q(){R K.3v},f5:Q(a){if(a!==K.3v){K.3v=a;if(a){K.sa=1b}K.2g(a);K.3p();if(K.U!=P){K.U.1n.1L("7w",{1i:K,aV:"3v"})}K.1n.1L("ge");K.sa=1d}},2g:Q(a){if(a!==(K.1q.W.2g!=="2L")){K.1q.W.2g=(a&&K.cF())?"iE":"2L"}},cF:Q(){N c=1b;N b=1e-9;if(K.fv){c=1d}V{if(K.U){N a=K.U.2u();c=((a-K.4r>=-b)&&(a-K.4A<=b))}}R c},Yu:Q(a){if(a!==K.5y){K.5y=a;if(K.U!=P){K.U.1n.1L("97",{1i:K})}}},fq:Q(){N e,a,h;N f={},d=1d;1f(e=0,a=K.9R.1a;e<a;e++){h=K.9R[e];f[h]=K.2D[h];if(d&&K.2D[h]){d=1b}}if(K.fv==P){K.fv=d}if(f.1T==P){f.1T=K.fu(f.3F)}if(f.1T==P){f.1T=K.fs(f)}if(f.1T==P){1f(e=0,a=K.9R.1a;e<a;e++){h=K.9R[e];f[h]=K.2D[h]!=P?K.2D[h]:K.U[h]}if(f.1T==P){f.1T=K.fu(f.3F)}if(f.1T==P){f.1T=K.fs(f)}}N c;if(K.2D.4A&&K.2D.4A!=="4w"){c=K.2D.4A}if(K.2D.56){c=O.1c.hA(K.2D.56,K.2P)}N b;if(K.2D.4r&&K.2D.4r!=="4w"){b=K.2D.4r}if(K.2D.55){b=O.1c.hA(K.2D.55,K.2P)}if(f.1T){f.1T.93(Q(j,i){R(i-j)});if(!c){c=f.1T[0]}if(!b){N g=f.1T.1a-1;b=f.1T[g]}}K.1T=f.1T;if(K.1T){a=K.1T.1a;K.3F=S 3T(a);1f(e=0;e<a;e++){K.3F[e]=O.1c.nf(K.1T[e],K.2P)}K.5l=a}K.4r=b;if(b){K.55=O.1c.nf(b,K.2P)}K.4A=c;if(c){K.56=O.1c.nf(c,K.2P)}},fu:Q(d){if(d==P){R}N b,c,a;a=d.1a;b=S 3T(a);1f(c=0;c<a;c++){b[c]=O.1c.hA(d[c],K.2P)}R b},fs:Q(k){N l,j,g;N m=k.4A;if(k.56!=P){m=O.1c.hA(k.56,K.2P)}V{if(m==="4w"&&K.3a!=P){l=K.U.5i();j=K.3a.3J()/l.w;g=K.3a.4J()/l.h;m=1k.3l(j,g)}}N f=k.4r;if(k.55!=P){f=O.1c.hA(k.55,K.2P)}V{if(k.4r==="4w"&&K.7b!=P){l=K.U.5i();j=K.7b.3J()/l.w;g=K.7b.4J()/l.h;f=1k.3l(j,g)}}if(2v m!=="6w"&&2v f!=="6w"&&K.3a!=P){N n=K.U.s3();m=1k.3l(K.3a.3J()/n.w,K.3a.4J()/n.h)}N a=k.bN;N b=k.5l;if(2v f==="6w"&&2v m==="6w"&&b===2b){N h=m/f;b=1k.9d(1k.fc(h)/1k.fc(2))+1}V{if(b===2b&&a!=P){b=a+1}}if(2v b!=="6w"||b<=0||(2v m!=="6w"&&2v f!=="6w")){R}N d=S 3T(b);N c=2;if(2v f==="6w"&&2v m==="6w"){c=1k.2W((m/f),(1/(b-1)))}N e;if(2v m==="6w"){1f(e=0;e<b;e++){d[e]=m/1k.2W(c,e)}}V{1f(e=0;e<b;e++){d[b-1-e]=f*1k.2W(c,e)}}R d},2u:Q(){N a=K.U.4I();R K.ax(a)},48:Q(){R K.U.a9()},hq:Q(b,c){N d=K.U.5i();N a;if(K.U&&K.U.5F){a=1k.4q(b.3J()/d.w,b.4J()/d.h)}V{a=1k.3l(b.3J()/d.w,b.4J()/d.h)}R K.aw(a,c)},uK:Q(){},ax:Q(c){c=1k.3l(0,1k.4q(c,K.1T.1a-1));N b;if(K.U.jg){N a=1k.9d(c);N d=1k.na(c);b=K.1T[a]-((c-a)*(K.1T[a]-K.1T[d]))}V{b=K.1T[1k.2s(c)]}R b},mW:Q(d){N c,b,a;c=K.ax(d);a=K.2P;if(K.4l){b=O.1c.fr(c,K.4l,a,K.5c)}V{b=O.1c.nf(c,a)}R b},aw:Q(e,b){if(!e){R 0}N n,f,g;if(K.U.jg){N k=0;N c=K.1T.1a-1;N d=K.1T[k];N a=K.1T[c];N j;1f(f=0,g=K.1T.1a;f<g;++f){j=K.1T[f];if(j>=e){d=j;k=f}if(j<=e){a=j;c=f;1D}}N h=d-a;if(h>0){n=k+((d-e)/h)}V{n=k}}V{N l;N m=6c.q7;1f(f=0,g=K.1T.1a;f<g;f++){if(b){l=1k.3C(K.1T[f]-e);if(l>m){1D}m=l}V{if(K.1T[f]<e){1D}}}n=1k.3l(0,f-1)}R n},5w:Q(b){N d=P;N f=K.U;if(b!=P&&f.8j){N c=f.2u();N a=f.9F();N g=(b.x-f.8j.x)*c+a.1r;N e=(f.8j.y-b.y)*c+a.1t;d=S O.3k(g,e);if(K.5z){d=d.5z(K.3a)}}R d},8A:Q(d){N b=P;if(d!=P){N a=K.U.2u();N c=K.U.48();b=S O.2C((1/a*(d.1P-c.1r)),(1/a*(c.1t-d.1S)))}R b},ad:Q(b){if(b!==K.2M){K.2M=b;if(K.4i){K.3p()}V{1f(N d=0,a=K.1q.bI.1a;d<a;++d){N c=K.1q.bI[d].aj||K.1q.bI[d];O.1c.jB(c,P,P,P,P,P,P,b)}}if(K.U!=P){K.U.1n.1L("7w",{1i:K,aV:"2M"})}}},gH:Q(){R K.1q.W.5u},hd:Q(a){K.1q.W.5u=a},Jp:Q(b){if(K.fB){N a=K.fB*K.U.2u();b=S O.1U(b.1r-a,b.1N-a,b.1I+a,b.1t+a)}if(K.5z){N c={Ms:K.2u(),Mr:K.2u()};b=b.5z(K.3a,c)}R b},1p:"O.1C"});O.1l.8P={es:"es",tH:"tH",dl:"dl",kD:"kD",sy:"sy",Mq:"Mq",Mp:"Mp",hk:"hk"};O.1l.Bd={Mo:"Mo",tt:"tt",Mn:"Mn"};O.1l.Yt={Mm:"Mm",Ml:"Ml"};O.1l.B3={sC:"sC",su:"su",Mk:"Mk",sv:"sv",fS:"fS",6J:"6J",Mj:"Mj",Mi:"Mi",sB:"sB"};O.1l.Ys={sC:"sC",fS:"fS",sB:"sB"};O.1l.tA={tC:"tC",ky:"ky"};O.1l.Br={tD:"tD",Mh:"Mh",Mf:"Mf",Me:"Me",Md:"Md",Mc:"Mc",Mb:"Mb",Ma:"Ma",M9:"M9",M8:"M8",M7:"M7",M6:"M6",M5:"M5"};O.1l.Yr={M4:"M4",M3:"M3",M2:"M2",M1:"M1",M0:"M0",LZ:"LZ"};O.1l.Yq={LY:"LY",LX:"LX",LW:"LW",LV:"LV",LU:"LU"};O.1l.Yp={ky:"ky",LT:"LT",LS:"LS",es:"es",LR:"LR",LQ:"LQ",dl:"dl",LP:"LP",LO:"LO",LN:"LN",LM:"LM",LL:"LL",LK:"LK"};O.1l.Yo={LJ:"LJ",6J:"6J",LI:"LI"};O.1l.Yn={LH:"LH",sA:"sA",sz:"sz"};O.1l.Ym={LG:"LG",LF:"LF",sA:"sA",LE:"LE",sz:"sz",st:"st"};O.1l.Yl={tc:"tc",tb:"tb",td:"td",tf:"tf",ta:"ta",te:"te"};O.1l.Yk={Yj:"Yi",Yh:"Yg",Yf:"Ye",Yd:"Yc",Yb:"Ya",Y9:"Y8",Y7:"Y6",Y5:"Y4",Y3:"Y2",Y1:"Y0",XZ:"XY",XX:"XW",XV:"XU",XT:"XS",XR:"XQ",XP:"XO",XN:"XM",XL:"XK",XJ:"XI",XH:"XG",LD:"LD",LC:"LC",XF:"XE",XD:"XC",XB:"XA",Xz:"Xy",Xx:"Xw"};O.1l.AW={LB:"LB",LA:"LA",Lz:"Lz",Ly:"Ly",to:"to",Lx:"Lx",Lw:"Lw",Lv:"Lv",Lu:"Lu",Lt:"Lt",Ls:"Ls",Lr:"Lr"};O.1l.Xv={6J:"6J",pL:"pL",pK:"pK",Lq:"Lq",Lp:"Lp"};O.1l.Xu={Lo:"Xt",Xs:"Xr",Xq:"Xp",Xo:"Xn",Xm:"Xl"};O.1l.Xk={Ln:"Ln",sy:"sy",Lm:"Lm",6J:"6J",Ll:"Ll",Lk:"Lk",Lj:"Lj"};O.1l.Xj={Li:"Li",6J:"6J",Lh:"Lh"};O.1l.Xi={Lg:"Lg",6J:"6J",Lf:"Lf",Le:"Le",Ld:"Ld"};O.1l.Xh={sx:"sx",Lc:"Lc",6J:"6J",sw:"sw"};O.1l.Xg={Lb:"Lb",La:"La",L9:"L9"};O.1l.Xf={L8:"L8",L7:"L7",L6:"L6",sx:"sx",6J:"6J",sw:"sw"};O.1l.Xe={L5:"L5",L4:"L4"};O.1l.Xd={L3:"L3",L2:"L2",sv:"sv",fS:"fS",L1:"L1",dT:"dT",L0:"L0"};O.1l.Xc={KZ:"KZ",KY:"KY"};O.1l.Xb={KX:"KX",KW:"KW"};O.1l.Xa={KV:"KV",KU:"KU",KT:"KT"};O.1l.X9={X8:"3t",dT:"6U",cf:"2t"};O.1l.X7={KS:"KS",KR:"KR",KQ:"KQ",KP:"KP"};O.1l.X6={KO:"KO",KN:"KN",KM:"KM",6J:"6J"};O.1l.X5={su:"su",nD:"nD",dl:"dl"};O.1l.X4={KL:"KL",KK:"KK"};O.1l.X3={nz:"nz",tj:"tj",tk:"tk",KJ:"KJ"};O.1l.X2={KI:"KI",KH:"KH",KG:"KG",st:"st",KF:"KF",KE:"KE"};O.1l.X1={KD:"KD",KC:"KC",KB:"KB",KA:"KA",Kz:"Kz",Ky:"Ky",Kx:"Kx",Kw:"Kw",Kv:"Kv",Ku:"Ku"};O.1l.X0={Kt:"Kt",Ks:"Ks",6J:"6J",Kr:"Kr"};O.1l.WZ={Kq:"Kq",Kp:"Kp",Ko:"Ko"};O.1l.WY={Kn:"Kn",Km:"Km",Kl:"Kl"};O.1l.WX={Kk:"Kk",Kj:"Kj"};O.ss=O.1A({1z:P,1G:P,3j:P,hz:P,7c:P,px:P,1o:Q(a,b,d,c){K.1z=a;K.1G=(b)?b:S O.2J(20,20);K.3j=d?d:S O.2C(-(K.1G.w/2),-(K.1G.h/2));K.hz=c;N e=O.1c.7L("WW");K.7c=O.1c.92(e)},1m:Q(){K.jR();O.1J.a5(K.7c.aj);K.7c.6k="";K.7c=P},1R:Q(){R S O.ss(K.1z,K.1G,K.3j,K.hz)},6G:Q(a){if(a!=P){K.1G=a}K.2H()},sn:Q(a){if(a!=P){K.1z=a}K.2H()},2H:Q(a){O.1c.sq(K.7c,P,P,K.1G,K.1z,"3i");K.7c.W.3I="4u";K.2S(a);R K.7c},jR:Q(){if(K.7c!=P&&K.7c.2Y!=P){O.2I.iG(K.7c)}},ad:Q(a){O.1c.sq(K.7c,P,P,P,P,P,P,P,a)},2S:Q(a){if(a!=P){K.px=a}if(K.7c!=P){if(K.px==P){K.2g(1b)}V{if(K.hz){K.3j=K.hz(K.1G)}N b=K.px.3j(K.3j);O.1c.sq(K.7c,P,b)}}},2g:Q(a){K.7c.W.2g=(a)?"":"2L"},rW:Q(){N a=(K.7c&&K.7c.2Y&&(K.7c.2Y.Ki!==11));R a},1p:"O.ss"});O.hl=O.1A({4Z:P,5x:P,1n:P,U:P,1o:Q(e,d){N c=K;K.5x=e;N a=(d)?d.1R():O.hl.Kh();if(K.4Z==P){K.4Z=a}V{K.4Z.1z=a.1z;K.4Z.1G=a.1G;K.4Z.3j=a.3j;K.4Z.hz=a.hz}K.1n=S O.4o(K,K.4Z.7c,["fh"]);N b=O.2z.5e(Q(f){if(f.c2){f.c2()}c.1n.1L("fh",f);R 1b},K.1n);O.1J.3q(K.4Z.7c,"jt",b)},WV:Q(){R K.5x},1m:Q(){K.jR();K.U=P;K.1n.1m();K.1n=P;if(K.4Z!=P){K.4Z.1m();K.4Z=P}},2H:Q(a){R K.4Z.2H(a)},jR:Q(){if(K.4Z!=P){K.4Z.jR()}},2S:Q(a){if((a!=P)&&(K.4Z!=P)){K.4Z.2S(a)}K.5x=K.U.gp(a)},rW:Q(){N a=(K.4Z&&K.4Z.rW());R a},y5:Q(){N b=1b;if(K.U){N a=K.U.48();b=a.f3(K.5x)}R b},WU:Q(b){if(K.4Z){N a=S O.2J(K.4Z.1G.w*b,K.4Z.1G.h*b);K.4Z.6G(a)}},ad:Q(a){K.4Z.ad(a)},sn:Q(a){K.4Z.sn(a)},2g:Q(a){K.4Z.2g(a)},1p:"O.hl"});O.hl.Kh=Q(){N a=O.1c.4X()+"bm.2V";N b=S O.2J(21,25);N c=Q(d){R S O.2C(-(d.w/2),-d.h)};R S O.ss(a,b,P,c)};O.4a=O.1A({1n:P,id:"",5x:P,1q:P,83:P,1G:P,hx:P,dZ:"",2M:"",9f:"",59:P,91:P,6W:P,ih:1b,bR:P,bQ:P,5Y:"WT",l6:"WS",4P:0,Kg:1b,zy:Q(){if(2v K.4P==="6w"){K.4P=S O.1U(K.4P,K.4P,K.4P,K.4P)}},gn:1b,uF:1b,zA:1b,U:P,1o:Q(g,c,f,b,e,d){if(g==P){g=O.1c.7L(K.1p+"49")}K.id=g;K.5x=c;K.83=(f!=P)?f:S O.2J(O.4a.K3,O.4a.K2);if(b!=P){K.hx=b}K.dZ=O.4a.K1;K.2M=O.4a.K0;K.9f=O.4a.JZ;K.1q=O.1c.7v(K.id,P,P,P,P,P,"7e");K.1q.3U=K.5Y;N a=K.id+"WR";K.91=O.1c.7v(a,P,P,P,"gl",P,"7e");N g=K.1q.id+"WQ";K.59=O.1c.7v(g,P,K.83.1R(),P,"gl");K.59.3U=K.l6;K.91.1X(K.59);K.1q.1X(K.91);if(e){K.Ka(d)}K.K9()},1m:Q(){K.id=P;K.5x=P;K.1G=P;K.hx=P;K.dZ=P;K.2M=P;K.9f=P;if(K.zA&&K.U){K.U.1n.6H("hy",K,K.aX)}K.1n.1m();K.1n=P;if(K.6W){O.1J.a5(K.6W);K.91.2U(K.6W)}K.6W=P;K.1q.2U(K.91);K.91=P;if(K.U!=P){K.U.mB(K)}K.U=P;K.1q=P;K.ih=P;K.bR=P;K.bQ=P;K.4P=P;K.gn=P},2H:Q(a){if(a==P){if((K.5x!=P)&&(K.U!=P)){a=K.U.bT(K.5x)}}if(K.zA){K.U.1n.4Q("hy",K,K.aX)}if(!K.Kg&&O.8R.2c==="DX"){K.U.1n.4Q("hy",K,Q(){N b=1O.je.jd(K.59,P);N c=b.xl("ac");if(c!=="9y"){K.59.zz=c;K.59.W.ac="9y"}});K.U.1n.4Q("6V",K,Q(){N b=K.59.zz;if(b){K.59.W.ac=b;K.59.zz=P}})}K.2S(a);if(!K.ih&&!K.1G){if(!!K.bQ){K.83=S O.2J(K.83.w>K.bQ.w?K.bQ.w:K.83.w,K.83.h>K.bQ.h?K.bQ.h:K.83.h)}if(!!K.bR){K.83=S O.2J(K.83.w<K.bR.w?K.bR.w:K.83.w,K.83.h<K.bR.h?K.bR.h:K.83.h)}K.6G(K.83)}K.Kf();K.ad();K.uC();K.Ke();if(K.gn){K.sr()}R K.1q},uE:Q(){if((K.5x)&&(K.U)){N a=K.U.bT(K.5x);if(a){K.2S(a)}}},2S:Q(a){if((a!=P)&&(K.1q!=P)){K.1q.W.1r=a.x+"px";K.1q.W.1t=a.y+"px"}if((a!=P)&&(K.cH!=P)){K.cH.W.1r=a.x+"px";K.cH.W.1t=a.y+2l(K.1q.W.1E)/3+15+"px"}},7e:Q(){R O.2I.7e(K.1q)},8x:Q(){if(K.7e()){K.aX()}V{K.eN()}},eN:Q(){K.1q.W.2g="";if(K.gn){K.sr()}},aX:Q(){if(K.1q){K.1q.W.2g="2L"}},6G:Q(c){K.1G=c.1R();N b=K.l7();N a=b.1r+b.1I;N e=b.1t+b.1N;K.zy();a+=K.4P.1r+K.4P.1I;e+=K.4P.1t+K.4P.1N;if(K.6W){N d=2l(K.6W.W.1B);a+=d+b.1I}K.1G.w+=a;K.1G.h+=e;if(O.8R.2c==="i1"){K.83.w+=b.1r+b.1I;K.83.h+=b.1N+b.1t}if(K.1q!=P){K.1q.W.1B=K.1G.w+"px";K.1q.W.1E=K.1G.h+"px"}if(K.59!=P){if(K.ih){K.59.W.1B=c.w+7+"px"}V{K.59.W.1B=c.w+"px"}K.59.W.1E=c.h+"px"}},ec:Q(){N b="<1q I9=\'"+K.l6+"\'>"+K.59.6k+"</1q>";N c=(K.U)?K.U.3s:1O.8a;N a=O.1c.WP(b,P,{5Y:K.5Y,WO:c});K.6G(a)},Kf:Q(a){if(a!=2b){K.dZ=a}if(K.1q!=P){K.1q.W.dZ=K.dZ}},ad:Q(a){if(a!=2b){K.2M=a}if(K.1q!=P){K.1q.W.2M=K.2M;K.1q.W.58="ls(2M="+K.2M*100+")"}},uC:Q(a){if(a!=2b){K.9f=a}if(K.1q!=P){K.1q.W.9f=K.9f}},Ke:Q(a){if(a!=P){K.hx=a}if((K.59!=P)&&(K.hx!=P)&&(K.hx!=K.59.6k)){K.59.6k=K.hx;if(K.ih){K.Kd();K.ec()}}},Kd:Q(){N f=Q(){K.66.ec();if(K.66.7e()&&K.66.gn){K.66.sr()}O.1J.au(K.3e,"aT",K.3e.WN)};N b=K.59.iC("3e");1f(N e=0,a=b.1a;e<a;e++){N c=b[e];if(c.1B==0||c.1E==0){N d={66:K,3e:c};c.Kc=O.2z.3P(f,d);O.1J.3q(c,"aT",c.Kc)}}},WM:Q(k){N d=k.1R();N i=K.l7();N j=i.1r+i.1I;N g=i.1t+i.1N;K.zy();j+=K.4P.1r+K.4P.1I;g+=K.4P.1t+K.4P.1N;if(K.6W){N c=2l(K.6W.W.1B);j+=c+i.1I}if(K.bR){d.w=1k.3l(d.w,(K.bR.w-j));d.h=1k.3l(d.h,(K.bR.h-g))}if(K.bQ){d.w=1k.4q(d.w,(K.bQ.w-j));d.h=1k.4q(d.h,(K.bQ.h-g))}if(K.U&&K.U.1G){N f=0,e=0;if(K.uF&&!K.gn){N h=K.U.dF(K.5x);5m(K.9z){1K"tr":f=h.x;e=K.U.1G.h-h.y;1D;1K"tl":f=K.U.1G.w-h.x;e=K.U.1G.h-h.y;1D;1K"bl":f=K.U.1G.w-h.x;e=h.y;1D;1K"br":f=h.x;e=h.y;1D;4m:f=h.x;e=K.U.1G.h-h.y;1D}}N a=K.U.1G.h-K.U.9k.1t-K.U.9k.1N-g-e;N b=K.U.1G.w-K.U.9k.1r-K.U.9k.1I-j-f;d.w=1k.4q(d.w,b);d.h=1k.4q(d.h,a)}R d},l7:Q(){N a=K.Kb;if(!a){if(K.1q.2Y==P){K.1q.W.2g="2L";1O.8a.1X(K.1q)}a=S O.1U(O.2I.9O(K.59,"4P-1r"),O.2I.9O(K.59,"4P-1N"),O.2I.9O(K.59,"4P-1I"),O.2I.9O(K.59,"4P-1t"));K.Kb=a;if(K.1q.2Y===1O.8a){1O.8a.2U(K.1q);K.1q.W.2g=""}}R a},Ka:Q(c){K.6W=O.1c.7v(K.id+"WL",P,S O.2J(17,17));K.6W.3U="WK";N b=K.l7();K.6W.W.1I=b.1I+"px";K.6W.W.1t=b.1t+"px";K.91.1X(K.6W);N a=c||Q(d){K.aX();O.1J.2Q(d)};O.1J.3q(K.6W,"ff",O.2z.5e(a,K));O.1J.3q(K.6W,"2X",O.2z.5e(a,K))},sr:Q(){N e=K.U.5i();N d=K.U.ir(S O.2C(2l(K.1q.W.1r),2l(K.1q.W.1t)));N c=d.1R();if(d.x<K.U.9k.1r){c.x=K.U.9k.1r}V{if((d.x+K.1G.w)>(e.w-K.U.9k.1I)){c.x=e.w-K.U.9k.1I-K.1G.w}}if(d.y<K.U.9k.1t){c.y=K.U.9k.1t}V{if((d.y+K.1G.h)>(e.h-K.U.9k.1N)){c.y=e.h-K.U.9k.1N-K.1G.h}}N b=d.x-c.x;N a=d.y-c.y;K.U.74(b,a)},K9:Q(){K.1n=S O.4o(K,K.1q,P,1d);Q a(b){O.1J.2Q(b,1d)}K.1n.on({4g:K.K8,4y:K.K7,4x:K.K6,2X:K.vw,bf:K.K5,4H:K.K4,9e:a,2y:K})},K8:Q(a){K.4g=1d;O.1J.2Q(a,1d)},K7:Q(a){if(K.4g){O.1J.2Q(a,1d)}},K6:Q(a){if(K.4g){K.4g=1b;O.1J.2Q(a,1d)}},vw:Q(a){O.1J.2Q(a,1d)},K5:Q(a){K.4g=1b},K4:Q(a){O.1J.2Q(a,1d)},1p:"O.4a"});O.4a.K3=dj;O.4a.K2=dj;O.4a.K1="bk";O.4a.K0=1;O.4a.JZ="bS";O.dE=O.1A({id:P,1v:P,6T:P,W:P,1o:Q(c,a,b){K.id=O.1c.7L(K.1p+"49");K.1v=c?c:P;K.6T={};if(a){K.6T=O.1c.1M(K.6T,a)}K.W=b?b:P},1m:Q(){K.id=P;K.1v=P;K.6T=P;K.W=P},1R:Q(){R S O.dE(K.1v?K.1v.1R():P,K.6T,K.W)},1p:"O.dE"});O.5E=O.1A({2K:["aU","7t","zi","at"],1n:P,id:P,1i:P,1z:P,2k:P,1G:P,2x:P,aD:1b,1o:Q(e,a,f,c,d,b){K.1i=e;K.2x=a.1R();K.2k=f.1R();K.1z=c;if(d){K.1G=d.1R()}K.id=O.1c.7L("WJ");K.1n=S O.4o(K,P,K.2K);O.1c.1M(K,b)},at:Q(){if(K.aD){K.aD=1b;K.1n.1L("at")}},1m:Q(){K.1i=P;K.2k=P;K.1G=P;K.2x=P;K.1n.1m();K.1n=P},1R:Q(a){if(a==P){a=S O.5E(K.1i,K.2x,K.2k,K.1z,K.1G)}O.1c.4D(a,K);R a},2H:Q(){N a=K.1i.3a;N b=(a&&K.2k.9E(a,1b));K.mX=(b||K.1i.zx);K.5L();R K.mX},2S:Q(b,a,c){if(c==P){c=1d}K.2k=b.1R();K.2x=a.1R();if(c){K.2H()}},5L:Q(){},zj:Q(a){N d=K.1i.U.gp(a);N c=a.1R();c.x+=K.1G.w;c.y+=K.1G.h;N b=K.1i.U.gp(c);if(d.1P>b.1P){if(d.1P<0){d.1P=-2R-(d.1P+2R)}V{b.1P=2R+b.1P+2R}}N e=S O.1U(d.1P,b.1S,b.1P,d.1S);R e},ne:Q(){if(K.mX){K.eN()}},eN:Q(){},aX:Q(){},WI:Q(){N a=K.3y||K.7T;if(O.1c.rV()&&a&&!K.aD){if(!K.6M){N b=1O.2G("1w");b.1B=K.1G.w;b.1E=K.1G.h;K.6M=b.5M("2d");K.6M.7P(a,0,0)}R K.6M}},1p:"O.5E"});O.5E.4F=O.1A(O.5E,{1z:P,3y:P,6n:P,k3:P,cK:1d,9P:P,JY:P,1o:Q(e,a,f,c,d,b){O.5E.1g.1o.1j(K,1s);if(K.JY!=P){O.1c.1M(K,O.5E.4F.WH)}K.1z=c;K.6n=1O.2G("1q");K.6n.W.ac="9y";K.6n.W.2x="3i";K.k3=K.1i.ls&&O.1c.h2()},1m:Q(){if(K.3y!=P){K.JW()}K.3y=P;if((K.6n!=P)&&(K.6n.2Y===K.1i.1q)){K.1i.1q.2U(K.6n)}K.6n=P;K.1i.1n.6H("7t",K,K.ne);K.9P&&1W.5J(K.9P);O.5E.1g.1m.1j(K,1s)},1R:Q(a){if(a==P){a=S O.5E.4F(K.1i,K.2x,K.2k,K.1z,K.1G)}a=O.5E.1g.1R.1j(K,[a]);a.3y=P;R a},2H:Q(){if(K.1i!==K.1i.U.2a&&K.1i.zk){K.2k=K.zj(K.2x)}N a=O.5E.1g.2H.1j(K,1s);if((O.1c.2N(K.1i.zq,K.1i.jZ)!==-1)||K.1i.aB){if(a&&K.cK){K.1n.4Q("7t",K,K.ne);K.1i.1n.4Q("7t",K,K.ne);K.cK=1b}V{}}V{if(a&&K.cK){K.1n.4Q("7t",K,K.ne);K.cK=1b}}if(!a){R 1b}if(K.aD){K.1n.1L("zi")}V{K.aD=1d;K.1n.1L("aU")}R K.sh()},sh:Q(){K.1z=K.1i.jD(K.2k);if(!K.1z){R 1b}K.1n.1L(K.WG);K.JX();K.sf();R 1d},sf:Q(){if(K.1i===P){R}O.1c.jB(K.6n,P,K.2x,K.1G);K.3y.W.2M=0;N a=K.1i.zv(K.2k);if(K.k3){O.1c.sq(K.3y,P,P,a,K.1z)}V{O.1c.jB(K.3y,P,P,a);if(K.3y.4O===K.1z){K.zu()}V{if((K.1i 1V O.1C.mS||K.1i 1V O.1C.mT)&&!O.1c.4j(K.1z)&&(K.1z.2N("e9=1d")<0)&&K.1i.n7){K.3y.sg="mG"}V{if(K.1i 1V O.1C.9o&&K.1i.n7){K.3y.sg="mG"}}K.3y.4O=K.1z}}},zu:Q(){N a=K.3y;K.6M=P;a.W.3v="pG";a.W.2M=0;K.1n.1L("7t");K.9P=1W.6h(Q(b){R Q(){N c=b.1i.2M;a.W.2M=(c||c==0)?c:1}}(K),10)},5L:Q(){if(K.3y){K.aX();if(O.5E.4F.JU){K.3y.4O=O.1c.4X()+"qO.m6"}}K.6M=P},JX:Q(){if(K.3y==P){N d=K.1i.zw;N b=K.1i.zv(K.2k);if(K.k3){K.3y=O.1c.92(P,d,b,P,"gl",P,P,P,1d)}V{K.3y=O.1c.pf(P,d,b,P,"gl",P,P,1d)}if(O.1c.4k(K.1i.1z)){K.3y.a1=K.1i.1z.a3()}K.3y.3U="WF";K.6n.W.5u=K.JB?0:1;K.6n.1X(K.3y);K.1i.1q.1X(K.6n);if(K.1i.2M!=P){O.1c.jB(K.3y,P,P,P,P,P,P,K.1i.2M)}K.3y.U=K.1i.U;N c=Q(){if(K.aD){K.aD=1b;K.zu()}};if(K.k3){O.1J.3q(K.3y.bI[0],"aT",O.2z.3P(c,K))}V{O.1J.3q(K.3y,"aT",O.2z.3P(c,K))}N a=Q(){if(K.3y.bq>O.Jv){c.47(K)}};O.1J.3q(K.3y,"6N",O.2z.3P(a,K))}K.3y.cc=K.1i.U.cc},z9:Q(a){K.3y.WE("WD");K.3y.4O=a},JW:Q(){O.1J.a5(K.3y);if(K.3y.2Y===K.6n){K.6n.2U(K.3y);K.3y.U=P}K.3y.a1=P;N a=K.3y.aj;if(a){O.1J.a5(a);K.3y.2U(a);2t a}V{K.3y.4O=O.1c.4X()+"qO.m6"}},WC:Q(){if(K.1i){N a=K.k3?K.3y.aj.4O:K.3y.4O;if(!O.1c.JV(a,K.1z)){K.aX()}}},eN:Q(){K.6n.W.2g="";if(O.1c.2N(K.1i.zq,K.1i.jZ)!==-1){if(O.gc===1d){K.6n.cJ=K.6n.cJ}}},aX:Q(){K.6n.W.2g="2L"},n5:Q(){if(!K.3y||K.aD){R}N b;if(K.6n){N a=K.6n.DV(1b);b=K.3y;b.W.2x="3i";b.W.1r=a.W.1r.42(/px/,"%");b.W.1I=a.W.1I.42(/px/,"%");b.W.1B=a.W.1B.42(/px/,"%");b.W.1E=a.W.1E.42(/px/,"%")}V{b=K.3y}K.3y=P;R b},1p:"O.5E.4F"});O.5E.4F.JU=(O.8R.2c==="GZ"||O.8R.2c==="ra");O.k0=O.1A({8C:15,fA:q0,5h:0,hw:P,9V:P,k2:P,9W:P,hv:P,1B:0,1E:0,3n:P,n4:P,1i:P,bs:P,k1:P,nd:1d,JS:0,1o:Q(a){K.1i=a;K.9V=1O.2G("1w");K.9V.W.2g="2L";K.k2=K.9V.5M("2d");if(K.1i.jY&&O.8R.jk==="pc"){K.9W=1O.2G("1w");K.hv=K.9W.5M("2d");K.9W.W.2x="3i"}1W.sp=1W.sp||1W.WB||1W.WA||1W.Wz||1W.Wy||1W.Wx||Q(b){R 6h(b,gM/60)};1W.JT=1W.JT||1W.Ww||1W.Wv||1W.Wu||1W.Wt||Q(b){1W.5J(b)};K.JO=O.k0.JN.JM(0,0,0.25,1)},b1:Q(b,a,d,c,g,h){K.zs=S 78().bo();K.fA=g;K.5h=c;K.7N=d;K.bs=b;K.k1=b.5M("2d");K.1B=b.1B;K.1E=b.1E;K.9V.1B=K.1B;K.9V.1E=K.1E;c1{K.k2.7P(a,0,0)}c0(f){R}K.1i.eX();K.k1.7P(K.9V,K.7N.x,K.7N.y,K.1B*K.5h,K.1E*K.5h);if(O.8R.jk==="pc"){K.zr(h)}},zr:Q(a){if(!K.nd){R}K.1i.1q.1X(K.9W);K.9W.1B=K.1B;K.9W.1E=K.1E;K.9W.W.1r=K.bs.W.1r;K.9W.W.1t=K.bs.W.1t;K.nd=1b;K.JS=0;K.bs.W.2g="2L";K.zt=O.2z.3P(K.JR,K,a);1W.sp(K.zt)},JQ:Q(){K.nd=1d;K.hv.4L(0,0,K.1B,K.1E);K.bs&&K.hv.7P(K.bs,0,0,K.1B,K.1E);K.1i.1q.2U(K.9W);K.bs&&(K.bs.W.2g="")},JR:Q(e){N d=K;N b=S 78().bo();N a=b-K.zs;K.nd=1b;if(a>K.fA){K.JQ();e&&e()}V{N c=K.JP(a);d.hv.4L(0,0,K.1B,K.1E);d.hv.7P(d.9V,c.x,c.y,c.1B,c.1E);1W.sp(K.zt)}},JP:Q(c){N b=K.7N.x,f=K.7N.y;N e=K.1B,a=K.1E;N d=K.5h;R{x:K.nc(c,0,b),y:K.nc(c,0,f),1B:K.nc(c,e,e*d),1E:K.nc(c,a,a*d)}},nc:Q(a,d,c){N b=K.JO(a/K.fA);R(c-d)*b+d},1m:Q(){N a=K;a.7N=P;a.9V=P;a.k2=P;a.Ws=P;a.Wr=P;a.3n=P;a.bs=P;a.k1=P;a.1i=P;a.n4&&1W.5J(a.n4);a.n4=P}});O.k0.JN={JM:Q(g,j,e,h){N u=4;N f=0.Wq;N o=1e-7;N p=10;N s=11;N t=1/(s-1);N w=2v JL==="Q";Q m(i,x){R 1-3*x+3*i}Q l(i,x){R 3*x-6*i}Q k(i){R 3*i}Q d(y,i,x){R((m(i,x)*y+l(i,x))*y+k(i))*y}Q v(y,i,x){R 3*m(i,x)*y*y+2*l(i,x)*y+k(i)}Q a(B,C,A,E,D){N x,z,y=0;do{z=C+(A-C)/2;x=d(z,E,D)-B;if(x>0){A=z}V{C=z}}4U(1k.3C(x)>o&&++y<p);R z}Q c(A,y,D,B){1f(N z=0;z<u;++z){N C=v(y,D,B);if(C===0){R y}N x=d(y,D,B)-A;y-=x/C}R y}if(!(0<=g&&g<=1&&0<=e&&e<=1)){6F S eO("Wp x so CZ be in [0, 1] Wo")}N r=w?S JL(s):S 3T(s);if(g!==j||e!==h){1f(N n=0;n<s;++n){r[n]=d(n*t,g,e)}}Q q(A){N B=0;N z=1;N i=s-1;1f(;z!==i&&r[z]<=A;++z){B+=t}--z;N C=(A-r[z])/(r[z+1]-r[z]);N y=B+C*t;N x=v(y,g,e);if(x>=f){R c(A,y,g,e)}V{if(x===0){R y}V{R a(A,B,B+t,g,e)}}}R Q b(i){if(g===j&&e===h){R i}if(i===0){R 0}if(i===1){R 1}R d(q(i),j,h)}}};O.v7=O.1A(O.k0,{1o:Q(a){O.k0.1g.1o.1j(K,1s);K.1i=a;K.9V=1O.2G("1w");K.9V.W.2g="2L";K.k2=K.9V.5M("2d");K.9W=1O.2G("1w");K.hv=K.9W.5M("2d");K.9W.W.2x="3i";K.1i.1q.1X(K.9W)},b1:Q(a,b,c){K.zs=S 78().bo();K.5h=K.1i.gv/K.1i.U.2u();if(1===K.5h){c&&c();R}K.7N=b;K.bs=a;K.k1=a.5M("2d");K.1B=a.1B;K.1E=a.1E;K.9V.1B=K.1B;K.9V.1E=K.1E;K.k2.7P(K.bs,0,0);K.k1.4L(0,0,K.1B,K.1E);K.zr(c)},1p:"O.v7"});O.1C.ca=O.1A(O.1C,{JK:(1k.5A(5)-1)/2,7h:P,z6:P,1z:P,3L:P,zk:1b,1o:Q(c,b,d,a){O.1C.1g.1o.1j(K,[c,a]);K.1z=b;K.3L=O.1c.1M({},d)},1m:Q(){K.1z=P;K.3L=P;O.1C.1g.1m.1j(K,1s)},1R:Q(a){if(a==P){a=S O.1C.ca(K.2c,K.1z,K.3L,K.85())}a=O.1C.1g.1R.1j(K,[a]);R a},sn:Q(a){K.1z=a},mU:Q(b){K.3L=O.1c.1M(K.3L,b);N a=K.3p();if(K.U!=P){K.U.1n.1L("7w",{1i:K,aV:"3L"})}R a},3p:Q(a){if(a){R K.mU({Wn:1k.ou()})}V{R O.1C.1g.3p.1j(K,[])}},c8:Q(e,d){N c=1;1f(N b=0,a=e.1a;b<a;b++){c*=e.Eq(b)*K.JK;c-=1k.9d(c)}K.bq=(K.bq)?(K.bq):0;R d[(1k.9d(c*d.1a)+K.bq)%d.1a]},rZ:Q(g,d){N b=d||K.1z;N f=O.1c.1M({},K.3L);f=O.1c.1M(f,g);N e=O.1c.gV(f);if(O.1c.4k(b)){b=K.c8(e,b)}N a=O.1c.rY(O.1c.gT(b));1f(N c in f){if(c.i0()in a){2t f[c]}}e=O.1c.gV(f);R O.1c.mV(b,e)},1p:"O.1C.ca"});O.1C.9o=O.1A(O.1C.ca,{n7:1b,3c:P,sc:"bl",bn:P,jE:P,za:O.5E.4F,3z:P,aB:1b,5h:1.5,bp:0,jZ:P,zq:["7Q"],hu:P,nb:P,n9:P,sl:P,zp:P,d7:P,sj:P,sk:0,n8:0,zb:100,3W:P,1o:Q(c,b,d,a){O.1C.ca.1g.1o.1j(K,1s);if(K.sj===P){K.sj=K.aB?0:Wm}if(!!a&&!!a.bp){K.bp=a.bp}K.1n.fw("zo");K.3z=[];K.mY=O.2z.3P(K.mZ,K)},ae:Q(a){if(K.3W!=P){1W.5J(K.3W);K.3W=P}if(K.d7!==P){1W.5J(K.d7);K.d7=P}},1m:Q(){K.zm();K.3z=P;K.3c=P;O.1C.ca.1g.1m.1j(K,1s)},zm:Q(){if(K.3z){1f(N f=0,b=K.3z.1a;f<b;f++){N e=K.3z[f];1f(N c=0,a=e.1a;c<a;c++){N d=e[c];K.jN(d);d.1m()}}K.3z=[];K.n9=P}},1R:Q(a){if(a==P){a=S O.1C.9o(K.2c,K.1z,K.3L,K.85())}a=O.1C.ca.1g.1R.1j(K,[a]);if(K.3c!=P){a.3c=K.3c.1R()}a.3z=[];a.n9=P;a.hu=P;a.nb=P;a.d7=P;R a},2S:Q(d,a,e){O.1C.ca.1g.2S.1j(K,1s);d=d||K.U.48();if(d!=P){N c=!K.3z.1a||a;N b=K.ze();if(K.aB){if(c||(!e&&!b.a0(d))){K.zd(d)}}V{if(c||!b.a0(d,1d)){K.fz(d)}V{K.jX()}}}},Wl:Q(m){N q=P,n=m.1P,l=m.1S,d=K.3z.1a;if(K.U&&d){N r=K.U.2u(),a=K.3c.w,k=K.3c.h,j=K.3z[0][0].2k,e=j.1r,o=j.1t;if(n<e){if(K.U.2a.5z){N b=K.U.9F().3J();N c=1k.na((e-n)/b);n+=b*c}}N h=(n-e)/(r*a);N f=(o-l)/(r*k);N g=1k.9d(h);N i=1k.9d(f);if(i>=0&&i<d){N p=K.3z[i][g];if(p){q={4d:p,i:1k.9d((h-g)*a),j:1k.9d((f-i)*k)}}}}R q},zc:Q(c){if(K.d7!==P){K.sb()}N j=K.hu;if(!j){N d=K.n5();j=d[1];N g=K.nb=d[0];if(!j){R}K.1q.vv(g,K.1q.aj);K.hu=j;N e=K.3z[0][0].2k;K.zp={1P:e.1r,1S:e.1t};K.sl=K.n9}N a=j.W;N i=K.sl/c;a.1B=100*i+"%";a.1E=100*i+"%";N h=K.8A(K.zp,c);N b=2l(K.U.3s.W.1r,10);N f=2l(K.U.3s.W.1t,10);j.W.1r=1k.2s(h.x-b)+"%";j.W.1t=1k.2s(h.y-f)+"%"},n5:Q(){N d;if(K.3z.1a>0){N c=1O.2G("1q");c.id=K.1q.id+"Wk";c.3U="Wj";c.W.2x="3i";c.W.1B="JJ";c.W.1E="JJ";d=1O.2G("1q");d.id=K.1q.id+"Wi";d.3U="Wh";d.W.2x="3i";d.W.1B="100%";d.W.1E="100%";c.1X(d);1f(N f=0,b=K.3z.1a;f<b;f++){1f(N e=0,a=K.3z[f].1a;e<a;e++){N g=K.3z[f][e].n5();if(!g){5K}g.W.1t=(f*K.3c.h)+"%";g.W.1r=(e*K.3c.w)+"%";d.1X(g)}}}R[c,d]},sb:Q(){if(K.hu){K.1q.2U(K.nb);K.hu=P;K.nb=P;K.sl=P;if(K.d7!==P){1W.5J(K.d7);K.d7=P}}},b0:Q(b,a){if(!K.aB){K.jX()}},jX:Q(){if(K.3W!=P){1W.5J(K.3W)}K.3W=1W.6h(K.mY,K.zb)},ht:Q(a){if(K.aB){a=K.U.5i();a.h=2l(a.h*K.5h);a.w=2l(a.w*K.5h)}O.1C.ca.1g.ht.1j(K,[a])},ze:Q(){N e=P;if(K.3z.1a){N a=K.3z.1a-1;N d=K.3z[a][0];N b=K.3z[0].1a-1;N c=K.3z[0][b];e=S O.1U(d.2k.1r,d.2k.1N,c.2k.1I,c.2k.1t)}R e},zd:Q(f){N a=f.64();N h=f.3J()*K.5h;N b=f.4J()*K.5h;N g=S O.1U(a.1P-(h/2),a.1S-(b/2),a.1P+(h/2),a.1S+(b/2));N d=S O.3k(g.1r,g.1t);N c=K.U.bT(d);if(!K.3z.1a){K.3z[0]=[]}N e=K.3z[0][0];if(!e){e=K.s7(g,c);K.jO(e);e.2H();K.3z[0][0]=e}V{e.2S(g,c)}K.zn(1,1)},JI:Q(a,n,e){N k=e*K.3c.w;N c=e*K.3c.h;N i=a.1r-n.1P;N l=1k.9d(i/k)-K.bp;N j=i/k-l;N f=-j*K.3c.w;N m=n.1P+l*k;N b=a.1t-(n.1S+c);N h=1k.na(b/c)+K.bp;N o=h-b/c;N d=-o*K.3c.h;N g=n.1S+h*c;R{JD:k,JC:c,JF:m,JE:g,JH:f,JG:d}},z4:Q(){N b=K.bn;if(!b){N c=K.9F();N a=({tl:["1r","1t"],tr:["1I","1t"],bl:["1r","1N"],br:["1I","1N"]})[K.sc];b=S O.3k(c[a[0]],c[a[1]])}R b},fz:Q(j){N g=K.U.5i();N A=1k.na(g.h/K.3c.h)+1k.3l(1,2*K.bp);N D=1k.na(g.w/K.3c.w)+1k.3l(1,2*K.bp);N G=K.z4();N s=K.U.2u();N r=K.JI(j,G,s);N f=1k.2s(r.JH);N c=1k.2s(r.JG);N l=r.JF;N o=r.JE;N e=r.JD;N k=r.JC;K.6E=S O.2C(f,c);N z=f;N C=l;N w=0;N a=2l(K.U.3s.W.1r);N u=2l(K.U.3s.W.1t);N B=[],E=K.U.b9();do{N h=K.3z[w++];if(!h){h=[];K.3z.1u(h)}l=C;f=z;N d=0;do{N b=S O.1U(l,o,l+e,o+k);N n=f;n-=a;N m=c;m-=u;N q=S O.2C(n,m);N F=h[d++];if(!F){F=K.s7(b,q);K.jO(F);h.1u(F)}V{F.2S(b,q,1b)}N t=b.64();B.1u({4d:F,3K:1k.2W(t.1P-E.1P,2)+1k.2W(t.1S-E.1S,2)});l+=e;f+=K.3c.w}4U((l<=j.1I+e*K.bp)||d<D||!((l=C)==0?1d:1d));o-=k;c+=K.3c.h}4U((o>=j.1N-k*K.bp)||w<A);K.n9=K.U.2u();K.zn(w,d);B.93(Q(x,i){R x.3K-i.3K});1f(N v=0,p=B.1a;v<p;++v){B[v].4d.2H()}},9F:Q(){R K.3a},s7:Q(c,a){N b=S K.za(K,a,c,P,K.3c,K.jE);K.1n.1L("Jr",{4d:b});R b},jO:Q(a){a.jM=Q(){if(K.sk==0){K.n8=0;K.1n.1L("aU")}K.sk++;K.n8++};a.1n.4Q("aU",K,a.jM);a.d5=Q(b){K.n8--;K.1n.1L("zo",{4d:a,se:b.se});if(K.n8===0){K.sk=0;K.1n.1L("7t");if(K.hu){K.d7=1W.6h(O.2z.3P(K.sb,K),K.sj)}}};a.1n.4Q("7t",K,a.d5);a.1n.4Q("at",K,a.d5)},jN:Q(a){a.at();a.1n.un({aU:a.jM,7t:a.d5,at:a.d5,2y:K})},mZ:Q(){N d=1d;N c=K.bp||1;N b=K.3z[0][0].2x;N a=2l(K.U.3s.W.1r);N f=2l(K.U.3s.W.1t);N e=b.3t(a,f);if(e.x>-K.3c.w*(c-1)){K.n1(1d)}V{if(e.x<-K.3c.w*c){K.n1(1b)}V{if(e.y>-K.3c.h*(c-1)){K.n0(1d)}V{if(e.y<-K.3c.h*c){K.n0(1b)}V{d=1b}}}}if(d){K.3W=1W.6h(K.mY,0)}},n0:Q(n){N c=(n)?0:(K.3z.1a-1);N b=K.3z;N f=b[c];N e=K.U.2u();N h=(n)?-K.3c.h:K.3c.h;N g=e*-h;N m=(n)?b.8F():b.i9();1f(N j=0,l=f.1a;j<l;j++){N d=f[j];N a=d.2k.1R();N k=d.2x.1R();a.1N=a.1N+g;a.1t=a.1t+g;k.y=k.y+h;m[j].2S(a,k)}if(n){b.iI(m)}V{b.1u(m)}},n1:Q(m){N d=(m)?-K.3c.w:K.3c.w;N c=K.U.2u();N k=c*d;1f(N e=0,g=K.3z.1a;e<g;e++){N l=K.3z[e];N j=(m)?0:(l.1a-1);N b=l[j];N a=b.2k.1R();N f=b.2x.1R();a.1r=a.1r+k;a.1I=a.1I+k;f.x=f.x+d;N h=m?K.3z[e].8F():K.3z[e].i9();h.2S(a,f);if(m){l.iI(h)}V{l.1u(h)}}},zn:Q(e,c){4U(K.3z.1a>e){N f=K.3z.8F();1f(N b=0,a=f.1a;b<a;b++){N d=f[b];K.jN(d);d.1m()}}4U(K.3z[0].1a>c){1f(N b=0,a=K.3z.1a;b<a;b++){N f=K.3z[b];if(f.1a<=c){5K}N d=f.8F();K.jN(d);d.1m()}}},dD:Q(){if(K.aB){K.zm();K.ht()}},Wg:Q(d){N c=K.3a;N f=K.2u();N e=f*K.3c.w;N b=f*K.3c.h;N h=K.5w(d);N a=c.1r+(e*1k.9d((h.1P-c.1r)/e));N g=c.1N+(b*1k.9d((h.1S-c.1N)/b));R S O.1U(a,g,a+e,g+b)},rE:Q(b){b=b||K.U.2u();if(K.9h&&O.1c.2N(K.9h,b)===-1){N c,a;1f(c=K.9h.1a-1;c>=0;c--){a=K.9h[c];if(a>b){b=a;1D}}if(c===-1){6F"no Wf 7K in 9h"}}R b},Jo:Q(){N a=K.rE();R K.9h?O.1c.2N(K.9h,a):K.U.aw(a)+(K.yc||0)},1p:"O.1C.9o"});O.5E.mQ=O.1A(O.5E,{1z:P,aC:P,zl:P,6n:P,aD:1b,1w:P,7T:P,gy:P,JB:1b,si:P,n6:P,1o:Q(e,a,g,c,d,b){N f=K;O.5E.1g.1o.1j(f,1s);f.1z=c;f.zl=b;f.1n.fw("We");f.1n.fw("Wd")},1m:Q(){O.5E.1g.1m.1j(K,1s);N a=K;a.7T=P;a.1w=P;a.6M=P;if(a.si){a.si.1m();a.si=P;a.1i.1n.6H("7t",a,a.Wc)}},1R:Q(b){N a=K;if(b==P){b=S O.5E.mQ(a.1i,a.2x,a.2k,a.1z,a.1G,a.zl)}b=O.5E.1g.1R.1j(a,[b]);b.1w=P;R b},2H:Q(){N b=K;if(b.1i!==b.1i.U.2a&&b.1i.zk){b.2k=b.zj(b.2x)}N a=O.5E.1g.2H.1j(b,1s);b.JA(a);if(!a){R}if(b.aD){b.1n.1L("zi")}V{b.aD=1d;b.1n.1L("aU")}R b.sh()},JA:Q(a){},sh:Q(){N a=K;a.1z=a.1i.jD(a.2k);if(!a.1z){R 1b}a.sf();R 1d},pf:Q(){if(K.7T!==P&&!K.7T.bY){K.7T.4O=""}N e=K,b=e.1i.yS(e.2k);e.gy=e.2k.1R();if(b){e.aC="";e.7T=b;e.1i.jP(b,e.2x);if(e.ea){e.s8()}}V{N i=e.1i.fm(e.2k);if(!O.e4){e.aC=i.x+"49"+i.y+"49"+i.z;e.zh()}V{N g=i.x,f=i.y,d;if(e.1i 1V O.1C.mR||e.1i.z3==="db"){d=i.z}V{d=e.1i.3F[i.z].Wb()}N c={4d:e,X:g,Y:f,Z:d,cc:e.1i.U.cc};e.aC=g+"49"+f+"49"+d;e.7T=S 4F();N h=e.Jz();N a=Q(j,k){R Q(l){1W[k]=P;j.4d.Jy(j,l)}}(c,h);1W[h]=a;s2.fY(Q(){},Q(j){},"s1","Wa",[e.1z,e.1i.2c,g,f,d,h])}}},Jz:Q(){N h=S 78();N e=h.W9();N f=h.W8()+1;N g=h.W7();N c=h.W6();N d=h.W5();N i=h.W4();N b=h.W3();N a="W2"+e+f+g+c+d+i+b+(1k.2s(1k.ou()*W1));R a},Jy:Q(a,d){N c=K;N b=d.x+"49"+d.y+"49"+d.z;if(c.aC!==b){R}if(d.52){if(d.52=="P"){R 1b}N e="52:4Y/W0;VZ,"+d.52}V{N e=c.1i.zf+"O/"+c.1i.2c+"/"+a.Z+"/"+a.X+"49"+a.Y+".2V"}c.1z=e;c.zh()},zh:Q(){N d=K,e=S 4F();e.ea=1d;d.7T=e;N c={4Y:e,4d:d,cc:d.1i.U.cc,aC:d.aC};N a=Q(){if(K.4d.aC===K.aC){K.4d.Jx(K)}};N b=Q(){K.4d.Jw(K)};e.eW=O.2z.3P(a,c);e.VY=O.2z.3P(b,c);if((d.1i 1V O.1C.mS||d.1i 1V O.1C.mT)&&!O.1c.4j(d.1z)&&(d.1z.2N("e9=1d")<0)&&d.1i.n7){e.sg="mG"}V{if(d.1i 1V O.1C.9o&&d.1i.n7){e.sg="mG"}}e.4O=d.1z},sf:Q(){N a=K;if(!a.1i){R}a.pf()},Jx:Q(a){if((K.1i===P)||K.1i.U==P||(a.cc!==K.1i.U.cc)||(a.4Y!==K.7T)){R}K.6M=P;N b=a.4Y;if(a.4d.mX){K.zg(b,a.aC)}},z9:Q(d,c){N b,a=c.se;b=S 4F();b.eW=Q(g,f,e){R Q(){if(e===g.aC){g.7T=f;g.1i.jP(f,g.2x)}}}(K,b,a);if(a===K.aC){b.4O=d}},zg:Q(d,a){N c=K,b=c.1i;if(!b){R}if(b.VX&&!d.VW){c.58(d);R}b.jP(d,c.2x);c.aD=1b;if(d.ea){c.s8()}c.1n.1L("7t",{se:a})},Jw:Q(a){N b=K;if(a.4Y!==b.7T){R}b.bq=(b.bq)?(b.bq+1):1;if(b.bq<=O.Jv){if(b.1i.1z&&O.1c.4k(b.1i.1z)&&b.1i.1z.1a>1){b.1i.bq=b.bq;b.2H();R}}V{b.bq=0}b.1n.1L("7t")},s8:Q(){N b=K;if(!b.n6){N a={sd:b,4Y:b.7T};b.n6=1W.6h(O.2z.3P(b.Ju,a),100)}},Ju:Q(){N a=K;a.4Y.ea=1b;1W.5J(a.sd.n6);a.sd.n6=P;a.sd.zg(a.4Y)},eN:Q(){},aX:Q(){},VV:Q(a){R a.w>VU},2S:Q(b,a,c){if(c==P){c=1d}K.2k=b.1R();K.2x=a.1R();K.1i.jW=1b;if(c){K.2H()}},n5:Q(){},1p:"O.5E.mQ"});O.4c=O.1A(O.1C.9o,{4i:1d,eb:P,n2:P,1w:P,6M:P,gv:P,jW:1b,5d:"2V",4l:P,5y:1d,sc:"tl",5c:P,n4:P,aA:P,jU:[],s4:gM,n3:1d,mq:q0,jV:P,jY:1d,9T:P,9S:P,z7:P,z8:P,zf:P,z3:"VT",cI:P,s6:1b,s9:P,1o:Q(c,b,f,a){N d=K,e=O.8R;if(!!O.e4){d.s4=sT}O.1C.9o.1g.1o.1j(d,1s);if(!!a&&!!a.4i){d.4i=a.4i;if(d.4i){d.4i=O.1c.rV()}}V{if(d.4i){d.4i=O.1c.rV()}}if(e.jk==="pA"){d.4i=1b}if(O.e4){s2.fY(Q(g){d.zf="Jt://"+g.VS+"/"},Q(g){},"s1","VR",[]);d.4i=1d}if(d.4i){d.1w=1O.2G("1w");d.1w.id="J3"+d.id;d.1w.W.2x="3i";d.1q.1X(d.1w);d.6M=d.1w.5M("2d");d.cI=S O.k0(d);d.aA={};d.eb=1O.2G("1w");d.eb.id="VQ"+d.id;d.eb.W.2x="3i";d.n2=K.eb.5M("2d")}d.jY=d.4i?1d:1b;d.n3=1d},ae:Q(a){O.1C.9o.1g.ae.1j(K,[a]);K.9P&&1W.5J(K.9P);K.9P=P},1m:Q(){N a=K;O.1C.9o.1g.1m.1j(a,1s);a.5d=P;a.4l=P;a.5c=P;a.5y=P;a.sc=P;a.3c=P;a.VP=P;if(a.cI){a.cI.1m();a.VO=P}if(a.4i){a.1w=P;a.aA=P;a.eb=P;a.n2=P}},1R:Q(b){N a=K;if(b==P){b=S O.4c(a.2c,a.1z,a.3L,a.85())}b=O.1C.9o.1g.1R.1j(a,[b]);R b},2S:Q(a,b,p){N j=K,i=K.gv/K.U.2u(),c=K.U.3s.W,d=2l(c.1r),l=2l(c.1t);if(j.aB&&j.4i){b=1d}K.s6=b?1d:1b;K.9T=-d;K.9S=-l;if(!b&&!j.jV&&j.4i&&!K.n3){K.jQ()}O.1C.ca.1g.2S.1j(j,1s);a=a||j.U.48();j.jW=b;j.41=p;N e=K.U.2u();N o;if(a!=P){N g=!j.3z.1a||b;N n=j.ze();if(K.aB){if(g||(!p&&!n.a0(a))){if(b&&K.jZ!=="7Q"){K.sb()}if(!b||K.jZ==="7Q"){K.zc(e)}K.zd(a)}}V{if(g||!n.a0(a,1d)){if(K.4i){if(K.n3){K.jW=1d;K.eX();K.s6=1d;K.n3=1b;K.fz(a)}V{if(K.mq){K.jV=1d;if(!b||p||(K.gv===P)||(K.s9===P)||(K.gu===P)){}V{o=K.Js()}N m=K.1w.1B,f=K.1w.1E;K.eb.1B=m;K.eb.1E=f;K.n2.4L(0,0,m,f);K.1w&&m&&f&&K.n2.7P(K.1w,0,0,m,f);K.eX();K.fz(a)}V{K.fz(a)}}}V{if(b&&K.jZ==="7Q"){K.zc(e)}K.fz(a)}}V{K.jX()}}N k=S O.2C(j.9T,j.9S);j.gu=j.U.gp(k);j.s9=j.U.4I()}if(j.4i&&i!==1&&j.sa&&K.mq){if(!K.U.wV&&o&&i){K.cI.b1(K.1w,K.eb,o,i,K.mq,Q(){j.jV=1b})}}if(j.4i){if(j.aB){N q=U.5i();j.6M.4L(0,0,q.w,q.h)}K.1q.W.1r=K.9T+"px";K.1q.W.1t=K.9S+"px"}},Js:Q(){N b;N d=K.U.4I();if(!K.5z||d>4){b=K.bT(K.gu)}V{N f=K.s9-d;N c=K.1w.1B/2;N a=K.1w.1E/2;N e=K.U.r3;if(f>0){b=S O.2C((c-e.x)*(1-1k.2W(0.5,f)),(a+e.y)*(1-1k.2W(0.5,f)))}V{b=S O.2C(-c*(1k.2W(2,-f)-1)+e.x,-a*(1k.2W(2,-f)-1)-e.y)}}R b},jX:Q(){if(K.jY){K.mZ()}V{K.3W&&1W.5J(K.3W);K.3W=1W.6h(K.mY,K.zb)}},mZ:Q(){N d=1d;N c=K.bp||1;N b=K.3z[0][0].2x;N a=-K.9T;N f=-K.9S;N e=b.3t(a,f);if(e.x>-K.3c.w*(c-1)){K.n1(1d)}V{if(e.x<-K.3c.w*c){K.n1(1b)}V{if(e.y>-K.3c.h*(c-1)){K.n0(1d)}V{if(e.y<-K.3c.h*c){K.n0(1b)}V{d=1b}}}}if(d){if(K.jY){K.mZ()}V{K.3W=1W.6h(K.mY,0)}}V{}},b0:Q(b,a){K.9P&&1W.5J(K.9P);K.9T+=b;K.9S+=a;if(!K.aB){if(K.4i){K.1q.W.1r=K.9T+"px";K.1q.W.1t=K.9S+"px"}if(K.jY){K.jQ();K.jX()}}},jQ:Q(){N f,g,b,a,e=K;e.6M.4L(0,0,e.1w.1B,e.1w.1E);1f(b=0;b<K.z8;b++){1f(a=0;a<K.z7;a++){f=e.3z[b][a];g=f.7T;if((g!=P)&&(f.mX===1d)&&(g.1B>0&&g.1E>0)&&g.bY){N d=f.2x.x-e.9T;N c=f.2x.y-e.9S;if(f.7T.ea){if(e.48().f3(f.2k.64())){f.7T.ea=1b}V{if(e.48().9E(f.2k)){f.s8()}}}e.s5(f.7T,d,c,1b)}}}},s7:Q(c,a){if(K.4i){R S O.5E.mQ(K,a,c,P,K.3c,K.4i)}V{N b=S K.za(K,a,c,P,K.3c,K.jE);K.1n.1L("Jr",{4d:b});R b}},jP:Q(e,a){if(K.41||!K.U){R}if(K.s6){e.ea=1b}K.eX();N b=K.U.3s.W;N d=2l(b.1r),c=2l(b.1t);K.s5(e,a.x+d,a.y+c)},z9:Q(e,d){N a=K.U.3s.W;N c=2l(a.1r),b=2l(a.1t);K.6M.VN(e,d.x+c,d.y+b)},VM:Q(){K.1i.s5(K.4Y,K.2x.x+2l(K.Jq.1r),K.2x.y+2l(K.Jq.1t))},s5:Q(e,d,c,a){a=a||1d;if(e){a&&K.6M.4L(d,c,e.1B,e.1E);if(2v K.2M==="6w"){N b=K.2M>0.3?K.2M-0.3:0.1;K.6M.5v=e.ea?b:K.2M}V{K.6M.5v=e.ea?0.6:1}K.6M.7P(e,d,c)}},eX:Q(){if(K.jW){K.jW=1b;N a=K.U.3D.lr,b=K.U.3D.pE;K.1w.1B=a;K.1w.1E=b;K.6M.4L(0,0,a,b);if(K.4i){K.gv=K.U.2u()}R 1d}R 1b},fz:Q(a){K.jV=1b;O.1C.9o.1g.fz.1j(K,1s);K.z8=K.3z.1a;K.z7=K.3z[0].1a},bT:Q(a){R K.VL?K.U.dF(a):K.U.bT(a)},ir:Q(a){R K.4i?a:K.U.ir(a)},jD:Q(d){N c=K,a;d=c.Jp(d);if(c.aB){R c.Jj(d)}a=c.fm(d);N b=c.e7(a);if(K.z6){b=K.z6+z5(b)}V{if(K.7h){b=K.7h+z5(b)}}R b},fm:Q(b){N f=K,h,g,e,c=f.U,d=c.2u(),a=f.z4(),i=f.3c;h=1k.2s((b.1r-a.1P)/(d*i.w));g=1k.2s((a.1S-b.1t)/(d*i.h));e=c.4I();R{x:h,y:g,z:e}},yS:Q(c){N b=K,a=b.fm(c);a="x"+a.x+"y"+a.y+"z"+a.z;R b.aA[a]},J2:Q(f,h,c){N e=K;if(e.s4==0){R}N g=c.aC;if(g&&g!=""){if(e.jU.1a>=e.s4){N a=e.jU.i9();e.aA[a]=P;2t e.aA[a]}N d=g.4B("49");N b="x"+d[0]+"y"+d[1]+"z"+d[2];e.aA[b]=h;e.jU.1u(b)}},J7:Q(){N c=K;1f(N b=0;b<c.jU.1a;b++){N a=c.jU.i9();c.aA[a]=P;2t c.aA[a]}},fq:Q(){N h=K,d,g,a,f,j={},e=1d;if(h.1T&&h.3F){N g=h.1T.1a;h.1T.93(Q(l,i){R(i-l)});if(!h.4A){h.4A=h.1T[0]}if(!h.4r){h.4r=h.1T[g-1]}h.3F.93(Q(l,i){R(l-i)});if(!h.55){h.55=h.3F[g-1]}if(!h.56){h.56=h.3F[0]}h.5l=g;R}1f(d=0,g=h.9R.1a;d<g;d++){a=h.9R[d];j[a]=h.2D[a];if(e&&h.2D[a]){e=1b}}if(h.fv==P){h.fv=e}if(j.1T==P){j.1T=h.fu(j.3F)}if(j.1T==P){j.1T=h.fs(j)}if(h.U.1T&&h.U.3F){h.1T=h.U.1T;h.3F=h.U.3F;N g=h.1T.1a;h.1T.93(Q(l,i){R(i-l)});if(!h.4A){h.4A=h.1T[0]}if(!h.4r){h.4r=h.1T[g-1]}h.3F.93(Q(l,i){R(l-i)});if(!h.55){h.55=h.3F[g-1]}if(!h.56){h.56=h.3F[0]}h.5l=g;R}if(j.1T==P){1f(d=0,g=h.9R.1a;d<g;d++){a=h.9R[d];j[a]=h.2D[a]!=P?h.2D[a]:h.U[a]}if(j.1T==P){j.1T=h.fu(j.3F)}if(j.1T==P){if(h.U.2a!=P){j.1T=h.U.2a.1T}}if(j.1T==P){j.1T=h.fs(j)}}N c;if(h.2D.4A&&h.2D.4A!=="4w"){c=h.2D.4A}if(h.2D.56){c=O.1c.hs(h.2D.56,h.4l,h.2P,h.5c)}N b;if(h.2D.4r&&h.2D.4r!=="4w"){b=h.2D.4r}if(h.2D.55){b=O.1c.hs(h.2D.55,h.4l,h.2P,h.5c)}if(j.1T){j.1T.93(Q(l,i){R(i-l)});if(!c){c=j.1T[0]}if(!b){N k=j.1T.1a-1;b=j.1T[k]}}h.1T=j.1T;if(h.1T){g=h.1T.1a;h.3F=[g];if(h.U.2a){f=K.rT(h.1T)}V{f=0}1f(d=f;d<g+f;d++){h.3F[d]=O.1c.fr(h.1T[d-f],h.4l,h.2P,h.5c)}h.5l=g}h.4r=b;if(b){h.55=O.1c.fr(b,h.4l,h.2P,h.5c)}h.4A=c;if(c){h.56=O.1c.fr(c,h.4l,h.2P,h.5c)}},rT:Q(b){N e=K,d,a,c,f;f=e.U.2a.1T;a=f.1a;c=b[0];1f(d=0;d<a;d++){if(c===f[d]){R d}}R 0},fu:Q(e){if(e==P){R}N d=K,b,a;a=e.1a;b=[a];1f(N c=0;c<a;c++){b[c]=O.1c.hs(e[c],d.4l,d.2P,d.5c)}R b},fs:Q(l){N k=K,n=l.4A;if(l.56!=P){n=O.1c.hs(l.56,k.4l,k.2P,k.5c)}V{if(n==="4w"&&k.3a!=P){N m,j,g;m=k.U.5i();j=k.3a.3J()/m.w;g=k.3a.4J()/m.h;n=1k.3l(j,g)}}N f=l.4r;if(l.55!=P){f=O.1c.hs(l.55,k.4l,k.2P,k.5c)}V{if(l.4r==="4w"&&k.7b!=P){N m,j,g;m=k.U.5i();j=k.7b.3J()/m.w;g=k.7b.4J()/m.h;f=1k.3l(j,g)}}if(2v n!=="6w"&&2v f!=="6w"&&K.3a!=P){N o=K.U.s3();n=1k.3l(K.3a.3J()/o.w,K.3a.4J()/o.h)}N a=l.bN;N b=l.5l;if(2v f==="6w"&&2v n==="6w"&&b===2b){N h=n/f;b=1k.9d(1k.fc(h)/1k.fc(2))+1}V{if(b===2b&&a!=P){b=a+1}}if(2v b!=="6w"||b<=0||(2v n!=="6w"&&2v f!=="6w")){R}N d=[b];N c=2;if(2v f==="6w"&&2v n==="6w"){c=1k.2W((n/f),(1/(b-1)))}if(2v n==="6w"){1f(N e=0;e<b;e++){d[e]=n/1k.2W(c,e)}}V{1f(e=0;e<b;e++){d[b-1-e]=f*1k.2W(c,e)}}R d},1p:"O.4c"});O.1C.fl=O.1A(O.4c,{5y:1d,8g:1b,yc:0,9h:P,1o:Q(c,b,a){if(a&&a.8g||K.8g){a=O.1c.1M({2O:"4t:jG",5l:K.9h?K.9h.1a:19},a)}O.4c.1g.1o.1j(K,[c||K.2c,b||K.1z,{},a])},1R:Q(a){if(a==P){a=S O.1C.fl(K.2c,K.1z,K.85())}a=O.4c.1g.1R.1j(K,[a]);R a},jD:Q(d){N a=K.fm(d);N b=K.1z;if(O.1c.4k(b)){N c=""+a.x+a.y+a.z;b=K.c8(c,b)}R O.5t.5d(b,a)},fm:Q(d){N c=K.rE();N a=1k.2s((d.1r-K.bn.1P)/(c*K.3c.w));N f=1k.2s((K.bn.1S-d.1t)/(c*K.3c.h));N e=K.Jo();if(K.5z){N b=1k.2W(2,e);a=((a%b)+b)%b}R{x:a,y:f,z:e}},2Z:Q(a){O.4c.1g.2Z.1j(K,1s);if(!K.bn){K.bn=S O.3k(K.3a.1r,K.3a.1t)}},1p:"O.1C.fl"});O.1C.mT=O.1A(O.4c,{yZ:{nF:1b,yX:1d},jS:P,jT:P,7f:P,8t:P,3M:P,4l:P,dg:1b,e9:1b,el:P,aH:P,gO:-1,9C:-1,iV:P,1o:Q(b,c,e,j){N h=K;O.4c.1g.1o.1j(h,1s);O.1c.4D(h.3L,h.yZ);h.1n.fw("s0");h.1n.fw("Jk");if(h.3L.nF){if(h.5d==="VK"){h.5d=O.1c.h2()?"m6":"2V"}if(h.5d==="Jn"){h.5d=O.1c.h2()?"Jn":"2V"}}if(2v h.3L.d6!=="2b"){if(h.3L.d6 1V O.1h){h.3L.J6=1d;N g=O.1l.7D.hQ(h.3L.d6);h.3L.d6=O.1c.6y(g)}V{2t h.3L.d6}}if(2v h.3L.9j!=="2b"){if(!h.3L.9j){2t h.3L.9j}}if(h.3L.e9){h.e9=1d}if(j&&j.8r&&j.8r 1V O.aJ){h.8r=j.8r}if(h.2P){h.2P=h.2P.dm()}if(h.2O){if(2v h.2O==="cp"){h.2O=S O.3h(h.2O)}N f=h.2O.7X().4B(":");if(f 1V 3T&&f.1a===2){h.jS=\'{"hV":\'+f[1]+"}"}}if(h.4l&&h.3a&&(h.1T||h.3F)){6h(Q(){h.1n.1L("s0",h)},10)}V{if(!!O.e4){N i={4d:h};s2.fY(Q(k){R Q(l){k.4d.Jm(k,l)}}(i),Q(k){},"s1","VJ",[K.2c,K.z3])}V{N d=h.1z;if(O.1c.4k(c)){d=c[0]}N a=S O.1l.oh(d,{2E:{4S:h.z1,2y:h,5p:h.z0},2O:h.2O,7h:K.7h});a.8o(h.8r)}}},Jm:Q(VI,r){N 9U=r.5G;N me=K;if(9U!=="1b"){9U=ot("("+9U+")");N 2k=9U.2k;2k=S O.1U(2k.1r,2k.1N,2k.1I,2k.1t);me.3a=2k;if(9U.4l){me.4l=9U.4l;me.2D.3F=9U.3F;me.2P=9U.bA;me.5c=vI}V{N 7f=9U.7f,cq=9U.cq,8t=9U.8t,3M=9U.3M,5c=9U.5c;7f=S O.1U(7f.1r,7f.1N,7f.1I,7f.1t);me.7f=7f;8t=S O.2J(8t.bP.x,8t.bP.y);me.8t=8t;me.3M=3M;cq=cq.dm();me.2P=me.2P||cq;me.5c=5c;me.4l=O.1c.Jl(7f,8t,3M,me.2P,5c)}me.1n.1L("s0",me)}V{N z2=me.1z;if(O.1c.4k(me.1z)){z2=me.1z[0]}N jT=S O.1l.U(z2,{2E:{4S:me.z1,2y:me,5p:me.z0},2O:me.2O});jT.8o(me.8r)}},z1:Q(c){N j=K;if(c.3d){N g=P;N d=c.or;if(d){g=d.VH;if(!j.3F&&d.VG&&(g&&g.1a&&g.1a>0)){K.2D.3F=g}}N c=c.3d;N b=c.2k,f=c.7f,i=c.cq,h=c.8t,e=c.3M,k=c.5c,a=c.Bl;f=S O.1U(f.1r,f.1N,f.1I,f.1t);j.7f=f;h=S O.2J(h.bP.x,h.bP.y);j.8t=h;j.3M=e;b=S O.1U(b.1r,b.1N,b.1I,b.1t);j.3a=b;i=i.dm();j.2P=j.2P||i;j.5c=k;j.4l=O.1c.Jl(f,h,e,j.2P,k);if(!j.2O&&a){j.2O="4t:"+a}if(!!O.e4){s2.fY(Q(){},Q(l){},"s1","VF",[K.2c,c])}j.1n.1L("s0",j)}},z0:Q(a){N b=K;b.1n.1L("Jk",a)},1m:Q(){N a=K;if(a.jT){a.jT.1n.9q=P;a.jT.1m()}a.7f=P;a.8t=P;a.3M=P;O.4c.1g.1m.1j(a,1s);a.yZ=P},1R:Q(b){N a=K;if(b==P){b=S O.1C.mT(a.2c,a.1z,a.3L,a.85())}b=O.4c.1g.1R.1j(a,[b]);b.9P=P;R b},Jj:Q(a){N g=K,d,j=g.3c,k=g.U.4I(),c=K.U.2a.9i?(k+K.U.2a.9i):k,b=g.3F[c];if(!b){b=K.mW(c)}if(K.U&&K.U.2a&&K!==K.U.2a){N e=K.U.2a.mW(k)*K.U.2a.4l/K.4l;N h=[1e-9,2e-9,4e-9,8e-9,1.6e-8,3.2e-8,6.4e-8,1.Ji-7,2.Jh-7,5.Jg-7,0.Jf,0.Je,0.Jd,0.Jc,0.Jb,0.Ja,0.J9,0.J8];N i=k>h.1a?h.1a:k;if(e&&1k.3C(e-b)>h[i]){b=e}}d={1B:j.w,1E:j.h,7f:\'{"9Z":{"x":\'+a.1r+\',"y":\'+a.1N+\'},"bx":{"x":\'+a.1I+\',"y":\'+a.1t+"}}",3M:b,e9:g.e9};if(g.8r||O.aJ.dk){N f=g.8r||O.aJ.dk;d[f.2c]=f.yY()}if(!g.3L.yX){d.t=S 78().bo()}if(2v g.3L.9j!=="2b"&&2v d.9j==="2b"){if(g.3L.9j&&g.3L.9j.1a>0){d.9j=g.3L.9j}}if(g.jS){d.5r=g.jS}R g.rZ(d)},e7:Q(g){N f=K,c,j=f.3c,b=K.U.2a.9i?g.z+K.U.2a.9i:g.z,a=f.3F[b];if(!a){a=K.mW(b)}if(K.U&&K.U.2a&&K!==K.U.2a){N d=K.U.2a.mW(g.z)*K.U.2a.4l/K.4l;N h=[1e-9,2e-9,4e-9,8e-9,1.6e-8,3.2e-8,6.4e-8,1.Ji-7,2.Jh-7,5.Jg-7,0.Jf,0.Je,0.Jd,0.Jc,0.Jb,0.Ja,0.J9,0.J8];N i=g.z>h.1a?h.1a:g.z;if(d&&1k.3C(d-a)>h[i]){a=d}}c={1B:j.w,1E:j.h,x:g.x,y:g.y,3M:a,e9:f.e9};if(f.8r||O.aJ.dk){N e=f.8r||O.aJ.dk;c[e.2c]=e.yY()}if(!f.3L.yX){c.t=S 78().bo()}if(2v f.3L.9j!=="2b"&&2v c.9j==="2b"){if(f.3L.9j&&f.3L.9j.1a>0){c.9j=f.3L.9j}}if(f.jS){c.5r=f.jS}R f.rZ(c)},rZ:Q(e,d){N g=K,b=d||K.1z,f,a,c;f=O.1c.1M({},g.3L);f=O.1c.1M(f,e);if(f.dg===1b){g.el=f.el;g.dg=f.dg;2t f.dg;2t f.el}a=O.1c.gV(f);if(O.1c.4k(b)){N i=""+e.x+e.y;b=g.c8(i,b)}if(g.aB){b=b+"/4Y."+g.5d}V{b=b+"/VE."+g.5d}c=O.1c.rY(O.1c.gT(b));1f(N h in f){if(h.i0()in c){2t f[h]}}a=O.1c.gV(f);if(g.bn){a=a+\'&6E={"x":\'+g.bn.1P+\',"y":\'+g.bn.1S+"}"}if(g.dg===1b){a+="&dg=1b";if(g.el){a+="&el="+g.el.7A()}}V{a+="&dg=1d"}R O.1c.mV(b,a)},mU:Q(b){if(K.4i){K.J7()}if(2v(b.d6)!=="2b"){if(b.d6 1V O.1h){b.J6=1d;N a=O.1l.7D.hQ(b.d6);b.d6=O.1c.6y(a)}V{2t b.d6}}R O.1C.ca.1g.mU.1j(K,[b])},EN:Q(){K.9C=K.gO-1;K.lK()},EO:Q(){K.9C=K.gO+1;K.lK()},lK:Q(){N d=K;if(d.aH!==P){if(d.9C!==d.gO&&K.9C>-1){if(d.aH){N b=d.aH.bz;if(b&&d.9C<b.1a&&d.9C>=0){N c=b[d.9C].2c;N a=d.mU({VD:c});if(a&&d.iV){d.gO=d.9C;N e=b[K.9C].VC;K.iV.EM(e)}}}}}V{d.w5()}},w5:Q(){N b=K;N a=S O.1l.tp(b.1z,{2E:{4S:c,2y:b}});a.8o();Q c(d){b.aH=d.3d;b.lK();if(b.iV){b.iV.F1()}}},1p:"O.1C.mT"});O.1C.mS=O.1A(O.4c,{yW:"${8K}49${w}x${h}/${3M}/${x}/${y}.${5d}",8K:P,1o:Q(d,c,b,a){N e=K;e.8K=b;O.4c.1g.1o.1j(e,[d,c,{},a])},1R:Q(b){N a=K;if(b==P){b=S O.1C.mS(a.2c,a.1z,a.8K,a.85())}b=O.4c.1g.1R.1j(a,[b]);R b},1m:Q(){N a=K;O.4c.1g.1m.1j(a,1s);a.8K=P;a.yW=P},e7:Q(f){N e=K,h=e.3c,b=e.3F[f.z],a=e.1z,d=e.yW,c=e.8K,g=e.5d;if(O.1c.4k(a)){N i=""+f.x+f.y+f.z+h.h+h.w+c+g;a=e.c8(i,a)}a=(a.ef(a.1a-1)==="/")?a+d:a+"/"+d;R O.5t.5d(a,{x:f.x,y:f.y,3M:1k.2s(1/b),h:h.h,w:h.w,8K:c,5d:g})},1p:"O.1C.mS"});O.1C.mR=O.1A(O.4c,{4l:96,2c:"mR",9g:"v2",1z:"4s://t2.rX.7x/yV/4Y",a1:{v1:"4s://t1.rX.7x/yV/4Y",v2:"4s://t2.rX.7x/yV/4Y",v3:"4s://t3.rX.7x/oh/VB"},9J:P,hm:"VA",2A:"HV",9i:3,1o:Q(a){N b=K;K.9J=O.a4("Vz");if(a&&a.9g&&K.a1.cj(a.9g)){K.9g=a.9g}if(a&&a.2c){K.2c=a.2c}b.J5(K.9g);a=O.1c.1M({3a:S O.1U(-5U.fk,-5U.fk,5U.fk,5U.fk),1T:[yl.Vy,yk.Vx,rA.HU,rz.HT,ry.HS,rx.HR,rw.HQ,rv.HP,76.HO,38.HN,19.HM,9.HL,4.HK,2.HJ,1.HI,0.HH]},a);O.4c.1g.1o.1j(b,[b.2c,b.1z,P,a]);b.2P="HG";b.2O="4t:fn"},J5:Q(a){N b=K.a1[a];if(b){if(a==="v3"){K.1z=b+"?&x=${x}&y=${y}&z=${z}"}V{K.1z=b+"?U=${hm}&2A=${2A}&x=${x}&y=${y}&z=${z}"}}},1m:Q(){N a=K;O.4c.1g.1m.1j(a,1s);a.hm=P;a.2c=P;a.1z=P},1R:Q(b){N a=K;if(b==P){b=S O.1C.mR(a.2c,a.1z,a.8K,a.85())}b=O.4c.1g.1R.1j(a,[b]);R b},e7:Q(a){N c=K,b=c.1z;R O.5t.5d(b,{hm:c.hm,2A:c.2A,x:a.x,y:a.y,z:a.z+c.9i})},1p:"O.1C.mR"});O.1C.yT=O.1A(O.1C,{5y:1b,7U:P,7Y:1b,1o:Q(b,a){O.1C.1g.1o.1j(K,1s);K.7U=[]},1m:Q(){K.J4();K.7U=P;O.1C.1g.1m.1j(K,1s)},ad:Q(b){if(b!==K.2M){K.2M=b;1f(N c=0,a=K.7U.1a;c<a;c++){K.7U[c].ad(K.2M)}}},2S:Q(d,b,e){O.1C.1g.2S.1j(K,1s);if(b||!K.7Y){1f(N c=0,a=K.7U.1a;c<a;c++){K.yU(K.7U[c])}K.7Y=1d}},Vw:Q(a){K.7U.1u(a);if(K.2M!=P){a.ad(K.2M)}if(K.U&&K.U.48()){a.U=K.U;K.yU(a)}},y7:Q(a){if(K.7U&&K.7U.1a){O.1c.aM(K.7U,a);a.jR()}},J4:Q(){if(K.7U!=P){4U(K.7U.1a>0){K.y7(K.7U[0])}}},yU:Q(a){N b=K.U.bT(a.5x);if(b==P){a.2g(1b)}V{if(!a.rW()){N c=a.2H(b);K.1q.1X(c)}V{if(a.4Z){a.4Z.2S(b)}}}},uK:Q(){N b=P;if(K.7U&&(K.7U.1a>0)){N b=S O.1U();1f(N d=0,a=K.7U.1a;d<a;d++){N c=K.7U[d];b.1M(c.5x)}}R b},1p:"O.1C.yT"});O.1C.4F=O.1A(O.1C,{5y:1d,1z:P,4i:1d,5a:P,9T:0,9S:0,aA:P,4d:P,rU:P,1o:Q(c,b,d,a){N e=O.8R;K.1z=b;K.5a=d;K.3a=d;O.1C.1g.1o.1j(K,[c,a]);if(K.4i){K.4i=O.1c.rV()}if(e.jk==="pA"){K.4i=1b}if(K.4i){K.1w=1O.2G("1w");K.1w.id="J3"+K.id;K.1w.W.2x="3i";K.1q.1X(K.1w);K.6M=K.1w.5M("2d")}},1m:Q(){if(K.4d){K.jN(K.4d);K.4d.1m();K.4d=P}K.1z=P;K.4i=1d;K.aA=P;K.5y=1d;K.5a=P;O.1C.1g.1m.1j(K,1s)},1R:Q(a){if(a==P){a=S O.1C.4F(K.2c,K.1z,K.5a,K.85())}a=O.1C.1g.1R.1j(K,[a]);R a},2S:Q(e,a,f){N d=K.U.3s.W,h=2l(d.1r),g=2l(d.1t);K.9T=-h;K.9S=-g;O.1C.1g.2S.1j(K,1s);N b=(K.4d==P);if(a||b){K.ht();N c=K.rU=K.U.bT({1P:K.5a.1r,1S:K.5a.1t});if(b){if(K.4i){K.4d=S O.5E.mQ(K,S O.2C(c.x-K.9T,c.y-K.9S),K.5a,P,K.3c,K.4i);K.jO(K.4d)}V{K.4d=S O.5E.4F(K,c,K.5a,P,K.3c);K.jO(K.4d)}}V{K.4d.1G=K.3c.1R();if(K.4i){K.4d.2x=S O.2C(c.x-K.9T,c.y-K.9S)}V{K.4d.2x=c.1R()}}K.4d.2H();if(!K.4i){K.4d.6n.W.2g="";K.4d.3y.W.2M=1}}V{if(K.4i){K.jQ()}}},jQ:Q(){N c=K.rU.x-K.9T;N b=K.rU.y-K.9S;N a=S O.2C(c,b);K.jP(K.4d.7T,a)},b0:Q(b,a){if(K.4i){K.9T+=b;K.9S+=a;K.jQ()}},jP:Q(b,a){K.1w.1B=K.U.3D.lr;K.1w.1E=K.U.3D.pE;K.6M.4L(0,0,K.1w.1B,K.1w.1E);K.6M.7P(b,a.x,a.y,K.4d.1G.w,K.4d.1G.h)},yS:Q(a){R K.aA},J2:Q(a,b){K.aA=b},fm:Q(a){R{x:0,y:0,z:0}},ht:Q(){N b=K.5a.3J()/K.U.2u();N a=K.5a.4J()/K.U.2u();K.3c=S O.2J(b,a)},jO:Q(a){a.jM=Q(){K.1n.1L("aU")};a.1n.4Q("aU",K,a.jM);a.d5=Q(){K.1n.1L("7t")};a.1n.4Q("7t",K,a.d5);a.1n.4Q("at",K,a.d5)},jN:Q(a){a.at();a.1n.un({aU:a.jM,7t:a.d5,at:a.d5,2y:K})},jD:Q(){R K.1z},fq:Q(){N h=K,d,g,a,f,j={},e=1d;if(h.1T&&h.3F){N g=h.1T.1a;h.1T.93(Q(l,i){R(i-l)});if(!h.4A){h.4A=h.1T[0]}if(!h.4r){h.4r=h.1T[g-1]}h.3F.93(Q(l,i){R(l-i)});if(!h.55){h.55=h.3F[g-1]}if(!h.56){h.56=h.3F[0]}h.5l=g;R}1f(d=0,g=h.9R.1a;d<g;d++){a=h.9R[d];j[a]=h.2D[a];if(e&&h.2D[a]){e=1b}}if(h.fv==P){h.fv=e}if(j.1T==P){j.1T=h.fu(j.3F)}if(j.1T==P){j.1T=h.fs(j)}if(h.U.1T&&h.U.3F){h.1T=h.U.1T;h.3F=h.U.3F;N g=h.1T.1a;h.1T.93(Q(l,i){R(i-l)});if(!h.4A){h.4A=h.1T[0]}if(!h.4r){h.4r=h.1T[g-1]}h.3F.93(Q(l,i){R(l-i)});if(!h.55){h.55=h.3F[g-1]}if(!h.56){h.56=h.3F[0]}h.5l=g;R}if(j.1T==P){1f(d=0,g=h.9R.1a;d<g;d++){a=h.9R[d];j[a]=h.2D[a]!=P?h.2D[a]:h.U[a]}if(j.1T==P){j.1T=h.fu(j.3F)}if(j.1T==P){if(h.U.2a!=P){j.1T=h.U.2a.1T}}if(j.1T==P){j.1T=h.fs(j)}}N c;if(h.2D.4A&&h.2D.4A!=="4w"){c=h.2D.4A}if(h.2D.56){c=O.1c.hs(h.2D.56,h.4l,h.2P,h.5c)}N b;if(h.2D.4r&&h.2D.4r!=="4w"){b=h.2D.4r}if(h.2D.55){b=O.1c.hs(h.2D.55,h.4l,h.2P,h.5c)}if(j.1T){j.1T.93(Q(l,i){R(i-l)});if(!c){c=j.1T[0]}if(!b){N k=j.1T.1a-1;b=j.1T[k]}}h.1T=j.1T;if(h.1T){g=h.1T.1a;h.3F=[g];if(h.U.2a){f=K.rT(h.1T)}V{f=0}1f(d=f;d<g+f;d++){h.3F[d]=O.1c.fr(h.1T[d-f],h.4l,h.2P,h.5c)}h.5l=g}h.4r=b;if(b){h.55=O.1c.fr(b,h.4l,h.2P,h.5c)}h.4A=c;if(c){h.56=O.1c.fr(c,h.4l,h.2P,h.5c)}},rT:Q(b){N e=K,d,a,c,f;f=e.U.2a.1T;a=f.1a;c=b[0];1f(d=0;d<a;d++){if(c===f[d]){R d}}R 0},1p:"O.1C.4F"});O.1C.mP=O.1A(O.4c,{Vv:P,4l:96,1z:"4s://Vu${rR}.U.Vt.7x/Vs/?qt=4d&x=${x}&y=${y}&z=${z}&6D=pl&Vr=Vq&Vp=1",9J:"rG by <a W=\'bk-mI: iA\' ai=\'jF\' 88=\'4s://U.Vo.7x/\'>mP</a>",9i:3,1o:Q(k){N j=K;j.2c="mP";N d=-rS;N c=-rS;N b=rS;N a=rS;N h=1k.2W(2,15);N e=[];1f(N f=0;f<17;f++){e[f]=h;h*=0.5}N g=[];1f(N f=0;f<17;f++){g[f]=0.Vn/(96*e[f])}k=O.1c.1M({3a:S O.1U(d,c,b,a),bn:S O.3k(d,a),1T:e},k);O.4c.1g.1o.1j(j,[j.2c,j.1z,P,k]);j.2P="m";j.2O="4t:fn"},1R:Q(b){N a=K;if(b==P){b=S O.1C.mP(a.2c,a.1z,a.3L,a.85())}b=O.4c.1g.1R.1j(a,[b]);b.9P=P;R b},e7:Q(f){N e=K,a=e.1z;N g=f.z+e.9i;N d=1k.2W(2,g-1);N b=d-1;N i=f.x-d;N h=-f.y+b;N c=1k.3C((f.x+f.y)%8)+1;a=O.5t.5d(a,{rR:c,x:i,y:h,z:g});a=a.42(/-/g,"M");R a},1p:"O.1C.mP"});O.1C.mO=O.1A(O.4c,{jL:"yR",J0:1b,9J:"rG by <a W=\'bk-mI: iA\' ai=\'jF\' 88=\'4s://gG.J1.7x\'>mO</a>",1z:"4s://t${rR}.J1.7x/Vm?T=${2A}49${8i}&x=${x}&y=${y}&l=${z}",9i:1,4l:96,1o:Q(a){N b=K;b.2c=a&&a.2c||"mO";O.4c.1g.1o.1j(b,[b.2c,b.1z,P,a])},1R:Q(b){N a=K;if(b==P){b=S O.1C.mO(a.2c,a.1z,a.3L,a.85())}b=O.4c.1g.1R.1j(a,[b]);b.9P=P;R b},e7:Q(g){N f=K,a=f.1z;N b=K.2O;if(b.7X){b=b.7X()}if(b=="4t:9r"){N b="c"}V{N b="w"}N i=g.x;N h=g.y;N e=g.z+f.9i;N d=1k.3C((g.x+g.y)%7);N c=K.jL;if(K.J0){if(K.jL=="yR"){c="Vl"}if(K.jL=="3e"){c="Vk"}if(K.jL=="IY"){c="Vj"}}a=O.5t.5d(a,{rR:d,x:i,y:h,z:e,8i:b,2A:c});R a},2Z:Q(c){O.4c.1g.2Z.1j(K,[c]);N a=P;N b=K.2O||c.2O;if(b){if(b.7X){a=b.7X()}V{a=b}}K.IZ(a)},IZ:Q(j){N f=K.jL;if(f=="yR"){N k=18;N h=0;K.9i=1;K.5l=18}V{if(f=="3e"){N k=18;N h=0;K.9i=1;K.5l=18}V{if(f=="IY"){N k=14;N h=0;K.9i=1;K.5l=14}}}if(j=="4t:9r"){N e=-2R;N d=-90;N b=2R;N a=90;N c=[];1f(N g=h;g<k;g++){c.1u(1.IL/2/1k.2W(2,g))}K.2P="Vi";K.2O=S O.3h("4t:9r");K.3a=S O.1U(e,d,b,a);K.bn=S O.3k(e,a);K.1T=c}V{N e=-5U.rQ;N d=-5U.rQ;N b=5U.rQ;N a=5U.rQ;N c=[];1f(N g=h;g<k;g++){c.1u(ym.Vh/2/1k.2W(2,g))}K.2P="m";K.2O=S O.3h("4t:fn");K.3a=S O.1U(e,d,b,a);K.bn=S O.3k(e,a);K.1T=c}},1p:"O.1C.mO"});O.1C.mK={48:Q(){N a=P;if(K.8g){a=K.U.a9()}V{a=O.1C.mL.1g.48.1j(K)}R a},5w:Q(a){R O.1C.1g.5w.1j(K,1s)},8A:Q(a){R O.1C.1g.8A.1j(K,1s)},IK:Q(){K.mM=[];N a=ym.Iq;1f(N b=0;b<=K.yM;++b){K.mM[b]=a/1k.2W(2,b)}K.2P="m";K.2O=K.2O||"4t:jG"},jK:Q(c,b){N a=c*5U.34/2R;N d=1k.fc(1k.IX((90+b)*1k.PI/l1))/(1k.PI/2R);d=d*5U.34/2R;R S O.3k(a,d)},fo:Q(a,d){N c=(a/5U.34)*2R;N b=(d/5U.34)*2R;b=2R/1k.PI*(2*1k.q3(1k.IW(b*1k.PI/2R))-1k.PI/2);R S O.3k(c,b)},IT:Q(a){N b=O.1C.mK.jK(a.x,a.y);a.x=b.1P;a.y=b.1S;R a},IS:Q(a){N b=O.1C.mK.fo(a.x,a.y);a.x=b.1P;a.y=b.1S;R a}};(Q(){N a=["4t:jG","4t:fn","4t:IV","4t:IU"];N k=O.3h.yQ;N e=O.1C.mK;N h=O.3h.mN;N d,f,b,g,c;1f(d=0,f=a.1a;d<f;++d){b=a[d];k("4t:9r",b,e.IT);k(b,"4t:9r",e.IS);1f(c=d+1;c<f;++c){g=a[c];k(b,g,h);k(g,b,h)}}})();O.1C.e8=O.1A(O.1C,{IQ:1d,5y:1d,gt:1d,7S:P,3E:P,1o:Q(b,a){O.1C.1g.1o.1j(K,1s);if(K.7S==P){K.7S=O.1c.7v(K.1q.id+"Vg")}},1m:Q(){K.3E=P;K.7S=P;O.1C.1g.1m.1j(K,1s)},2Z:Q(a){O.1C.1g.2Z.1j(K,1s);K.7S.W.5u=2l(K.1q.W.5u)+1;K.7S.W.2g=K.1q.W.2g;K.7S.W.1B="100%";K.7S.W.1E="100%";if(O.Vf=="i1"){K.7S.W.qg="1z("+O.1c.4X()+"qO.m6)"}if(K.gt){K.U.6A.1X(K.7S)}V{K.U.3s.1X(K.7S)}K.yH();if(K.3E==P){K.IR()}},ae:Q(a){if(K.7S&&K.7S.2Y){K.7S.2Y.2U(K.7S)}O.1C.1g.ae.1j(K,1s)},IR:Q(){K.1q.W.dZ="Ve";N g=K.U.5i();N a=1k.4q(g.w,fW);N e=1k.4q(g.h,dj);N b=S O.2J(a,e);N d=S O.2C(g.w/2,g.h/2);N c=d.3t(-b.w/2,-b.h/2);N f=O.1c.7v(K.2c+"Vd",c,b,P,P,P,"4w");f.W.4P="Vc";f.W.dZ="Vb";f.6k=K.yJ();K.1q.1X(f)},yJ:Q(){R""},2g:Q(a){O.1C.1g.2g.1j(K,1s);K.7S.W.2g=K.1q.W.2g},hd:Q(a){O.1C.1g.hd.1j(K,1s);K.7S.W.5u=2l(K.1q.W.5u)+1},b0:Q(b,a){O.1C.1g.b0.1j(K,1s);if(K.jJ){K.jJ(b,-a)}V{K.2S(K.U.az())}},2S:Q(c,d,j){O.1C.1g.2S.1j(K,1s);if(K.3E!=P){N e=K.U.b9();N g=K.U.4I();if(e!=P){N f=K.rP();N b=K.yP(f);N h=K.IJ();N m=K.IN(h);if(!(e.3A(b))||!(g==m)){if(!d&&b&&K.jJ&&K.IQ){N i=K.U.8A(b);N k=K.U.8A(e);K.jJ(k.x-i.x,i.y-k.y)}V{N a=K.yO(e);N l=K.IM(g);K.yA(a,l,j)}}}}},5w:Q(a){N b=P;if((K.3E!=P)&&(K.rP()!=P)){N d=K.IO(a);N c=K.yC(d);b=K.yP(c)}R b},8A:Q(b){N a=P;if((K.3E!=P)&&(K.rP()!=P)){N d=K.yO(b);N c=K.yB(d);a=K.IP(c)}R a},yP:Q(d){N a=P;if(d!=P){N c=K.rL(d);N b=K.rK(d);a=S O.3k(c,b)}R a},yO:Q(a){N b=P;if(a!=P){b=K.rJ(a.1P,a.1S)}R b},IP:Q(d){N b=P;if(d!=P){N a=K.II(d);N c=K.IH(d);b=S O.2C(a,c)}R b},IO:Q(a){N b=P;if(a!=P){b=K.rI(a.x,a.y)}R b},1p:"O.1C.e8"});O.1C.mL=O.1A({1o:Q(){},fq:Q(){N c=S 3T("aQ","bN","5l");1f(N b=0,a=c.1a;b<a;b++){N f=c[b];K[f]=(K.2D[f]!=P)?K.2D[f]:K.U[f]}if((K.aQ==P)||(K.aQ<K.yN)){K.aQ=K.yN}N g;N e=K.yM-K.aQ+1;if(((K.2D.5l==P)&&(K.2D.bN!=P))||((K.5l==P)&&(K.bN!=P))){g=K.bN-K.aQ+1}V{g=K.5l}if(g!=P){K.5l=1k.4q(g,e)}V{K.5l=e}K.bN=K.aQ+K.5l-1;if(K.mM!=P){N d=0;K.1T=[];1f(N b=K.aQ;b<=K.bN;b++){K.1T[d++]=K.mM[b]}K.4A=K.1T[0];K.4r=K.1T[K.1T.1a-1]}},2u:Q(){if(K.1T!=P){R O.1C.1g.2u.1j(K,1s)}V{N a=P;N c=K.U.5i();N b=K.48();if((c!=P)&&(b!=P)){a=1k.3l(b.3J()/c.w,b.4J()/c.h)}R a}},48:Q(){N c=P;N b=K.U.5i();N e=S O.2C(0,0);N f=K.5w(e);N a=S O.2C(b.w,b.h);N d=K.5w(a);if((f!=P)&&(d!=P)){c=S O.1U(f.1P,d.1S,d.1P,f.1S)}R c},aw:Q(a){if(K.1T!=P){R O.1C.1g.aw.1j(K,1s)}V{N b=O.1C.1g.48.1j(K,[]);R K.hq(b)}},IN:Q(a){N b=P;if(a!=P){b=a-K.aQ;if(K.U.2a!==K){b=K.U.2a.aw(K.ax(b))}}R b},IM:Q(a){N b=P;if(a!=P){b=a+K.aQ;if(K.U.2a!==K){b=K.aw(K.U.2a.ax(b))}}R b},1p:"O.1C.mL"});O.1C.69=O.1A(O.1C.e8,O.1C.mL,{yN:0,yM:21,mM:[1.IL,0.Va,0.V9,0.V8,0.V7,0.V6,0.V5,0.V4,0.V3,0.V2,0.V1,0.V0,0.UZ,0.UY,0.UX,0.UW,0.UV,0.UU,0.UT,0.UR,0.UQ,6.UP-7],2A:P,5z:1d,8g:1b,9g:P,4l:96,1o:Q(c,b){b=b||{};if(!b.9g){b.9g=2v IG==="Q"?"2":"3"}N a=O.1C.69["v"+b.9g.42(/\\./g,"49")];if(a){O.1c.4D(b,a)}V{6F"UO 69 UN UM 9g: "+b.9g}O.1c.4D(b,a.IB);if(b.3a){b.3a=b.3a.1R()}O.1C.e8.1g.1o.1j(K,[c,b]);O.1C.mL.1g.1o.1j(K,[c,b]);if(K.8g){O.1c.1M(K,O.1C.mK);K.IK()}},1R:Q(){R S O.1C.69(K.2c,K.85())},f5:Q(b){N a=K.2M==P?1:K.2M;O.1C.e8.1g.f5.1j(K,1s);K.ad(a)},2g:Q(a){if(!K.yL){K.fp(a)}O.1C.e8.1g.2g.1j(K,1s)},2S:Q(b,a,c){K.yL=c;O.1C.e8.1g.2S.1j(K,1s);2t K.yL},ad:Q(b){if(b!==K.2M){if(K.U!=P){K.U.1n.1L("7w",{1i:K,aV:"2M"})}K.2M=b}if(K.dn()){N a=K.mJ();O.1c.jB(a,P,P,P,P,P,P,b)}},1m:Q(){if(K.U){K.fp(1b);N a=O.1C.69.ay[K.U.id];if(a&&a.8C<=1){K.yK()}}O.1C.e8.1g.1m.1j(K,1s)},yK:Q(){N d=O.1C.69.ay[K.U.id];if(d){N b=K.3E&&K.mJ();if(b&&b.2Y){b.2Y.2U(b)}N c=d.7y;if(c&&c.2Y){c.2Y.2U(c)}N a=d.c9;if(a&&a.2Y){a.2Y.2U(a)}}},ae:Q(b){if(K.3v&&K.3E){K.fp(1b)}N a=O.1C.69.ay[b.id];if(a){if(a.8C<=1){K.yK();2t O.1C.69.ay[b.id]}V{--a.8C}}2t K.7y;2t K.c9;2t K.3E;2t K.rO;O.1C.e8.1g.ae.1j(K,1s)},UL:Q(b){N c=P;if(b!=P){N a=b.UK();N d=b.UJ();if(K.8g){a=K.jK(a.hp(),a.1S());d=K.jK(d.hp(),d.1S())}V{a=S O.3k(a.hp(),a.1S());d=S O.3k(d.hp(),d.1S())}c=S O.1U(a.1P,a.1S,d.1P,d.1S)}R c},yJ:Q(){R O.a4("UI")},rP:Q(){R K.3E.b9()},IJ:Q(){R K.3E.4I()},rL:Q(a){R K.8g?K.jK(a.hp(),a.1S()).1P:a.hp()},rK:Q(b){N a=K.8g?K.jK(b.hp(),b.1S()).1S:b.1S();R a},II:Q(a){R a.x},IH:Q(a){R a.y},1p:"O.1C.69"});O.1C.69.ay={};O.1C.69.v2={7y:P,c9:P,rO:P,yH:Q(){if(!K.2A){K.2A=UH}N g,d,a;N c=O.1C.69.ay[K.U.id];if(c){g=c.3E;d=c.7y;a=c.c9;++c.8C}V{N b=K.U.3D;N h=1O.2G("1q");h.id=K.U.id+"UG";h.W.2x="3i";h.W.1B="100%";h.W.1E="100%";b.1X(h);c1{g=S IG(h);d=h.oN;b.1X(d);d.W.5u="rM";d.W.1I="";d.W.1N="";d.3U="IA";a=h.oN;b.1X(a);a.W.5u="rM";a.W.1I="";a.W.1N="";a.3U="Iz Ix"}c0(f){6F(f)}O.1C.69.ay[K.U.id]={3E:g,7y:d,c9:a,8C:1}}K.3E=g;K.7y=d;K.c9=a;if(O.1c.2N(K.3E.UF(),K.2A)===-1){K.3E.UE(K.2A)}if(2v g.IF=="Q"){K.rO=g.IF()}V{K.jJ=P}if(K.5y===1b){K.fp(K.1q.W.2g!=="2L")}},dD:Q(){if(K.3v&&K.3E.UD()){K.3E.ID()}V{if(!K.yI){N a=K;N b=IE.UC(K.3E,"aT",Q(){IE.Is(b);2t a.yI;a.3E.ID();a.2S(a.U.b9(),a.U.4I())})}K.yI=1d}},fp:Q(c){N b=O.1C.69.ay[K.U.id];if(b){N a=K.3E.IC();if(c===1d){K.3E.UB(K.2A);a.W.2g="";K.7y.W.1r="";K.7y.W.2g="";K.c9.W.2g="";b.jI=K.id}V{if(b.jI===K.id){2t b.jI}if(!b.jI){a.W.2g="2L";K.7y.W.2g="2L";K.7y.W.1r="-yE";K.c9.W.2g="2L"}}}},mJ:Q(){R K.3E.IC()},Iw:Q(c){N b=P;if(c!=P){N a=K.8g?K.fo(c.1N,c.1r):S O.3k(c.1N,c.1r);N d=K.8g?K.fo(c.1t,c.1I):S O.3k(c.1t,c.1I);b=S UA(S rN(a.1S,a.1P),S rN(d.1S,d.1P))}R b},yA:Q(a,b){K.3E.6g(a,b)},jJ:Q(b,a){K.rO.Uz(S Uy(-b,a))},yC:Q(a){R K.3E.Ux(a)},yB:Q(a){R K.3E.Uw(a)},Iu:Q(a){R K.3E.It(a)},rJ:Q(d,b){N c;if(K.8g){N a=K.fo(d,b);c=S rN(a.1S,a.1P)}V{c=S rN(b,d)}R c},rI:Q(a,b){R S Uv(a,b)}};O.1C.69=O.1C.69||{};O.1C.69.v3={IB:{8g:1d,2O:"4t:fn"},Iv:1d,yH:Q(){if(!K.2A){K.2A=8h.7a.Uu.Ut}N d;N c=O.1C.69.ay[K.U.id];if(c){d=c.3E;++c.8C}V{N b=K.U.3D;N e=1O.2G("1q");e.id=K.U.id+"Us";e.W.2x="3i";e.W.1B="100%";e.W.1E="100%";b.1X(e);N a=K.U.b9();d=S 8h.7a.e0(e,{3G:a?S 8h.7a.jH(a.1S,a.1P):S 8h.7a.jH(0,0),5j:K.U.4I()||0,Ur:K.2A,Uq:1d,Up:1b,Uo:1b,Un:1d,Um:1b,Ul:1b});c={3E:d,8C:1};O.1C.69.ay[K.U.id]=c;K.yy=8h.7a.bH.yz(d,"Uk",O.2z.3P(K.yG,K))}K.3E=d;K.fp(K.3v)},yG:Q(){8h.7a.bH.oJ(K.3E,"7Q");N f=K.3E.yD().aj;if(!f||f.bI.1a<3){K.yw=1W.6h(O.2z.3P(K.yG,K),q0);R 1b}N d=O.1C.69.ay[K.U.id];N b=K.U.3D;1f(N e=f.ho.1a-1;e>=0;--e){if(f.ho[e].W.5u==Uj){N c=f.ho[e];b.1X(c);c.W.5u="rM";c.W.1N="";c.3U="IA Iy";c.W.2g="";d.7y=c}if(f.ho[e].W.5u==Ui){N a=f.ho[e];b.1X(a);a.W.5u="rM";a.W.1N="";a.3U="Iz Iy Ix";a.W.2g="";d.c9=a}if(f.ho[e].W.5u==Uh){b.1X(f.ho[e])}}K.fp(K.3v)},dD:Q(){if(K.3v){8h.7a.bH.oJ(K.3E,"7Q")}V{N a=O.1C.69.ay[K.U.id];if(!a.yF){N b=K;8h.7a.bH.yz(K.3E,"Ug",Q(){8h.7a.bH.oJ(b.3E,"7Q");b.2S(b.U.b9(),b.U.4I());2t a.yF})}a.yF=1d}},fp:Q(g){N b=O.1C.69.ay[K.U.id];if(b){N e=K.2A;N f=K.U.1Q;N d;1f(N c=f.1a-1;c>=0;--c){d=f[c];if(d 1V O.1C.69&&d.3v===1d&&d.8c===1d){e=d.2A;g=1d;1D}}N a=K.3E.yD();if(g===1d){K.3E.Uf(e);a.W.1r="";if(b.7y&&b.7y.W){b.7y.W.1r="";b.7y.W.2g="";b.c9.W.2g=""}b.jI=K.id}V{2t b.jI;a.W.1r="-yE";if(b.7y&&b.7y.W){b.7y.W.2g="2L";b.7y.W.1r="-yE";b.c9.W.2g="2L"}}}},mJ:Q(){R K.3E.yD()},Iw:Q(c){N b=P;if(c!=P){N a=K.8g?K.fo(c.1N,c.1r):S O.3k(c.1N,c.1r);N d=K.8g?K.fo(c.1t,c.1I):S O.3k(c.1t,c.1I);b=S 8h.7a.Ue(S 8h.7a.jH(a.1S,a.1P),S 8h.7a.jH(d.1S,d.1P))}R b},yC:Q(h){N b=K.U.5i();N f=K.rL(K.3E.3G);N d=K.rK(K.3E.3G);N a=K.U.2u();N g=h.x-(b.w/2);N e=h.y-(b.h/2);N c=S O.3k(f+g*a,d-e*a);if(K.5z){c=c.5z(K.3a)}R K.rJ(c.1P,c.1S)},yB:Q(e){N d=K.rL(e);N c=K.rK(e);N a=K.U.2u();N b=K.U.48();R K.rI((1/a*(d-b.1r)),(1/a*(b.1t-c)))},yA:Q(a,c){if(K.Iv===1b&&c!=K.3E.5j){N b=K.mJ();8h.7a.bH.yz(K.3E,"Ud",Q(){b.W.3v=""});b.W.3v="9y"}K.3E.kb({3G:a,5j:c})},Iu:Q(a){R K.3E.It(a)},rJ:Q(d,b){N c;if(K.8g){N a=K.fo(d,b);c=S 8h.7a.jH(a.1S,a.1P)}V{c=S 8h.7a.jH(b,d)}R c},rI:Q(a,b){R S 8h.7a.1F(a,b)},1m:Q(){if(K.yy){8h.7a.bH.Is(K.yy)}if(K.yw){1W.5J(K.yw)}O.1C.69.1g.1m.1j(K,1s)}};O.1C.yv=O.1A(O.4c,{2c:"Ir",1z:["4s://a.4d.rH.f0/${z}/${x}/${y}.2V","4s://b.4d.rH.f0/${z}/${x}/${y}.2V","4s://c.4d.rH.f0/${z}/${x}/${y}.2V"],4l:96,9J:"rG CC-By-SA by <a W=\'bk-mI: iA\' ai=\'jF\' 88=\'4s://rH.f0/\'>Ir</a>",1o:Q(b,a){a=O.1c.1M({2O:"4t:fn",5l:20},a);O.4c.1g.1o.1j(K,[b,K.1z,{},a])},1R:Q(a){if(a==P){a=S O.1C.yv(K.2c,K.1z,K.85())}a=O.4c.1g.1R.1j(K,[a]);R a},1m:Q(){N a=K;O.4c.1g.1m.1j(a,1s)},e7:Q(a){N c=K,b;if(O.1c.4k(K.1z)){b=c.c8(a,K.1z)}b=O.5t.5d(b,{x:a.x,y:a.y,z:a.z});R b},c8:Q(a,c){N d=1k.3C(a.x+a.y)%c.1a;N b=c[d];R b},1p:"O.1C.yv"});O.1C.mH=O.1A(O.4c,{4l:96,2c:"mH e0",1z:["4s://yu.t0.yt.ys.yr.7x/yq/ch/${rF}?it=G,OS,L&yp=en-us&yo=yn&ur=cn","4s://yu.t1.yt.ys.yr.7x/yq/ch/${rF}?it=G,OS,L&yp=en-us&yo=yn&ur=cn","4s://yu.t2.yt.ys.yr.7x/yq/ch/${rF}?it=G,OS,L&yp=en-us&yo=yn&ur=cn"],9J:"rG CC-By-SA by <a W=\'bk-mI: iA\' ai=\'jF\' 88=\'4s://gG.I8.7x/7a/\'>jC</a>",9h:[yl.Ip,yk.Io,rA.In,rz.Im,ry.Il,rx.Ik,rw.Ij,rv.Ii,76.Ih,38.Ig,19.If,9.Ie,4.Id,2.Ic,1.Ib,0.Ia],9i:3,1o:Q(b,a){a=O.1c.1M({2O:"4t:jG",1T:K.9h,5l:16},a);O.4c.1g.1o.1j(K,[b||K.2c,K.1z,{},a])},1R:Q(a){if(a==P){a=S O.1C.mH(K.2c,K.1z,K.85())}a=O.4c.1g.1R.1j(K,[a]);R a},1m:Q(){N a=K;O.4c.1g.1m.1j(a,1s)},e7:Q(g){N f=K,a;if(O.1c.4k(K.1z)){a=f.c8(g,K.1z)}N k=g.x,j=g.y,e=g.z+K.9i;N b=[];1f(N c=e;c>0;--c){N h="0";N l=1<<(c-1);if((k&l)!=0){h++}if((j&l)!=0){h++;h++}b.1u(h)}N d=b.6d("");R O.5t.5d(a,{rF:d})},c8:Q(a,c){N d=1k.3C(a.x+a.y)%c.1a;N b=c[d];R b},1p:"O.1C.mH"});O.1C.jC=O.1A(O.1C.fl,{yj:P,9h:[ym.Iq,Uc.Ub,Ua.U9,yl.Ip,yk.Io,rA.In,rz.Im,ry.Il,rx.Ik,rw.Ij,rv.Ii,76.Ih,38.Ig,19.If,9.Ie,4.Id,2.Ic,1.Ib,0.Ia,0.U8,0.U7,0.U6,0.U5,0.U4],I0:\'<eY I9="U3 ${2A}"><1q><a ai="jF" 88="4s://gG.I8.7x/7a/"><3e 4O="${HZ}" /></a></1q>${HY}<a W="bk-mI: iA" ai="jF" 88="4s://gG.DQ.7x/7a/U2/U1.U0">TZ of TY</a></eY>\',mF:P,yd:/^4s:/i,2A:"TX",yi:"en-US",I6:P,jE:P,9v:~1W.gU.88.2N("4s")?"":"4s:",1o:Q(c){c=O.1c.4D({8g:1d},c);N b=c.2c||"mH "+(c.2A||K.2A);N a=[b,P,c];O.1C.fl.1g.1o.1j(K,a);K.jE=O.1c.1M({TW:"mG"},K.2D.jE);K.I7()},I7:Q(){K.hn="TV"+K.id.42(/\\./g,"49");1W[K.hn]=O.2z.3P(O.1C.jC.HX,K);N c=O.1c.4D({yj:K.yj,5q:K.hn,TU:"TT"},K.I6);N b=K.9v+"//TS.TQ.TP/1l/v1/TO/TN/"+K.2A+"?"+O.1c.gV(c);N a=1O.2G("TM");a.2A="8y/TL";a.4O=b;a.id=K.hn;1O.iC("I5")[0].1X(a)},ey:Q(){N c=K.mF.yf[0].I3[0];N a=c.TK.42("{yg}","${yg}");a=a.42("{yi}",K.yi);a=a.42(K.yd,K.9v);K.1z=[];1f(N b=0;b<c.I4.1a;++b){K.1z.1u(a.42("{TJ}",c.I4[b]))}K.yh({4A:1k.4q(K.9h[c.ye],K.4A||6c.q7),5l:1k.4q(c.I1+1-c.ye,K.5l)},1d);if(!K.5y){K.3p()}K.9K()},jD:Q(a){if(!K.1z){R}N g=K.fm(a),k=g.x,h=g.y,f=g.z;N c=[];1f(N d=f;d>0;--d){N j="0";N l=1<<(d-1);if((k&l)!=0){j++}if((h&l)!=0){j++;j++}c.1u(j)}N e=c.6d("");N b=K.c8(""+k+h+f,K.1z);R O.5t.5d(b,{yg:e})},9K:Q(){N h=K.mF;if(!h||!h.yf||!K.U||!K.U.3G){R}N g=h.yf[0].I3[0];N p=K.U.48().3N(K.U.5X(),S O.3h("4t:9r"));N d=g.TI||[],o=O.1c.2N(K.9h,K.rE()),b="",k,e,n,c,f,m,l;1f(e=0,n=d.1a;e<n;++e){k=d[e];1f(c=0,f=k.I2.1a;c<f;++c){l=k.I2[c];m=O.1U.rD(l.TH,1d);if(p.9E(m)&&o<=l.I1&&o>=l.ye){b+=k.9J+" "}}}N a=h.TG.42(K.yd,K.9v);K.9J=O.5t.5d(K.I0,{2A:K.2A.dm(),HZ:a,HY:b});K.U&&K.U.1n.1L("7w",{1i:K,aV:"9J"})},2Z:Q(){O.1C.fl.1g.2Z.1j(K,1s);K.U.1n.4Q("6V",K,K.9K)},1R:Q(a){if(a==P){a=S O.1C.jC(K.2D)}a=O.1C.fl.1g.1R.1j(K,[a]);R a},1m:Q(){K.U&&K.U.1n.6H("6V",K,K.9K);O.1C.fl.1g.1m.1j(K,1s)},1p:"O.1C.jC"});O.1C.jC.HX=Q(b){K.mF=b;K.ey();N a=1O.8E(K.hn);a.2Y.2U(a);1W[K.hn]=2b;2t K.hn};O.1C.yb=O.1A(O.4c,{2c:"HW",1z:["4s://p0.U.rC.7x/rB/${z}/${mE}/${mD}/${x}49${y}.2V","4s://p1.U.rC.7x/rB/${z}/${mE}/${mD}/${x}49${y}.2V","4s://p2.U.rC.7x/rB/${z}/${mE}/${mD}/${x}49${y}.2V","4s://p3.U.rC.7x/rB/${z}/${mE}/${mD}/${x}49${y}.2V"],9J:P,hm:"HW",2A:"HV",yc:0,1o:Q(a){N b=K;K.9J=O.a4("TF");a=O.1c.1M({3a:S O.1U(-5U.fk,-5U.fk,5U.fk,5U.fk),1T:[rA.HU,rz.HT,ry.HS,rx.HR,rw.HQ,rv.HP,76.HO,38.HN,19.HM,9.HL,4.HK,2.HJ,1.HI,0.HH]},a);O.4c.1g.1o.1j(b,[b.2c,b.1z,P,a]);b.2P="HG"},1m:Q(){N a=K;O.4c.1g.1m.1j(a,1s);a.hm=P;a.2c=P;a.1z=P},1R:Q(b){N a=K;if(b==P){b=S O.1C.yb(a.2c,a.1z,a.8K,a.85())}b=O.4c.1g.1R.1j(a,[b]);R b},e7:Q(a){N c=K,b=c.1z,d=a.z+5,e=1k.2W(2,d)-a.y-1;if(O.1c.4k(b)){b=c.c8(""+a.x+a.y,b)}R O.5t.5d(b,{mE:1k.9d(a.x/16),mD:1k.9d(e/16),x:a.x,y:e,z:d-1})},1p:"O.1C.yb"});O.1C.y8=O.1A(O.1C,{2K:["TE","TD","TC","HF","TB","TA","Tz","y9","EH","EG","EF","Ty","Tx","Tw","pp","uT","uS","le","im","cE"],5y:1b,gt:1b,cK:1d,4E:P,58:P,cS:P,mC:P,2i:P,7Y:1b,il:1d,bU:P,1o:Q(b,a,c){K.2K=O.1C.y8.1g.2K.7E(O.1C.1g.2K);O.1C.1g.1o.1j(K,1s);K.2i=S O.2f.dE(K.1q,c,K);K.4E=[];K.cS=[];K.mC={};if(!!c&&!!c.7O){K.7O=c.7O}},1m:Q(){K.HE();K.4E=P;K.cS=P;K.mC=P;if(K.2i){K.2i.1m()}K.2i=P;K.7Y=P;O.1C.1g.1m.1j(K,1s)},cE:Q(a){if(K.cF()&&K.3v){K.1n.1L("cE",a)}},2Z:Q(b){O.1C.1g.2Z.1j(K,1s);if(!K.2i){K.U.bG(K)}V{K.2i.U=K.U;N a=K.U.5i();K.2i.6G(a)}},ae:Q(){K.7Y=1b},dD:Q(){O.1C.1g.dD.1j(K,1s);N a=K.U.5i();K.2i.6G(a)},2S:Q(e,a,g){O.1C.1g.2S.1j(K,1s);K.cK=1b;K.bU=a;N b=1d;if(!g){K.2i.3f.W.3v="9y";N f=0,d=0;f+=2l(K.U.3s.W.1r,10);f=-1k.2s(f);d+=2l(K.U.3s.W.1t,10);d=-1k.2s(d);K.1q.W.1r=f+"px";K.1q.W.1t=d+"px";N c=K.U.48();b=K.2i.9A(c,a);K.2i.3f.W.3v="7e";if(O.gc===1d){K.1q.cJ=K.1q.cJ}if(!a&&b){K.ya(e)}}if(!K.7Y||(a||!b)){K.7Y=1d;if(!K.pj){K.ya(e)}K.il=1b}},b0:Q(b,a){if(K.gt){K.1q.W.1r=-2l(K.U.3s.W.1r,10)+"px";K.1q.W.1t=-2l(K.U.3s.W.1t,10)+"px"}},ya:Q(d){N c=K,f,e=c.4E,a=e.1a;c.2i.7J=1d;1f(N b=0;b<a;b++){if(b===(a-1)){c.2i.7J=1b}f=e[b];c.lf(f,{eE:c.il,a2:b})}},3p:Q(){R O.1C.1g.3p.1j(K,1s)},2g:Q(a){O.1C.1g.2g.1j(K,1s);N b=K.1q.W.2g;if(b!==K.2i.3f.W.2g){K.2i.3f.W.2g=b}},ad:Q(a){if(a!==K.2M){K.2M=a;N b=K.2i.3f;O.1c.jB(b,P,P,P,P,P,P,a);if(K.U!=P){K.U.1n.1L("7w",{1i:K,aV:"2M"})}}},HC:Q(b){N h=[],d=K.7O;K.2i.7J=1d;N a=b.1a;1f(N c=0;c<a;c++){if(c===(a-1)){K.2i.7J=1b}N g=b[c];K.4E.1u(g);N f=K.lf(g,{eE:1d,a2:c,7O:d});if(!f){h.1u(g)}}N e=h.1a==0?1d:1b;K.1n.1L("HF",{4E:h,6b:e})},HE:Q(a,b){N d=(a==2b);if(d){a=K.4E}if(a){K.HD(a,b);1f(N c=a.1a-1;c>=0;c--){a[c].1m()}}},HD:Q(h){if(!h||h.1a===0){R}if(h===K.4E){R K.HB()}if(!(O.1c.4k(h))){h=[h]}if(h===K.cS){h=h.a3()}N g=[];1f(N e=h.1a-1;e>=0;e--){N a=h[e];2t K.mC[a.id];N j=O.1c.2N(K.4E,a);if(j===-1){g.1u(a);5K}K.4E.6f(j,1);if(O.1c.2N(K.cS,a)!==-1){O.1c.aM(K.cS,a)}a.1i=P}K.2i.5L();N c=[];1f(N b=0,f=K.4E.1a;b<f;b++){a=K.4E[b];c.1u(a)}K.4E=[];K.HC(c);N d=g.1a==0?1d:1b;K.1n.1L("y9",{4E:g,6b:d})},HB:Q(){K.2i.5L();K.4E=[];K.mC={};K.cS=[];K.1n.1L("y9",{4E:[],6b:1d})},lf:Q(c,a){if(!K.7Y){R}N b;b=K.2i.lf(c,a);R b},ps:Q(a){K.2i.ps(a)},xg:Q(a){if(K.3v==1b){R P}if(!K.2i){6F S eO("xg Dj on 1i pi no 2i. Di Dh Dg Df De a 1i, Dd gj Dc 3w ij is Db pi it.")}R K.2i.Dv(a)},HA:Q(b,a){N d=P;1f(N c in K.4E){if(K.4E[c][b]===a){d=K.4E[c];1D}}R d},Tv:Q(a){R K.HA("id",a)},Tu:Q(b,c){N e,a=[];1f(N d in K.4E){e=K.4E[d];if(e&&e.6T){if(e.6T[b]===c){a.1u(e)}}}R a},1p:"O.1C.y8"});O.3o=O.1A({1i:P,id:P,5x:P,52:P,bm:P,y6:P,66:P,1o:Q(a,c,b){K.1i=a;K.5x=c;K.52=(b!=P)?b:{};K.id=O.1c.7L(K.1p+"49")},1m:Q(){if((K.1i!=P)&&(K.1i.U!=P)){if(K.66!=P){K.1i.U.mB(K.66)}}if(K.1i!=P&&K.bm!=P){K.1i.y7(K.bm)}K.1i=P;K.id=P;K.5x=P;K.52=P;if(K.bm!=P){K.y4(K.bm);K.bm=P}if(K.66!=P){K.y3(K.66);K.66=P}},y5:Q(){N b=1b;if((K.1i!=P)&&(K.1i.U!=P)){N a=K.1i.U.48();b=a.f3(K.5x)}R b},Hz:Q(){if(K.5x!=P){K.bm=S O.hl(K.5x,K.52.4Z)}R K.bm},y4:Q(){K.bm.1m()},Hy:Q(b){if(K.5x!=P){if(!K.66){N a=(K.bm)?K.bm.4Z:P;N c=K.y6?K.y6:O.4a.Tt;K.66=S c(K.id+"Ts",K.5x,K.52.Tr,K.52.Tq,a,b)}if(K.52.ac!=P){K.66.59.W.ac=K.52.ac}K.66.1H=K}R K.66},y3:Q(){if(K.66){K.66.1H=P;K.66.1m();K.66=P}},1p:"O.3o"});O.6o={hk:"Tp",gW:"To",dT:"Tn",cf:"Tm"};O.3o.31=O.1A(O.3o,{kB:P,1v:P,6T:P,2k:P,7V:P,W:P,1z:P,7l:"4m",9b:P,1o:Q(c,a,b){O.3o.1g.1o.1j(K,[P,P,a]);K.5x=P;K.1v=c?c:P;K.7V=P;K.6T={};if(a){K.6T=O.1c.1M(K.6T,a)}K.W=b?b:P},1m:Q(){if(K.1i){K.1i.af(K);K.1i=P}K.1v=P;K.9b=P;O.3o.1g.1m.1j(K,1s)},1R:Q(){R S O.3o.31(K.1v?K.1v.1R():P,K.6T,K.W)},y5:Q(d){N c=1b;if(K.1i&&K.1i.U){N a=K.1i.U.48();if(d){N b=K.1v.5s();c=a.9E(b)}V{N e=a.fX();c=e.6P(K.1v)}}R c},dn:Q(){R!(K.W&&K.W.2g==="2L"||!K.1i||K.1i&&K.1i.aZ&&K.1i.aZ.gg(K,K.7l).2g==="2L"||K.1i&&!K.1i.dn())},Hz:Q(){R P},y4:Q(){},Hy:Q(){R P},nw:Q(b,d,c){N a=1b;if(K.1v){a=K.1v.nw(b,d,c)}R a},y3:Q(){},3B:Q(a){if(!K.1i||!K.1v.3B){R 2b}N b;if(a.1p==="O.3k"){b=K.1i.8A(a)}V{b=a}N d=K.1i.8A(K.1v.5s().64());N c=K.1i.U.2u();K.1v.3B(c*(b.x-d.x),c*(d.y-b.y));K.1i.3Q(K);R d},Tl:Q(a){if(a===O.6o.dT){5m(K.7V){1K O.6o.hk:1K O.6o.cf:K.7V=a;1D;1K O.6o.dT:1K O.6o.gW:1D}}V{if(a===O.6o.gW){5m(K.7V){1K O.6o.hk:1D;4m:K.7V=a;1D}}V{if(a===O.6o.cf){5m(K.7V){1K O.6o.gW:1D;1K O.6o.cf:1D;1K O.6o.hk:1K O.6o.dT:K.7V=a;1D}}V{if(a===O.6o.hk){K.7V=a}}}}},1p:"O.3o.31"});O.3o.31.W={"4m":{7s:"#oS",4V:0.4,xZ:"bk",xY:0.8,8X:"#oS",aS:1,4v:1,8W:"2s",aR:"cD",xX:"9n",xW:1,xV:0.2,4M:6,xU:1,xT:"%",dC:"xS",3I:"pG",8z:"#aP",3g:"cm",xR:"bk",xQ:3},7k:{7s:"9Y",4V:0.4,xZ:"bk",xY:0.8,8X:"9Y",aS:1,4v:2,8W:"2s",aR:"cD",xX:"9n",xW:1,xV:0.2,4M:6,xU:1,xT:"%",dC:"xS",3I:"4u",8z:"#aP",3g:"cm",xR:"bk",xQ:3},ic:{7s:"#Hx",4V:0.2,xZ:"bk",xY:0.8,8X:"#Hx",aS:1,8W:"2s",4v:2,aR:"cD",xX:"9n",xW:1,xV:0.2,4M:6,xU:1,xT:"%",dC:"xS",3I:"4m",8z:"#aP",3g:"cm",xR:"bk",xQ:3},"2t":{2g:"2L"}};O.1Z=O.1A({id:P,79:P,U:P,e1:P,3O:1b,7i:P,1o:Q(d,b,a){O.1c.1M(K,a);K.79=d;K.3H=b;N c=K.U||d.U;if(c){K.2Z(c)}K.id=O.1c.7L(K.1p+"49")},2Z:Q(a){K.U=a},ju:Q(a){if(K.e1==P){R 1d}N b=(a.xp?O.1Z.xd:0)|(a.Tk?O.1Z.Hw:0)|(a.Tj?O.1Z.Hv:0);R(b===K.e1)},2r:Q(){if(K.3O){R 1b}N c=O.4o.1g.mA;1f(N b=0,a=c.1a;b<a;b++){if(K[c[b]]){K.4Q(c[b],K[c[b]])}}K.3O=1d;R 1d},2h:Q(){if(!K.3O){R 1b}N c=O.4o.1g.mA;1f(N b=0,a=c.1a;b<a;b++){if(K[c[b]]){K.6H(c[b],K[c[b]])}}K.3O=1b;R 1d},3n:Q(b,a){if(b&&K.3H[b]){K.3H[b].1j(K.79,a)}},4Q:Q(a,b){K.U.1n.mx(a,K,b);K.U.1n.mx(a,K,K.ro)},6H:Q(a,b){K.U.1n.6H(a,K,b);K.U.1n.6H(a,K,K.ro)},ro:Q(a){K.7i=a;R 1d},1m:Q(){K.2h();K.79=K.U=P},1p:"O.1Z"});O.1Z.Ti=0;O.1Z.xd=1;O.1Z.Hw=2;O.1Z.Hv=4;O.1Z.m7=O.1A(O.1Z,{hi:fW,wO:1d,"h7":1b,as:0,Hp:13,qQ:1b,jp:1b,3W:P,5C:1b,4z:P,3x:P,mz:P,hj:P,1o:Q(c,b,a){O.1Z.1g.1o.1j(K,1s)},9e:Q(a){if(!K.5C){K.Hu();K.5C=1d}K.4z=K.fj(a);K.3x=K.fj(a);R 1d},9N:Q(a){K.3x=K.fj(a);R 1d},ff:Q(a){if(K.4z){a.xy=K.3x.xy;a.mc=K.3x.6L;K.xP(a);K.4z=P}R 1d},Hu:Q(){K.U.1n.un({4g:K.4g,4x:K.4x,2X:K.2X,4H:K.4H,2y:K})},4g:Q(a){K.4z=K.fj(a);K.3x=K.fj(a);R 1d},4x:Q(b){N a=1d;if(K.ju(b)&&K.79.xc&&O.1J.xE(b)){a=K.fh(b)}R a},fh:Q(b){if(K.d4(b)){if(K.hj!=P){K.fi();K.3n("xa",[b]);R!K.jp}V{N a=K["h7"]?O.1c.1M({},b):K.3n("fh",[b]);N c=O.2z.3P(K.Ht,K,a);K.hj=1W.6h(c,K.hi)}}R!K.qQ},Ht:Q(a){K.hj=P;if(a){K.3n("fh",[a])}},2X:Q(a){if(!K.3x){K.3x=K.fj(a)}K.xP(a);R!K.qQ},4H:Q(a){K.xO(a);R!K.jp},xO:Q(a){if(K["h7"]&&K.Hq(a)){K.3n("4H",[a])}},xP:Q(b){if(K.d4(b)){if(K.3W!=P){if(K.3x.6L&&K.3x.6L.1a===1){if(K["h7"]){O.1J.2Q(b)}K.xO(b)}if(!K.3x.6L||K.3x.6L.1a!==2){K.fi()}}V{K.mz=K.fj(b);N a=K.wO?O.1c.1M({},b):P;K.Hs(a)}}},Hs:Q(a){K.3W=1W.6h(O.2z.3P(K.ru,K,a),K.hi)},d4:Q(a){N d=1d;if(!K.4z||!K.4z.xy){d=1b}V{if(K.as!=P){d=K.as>=K.4z.xy.7d(a.xy);if(d&&K.5C&&K.4z.6L.1a===K.3x.6L.1a){1f(N b=0,c=K.4z.6L.1a;b<c;++b){if(K.Hr(K.4z.6L[b],K.3x.6L[b])>K.as){d=1b;1D}}}}}R d},Hr:Q(b,a){R 1k.5A(1k.2W(b.b8-a.b8,2)+1k.2W(b.ar-a.ar,2))},Hq:Q(a){N b=1d;if(K.4z&&K.mz){b=K.4z.xy.7d(K.mz.xy)<=K.Hp}R b},fi:Q(){if(K.3W!=P){1W.5J(K.3W);K.3W=P}if(K.hj!=P){1W.5J(K.hj);K.hj=P}},ru:Q(a){K.3W=P;if(a){K.3n("2X",[a])}},fj:Q(b){N d;if(b.6L){N a=b.6L.1a;d=S 3T(a);N e;1f(N c=0;c<a;c++){e=b.6L[c];d[c]={b8:e.b8,ar:e.ar}}}R{xy:b.xy,6L:d}},2h:Q(){N a=1b;if(O.1Z.1g.2h.1j(K,1s)){K.fi();K.4z=P;K.mz=P;K.3x=P;K.5C=1b;a=1d}R a},1p:"O.1Z.m7"});O.1Z.Hn=O.1A(O.1Z,{hi:sT,as:P,Ho:1b,px:P,3W:P,1o:Q(c,b,a){O.1Z.1g.1o.1j(K,1s)},4y:Q(a){if(K.d4(a.xy)){K.fi();K.3n("3B",[a]);K.px=a.xy;a=O.1c.1M({},a);K.3W=1W.6h(O.2z.3P(K.ru,K,a),K.hi)}R!K.Ho},bf:Q(a){if(O.1c.xB(a,K.U.6A)){K.fi();K.3n("3B",[a])}R 1d},d4:Q(b){N c=1d;if(K.as&&K.px){N a=1k.5A(1k.2W(K.px.x-b.x,2)+1k.2W(K.px.y-b.y,2));if(a<K.as){c=1b}}R c},fi:Q(){if(K.3W!=P){1W.5J(K.3W);K.3W=P}},ru:Q(a){K.3n("Th",[a])},2h:Q(){N a=1b;if(O.1Z.1g.2h.1j(K,1s)){K.fi();a=1d}R a},1p:"O.1Z.Hn"});O.1Z.1F=O.1A(O.1Z,{3m:P,1i:P,f8:1b,bb:1b,d3:P,e6:P,9Q:P,aK:1b,7m:1b,mv:1b,cW:P,as:5,5C:1b,jA:P,1o:Q(c,b,a){if(!(a&&a.cW&&a.cW.aZ)){K.W=O.1c.1M(O.3o.31.W["4m"],{})}O.1Z.1g.1o.1j(K,1s)},2r:Q(){if(!O.1Z.1g.2r.1j(K,1s)){R 1b}N a=O.1c.1M({l9:1b,cF:O.2z.rj},K.cW);K.1i=S O.1C.31(K.1p,a);K.U.g8(K.1i);O.2I.5b(K.U.3D,"ri");R 1d},my:Q(a){N b=K.1i.5w(a);N c=S O.1h.1F(b.1P,b.1S);K.3m=S O.3o.31(c);K.3n("lT",[K.3m.1v,K.3m]);K.3m.1v.al();K.1i.7I([K.3m],{5Q:1d})},2h:Q(){if(!O.1Z.1g.2h.1j(K,1s)){R 1b}K.8S();if(K.1i.U!=P){O.2I.aq(K.U.3D,"ri");K.hf(1d);K.1i.1m(1b)}K.1i=P;K.5C=1b;R 1d},hf:Q(a){if(K.1i&&(a||!K.aK)){K.1i.a8()}K.3m=P},jz:Q(){N a=K.1i;if(a&&a.2n.1a>1){K.1i.2n[0].1m()}},c7:Q(b){N a=b?"8S":"7j";K.bb=1b;K.e6=P;K.9Q=P;K.jA=P;K.3n(a,[K.Hm()]);K.hf(b)},8S:Q(){K.c7(1d)},2X:Q(a){O.1J.2Q(a);R 1b},4H:Q(a){O.1J.2Q(a);R 1b},e5:Q(a){if(!K.3m){K.my(a)}N b=K.1i.5w(a);if(K.79.cU){b=K.79.cU.ka(b)}K.3m.1v.x=b.1P;K.3m.1v.y=b.1S;K.3n("g4",[K.3m.1v,K.3m,1b]);K.3m.1v.al();K.3Q()},3Q:Q(){K.1i.3Q(K.3m,K.W)},rr:Q(){N a=K.3m&&K.3m.1v;if(a&&K.f8){a=S O.1h.8J([a])}R a},Hm:Q(){N a=K.rr();R a&&a.1R()},4g:Q(a){R K.4z(a)},9e:Q(a){if(!K.5C){K.5C=1d;K.U.1n.un({4g:K.4g,4x:K.4x,4y:K.4y,2X:K.2X,4H:K.4H,2y:K})}K.jA=a.xy;R K.4z(a)},4y:Q(a){R K.3B(a)},9N:Q(a){K.jA=a.xy;R K.3B(a)},4x:Q(a){R K.up(a)},ff:Q(a){a.xy=K.jA;R K.up(a)},4z:Q(a){K.bb=1d;K.e6=a.xy;if(!K.5C){K.e5(a.xy)}K.d3=K.7m;R!K.7m},3B:Q(a){if(!K.5C&&(!K.bb||K.d3)){K.e5(a.xy)}R 1d},up:Q(a){K.bb=1b;K.d3=K.7m;if(!K.ju(a)){R 1d}if(K.9Q&&K.9Q.3A(a.xy)){R 1d}if(K.e6&&K.d4(K.e6,a.xy,K.as)){if(K.5C){K.e5(a.xy)}if(K.aK){K.jz()}K.9Q=a.xy;K.c7();R!K.mv}V{R 1d}},bf:Q(a){if(O.1c.xB(a,K.U.6A)){K.d3=K.7m;K.bb=1b}},d4:Q(e,d,a){N b=1d;if(a!=P&&e&&d){N c=e.7d(d);if(c>a){b=1b}}R b},1p:"O.1Z.1F"});O.1Z.hg=O.1A(O.1Z.1F,{4b:P,rs:P,Hl:20,xM:1b,xN:"xp",3W:P,73:P,1o:Q(c,b,a){O.1Z.1F.1g.1o.1j(K,1s)},my:Q(a){N b=K.U.6Q(a);N c=S O.1h.1F(b.1P,b.1S);K.3m=S O.3o.31(c);K.4b=S O.3o.31(S O.1h.2p([K.3m.1v]));K.3n("lT",[K.3m.1v,K.he()]);K.3m.1v.al();K.1i.7I([K.4b,K.3m],{5Q:1d})},hf:Q(a){O.1Z.1F.1g.hf.47(K,a);K.4b=P},jz:Q(){N a=K.1i;if(a&&a.2n.1a>2){K.1i.2n[0].1m()}},iK:Q(){if(K.3m){K.1i.af([K.3m])}},iL:Q(a){K.1i.af([K.3m]);N b=K.1i.5w(a);if(K.79.cU){b=K.79.cU.ka(b)}K.3m=S O.3o.31(S O.1h.1F(b.1P,b.1S));K.4b.1v.89(K.3m.1v,K.4b.1v.1x.1a);K.1i.7I([K.3m]);K.3n("3m",[K.3m.1v,K.he(),!!K.9Q]);K.3n("g4",[K.3m.1v,K.he(),!!K.9Q]);K.3Q();2t K.73},qx:Q(a,b){K.4b.1v.89(S O.1h.1F(a,b),K.hh());K.3Q();2t K.73},qw:Q(b,a){N c=K.hh()-1;N d=K.4b.1v.1x[c];if(d&&!2w(d.x)&&!2w(d.y)){K.qx(d.x+b,d.y+a)}},qv:Q(d,c){d*=1k.PI/2R;N b=c*1k.8T(d);N a=c*1k.7Z(d);K.qw(b,a)},wm:Q(c,b){N d=K.hh()-1;if(d>0){N e=K.4b.1v.1x[d];N f=K.4b.1v.1x[d-1];N a=1k.lI(e.y-f.y,e.x-f.x);K.qv((a*2R/1k.PI)+c,b)}},hh:Q(){R K.4b.1v.1x.1a-1},lQ:Q(){N e=K.4b.1v;N b=e.1x;N a=K.hh()-1;N d=b[a];N c=e.ak(d);if(c){if(!K.73){K.73=[]}K.73.1u(d);K.3Q()}R c},lP:Q(){N a=K.73&&K.73.8F();if(a){K.4b.1v.89(a,K.hh());K.3Q()}R!!a},g3:Q(a){R(K.xN&&a[K.xN])?!K.xM:K.xM},e5:Q(b,a){if(!K.4b){K.my(b)}N c=K.1i.5w(b);if(K.79.cU){c=K.79.cU.ka(c)}K.3m.1v.x=c.1P;K.3m.1v.y=c.1S;K.3n("g4",[K.3m.1v,K.he(),a]);K.3m.1v.al();K.3Q()},3Q:Q(){K.1i.3Q(K.4b,K.W);K.1i.3Q(K.3m,K.W)},he:Q(){R K.4b},rr:Q(){N a=K.4b&&K.4b.1v;if(a&&K.f8){a=S O.1h.8l([a])}R a},9e:Q(a){if(K.3W&&K.d4(K.jA,a.xy,K.Hl)){K.j3();1W.5J(K.3W);K.3W=P;R 1b}V{if(K.3W){1W.5J(K.3W);K.3W=P}K.3W=1W.6h(O.2z.3P(Q(){K.3W=P},K),fW);R O.1Z.1F.1g.9e.47(K,a)}},4z:Q(a){N b=K.7m;if(K.g3(a)){b=1d;if(K.5C){K.e5(a.xy,!!K.9Q);O.1J.2Q(a)}}if(!K.5C&&(!K.e6||!K.d4(K.e6,a.xy,K.as))){K.e5(a.xy,!!K.9Q)}K.bb=1d;K.e6=a.xy;K.d3=b;R!b},3B:Q(a){if(K.d3&&K.g3(a)){if(K.aK){K.jz()}if(K.rs&&K.4b&&K.4b.1v.1x.1a===K.rs){K.iK();K.c7()}V{K.iL(a.xy)}R 1b}if(!K.5C&&(!K.bb||K.d3)){K.e5(a.xy,!!K.9Q)}R 1d},up:Q(a){if(K.bb&&(!K.9Q||!K.9Q.3A(a.xy))){if(K.d3&&K.g3(a)){if(K.aK){K.jz()}K.iK();K.c7()}V{if(K.d4(K.e6,a.xy,K.as)){if(K.5C){K.e5(a.xy)}if(K.9Q==P&&K.aK){K.jz()}K.iL(a.xy);K.9Q=a.xy;if(K.4b.1v.1x.1a===K.rs+1){K.j3()}}}}K.d3=K.7m;K.bb=1b;R!K.mv},j3:Q(){N a=K.4b.1v.1x.1a-1;K.4b.1v.ak(K.4b.1v.1x[a]);K.iK();K.c7()},4H:Q(a){if(!K.g3(a)){K.j3()}R 1b},1p:"O.1Z.hg"});O.1Z.3R=O.1A(O.1Z.hg,{xL:P,mw:1b,6Y:P,1o:Q(c,b,a){O.1Z.hg.1g.1o.1j(K,1s)},my:Q(a){N b=K.1i.5w(a);N c=S O.1h.1F(b.1P,b.1S);K.3m=S O.3o.31(c);K.4b=S O.3o.31(S O.1h.4C([K.3m.1v]));K.6Y=S O.3o.31(S O.1h.3R([K.4b.1v]));K.3n("lT",[K.3m.1v,K.he()]);K.3m.1v.al();K.1i.7I([K.6Y,K.3m],{5Q:1d})},iL:Q(a){if(!K.mw&&K.xL&&K.7i&&K.7i[K.xL]){N f=K.3m.1v;N e=K.79.1i.2n;N d,c;1f(N b=e.1a-1;b>=0;--b){d=e[b].1v;if((d 1V O.1h.3R||d 1V O.1h.8k)&&d.6P(f)){c=e[b];K.79.1i.af([c],{5Q:1d});K.79.1i.1n.mx("im",K,K.xJ);K.79.1i.1n.mx("le",K,K.xI);c.1v.89(K.4b.1v);K.6Y=c;K.mw=1d;1D}}}O.1Z.hg.1g.iL.1j(K,1s)},hh:Q(){R K.4b.1v.1x.1a-2},xI:Q(d){N a=d.ap;N c=K.4b.1v.1x;if(!K.6Y.1v.6P(a)){N b=c[c.1a-3];a.x=b.x;a.y=b.y}},j3:Q(){N a=K.4b.1v.1x.1a-2;K.4b.1v.ak(K.4b.1v.1x[a]);K.iK();K.c7()},xJ:Q(){N c=K.4b.1v;N b=(c.8u()!==0);if(b){N h=K.6Y.1v.1x;1f(N d=h.1a-2;d>=0;--d){if(c.6P(h[d])){b=1b;1D}}if(b){N g;cR:1f(N d=h.1a-2;d>0;--d){N e=h[d].1x;1f(N a=0,f=e.1a;a<f;++a){if(c.dO(e[a])){b=1b;1D cR}}}}}if(b){if(K.6Y.7V!==O.6o.gW){K.6Y.7V=O.6o.dT}}V{K.6Y.1v.ak(c)}K.xK();R 1b},8S:Q(){if(K.mw){K.6Y.1v.ak(K.4b.1v);K.xK(1d)}R O.1Z.hg.1g.8S.1j(K,1s)},xK:Q(a){K.79.1i.1n.6H("im",K,K.xJ);K.79.1i.1n.6H("le",K,K.xI);K.1i.af([K.6Y],{5Q:1d});K.79.1i.7I([K.6Y],{5Q:1d});K.mw=1b;if(!a){K.79.1i.1n.1L("im",{1H:K.6Y})}},hf:Q(a){O.1Z.hg.1g.hf.47(K,a);K.6Y=P},3Q:Q(){K.1i.3Q(K.6Y,K.W);K.1i.3Q(K.3m,K.W)},he:Q(){R K.6Y},rr:Q(){N a=K.6Y&&K.6Y.1v;if(a&&K.f8){a=S O.1h.8k([a])}R a},1p:"O.1Z.3R"});O.1Z.3o=O.1A(O.1Z,{Hj:{2X:{"in":"2X",4n:"9s"},4y:{"in":"6B",4n:"4n"},4H:{"in":"4H",4n:P},4g:{"in":P,4n:P},4x:{"in":P,4n:P},9e:{"in":"2X",4n:"9s"},jt:{"in":"fh",4n:P}},1H:P,7F:P,4z:P,up:P,5C:1b,Hi:4,6j:P,xG:1d,7m:1d,mv:1b,1o:Q(d,b,c,a){O.1Z.1g.1o.1j(K,[d,c,a]);K.1i=b},9e:Q(a){if(!K.5C){K.5C=1d;K.U.1n.un({4g:K.4g,4x:K.4x,4y:K.4y,2X:K.2X,4H:K.4H,2y:K})}K.xH=O.1J.rk(a)?1b:1d;R K.xH?K.4g(a):1d},9N:Q(a){K.xH=1b;O.1J.2Q(a)},4g:Q(a){if(O.1J.b7(a)||O.1J.qK(a)){K.4z=a.xy}R K.fg(a)?!K.7m:1d},4x:Q(a){K.up=a.xy;R K.fg(a)?!K.mv:1d},2X:Q(a){R K.fg(a)?!K.xG:1d},jt:Q(a){if(a.c2){a.c2()}V{a.Hk=1b}R K.fg(a)?!K.xG:1d},4y:Q(a){if(!K.3H.6B&&!K.3H.4n){R 1d}K.fg(a);R 1d},4H:Q(a){R!K.fg(a)},xf:Q(a){R K.6j==P||O.1c.2N(K.6j,a.1v.1p)>-1},fg:Q(a){if(K.1H&&!K.1H.1i){K.1H=P}N c=a.2A;N f=1b;N e=!!(K.1H);N d=(c==="2X"||c==="4H"||c==="jt"||c==="9e");K.1H=K.1i.l8(a);if(K.1H&&!K.1H.1i){K.1H=P}if(K.7F&&!K.7F.1i){K.7F=P}if(K.1H){if(c==="9e"){O.1J.2Q(a)}N b=(K.1H!==K.7F);if(K.xf(K.1H)){if(e&&b){if(K.7F){K.bi(c,"4n",[K.7F,a])}K.bi(c,"in",[K.1H,a])}V{if(!e||d){K.bi(c,"in",[K.1H,a])}}K.7F=K.1H;f=1d}V{if(K.7F&&(e&&b||d)){K.bi(c,"4n",[K.7F,a])}K.1H=P}}V{if(K.7F&&(e||d)){K.bi(c,"4n",[K.7F,a])}}R f},bi:Q(d,e,b){N c=K.Hj[d][e];if(c){if(d==="2X"&&K.up&&K.4z){N a=1k.5A(1k.2W(K.up.x-K.4z.x,2)+1k.2W(K.up.y-K.4z.y,2));if(a<=K.Hi){K.3n(c,b)}}V{K.3n(c,b)}}},2r:Q(){N a=1b;if(O.1Z.1g.2r.1j(K,1s)){K.xF();K.U.1n.on({dR:K.mu,7w:K.mu,2y:K});a=1d}R a},2h:Q(){N a=1b;if(O.1Z.1g.2h.1j(K,1s)){K.Hh();K.1H=P;K.7F=P;K.4z=P;K.up=P;K.5C=1b;K.U.1n.un({dR:K.mu,7w:K.mu,2y:K});a=1d}R a},mu:Q(a){if(a.2A==="dR"||a.aV==="8v"){K.xF()}},xF:Q(){N a=1k.3l(K.U.c6.rq-1,K.1i.gH())+1;K.1i.hd(a)},Hh:Q(){N a=K.1i.gH()-1;if(a>=K.U.c6.rq){K.1i.hd(a)}V{K.U.mt(K.1i,K.U.rp(K.1i))}},1p:"O.1Z.3o"});O.1Z.cV=O.1A(O.1Z,{6u:1b,7m:1d,41:1b,5C:1b,3x:P,3V:P,xC:P,hc:P,77:0,rn:P,7R:1b,mr:P,1o:Q(d,c,a){O.1Z.1g.1o.1j(K,1s);if(K.7R===1d){N b=K;K.xu=Q(e){b.4y({xy:{x:e.b8,y:e.ar},2o:1O})};K.xt=Q(e){b.4x({xy:{x:e.b8,y:e.ar}})}}},j2:Q(b){N a=1d;K.41=1b;if(K.ju(b)&&(O.1J.b7(b)||O.1J.qK(b))&&!O.e4){K.6u=1d;K.3V=b.xy;K.3x=b.xy;O.2I.5b(K.U.3D,"lS");N c=O.1c.4X();K.U.3D.W.3I="1z(\'"+c+"xA/Tg.xz\'),3B";K.4z(b);K.3n("4z",[b.xy]);O.1J.2Q(b);if(!K.hc){K.hc=1O.cO?1O.cO:O.2z.rj}1O.cO=O.2z.iB;a=!K.7m}V{if(K.6u&&O.1J.xE(b)){1O.xb=Q(){R 1b};K.4n(b);K.3n("4n",[]);a=1b}V{1O.xb=Q(){R 1d}}K.6u=1b;K.3V=P;K.3x=P}R a},xD:Q(a){K.xC=a;if(K.6u&&!K.rn&&(a.xy.x!==K.3x.x||a.xy.y!==K.3x.y)){if(K.7R===1d&&K.mr){if(a.2o===1O){K.xw(a);K.ro(a)}V{K.xv()}}if(K.77>0){K.rn=6h(O.2z.3P(K.Hg,K),K.77)}K.41=1d;K.3B(a);K.3n("3B",[a.xy]);if(!K.hc){K.hc=1O.cO;1O.cO=O.2z.iB}K.3x=a.xy}R 1d},rl:Q(b){if(K.6u){if(K.7R===1d&&K.mr){K.xw(b);K.xv()}N a=(K.3V!==K.3x);K.6u=1b;K.41=1b;O.2I.aq(K.U.3D,"lS");K.U.3D.W.3I="";K.up(b);K.3n("up",[b.xy]);if(a){K.3n("7j",[b.xy])}1O.cO=K.hc}R 1d},4z:Q(a){},3B:Q(a){},up:Q(a){},4n:Q(a){},4g:Q(a){R K.j2(a)},9e:Q(a){if(!K.5C){K.5C=1d;K.U.1n.un({4g:K.4g,4x:K.4x,4y:K.4y,2X:K.2X,2y:K})}R K.j2(a)},4y:Q(a){R K.xD(a)},9N:Q(a){R K.xD(a)},Hg:Q(){K.rn=P;if(K.41){K.4y(K.xC)}},4x:Q(a){R K.rl(a)},ff:Q(a){a.xy=K.3x;R K.rl(a)},bf:Q(b){if(K.6u&&O.1c.xB(b,K.U.6A)){if(K.7R===1d){K.He()}V{N a=(K.3V!==K.3x);K.6u=1b;K.41=1b;O.2I.aq(K.U.3D,"lS");N c=O.1c.4X();K.U.3D.W.3I="1z(\'"+c+"xA/Hf.xz\'),4m";K.4n(b);K.3n("4n",[b]);if(a){K.3n("7j",[b.xy])}if(1O.cO){1O.cO=K.hc}}}R 1d},2X:Q(a){R(K.3V===K.3x)},2r:Q(){N a=1b;if(O.1Z.1g.2r.1j(K,1s)){K.41=1b;a=1d}R a},2h:Q(){N a=1b;if(O.1Z.1g.2h.1j(K,1s)){K.5C=1b;K.6u=1b;K.41=1b;K.3V=P;K.3x=P;a=1d}R a},xw:Q(a){N b=O.1c.wE(K.U.3D);a.xy.x-=b[0];a.xy.y-=b[1]},He:Q(){K.mr=1d;O.1J.3q(1O,"4y",K.xu);O.1J.3q(1O,"4x",K.xt)},xv:Q(){K.mr=1b;O.1J.au(1O,"4y",K.xu);O.1J.au(1O,"4x",K.xt)},1p:"O.1Z.cV"});O.1Z.x5=O.1A(O.1Z,{6u:1b,7m:1b,e3:1b,3x:P,3V:P,hb:P,3M:P,1o:Q(d,c,a){N b=K;O.1Z.1g.1o.1j(b,1s)},xs:Q(a){N b=2v Hd;if(K.hb===P&&(b!=="2b")){K.hb=S Hd();K.hb.ai=a.ai}if(a.Tf!=="vV"&&(b!=="2b")){K.hb.Te(a.Td)}},xr:Q(a){if(K.hb){K.hb.2Q()}},Hc:Q(a){K.xs(a)},Hb:Q(a){K.xr(a)},9e:Q(b){N a=1d;K.e3=1b;if(O.1J.rk(b)||O.e4){K.6u=1d;K.3x=K.3V={3K:K.xq(b.6L),bj:0,3M:1};K.3n("3V",[b,K.3V]);a=!K.7m}V{K.6u=1b;K.3V=P;K.3x=P}O.1J.2Q(b);R a},9N:Q(a){if(K.6u&&O.1J.rk(a)||O.e4){K.e3=1d;N b=K.H8(a);K.3n("3B",[a,b]);K.3x=b;O.1J.2Q(a)}R 1d},ff:Q(a){if(K.6u){c1{if(O.e4){K.U.2a.mq=0}}c0(b){}K.6u=1b;K.e3=1b;K.3n("7j",[a,K.3V,K.3x]);K.3V=P;K.3x=P}R 1d},Ha:Q(b){N a=1d;K.e3=1b;K.6u=1d;K.3M=1;K.3x=K.3V={3M:1};K.3n("Gz",[b,K.3V]);a=!K.7m;O.1J.2Q(b);R a},H9:Q(a){if(a.3M===1){R}K.U.jr=1b;if(K.6u){K.e3=1d;K.3M=a.3M*K.3M;N b={3M:K.3M};K.3n("Gy",[a,b]);K.3x=b;O.1J.2Q(a)}R 1d},wW:Q(a){if(K.6u){K.6u=1b;K.e3=1b;K.3n("Gx",[a,K.3V,K.3x]);K.3V=P;K.3x=P;K.3M=P}R 1d},2r:Q(){N a=1b;if(O.1Z.1g.2r.1j(K,1s)){K.e3=1b;a=1d}R a},2h:Q(){N a=1b;if(O.1Z.1g.2h.1j(K,1s)){K.6u=1b;K.e3=1b;K.3V=P;K.3x=P;K.Tc=P,K.Tb=0,K.3M=1,a=1d}R a},xq:Q(c){N b=c[0];N a=c[1];if(!a){R 0}V{R 1k.5A(1k.2W(b.b8-a.b8,2)+1k.2W(b.ar-a.ar,2))}},H8:Q(a){N c=K.xq(a.6L);N b=c/K.3V.3K;if(c==0||K.3V.3K==0){N b=1}V{N b=c/K.3V.3K}R{3K:c,bj:K.3x.3K-c,3M:b}},1p:"O.1Z.x5"});O.1Z.H5=O.1A(O.1Z.cV,{gL:4,4K:P,jy:P,xn:"xp",cW:P,aK:1b,rg:1b,6r:P,rh:1b,1H:P,1i:P,6E:P,1o:Q(c,b,a){if(!(a&&a.cW&&a.cW.aZ)){K.W=O.1c.1M(O.3o.31.W["4m"],{})}O.1Z.cV.1g.1o.1j(K,[c,b,a]);K.2D=(a)?a:{}},kb:Q(a){O.1c.1M(K.2D,a);O.1c.1M(K,a)},2r:Q(){N a=1b;if(O.1Z.cV.1g.2r.1j(K,1s)){N b=O.1c.1M({l9:1b,cF:O.2z.rj},K.cW);K.1i=S O.1C.31(K.1p,b);K.U.g8(K.1i);a=1d;O.2I.5b(K.U.3D,"ri")}R a},2h:Q(){N a=1b;if(O.1Z.cV.1g.2h.1j(K,1s)){if(K.41){K.8S()}if(K.1i.U!=P){K.1i.1m(1b);if(K.1H){K.1H.1m()}}K.1i=P;K.1H=P;a=1d;O.2I.aq(K.U.3D,"ri")}R a},4z:Q(a){K.rh=!!(K.4K);N b=K.1i.5w(a.xy);K.6E=S O.1h.1F(b.1P,b.1S);O.2I.aq(K.U.3D,"lS");K.U.3D.W.3I="";if(!K.rh||K.rg){K.4K=K.U.2u()}if(K.aK){K.5L()}K.1H=S O.3o.31();K.xo();K.3n("lT",[K.6E,K.1H]);K.1i.7I([K.1H],{5Q:1d});K.1i.3Q(K.1H,K.W)},3B:Q(c){N f=K.1i.5w(c.xy);N a=S O.1h.1F(f.1P,f.1S);if(K.rg){N g=1k.5A(2)*1k.3C(a.y-K.6E.y)/2;K.4K=1k.3l(K.U.2u()/2,g)}V{if(K.rh){K.6E=a}V{K.H6(a,c);K.4K=1k.3l(K.U.2u()/2,a.7d(K.6E))}}K.H7();if(K.rg){N d=a.x-K.6E.x;N b=a.y-K.6E.y;N e;if(b==0){e=d/(K.4K*1k.5A(2))}V{e=d/b}K.1H.1v.7Q(1,K.6E,e);K.1H.1v.3B(d/2,b/2)}K.1i.3Q(K.1H,K.W)},up:Q(a){K.c7();if(K.3V===K.3x){K.3n("7j",[a.xy])}},4n:Q(a){K.c7()},xo:Q(){K.6r=1k.PI*((1/K.gL)-(1/2));if(K.jy){K.6r+=K.jy*(1k.PI/2R)}K.1H.1v=O.1h.3R.Et(K.6E,K.4K,K.gL,K.jy)},H7:Q(){N d,a;N b=K.1H.1v.1x[0];if(b.1x.1a!==(K.gL+1)){K.xo();b=K.1H.1v.1x[0]}1f(N c=0;c<K.gL;++c){a=b.1x[c];d=K.6r+(c*2*1k.PI/K.gL);a.x=K.6E.x+(K.4K*1k.8T(d));a.y=K.6E.y+(K.4K*1k.7Z(d));a.al()}},H6:Q(a,b){N d=1k.lI(a.y-K.6E.y,a.x-K.6E.x);if(K.jy&&(K.xn&&!b[K.xn])){N c=(1k.PI/2R)*K.jy;K.6r=1k.2s(d/c)*c}V{K.6r=d}},8S:Q(){K.3n("8S",P);K.c7()},c7:Q(){K.6E=P;K.4K=K.2D.4K},5L:Q(){if(K.1i){K.1i.2i.5L();K.1i.a8()}},3n:Q(b,a){if(K.3H[b]){K.3H[b].1j(K.79,[K.1H.1v.1R()])}if(!K.aK&&(b==="7j"||b==="8S")){K.5L()}},1p:"O.1Z.H5"});O.1Z.kJ=O.1A(O.1Z,{8f:P,oI:"Ta",mp:P,ha:P,1o:Q(c,b,a){O.1Z.1g.1o.1j(K,1s);K.8f=S O.1Z.cV(K,{4z:K.H4,3B:K.H2,4n:K.rf,up:K.xm},{e1:K.e1});if(a&&a.ha){K.ha=a.ha}},1m:Q(){O.1Z.1g.1m.1j(K,1s);if(K.8f){K.8f.1m();K.8f=P}},2Z:Q(a){O.1Z.1g.2Z.1j(K,1s);if(K.8f){K.8f.2Z(a)}},H4:Q(a){K.3n("3V",[]);K.5k=O.1c.7v("5k",{x:-H3,y:-H3});K.5k.3U=K.oI;K.5k.W.5u=K.U.c6.4a-1;K.U.6A.1X(K.5k);O.2I.5b(K.U.6A,"H1");if(K.ha){K.U.6A.W.3I=K.ha}},H2:Q(e){N d=K.8f.3V.x;N b=K.8f.3V.y;N c=1k.3C(d-e.x);N a=1k.3C(b-e.y);N f=K.H0();K.5k.W.1B=(c+f.1B+1)+"px";K.5k.W.1E=(a+f.1E+1)+"px";K.5k.W.1r=(e.x<d?d-c-f.1r:d-f.1r)+"px";K.5k.W.1t=(e.y<b?b-a-f.1t:b-f.1t)+"px"},xm:Q(b){N a;if(1k.3C(K.8f.3V.x-b.x)>5||1k.3C(K.8f.3V.y-b.y)>5){N g=K.8f.3V;N f=1k.4q(g.y,b.y);N c=1k.3l(g.y,b.y);N e=1k.4q(g.x,b.x);N d=1k.3l(g.x,b.x);a=S O.1U(e,c,d,f)}V{if(!1k.3C(K.8f.3V.x-b.x)&&!1k.3C(K.8f.3V.y-b.y)){R}V{a=K.8f.3V.1R()}}K.rf();if(K.ha){K.U.6A.W.3I=""}K.3n("7j",[a])},rf:Q(a){if(a&&a.xy){K.xm(a.xy)}V{K.U.6A.2U(K.5k);K.5k=P;K.mp=P;O.2I.aq(K.U.6A,"H1")}},2r:Q(){if(O.1Z.1g.2r.1j(K,1s)){K.8f.2r();R 1d}V{R 1b}},2h:Q(){if(O.1Z.1g.2h.1j(K,1s)){if(K.8f.2h()){if(K.5k){K.rf()}}R 1d}V{R 1b}},H0:Q(){if(!K.mp){N d=1O.2G("1q");d.W.2x="3i";d.W.9f="pF cD T9";d.W.1B="Fy";1O.8a.1X(d);N a=d.lr===3;1O.8a.2U(d);N f=2l(O.2I.9O(K.5k,"9f-1r-1B"));N c=2l(O.2I.9O(K.5k,"9f-1I-1B"));N e=2l(O.2I.9O(K.5k,"9f-1t-1B"));N b=2l(O.2I.9O(K.5k,"9f-1N-1B"));K.mp={1r:f,1I:c,1t:e,1N:b,1B:a===1b?f+c:0,1E:a===1b?e+b:0}}R K.mp},1p:"O.1Z.kJ"});O.1Z.x8=O.1A(O.1Z,{mm:P,GX:nK,GV:T8,jv:P,77:0,bj:0,xh:1d,1o:Q(d,c,b){O.1Z.1g.1o.1j(K,1s);K.mm=O.2z.5e(K.GY,K);N e=O.8R.2c;N a=+O.8R.9g.4B(".")[0];if(e==="GZ"&&a>=7){K.xi=1d}},1m:Q(){O.1Z.1g.1m.1j(K,1s);K.mm=P},GY:Q(l){if(!K.U||!K.ju(l)){R}N h=1b;N p=1b;N g=1b;N c=O.1J.2o(l);4U((c!=P)&&!g&&!h){if(!h){c1{if(c.jf){N d=c.jf.ac}V{N a=1O.je.jd(c,P);N d=a.xl("ac")}h=(d&&(d==="4w")||(d==="xk"))}c0(f){}}if(!p){1f(N j=0,k=K.U.1Q.1a;j<k;j++){if(c===K.U.1Q[j].1q||c===K.U.1Q[j].7S){p=1d;1D}}}g=(c===K.U.1q);c=c.2Y}if(!h&&g){if(p){N o=0;if(!l){l=1W.bH}N b=78.T7();if(K.jx===2b){K.jx=b}if(!K.jw||b-K.jx>K.GX){K.jw=1k.3C(l.rc)<4?"GW":"js";K.mn={x:K.jv.x,y:K.jv.y}}if(K.jw==="GW"){o=l.rc;K.bj+=o;N m=50;if(K.xi){m=60}if(K.bj>=m||K.bj<=-m){K.bj/=m;K.r9(l,K.mn);N n=K;if(K.rd){1W.mo(K.rd);K.rd=P}K.rd=xj(Q(){n.jx=2b;n.jw=2b;n.mn=2b;n.bj=0},K.GV)}}V{if(l.rc){o=l.rc/lO;if(1W.ra&&1W.ra.9g()<9.2){o=-o}V{if(K.xi){o*=10}}}V{if(l.GU){o=-l.GU/3}}K.bj=K.bj+o;if(K.77){1W.5J(K.9P);K.9P=1W.6h(O.2z.3P(Q(){K.jx=2b;K.jw=2b;K.mn=2b;K.r9(l)},K),K.77)}V{K.jx=2b;K.jw=2b;K.mn=2b;K.r9(l)}}}O.1J.2Q(l)}},r9:Q(a,c){N b=K.bj;K.bj=0;if(b){if(c||K.jv){a.xy=c||K.jv}if(!a.xy){a.xy=K.U.dF(K.U.b9())}if(b<0){K.3n("4z",[a,K.xh?b:-1])}V{K.3n("up",[a,K.xh?b:1])}}},4y:Q(a){K.jv=a.xy},2r:Q(a){if(O.1Z.1g.2r.1j(K,1s)){N b=K.mm;O.1J.3q(1W,"GT",b);O.1J.3q(1W,"r8",b);O.1J.3q(1O,"r8",b);R 1d}V{R 1b}},2h:Q(a){if(O.1Z.1g.2h.1j(K,1s)){N b=K.mm;O.1J.au(1W,"GT",b);O.1J.au(1W,"r8",b);O.1J.au(1O,"r8",b);R 1d}V{R 1b}},1p:"O.1Z.x8"});O.1Z.qu=O.1A(O.1Z,{ml:["fF","T6"],mk:P,1o:Q(c,b,a){O.1Z.1g.1o.1j(K,1s);K.mk=O.2z.5e(K.GS,K)},1m:Q(){K.2h();K.mk=P;O.1Z.1g.1m.1j(K,1s)},2r:Q(){if(O.1Z.1g.2r.1j(K,1s)){1f(N b=0,a=K.ml.1a;b<a;b++){O.1J.3q(1O,K.ml[b],K.mk)}R 1d}V{R 1b}},2h:Q(){N c=1b;if(O.1Z.1g.2h.1j(K,1s)){1f(N b=0,a=K.ml.1a;b<a;b++){O.1J.au(1O,K.ml[b],K.mk)}c=1d}R c},GS:Q(a){if(K.ju(a)){K.3n(a.2A,[a])}},1p:"O.1Z.qu"});O.1Z.dE=O.1A(O.1Z.3o,{4N:P,am:P,1o:Q(d,b,c,a){O.1Z.3o.1g.1o.1j(K,[d,b,c,a])},fg:Q(a){if(K.4N&&!K.4N.1i){K.4N=P}N c=a.2A;N f=1b;N e=!!(K.4N);N d=(c==="2X"||c==="4H"||c==="jt"||c==="9e");K.4N=K.1i.xg(a);if(K.4N){if(c==="9e"){O.1J.2Q(a)}N b=(K.4N!==K.am);if(K.xf(K.4N)){if(e&&b){if(K.am){K.bi(c,"4n",[K.am,a])}K.bi(c,"in",[K.4N,a])}V{if(!e||d){K.bi(c,"in",[K.4N,a]);if(d){K.r7=K.4N}}}K.am=K.4N;f=1d}V{if(K.am&&(e&&b||d)){K.bi(c,"4n",[K.am,a])}K.4N=P}}V{if(d&&K.r7){K.bi(c,"4n",[K.r7,a]);K.r7=P}V{if(K.am&&K.am!==K.4N){K.bi(c,"4n",[K.am,a]);K.am=P}}}R f},1p:"O.1Z.dE"});O.1y=O.1A({id:P,U:P,1q:P,gR:P,2A:P,GQ:1b,5Y:"",7H:"",2x:P,9t:1b,3O:P,3w:P,2E:P,1n:P,2K:["2r","2h"],1o:Q(a){K.5Y=K.1p.42("O.","sm").42(/\\./g,"");O.1c.1M(K,a);K.1n=S O.4o(K,P,K.2K);if(K.2E 1V 6O){K.1n.on(K.2E)}if(K.id==P){K.id=O.1c.7L(K.1p+"49")}},1m:Q(){if(K.1n){if(K.2E){K.1n.un(K.2E)}K.1n.1m();K.1n=P}K.2E=P;if(K.3w){K.3w.1m();K.3w=P}if(K.1Y){1f(N a in K.1Y){if(K.1Y.cj(a)&&2v K.1Y[a].1m==="Q"){K.1Y[a].1m()}}K.1Y=P}if(K.U){K.U.GR(K);K.U=P}K.1q=P},2Z:Q(a){K.U=a;if(K.3w){K.3w.2Z(a)}},T5:Q(a){K.2H(a)},2H:Q(a){if(K.1q==P){K.1q=O.1c.7v(K.id);K.1q.3U=K.5Y;if(!K.GQ){K.1q.3U+=" T4";K.1q.cC("DK","on",0);K.1q.cO=O.2z.iB}if(K.7H!=""){K.1q.7H=K.7H}}if(a!=P){K.2x=a.1R()}K.2S(K.2x);R K.1q},2S:Q(b){if(!b){b=K.gR}if((b!=P)&&(K.1q!=P)){N c=K.1q.W,e=O.2C.GP,a=b.x+"px",d=b.y+"px";if(b.99){c.1r=P;c.1t=P;c.1I=P;c.1N=P}if(!e){c.1r=a;c.1t=d;R}5m(b.99){1K e.GO:c.1r=a;c.1t=d;1D;1K e.GN:c.1I=a;c.1t=d;1D;1K e.GM:c.1I=a;c.1N=d;1D;1K e.GL:c.1r=a;c.1N=d;1D;4m:c.1r=a;c.1t=d;1D}}},2r:Q(){if(K.3O){R 1b}if(K.3w){K.3w.2r()}K.3O=1d;if(K.U){O.2I.5b(K.U.3D,K.5Y.42(/ /g,"")+"GK")}K.1n.1L("2r");R 1d},2h:Q(){if(K.3O){if(K.3w){K.3w.2h()}K.3O=1b;if(K.U){O.2I.aq(K.U.3D,K.5Y.42(/ /g,"")+"GK")}K.1n.1L("2h");R 1d}R 1b},1p:"O.1y"});O.1y.h0="T3";O.1y.Cr=1;O.1y.Cq=2;O.1y.kM=3;O.1y.x9=O.1A(O.1y,{2A:O.1y.kM,4n:1b,e1:P,8w:P,GJ:1b,1o:Q(b,a){O.1y.1g.1o.1j(K,1s);if(a){K.8w=a}},2H:Q(){N a=O.1c.1M({e1:K.e1},K.8w);K.3w=S O.1Z.kJ(K,{7j:K.5k},a)},5k:Q(h){if(h 1V O.1U){N b;if(!K.4n){N i=K.U.6Q({x:h.1r,y:h.1N});N m=K.U.6Q({x:h.1I,y:h.1t});b=S O.1U(i.1P,i.1S,m.1P,m.1S)}V{N g=1k.3C(h.1I-h.1r);N j=1k.3C(h.1t-h.1N);N e=1k.4q((K.U.1G.h/j),(K.U.1G.w/g));N n=K.U.48();N a=K.U.6Q(h.wR());N c=a.1P-(n.3J()/2)*e;N f=a.1P+(n.3J()/2)*e;N l=a.1S-(n.4J()/2)*e;N d=a.1S+(n.4J()/2)*e;b=S O.1U(c,l,f,d)}N k=K.U.4I();K.U.r6(b);if(k===K.U.4I()&&K.GJ==1d){K.U.h1(k+(K.4n?-1:1))}}V{if(!K.4n){K.U.6g(K.U.6Q(h),K.U.4I()+1)}V{K.U.6g(K.U.6Q(h),K.U.4I()-1)}}},1p:"O.1y.x9"});O.1y.qZ=O.1A(O.1y,{2A:O.1y.kM,r4:1b,77:1,7R:1b,e2:P,r5:1b,GI:10,mj:1b,1o:Q(a){if(a&&a.mj!==2b){K.mj=a.mj}O.1y.1g.1o.1j(K,[a])},2H:Q(){if(K.r5){N a={77:K.GI};if(2v K.r5==="6z"){a=O.1c.1M(a,K.r5)}K.e2=S O.xe(a)}K.3w=S O.1Z.cV(K,{3B:K.GG,7j:K.GF,4z:K.GH},{77:K.77,7R:K.7R})},GH:Q(){if(K.e2&&K.U.jr){K.e2.b1()}},GG:Q(b){if(!K.U.jr){R}if(K.e2){K.e2.6U(b)}K.r4=1d;N a=K.mj;K.U.74(K.3w.3x.x-b.x,K.3w.3x.y-b.y,{41:!a,mh:1b})},GF:Q(c){if(!K.U.jr){R}if(K.r4){N b=P;if(K.e2){b=K.e2.gd(c)}K.U.74(K.3w.3x.x-c.x,K.3w.3x.y-c.y,{41:!!b,mh:1b});if(b){N a=K;K.e2.3B(b,Q(d,f,e){a.U.74(d,f,{41:!e,mh:1b})})}K.r4=1b}},1p:"O.1y.qZ"});O.1y.x6=O.1A(O.1y,{8I:P,qY:P,8H:P,qX:P,7R:1b,5k:P,r2:1d,r1:1d,GD:P,xc:1b,GE:O.1Z.xd,9t:1d,1o:Q(a){K.1Y={};O.1y.1g.1o.1j(K,1s)},1m:Q(){K.2h();if(K.8I){K.8I.1m()}K.8I=P;if(K.5k){K.5k.1m()}K.5k=P;if(K.8H){K.8H.1m()}K.8H=P;O.1y.1g.1m.1j(K,1s)},2r:Q(){K.8I.2r();if(K.r1){K.1Y.js.2r()}K.1Y.2X.2r();if(K.r2){K.5k.2r()}if(K.8H){K.8H.2r()}R O.1y.1g.2r.1j(K,1s)},2h:Q(){if(K.8H){K.8H.2h()}K.5k.2h();K.8I.2h();K.1Y.2X.2h();K.1Y.js.2h();R O.1y.1g.2h.1j(K,1s)},2H:Q(){if(K.xc){K.U.3D.xb=O.2z.iB}N a={2X:K.qW,4H:K.qV,xa:K.GC};N b={"h7":1d,jp:1d};K.1Y.2X=S O.1Z.m7(K,a,b);K.8I=S O.1y.qZ(O.1c.1M({U:K.U,7R:K.7R},K.qY));K.5k=S O.1y.x9({U:K.U,e1:K.GE});K.8I.2H();K.5k.2H();K.1Y.js=S O.1Z.x8(K,{up:K.GB,4z:K.GA},K.GD);if(O.1y.md){K.8H=S O.1y.md(O.1c.1M({U:K.U},K.qX))}},qW:Q(a){if(a.mc&&a.mc.1a===2){K.U.cY()}},qV:Q(b){N a=K.U.5w(b.xy);K.U.6g(a,K.U.5j+1)},GC:Q(b){N a=K.U.5w(b.xy);K.U.6g(a,K.U.5j-1)},x7:Q(i,c){N h=K.U.4I();N f=K.U.4I()+1k.2s(c);f=1k.3l(f,0);f=1k.4q(f,K.U.9M());if(f===h){R}N j=K.U.5i();N e=j.w/2-i.xy.x;N d=i.xy.y-j.h/2;K.U.r3=S O.2C(e,d);N g=K.U.2a.ax(f);N a=K.U.6Q(i.xy);N b=S O.3k(a.1P+e*g,a.1S+d*g);K.U.6g(b,f);K.U.r3=S O.2C(0,0)},GB:Q(a,b){K.x7(a,b||1)},GA:Q(a,b){K.x7(a,b||-1)},T2:Q(){K.r2=1b;K.5k.2h()},T1:Q(){K.r2=1d;if(K.3O){K.5k.2r()}},T0:Q(){K.r1=1b;K.1Y.js.2h()},SZ:Q(){K.r1=1d;if(K.3O){K.1Y.js.2r()}},1p:"O.1y.x6"});O.1y.md=O.1A(O.1y,{2A:O.1y.kM,wZ:P,mg:P,mf:P,9t:1d,1o:Q(a){O.1y.1g.1o.1j(K,1s);K.3w=S O.1Z.x5(K,{3V:K.x4,3B:K.x3,7j:K.wY,Gz:K.x4,Gy:K.x3,Gx:K.wY},K.8w)},2r:Q(){N a=O.1y.1g.2r.1j(K,1s);if(a){K.U.1n.on({6V:K.r0,2y:K});K.r0()}R a},2h:Q(){N a=O.1y.1g.2h.1j(K,1s);if(K.U&&K.U.1n){K.U.1n.un({6V:K.r0,2y:K})}R a},r0:Q(){N a=K.U.3s;K.wZ={x:2l(a.W.1r,10),y:2l(a.W.1t,10)};K.Gw={x:2l(0,10),y:2l(0,10)}},x4:Q(a,b){K.mg=a.xy;K.mf=a.xy},x3:Q(h,c){N d=c.3M;N i=K.wZ;N f=K.Gw;N a=K.mg;N g=h.xy;N k=1k.2s((g.x-a.x)+(d-1)*(i.x-a.x));N j=1k.2s((g.y-a.y)+(d-1)*(i.y-a.y));N e=1k.2s((g.x-a.x)+(d-1)*(f.x-a.x));N b=1k.2s((g.y-a.y)+(d-1)*(f.y-a.y));K.wX("3Y("+k+"px, "+j+"px) 3M("+d+")");K.mf=g},wX:Q(a){N b=K.U.3s.W;b["-SY-3N"]=a;b["-SX-3N"]=a;b["-ms-3N"]=a;b.3N=a},wY:Q(b,h,g){K.wX("");if(b.2A==="wW"){K.U.wV=1d;K.U.5h=g.3M}N f=K.U.aw(K.U.2u()/g.3M,1d);if(f!==K.U.4I()||!K.mf.3A(K.mg)){N d=K.U.ax(f);N a=K.U.6Q(K.mg);N c=K.mf;N e=K.U.5i();a.1P+=d*((e.w/2)-c.x);a.1S-=d*((e.h/2)-c.y);K.U.6g(a,f);K.U.wV=1b;K.U.jr=1d}},1p:"O.1y.md"});O.1y.Gu=O.1A(O.1y,{8I:P,qY:P,8H:P,qX:P,Gv:P,7R:1b,9t:1d,1o:Q(a){K.1Y={};O.1y.1g.1o.1j(K,1s)},1m:Q(){K.2h();if(K.8I){K.8I.1m()}K.8I=P;if(K.8H){K.8H.1m();2t K.8H}O.1y.1g.1m.1j(K,1s)},2r:Q(){if(O.1y.1g.2r.1j(K,1s)){K.8I.2r();K.1Y.2X.2r();K.8H.2r();R 1d}R 1b},2h:Q(){if(O.1y.1g.2h.1j(K,1s)){K.8I.2h();K.1Y.2X.2h();K.8H.2h();R 1d}R 1b},2H:Q(){N a={2X:K.qW,4H:K.qV};N b=O.1c.1M({"h7":1d,jp:1d,as:2},K.Gv);K.1Y.2X=S O.1Z.m7(K,a,b);K.8I=S O.1y.qZ(O.1c.1M({U:K.U,7R:K.7R},K.qY));K.8I.2H();K.8H=S O.1y.md(O.1c.1M({U:K.U},K.qX))},qW:Q(a){if(a.mc&&a.mc.1a===2){K.U.cY()}},qV:Q(b){N a=K.U.5w(b.xy);K.U.6g(a,K.U.5j+1)},1p:"O.1y.Gu"});O.1y.Gp=O.1A(O.1y,{9t:1d,2o:P,Gr:"",qj:", ",Gq:"",Gs:5,wU:10,wT:P,jq:P,5S:P,1m:Q(){K.2h();O.1y.1g.1m.1j(K,1s)},2r:Q(){if(O.1y.1g.2r.1j(K,1s)){K.U.1n.4Q("4y",K,K.3p);K.U.1n.4Q("bf",K,K.4T);K.3p();R 1d}V{R 1b}},2h:Q(){if(O.1y.1g.2h.1j(K,1s)){K.U.1n.6H("4y",K,K.3p);K.U.1n.6H("bf",K,K.4T);K.2o.6k="";R 1d}V{R 1b}},2H:Q(){O.1y.1g.2H.1j(K,1s);if(!K.2o){K.1q.1r="";K.1q.1t="";K.2o=K.1q}if(K.2x){O.2I.aq(K.1q,K.5Y);K.1q.W.2g="iE";K.1q.W.2x="3i";K.1q.W["a7-ue"]="SW";K.1q.W["a7-1G"]="SV"}R K.1q},3p:Q(a){N c;if(a==P){K.4T();R}V{if(K.jq==P||1k.3C(a.xy.x-K.jq.x)>K.wU||1k.3C(a.xy.y-K.jq.y)>K.wU){K.jq=a.xy;R}c=K.U.6Q(a.xy);if(!c){R}if(K.5S){c.3N(K.U.5X(),K.5S)}K.jq=a.xy}N b=K.Gt(c);if(b!==K.2o.6k){K.2o.6k=b}},4T:Q(a){if(K.wT!=P){K.2o.6k=K.wT}},Gt:Q(b){N c=2l(K.Gs);N a=K.Gr+b.1P.lB(c)+K.qj+b.1S.lB(c)+K.Gq;R a},1p:"O.1y.Gp"});O.1y.G9=O.1A(O.1y,{2o:P,3u:P,1G:{w:2R,h:2R},1Q:P,h6:8,Gd:"SU",qT:24,qS:32,Gg:P,Gj:1d,1Y:P,wN:1,ma:1d,1o:Q(d){N a=1b,e,c,b;K.1Q=[];K.1Y={};O.1y.1g.1o.1j(K,[d])},2Z:Q(a){O.1y.1g.2Z.1j(K,[a]);K.U.1n.4Q("97",K,K.wS)},Go:Q(){if(K.U.2a){N e=K.1Q;1f(N c=0,a=e.1a;c<a;c++){K.3u.bG(e[c]);K.1Q.8F()}N b=K.U.2a.1R();b.5y=1d;K.1Q.1u(b);K.3u.qR(K.1Q);N d=K;6h(Q(){if(d.U&&d.U.48()){d.6U();d.wQ()}},0);K.3u.mb=P;K.3u.qE()}R 1b},1m:Q(){if(!K.av){R}if(K.1Y.2X){K.1Y.2X.1m()}if(K.1Y.5B){K.1Y.5B.1m()}K.3u&&K.3u.6A.2U(K.6v);K.6v=P;if(K.jo){K.jo.1m();K.jo=P}if(K.3u){K.3u.1m();K.3u=P}K.2o.2U(K.av);K.av=P;K.1q.2U(K.2o);K.2o=P;if(K.5D){O.1J.a5(K.5D);K.1q.2U(K.5D);K.5D=P}if(K.5o){O.1J.a5(K.5o);K.1q.2U(K.5o);K.5o=P}K.U.1n.un({6V:K.6U,97:K.wS,2y:K});O.1y.1g.1m.1j(K,1s)},2H:Q(c){O.1y.1g.2H.1j(K);if(K.3u!==P){R K.Go()}if(!(K.1Q.1a>0)){if(K.U.2a){N e=K.U.2a.1R();e.5y=1d;K.1Q=[e]}V{R K.1q}}if(2v K.2o==="2b"||K.2o===P){K.2o=1O.2G("1q");K.2o.3U=K.5Y+"2I";K.2o.W.2g="2L";K.av=1O.2G("1q");K.av.W.1B=K.1G.w+"px";K.av.W.1E=K.1G.h+"px";K.av.W.2x="gl";K.av.W.ac="9y";K.av.id=O.1c.7L("ST");if(O.1y.h0!=="j5"){K.av.W.Gn="#qU";K.av.W.Gm="#qU";K.2o.W.Gn="#qU";K.2o.W.Gm="#qU"}K.6v=1O.2G("1q");K.6v.W.2x="3i";K.6v.W.5u=gM;K.6v.3U=K.5Y+"Gc";K.2o.1X(K.av);K.1q.1X(K.2o);if(!K.qC){K.1q.3U+=" "+K.5Y+"SS";N f=O.1c.4X();N b;if(O.1y.h0==="j5"){b=f+"f9/Gl.2V"}V{b=f+"qz/Gl.2V"}K.5D=O.1c.92(K.5Y+"Gk",P,S O.2J(15,15),b,"3i");K.5D.W.2g="2L";K.5D.3U=K.5Y+"Gk";O.1J.3q(K.5D,"2X",O.2z.5e(K.j4,K));K.1q.1X(K.5D);if(O.1y.h0==="j5"){b=f+"f9/wp.2V"}V{b=f+"qz/wp.2V"}K.5o=O.1c.92("SR",P,S O.2J(15,15),b,"3i");K.5o.W.2g="2L";K.5o.3U=K.5Y+"SQ";O.1J.3q(K.5o,"2X",O.2z.5e(K.gX,K));K.1q.1X(K.5o);N g=["4H","4g"];1f(N d=0,a=g.1a;d<a;d++){O.1J.3q(K.5D,g[d],O.1J.2Q);O.1J.3q(K.5o,g[d],O.1J.2Q)}K.gX()}V{K.2o.W.2g=""}}if(K.U.48()){K.6U(c)}K.U.1n.4Q("6V",K,K.6U);if(K.ma){K.j4()}R K.1q},wS:Q(){K.m8=1d;K.2H({m8:1d})},Gf:Q(i){N d=K.1Y.5B.3x.x-i.x;N b=K.1Y.5B.3x.y-i.y;if(d!==0||b!==0){N g=K.c4.1t;N a=K.c4.1r;N e=1k.3C(K.c4.4J());N c=K.c4.3J();N f=1k.3l(0,(g-b));f=1k.4q(f,K.3u.1G.h-K.jn-e);N h=1k.3l(0,(a-d));h=1k.4q(h,K.3u.1G.w-K.jm-c);K.qP(S O.1U(h,f+e,h+c,f))}},Ge:Q(i){N b=K.c4.wR();N e=i.xy.x-b.x;N d=i.xy.y-b.y;N g=K.c4.1t;N c=K.c4.1r;N j=1k.3C(K.c4.4J());N a=K.c4.3J();N f=1k.3l(0,(g+d));f=1k.4q(f,K.3u.1G.h-j);N h=1k.3l(0,(c+e));h=1k.4q(h,K.3u.1G.w-a);K.qP(S O.1U(h,f+j,h+a,f));K.wL()},j4:Q(a){K.2o.W.2g="";K.m9(1b);if(a!=P){O.1J.2Q(a)}if(K.U&&K.U.48()){K.6U();if(K.m8===1d){K.m8=1b;K.wQ()}}},wQ:Q(){N c=K.1Q;1f(N b=0,a=c.1a;b<a;b++){c[b].3p()}},gX:Q(a){K.2o.W.2g="2L";K.m9(1d);if(a!=P){O.1J.2Q(a)}},m9:Q(a){K.5D.W.2g=a?"":"2L";K.5o.W.2g=a?"2L":""},6U:Q(a){if(K.3u==P){if(K.ma){K.wP()}V{K.ma=1d;K.m9(1b);K.2o.W.2g="";K.wP();K.ma=1b;K.m9(1d);K.2o.W.2g="2L"}}if(K.5D&&K.5D.W.2g!=="2L"){R}if(K.Gj||!K.Gi()){K.Gh(a)}K.wM()},Gi:Q(){N b=K.U.48();N a=K.U.3a;N c=S O.1U(1k.3l(b.1r,a.1r),1k.3l(b.1N,a.1N),1k.4q(b.1I,a.1I),1k.4q(b.1t,a.1t));if(K.3u.c5()!==K.U.c5()){c=c.3N(K.U.5X(),K.3u.5X())}N d=K.3u.2u()/K.U.2u();R((d>K.qT)&&(d<=K.qS)&&(K.3u.48().a0(c)))},Gh:Q(c){N d=K.U.2u();N b=K.3u.2u();N e=b/d;if(e>K.qS){b=K.qT*d}V{if(e<=K.qT){b=K.qS*d}}if(!c||!c.m8){N a;if(K.3u.c5()!==K.U.c5()){a=K.U.3G.1R();a.3N(K.U.5X(),K.3u.5X())}V{a=K.U.3G}K.3u.6g(a,K.3u.aw(b*K.wN))}K.wM()},wP:Q(){N b=O.1c.1M({3Z:[],4A:"4w",h9:1b},K.Gg);K.3u=S O.e0(K.av,b);K.3u.6A.1X(K.6v);O.1J.au(1W,"at",K.3u.h8);K.3u.qR(K.1Q);K.3u.qE();K.jm=2l(O.2I.9O(K.6v,"9f-1r-1B"))+2l(O.2I.9O(K.6v,"9f-1I-1B"));K.jm=(K.jm)?K.jm:2;K.jn=2l(O.2I.9O(K.6v,"9f-1t-1B"))+2l(O.2I.9O(K.6v,"9f-1N-1B"));K.jn=(K.jn)?K.jn:2;K.1Y.5B=S O.1Z.cV(K,{3B:K.Gf,7j:K.wL},{U:K.3u});K.1Y.2X=S O.1Z.m7(K,{2X:K.Ge},{wO:1d,"h7":1b,qQ:1d,jp:1d,as:1,U:K.3u});K.1Y.2X.2r();K.jo=S O.4o(K,K.6v,P,1d);K.jo.4Q("dU",K,Q(d){if(!K.1Y.5B.3O&&!K.U.41){K.1Y.5B.2r()}});K.jo.4Q("bf",K,Q(d){if(!K.1Y.5B.41){K.1Y.5B.2h()}});if(K.3u.c5()!==K.U.c5()){N c=K.U.5X().cr()||K.U.2P||K.U.2a.2P;N a=K.3u.5X().cr()||K.3u.2P||K.3u.2a.2P;K.wN=c&&a?O.g0[c]/O.g0[a]:1}},wM:Q(){N b;if(K.3u.c5()!==K.U.c5()){b=K.U.48().3N(K.U.5X(),K.3u.5X())}V{b=K.U.48()}N a=K.Gb(b);if(a){K.qP(a)}},wL:Q(){N a=K.Ga(K.c4);if(K.3u.c5()!==K.U.c5()){a=a.3N(K.3u.5X(),K.U.5X())}K.U.wK(a.64())},qP:Q(d){N g=1k.3l(d.1t,0);N e=1k.3l(d.1r,0);N b=1k.4q(d.1t+1k.3C(d.4J()),K.3u.1G.h-K.jn);N h=1k.4q(d.1r+d.3J(),K.3u.1G.w-K.jm);N c=1k.3l(h-e,0);N i=1k.3l(b-g,0);if(c<K.h6||i<K.h6){K.6v.3U=K.5Y+K.Gd;N f=e+(c/2)-(K.h6/2);N a=g+(i/2)-(K.h6/2);if(!2w(a)){K.6v.W.1t=1k.2s(a)+"px"}if(!2w(f)){K.6v.W.1r=1k.2s(f)+"px"}K.6v.W.1E=K.h6+"px";K.6v.W.1B=K.h6+"px"}V{K.6v.3U=K.5Y+"Gc";if(!2w(g)){K.6v.W.1t=1k.2s(g)+"px"}if(!2w(e)){K.6v.W.1r=1k.2s(e)+"px"}if(!2w(i)){K.6v.W.1E=1k.2s(i)+"px"}if(!2w(c)){K.6v.W.1B=1k.2s(c)+"px"}}K.c4=S O.1U(1k.2s(e),1k.2s(b),1k.2s(h),1k.2s(g))},Gb:Q(c){N b=K.wI({1P:c.1r,1S:c.1N});N a=K.wI({1P:c.1I,1S:c.1t});N d=P;if(b&&a){d=S O.1U(b.x,b.y,a.x,a.y)}R d},Ga:Q(b){N a=K.wJ({x:b.1r,y:b.1N});N c=K.wJ({x:b.1I,y:b.1t});R S O.1U(a.1P,a.1S,c.1P,c.1S)},wJ:Q(f){N e=K.3u.1G;N d=K.3u.2u();N b=K.3u.48().64();N c=f.x-(e.w/2);N a=f.y-(e.h/2);R{1P:b.1P+c*d,1S:b.1S-a*d}},wI:Q(c){N a=K.3u.2u();N b=K.3u.48();if(b){R{x:1k.2s(1/a*(c.1P-b.1r)),y:1k.2s(1/a*(b.1t-c.1S))}}},1p:"O.1y.G9"});O.1y.G3=O.1A(O.1y,{9t:1d,h5:75,2H:Q(){K.3w=S O.1Z.qu(K,{fF:K.G8})},G8:Q(a){N b,c=1d;5m(a.Fb){1K O.1J.G7:K.U.74(-K.h5,0);1D;1K O.1J.G6:K.U.74(K.h5,0);1D;1K O.1J.G5:K.U.74(0,-K.h5);1D;1K O.1J.G4:K.U.74(0,K.h5);1D;1K 33:b=K.U.5i();K.U.74(0,-0.75*b.h);1D;1K 34:b=K.U.5i();K.U.74(0,0.75*b.h);1D;1K 35:b=K.U.5i();K.U.74(0.75*b.w,0);1D;1K 36:b=K.U.5i();K.U.74(-0.75*b.w,0);1D;1K 43:1K 61:1K SP:1K 107:K.U.fd();1D;1K 45:1K 109:1K SO:1K 95:K.U.cY();1D;4m:c=1b}if(c){O.1J.2Q(a)}},1p:"O.1y.G3"});O.1y.j7=O.1A(O.1y,{h5:50,wH:P,8d:P,6K:13,6Z:lO,SN:11,d0:11,9I:P,ji:P,cZ:P,wG:P,wD:1b,fe:P,m2:P,bh:[],d1:P,m3:P,94:1b,jj:1d,h4:P,1o:Q(k){O.1y.1g.1o.1j(K,1s);N c=1b,j=1b,i=S O.2J(17,17),f=S O.2J(27,27),b=S O.2J(11,11),a=S O.2J(63,62),g,e,h,d;if(k){K.94=2v k.94!=="2b"?k.94:1b;K.jj=2v k.jj!=="2b"?k.jj:1d;K.6K=2v k.6K!=="2b"?k.6K:13;K.6Z=2v k.6Z!=="2b"?k.6Z:lO}O.1y.j7.1g.2H=Q(l){O.1y.1g.2H.1j(K,1s);l=l||S O.2C(4,4);l.y+=a.h/2;K.8d=[];h=K.SM;h=S O.2C(l.x+a.w/2,l.y);N m;if(K.jj){K.d2("74","5j-wB-bg.2V",h.3t(-a.w/2+i.w/2,-a.h/2+i.h/2),a);K.d2("jc","",h.3t(-a.w/6+i.w/2,-a.h/2+i.h/2),a);K.d2("ja","",h.3t(-a.w/2+i.w/2,-a.h/6+i.h/2),a);K.d2("j9","",h.3t(a.w/6+i.w/2,-a.h/6+i.h/2),a);K.d2("jb","",h.3t(-a.w/6+i.w/2,a.w/6+i.w/2),a);K.d2("wy","5j-wB-bg.2V",h,i);m=a.w/2}V{m=-a.w/2}K.d2("FP","f9/5j-FO-bg.2V",h.3t(-f.w/2+i.w/2,m+i.h/2+10),f);if(K.94){K.d2("wz","f9/5j-wx-bg.2V",h.3t(-f.w/2+i.w/2,m+i.h/2+10+f.h+K.6Z),f);K.G2(h.3t(i.w/2-K.6K/2,m+i.h/2+10+f.h))}V{K.d2("wz","f9/5j-wx-bg.2V",h.3t(-f.w/2+i.w/2,m+i.h/2+10+f.h),f)}R K.1q};O.1y.j7.1g.d2=Q(s,m,p,r){g=O.1c.4X()+m;if(s==="jc"||s==="ja"||s==="jb"||s==="j9"){N o=O.1c.7v(K.id+"49"+s,p,"","","3i");o.W.1B=r.w/3+"px";o.W.1E=r.w/3+"px";o.W.3I="4u";if(!!(1W.jl&&bE.iz.2N("FY")===-1)){o.W.dZ="#SL";o.W.58="ls(2M=0)";o.W.2M=0}}V{if(s==="74"){N o=O.1c.92(K.id+"49"+s,p,r,g,"3i")}V{N o=O.1c.92(K.id+"49"+s,p,r,g,"3i");o.W.3I="4u"}}K.1q.1X(o);O.1J.3q(o,"4g",O.2z.5e(K.FQ,o));O.1J.3q(o,"4H",O.2z.5e(K.9c,o));O.1J.3q(o,"2X",O.2z.5e(K.9c,o));O.1J.3q(o,"dU",O.2z.5e(K.FT,o));O.1J.3q(o,"bf",O.2z.5e(K.FS,o));O.1J.3q(o,"4x",O.2z.5e(K.5R,K));o.qF=s;o.id=K.id;o.U=K.U;if(!K.wH){N n=K.h5;N l=Q(){R n}}V{N q=K.wH;N l=Q(t){R K.U.5i()[t]*q}}o.j8=l;K.8d.1u(o);R o};O.1y.j7.1g.G2=Q(s){if(K.U.9M()){K.d0=(K.6Z-11.5)/(K.U.9M()-1)}g=O.1c.4X();N o=P;N n=K.id+"49"+K.U.id;N x=K.U.9M()-1-K.U.4I();o=O.1c.92(n,s.3t(K.6K/2-5.5,x*K.d0+1),b,g+"9I.2V","3i");o.W.3I="4u";K.9I=o;K.ji=S O.4o(K,o,P,1d,{dX:1d});K.ji.on({9e:K.qL,9N:K.m4,ff:K.qJ,4g:K.qL,4y:K.m4,4x:K.qJ,4H:K.9c,2X:K.9c});N w=S O.2J(K.6K-2,3);N y=P;if(O.1c.h2()){N n=K.id+"49"+K.U.id;y=O.1c.92(n,s.3t(1,K.6Z),S O.2J(K.6K-2,K.6Z),g+"G1.2V","3i",P,"qH");y.W.1E=w.h+"px"}V{y=O.1c.7v("m1"+K.U.id,s.3t(1,K.6Z),S O.2J(K.6K-2,K.6Z),g+"G1.2V")}y.W.3I="4u";K.dY=y;K.cZ=S O.4o(K,y,P,1d,{dX:1d});K.cZ.on({9N:K.5R,4g:K.m5,4y:K.5R,4H:K.9c,2X:K.9c});K.1q.1X(y);N q=P;if(O.1c.h2()){N n=K.id+"49"+K.U.id;q=O.1c.92(n,s.3t(K.6K/2-0.5,0),S O.2J(1,K.6Z),g+"G0.2V","3i",P,"qH");q.W.1E=K.6Z+"px"}V{q=O.1c.7v("m1"+K.U.id,s.3t(K.6K/2-0.5,0),S O.2J(1,K.6Z),g+"G0.2V")}q.W.3I="4u";K.qN=q;K.1q.1X(q);N v=P;if(O.1c.h2()){N n=K.id+"49"+K.U.id;v=O.1c.92(n,s,S O.2J(K.6K,K.6Z),g+"FZ.2V","3i",P,"qH");v.W.1E=K.6Z+"px"}V{v=O.1c.7v("m1"+K.U.id,s,S O.2J(K.6K,K.6Z),g+"FZ.2V")}v.W.3I="4u";K.h3=v;K.cZ=S O.4o(K,v,P,1d,{dX:1d});if(O.8R.jk==="pc"){K.cZ.on({9N:K.5R,4g:K.m5,4y:K.5R,4x:K.5R,4H:K.9c,2X:K.9c,dU:K.qG})}V{K.cZ.on({9N:K.5R,4g:K.m5,4y:K.5R,4x:K.5R,4H:K.9c,2X:K.9c})}K.1q.1X(v);if(K.U.9M()){N m=1b;K.d1=O.1c.7v("",s.3t(K.6K,0),S O.2J(K.6K+30,lO));N u=s.3t(-s.x,-s.y);if(!!(1W.jl&&bE.iz.2N("FY")===-1)){N l="1z(\'"+g+"qO.m6\')";K.d1.W.qg=l}if(O.8R.jk==="pc"){K.wG=S O.4o(K,K.d1,P,1d,{dX:1d});K.wG.on({bf:K.FU,dU:K.qG,4x:K.5R})}N t=S O.2J(29,21);if(k&&k.h4){K.h4=k.h4;N z=P;1f(N p=0,r=K.h4.FX.1a;p<r;p++){K.FV(K.d1,z,u,K.h4.SK[p],K.h4.FX[p],t)}}}K.FW=2l(v.W.1t);K.1q.1X(o);K.qI();K.U.1n.4Q("qM",K,K.qI)}},SJ:Q(){N a={};a.6l=K.1q;if(K.jj){a.74=K.8d[0];a.jc=K.8d[1];a.ja=K.8d[2];a.j9=K.8d[3];a.jb=K.8d[4];a.wy=K.8d[5];a.fd=K.8d[6];a.cY=K.8d[7]}V{a.fd=K.8d[0];a.cY=K.8d[1]}if(K.94){a.SI=K.qN;a.SH=K.h3;a.SG=K.dY;a.9I=K.9I}R a},1m:Q(){K.wF();K.U.1n.un({97:K.3p,2y:K});K.wA();K.8d=P;K.2x=P;O.1y.1g.1m.1j(K,1s);2t K.fe;2t K.m3},2Z:Q(a){O.1y.1g.2Z.1j(K,1s);K.U.1n.4Q("97",K,K.3p)},3p:Q(){if(K.1q!=P){K.wA();K.wF();if(K.d1&&K.d1.2Y){K.d1.2Y.2U(K.d1);K.d1=P}K.bh=[]}K.2H()},wF:Q(){if(K.94){K.ji.un({9N:K.m4,4g:K.qL,4y:K.m4,4x:K.qJ,4H:K.9c,2X:K.9c});K.ji.1m();K.cZ.un({9N:K.5R,4g:K.m5,4y:K.5R,4H:K.9c,2X:K.9c,dU:K.qG,4x:K.5R});K.cZ.1m();K.1q.2U(K.9I);K.1q.2U(K.dY);K.1q.2U(K.qN);K.1q.2U(K.h3);K.9I=P;K.dY=P;K.qN=P;K.h3=P}K.U.1n.6H("qM",K,K.qI)},5R:Q(a){if(K.94){K.ji.qa(a)}},m5:Q(a){if(!O.1J.b7(a)){R}N c=a.xy.y/K.d0;if(K.wD||!K.U.jg){c=1k.9d(c)}N b=(K.U.9M()-1)-c;b=1k.4q(1k.3l(b,0),K.U.9M()-1);K.U.h1(b);O.1J.2Q(a)},qL:Q(a){if(!O.1J.b7(a)&&!O.1J.qK(a)){R}K.U.1n.on({9N:K.5R,4y:K.5R,4x:K.5R,2y:K});K.fe=a.xy.1R();K.m3=a.xy.1R();K.h3.jh=P;O.1J.2Q(a)},m4:Q(c){if(K.fe!=P){N a=K.fe.y-c.xy.y;N e=O.1c.wE(K.h3);if((c.ar-e[1])>5.5&&(c.ar-e[1])<2l(K.h3.W.1E)-5.5){N d=2l(K.9I.W.1t)-a;K.9I.W.1t=d+"px";K.dY.W.1t=d+6+"px";N b=2l(K.dY.W.1E)+a;K.dY.W.1E=b+"px";K.fe=c.xy.1R()}K.m2=K.m3.y-c.xy.y;O.1J.2Q(c)}},qJ:Q(a){if(!O.1J.b7(a)&&a.2A!=="ff"){R}if(K.fe){K.1q.W.3I="";K.U.1n.un({9N:K.5R,4x:K.5R,4y:K.5R,2y:K});N b=K.U.5j;if(!K.wD&&K.U.jg){b+=K.m2/K.d0;b=1k.4q(1k.3l(b,0),K.U.9M()-1)}V{b+=K.m2/K.d0;b=1k.3l(1k.2s(b),0)}if(b>K.U.9M()-1){b=K.U.9M()-1}K.U.h1(b);K.fe=P;K.m3=P;K.m2=0;O.1J.2Q(a)}},qI:Q(){N a=(K.U.9M()-1-K.U.4I())*K.d0+K.FW+1;if(2w(a)){a=0}K.9I.W.1t=a+"px";K.dY.W.1t=a+6+"px";K.dY.W.1E=K.U.4I()*K.d0+4.5+"px"},FV:Q(c,f,g,d,a,h,e){N l=S 3T();N k=d.sY("/"),j=d.sY(".");N i=d.bv(k+1,j);if(O.1c.h2()){N b=K.id+"49"+K.U.id;f=O.1c.92(b,g.3t(0,K.d0*a-10),h,d,"3i",P,"qH")}V{f=O.1c.7v("m1"+i,g.3t(0,K.d0*a-3),h,d)}l[0]="m1"+i;l[1]=a;K.bh.1u(l);f.W.3I="4u";f.W.2g="2L";f.3U="SF"+i;K.SE=f;K.cZ=S O.4o(K,f,P,1d,{dX:1d});K.cZ.on({4H:K.wC,2X:K.wC});c.1X(f);K.1q.1X(c)},wC:Q(b){N e,g,f;N d=b?b:1W.7i;if(d.pS){g=d.pS}V{g=d.ai}f=g.id;1f(N c=0,a=K.bh.1a;c<a;c++){if(K.bh[c][0]===f){e=K.U.9M()-1-K.bh[c][1]}}K.U.h1(e);O.1J.2Q(b)},qG:Q(b){1f(N c=0,a=K.bh.1a;c<a;c++){if(K.bh[c]){1O.8E(K.bh[c][0]).W.2g="iE"}}},FU:Q(){1f(N b=0,a=K.bh.1a;b<a;b++){if(K.bh[b]){1O.8E(K.bh[b][0]).W.2g="2L"}}},FT:Q(){N a=O.1c.4X();5m(K.qF){1K"jc":1O.8E(K.id+"m0").4O=a+"SD-bg.2V";1D;1K"jb":1O.8E(K.id+"m0").4O=a+"SC-bg.2V";1D;1K"ja":1O.8E(K.id+"m0").4O=a+"SB-bg.2V";1D;1K"j9":1O.8E(K.id+"m0").4O=a+"Sz-bg.2V";1D}},FS:Q(){N a=O.1c.4X();5m(K.qF){1K"jc":1K"jb":1K"ja":1K"j9":1O.8E(K.id+"m0").4O=a+"5j-wB-bg.2V";1D}},Sy:Q(b,c){if(b.jf){R b.jf[c]}V{if(1W.jd){N a=c.42(/([A-Z])/g,"-$1");a=c.dm();R 1O.je.jd(b,P)[a]}}R P},FR:Q(a){O.1J.a5(a);a.U=P;a.j8=P;K.1q.2U(a);O.1c.aM(K.8d,a)},wA:Q(){1f(N a=K.8d.1a-1;a>=0;--a){K.FR(K.8d[a])}},9c:Q(a){O.1J.2Q(a);R 1b},FQ:Q(a){if(!O.1J.b7(a)){R}5m(K.qF){1K"jc":K.U.74(0,-K.j8("h"));1D;1K"jb":K.U.74(0,K.j8("h"));1D;1K"ja":K.U.74(-K.j8("w"),0);1D;1K"j9":K.U.74(K.j8("w"),0);1D;1K"FP":K.U.fd();1D;1K"wz":K.U.cY();1D;1K"wy":K.U.qE();1D}O.1J.2Q(a)},1p:"O.1y.j7"});O.1y.FI=O.1A(O.1y,{FN:"Sx",FM:"Sw",8a:P,1o:Q(a){K.gR=S O.2C(10,10);O.1y.1g.1o.1j(K,1s)},2H:Q(){N e=O.1y.1g.2H.1j(K,1s),b=K.qh(e),d=b.fd,a=b.cY;if(!K.qi){N c=Q(f){R Q(g){f.qd(g)}}(K);O.1J.3q(a.2Y,"4g",O.2z.5e(c,a.2Y));K.qi=1d}K.lZ=d;K.lY=a;R e},qh:Q(e){N f=K.lZ,c=K.lY,a,d;a=K.8a;if(!a){a=1O.2G("1q");e.1X(a);K.8a=a}if(!f){f=K.iU(a,"5j-FO-bg.2V",K.FN);O.2I.5b(f,"iN")}if(!c){c=K.iU(a,"5j-wx-bg.2V",K.FM);O.2I.5b(c,"iN")}R{fd:f,cY:c}},iU:Q(i,f,k){N g,e,j=1O,h;g=j.2G("1q");g.3U=k;h=g.W;h.1B="FL";h.1E="FK";h.3I="4u";i.1X(g);e=j.2G("3e");h=e.W;h.1B="FL";h.1E="FK";if(O.1y.h0==="j5"){e.4O=O.1c.4X()+"f9/"+f}V{e.4O=O.1c.4X()+"qz/"+f}g.1X(e);R g},FJ:Q(a){N b=a.qc;if(b===K.lZ){K.U.fd()}V{if(b===K.lY){K.U.cY()}}},qd:Q(a){N d=O.1J.2o(a);if(d&&(O.1J.b7(a)||!~a.2A.2N("vV"))){N c=K.q9(d);if(c){N b={qc:c};K.FJ(b)}}},q9:Q(b){N c=3,a;do{if(O.2I.iO(b,"iN")){a=b;1D}b=b.2Y}4U(--c>0&&b);R a},1m:Q(){O.1J.a5(K.lZ);O.1J.a5(K.lY);2t K.lZ;2t K.lY;2t K.8a;O.1y.1g.1m.1j(K)},1p:"O.1y.FI"});O.1y.FF=O.1A(O.1y,{ww:100,FH:1d,wv:"km",qD:"m",wu:"mi",wt:"ft",cX:P,dW:P,kF:1b,2H:Q(){O.1y.1g.2H.1j(K,1s);if(!K.cX){K.cX=1O.2G("1q");K.cX.3U=K.5Y+"Sv";N a=K.qD.1a;K.1q.1X(K.cX);if((K.wv=="")||(K.qD=="")){K.cX.W.3v="9y"}V{K.cX.W.3v="7e"}K.dW=1O.2G("1q");K.dW.3U=K.5Y+"Su";K.1q.1X(K.dW);if((K.wu=="")||(K.wt=="")||!K.FH){K.dW.W.3v="9y"}V{K.dW.W.3v="7e"}}K.U.1n.4Q("6V",K,K.6U);K.6U();R K.1q},ws:Q(b){N d=2l(1k.fc(b)/1k.fc(10));N a=1k.2W(10,d);N c=2l(b/a);N e;if(c>5){e=5}V{if(c>2){e=2}V{e=1}}R e*a},6U:Q(){N j=K.U.2u();if(!j){R}N o=K.U.cr();N e=O.g0;N l=K.ww*j*e[o];N n=1;if(K.kF===1d){N b=(K.U.FG().w||0.St)*K.ww;N f=l/e.km;n=b/f;l*=n}N a;N d;if(l>hU){a=K.wv;d=K.wu}V{a=K.qD;d=K.wt}N h=l/e[a];N k=l/e[d];N i=K.ws(h);N g=K.ws(k);h=i/e[o]*e[a];k=g/e[o]*e[d];N c=h/j/n;N m=k/j/n;if(K.dW.W.3v==="7e"){K.dW.W.1B=1k.2s(m)+"px";K.dW.6k=g+" "+O.a4(d)}if(K.cX.W.3v==="7e"){K.cX.W.1B=1k.2s(c)+"px";K.cX.6k=i+" "+O.a4(a)}},1p:"O.1y.FF"});O.1y.wn=O.1A(O.1y,{fb:P,5T:P,bc:P,qB:P,fa:P,bd:P,qA:P,5o:P,5D:P,hr:P,lV:P,qy:1b,1o:Q(a){O.1y.1g.1o.1j(K,1s);K.fb=[]},1m:Q(){K.lX("gS");K.lX("52");K.U.1n.un({f4:K.3p,7w:K.3p,dR:K.3p,97:K.3p,2y:K});K.1n.6H("Ss",K,K.Sr);O.1y.1g.1m.1j(K,1s)},2Z:Q(a){O.1y.1g.2Z.1j(K,1s);K.U.1n.on({f4:K.3p,7w:K.3p,dR:K.3p,97:K.3p,2y:K})},2H:Q(){O.1y.1g.2H.1j(K,1s);K.Fw();if(!K.qC){K.gX()}K.3p();R K.1q},lX:Q(a){K[a+"Sq"].6k="";K[a+"Sp"]=[]},FE:Q(){N e=1b;if(!K.fb.1a||(K.U.1Q.1a!==K.fb.1a)){e=1d}V{1f(N c=0,a=K.fb.1a;c<a;c++){N d=K.fb[c];N b=K.U.1Q[c];if((d.2c!==b.2c)||(d.8c!==b.8c)||(d.id!==b.id)||(d.3v!==b.3v)){e=1d;1D}}}R e},3p:Q(){if(!K.FE()){R K.1q}K.lX("gS");K.lX("52");N e=1b;N k=1b;N q=K.U.1Q.1a;K.fb=S 3T(q);1f(N o=0;o<q;o++){N t=K.U.1Q[o];K.fb[o]={2c:t.2c,3v:t.3v,8c:t.8c,id:t.id}}N j=K.U.1Q.a3();if(!K.qy){j.So()}1f(N o=0,q=j.1a;o<q;o++){N t=j[o];N d=t.5y;if(t.l9){if(d){k=1d}V{e=1d}N h=(d)?(t===K.U.2a):t.dn();N f=1O.2G("Sn");O.2I.5b(f,"dV");f.id=K.id+"Sm"+t.2c;f.2c=(d)?K.id+"Sl":t.2c;f.2A="lW";f.Sk=h;f.j6=h;N l=O.1c.4X(),p="1z("+l+"1i-gY-on.2V)",a="1z("+l+"1i-gY-Sj.2V)",s="1z("+l+"1i-gY-hJ.2V)",g="1z("+l+"1i-gY-Si.2V)";if(h){f.W.FD=(d)?a:p}V{f.W.FD=(d)?g:s}if(!d&&!t.8c){f.FA=1d}N b={dV:f,1i:t,Fz:K};O.1J.3q(f,"4x",O.2z.5e(K.FB,b));N n=1O.2G("eY");O.2I.5b(n,"FC");if(!d&&!t.8c){n.W.57="Sh"}n.6k=t.2c;N r=1O.2G("br");N c=(d)?K.qB:K.qA;c.1u({1i:t,dV:f,FC:n});N m=(d)?K.bc:K.bd;m.1X(f);m.1X(n);m.1X(r)}}if(O.1y.h0==="j5"){K.fa.W.2g=(e)?"":"2L";K.gZ.W.2g=(k)?"":"2L"}V{K.hr.W.2g=(e&&k)?"":"2L"}R K.1q},FB:Q(a){if(!K.dV.FA){if(K.1i.5y){K.dV.j6=1d;K.1i.U.f6(K.1i)}V{K.dV.j6=!K.dV.j6;K.Fz.wr()}}O.1J.2Q(a)},Sg:Q(a){K.wr()},wr:Q(){1f(N b=0,a=K.qB.1a;b<a;b++){N c=K.qB[b];if(c.dV.j6){K.U.f6(c.1i,1b)}}1f(N b=0,a=K.qA.1a;b<a;b++){N c=K.qA[b];c.1i.f5(c.dV.j6)}},j4:Q(a){K.1q.W.1B="";K.1q.W.1E="";K.1q.W.Fx="Fy";K.wq(1b);if(a!=P){O.1J.2Q(a)}},Fv:Q(b){N a=K;K.lV=6h(Q(c){a.gX(c)},100)},Fu:Q(){if(K.lV){1W.5J(K.lV);K.lV=P}},gX:Q(a){K.1q.W.1B="bS";K.1q.W.1E="bS";K.1q.W.Fx="bS";K.wq(1d);if(a!=P){O.1J.2Q(a)}},wq:Q(a){K.5D.W.2g=a?"":"2L";K.5o.W.2g=a?"2L":"";K.5T.W.2g=a?"2L":""},Fw:Q(){O.1J.3q(K.1q,"4x",O.2z.5e(K.Fq,K));O.1J.3q(K.1q,"2X",K.lU);O.1J.3q(K.1q,"4g",O.2z.5e(K.bb,K));O.1J.3q(K.1q,"4H",K.lU);if(O.1y.h0!=="j5"){K.5T=1O.2G("1q");K.5T.id=K.id+"Ft";O.2I.5b(K.5T,"Sf");K.bc=1O.2G("1q");O.2I.5b(K.bc,"bc");K.hr=1O.2G("hr");O.2I.5b(K.hr,"Se");K.bd=1O.2G("1q");O.2I.5b(K.bd,"bd");if(K.qy){K.5T.1X(K.bc);K.5T.1X(K.hr);K.5T.1X(K.bd)}V{K.5T.1X(K.bd);K.5T.1X(K.hr);K.5T.1X(K.bc)}N d=O.1c.4X();N c=S O.2J(34,34);N a=d+"qz/1i-gY-Fs.2V";K.5D=O.1c.92("Fr",P,c,a,"3i",P);O.2I.5b(K.5D,"Sd");K.5D.W.2g="2L";O.1J.3q(K.5D,"dU",O.2z.5e(K.j4,K));K.1q.1X(K.5D);K.5o=1O.2G("1q");K.5o.3U="Sc";K.5o.W.2g="2L";O.1J.3q(K.5o,"bf",O.2z.5e(K.Fv,K));O.1J.3q(K.5o,"dU",O.2z.5e(K.Fu,K));K.1q.W.Sb="nF";K.5o.1X(K.5T);K.1q.1X(K.5o)}V{K.5T=1O.2G("1q");K.5T.id=K.id+"Ft";O.2I.5b(K.5T,"5T");K.1q.1X(K.5T);K.gZ=1O.2G("1q");K.gZ.6k=O.a4("Sa 1C");O.2I.5b(K.gZ,"gZ");K.bc=1O.2G("1q");O.2I.5b(K.bc,"bc");K.fa=1O.2G("1q");K.fa.6k=O.a4("S9");O.2I.5b(K.fa,"fa");K.bd=1O.2G("1q");O.2I.5b(K.bd,"bd");if(K.qy){K.5T.1X(K.gZ);K.5T.1X(K.bc);K.5T.1X(K.fa);K.5T.1X(K.bd)}V{K.5T.1X(K.fa);K.5T.1X(K.bd);K.5T.1X(K.gZ);K.5T.1X(K.bc)}d=O.1c.4X();N c=S O.2J(24,24);a=d+"f9/1i-gY-Fs.2V";K.5D=O.1c.92("Fr",P,c,a,"3i","ER");O.2I.5b(K.5D,"5D");K.5D.W.2g="2L";O.1J.3q(K.5D,"2X",O.2z.5e(K.j4,K));K.1q.1X(K.5D);a=d+"f9/1i-gY-wp.2V";N c=S O.2J(S8,24);K.5o=O.1c.92("S7",P,c,a,"3i");N b=1O.2G("eY");b.6k=O.a4("wn");b.3U="S6";K.5o.1X(b);O.2I.5b(K.5o,"5o");K.5o.W.2g="2L";O.1J.3q(K.5o,"2X",O.2z.5e(K.gX,K));K.1q.1X(K.5o)}},lU:Q(a){O.1J.2Q(a)},bb:Q(a){K.wo=1d;K.lU(a)},Fq:Q(a){if(K.wo){K.wo=1b;K.lU(a)}},1p:"O.1y.wn"});O.1y.wl=O.1A(O.1y,{cU:P,1i:P,3H:P,2K:["uU","uV"],f8:1b,Fp:Q(){},8w:P,W:P,1o:Q(b,c,a){K.2K=O.1y.wl.1g.2K.7E(O.1y.1g.2K);O.1y.1g.1o.1j(K,[a]);K.3H=O.1c.1M({7j:K.3Q,g4:Q(f,e){K.1i.1n.1L("le",{ap:f,1H:e})},3m:Q(f,e){K.1i.1n.1L("Dt",{ap:f,1H:e})},lT:Q(f,e){K.1n.1L("uV",{1H:e});K.1i.1n.1L("uS",{ap:f,1H:e})}},K.3H);K.1i=b;K.8w=K.8w||{};if(!("f8"in K.8w)){K.8w.f8=K.f8}N d=K.1i.aZ&&K.1i.aZ.6D.ic;if(d){K.8w.cW=O.1c.4D(K.8w.cW,{aZ:S O.p5({"4m":d})})}K.3w=S c(K,K.3H,K.8w);if(K.1i&&K.1i.1p==="O.1C.S5"){K.1i.S4=K}},3Q:Q(f){if(f.1p==="O.1U"){N e=K.U.6Q(S O.2C(f.1r,f.1N)),a=K.U.6Q(S O.2C(f.1I,f.1t));N f=S O.1h.ag(e.1P,e.1S,a.1P-e.1P,a.1S-e.1S)}V{if(f.1p==="O.2C"){N d=K.U.6Q(f);N f=S O.1h.1F(d.1P,d.1S)}}N b=P;if(f.1p==="O.3o.31"){b=f}V{b=S O.3o.31(f);if(K.W){b.W=K.W}}N c=K.1i.1n.1L("im",{1H:b});if(c!==1b){b.7V=O.6o.gW;K.1i.7I([b]);K.Fp(b);K.1n.1L("uU",{1H:b})}},qx:Q(a,b){if(K.3w&&K.3w.4b){K.3w.qx(a,b)}},qw:Q(b,a){if(K.3w&&K.3w.4b){K.3w.qw(b,a)}},qv:Q(b,a){if(K.3w&&K.3w.4b){K.3w.qv(b,a)}},wm:Q(b,a){if(K.3w&&K.3w.4b){K.3w.wm(b,a)}},lQ:Q(){R K.3w.lQ&&K.3w.lQ()},lP:Q(){R K.3w.lP&&K.3w.lP()},S3:Q(){K.3w.j3()},8S:Q(){K.3w.8S()},1p:"O.1y.wl"});O.1y.wf=O.1A(O.1y,{f7:P,6j:P,wj:Q(b,a){},wi:Q(b,a){},wh:Q(b,a){},Fn:Q(a){},Fi:Q(a){},7R:1b,1i:P,1H:P,Fo:{},wg:{},j1:P,1o:Q(b,a){O.1y.1g.1o.1j(K,[a]);K.1i=b;K.1Y={5B:S O.1Z.cV(K,O.1c.1M({4z:K.Fm,3B:K.Fl,up:K.Fk,4n:K.8S,7j:K.Fj},K.Fo),{7R:K.7R}),1H:S O.1Z.3o(K,K.1i,O.1c.1M({2X:K.cw,9s:K.i6,6B:K.dq,4n:K.eC},K.wg),{6j:K.6j})};if(a&&a.f7){K.f7=a.f7}},cw:Q(a){if(K.1Y.1H.5C&&!K.6B&&K.dq(a)){K.1Y.5B.j2(K.1Y.1H.7i);K.1Y.5B.7m=1b}},i6:Q(a){if(K.1Y.1H.5C&&K.6B){K.eC(a);K.1Y.5B.7m=1d}},1m:Q(){K.1i=P;K.7R=P;O.1y.1g.1m.1j(K,[])},2r:Q(){R(K.1Y.1H.2r()&&O.1y.1g.2r.1j(K,1s))},2h:Q(){K.1Y.5B.2h();K.1Y.1H.2h();K.1H=P;K.41=1b;K.j1=P;O.2I.aq(K.U.3D,K.5Y+"wk");R O.1y.1g.2h.1j(K,1s)},dq:Q(b){N a=1b;if(!K.1Y.5B.41){K.1H=b;K.1Y.5B.2r();a=1d;K.6B=1d;O.2I.5b(K.U.3D,K.5Y+"wk");K.Fn(b)}V{if(K.1H.id===b.id){K.6B=1d}V{K.6B=1b}}R a},Fm:Q(a){K.j1=a;K.wj(K.1H,a)},Fl:Q(f){N g=K.U.2u();N e=K.1i.5w(f);if(K.f7&&K.f7.cU&&K.1H.1v.1p==="O.1h.1F"){K.1H.1v.x=e.1P;K.1H.1v.y=e.1S;N c=S O.3k(K.1H.1v.x,K.1H.1v.y);N a=K.f7.cU.ka(c);N d=a.1P-c.1P;N b=a.1S-c.1S;K.1H.1v.3B(d,b)}V{N h=K.1i.5w(K.j1);K.1H.1v.3B(e.1P-h.1P,e.1S-h.1S)}K.1i.3Q(K.1H);K.j1=f;K.wi(K.1H,f)},Fk:Q(a){if(!K.6B){K.1Y.5B.2h()}},Fj:Q(a){K.wh(K.1H,a)},eC:Q(a){if(!K.1Y.5B.41){K.6B=1b;K.1Y.5B.2h();O.2I.aq(K.U.3D,K.5Y+"wk");K.Fi(a);K.1H=P}V{if(K.1H.id===a.id){K.6B=1b}}},8S:Q(){K.1Y.5B.2h();K.6B=1b},2Z:Q(a){K.1Y.5B.2Z(a);K.1Y.1H.2Z(a);O.1y.1g.2Z.1j(K,1s)},1p:"O.1y.wf"});O.1y.98=O.1A(O.1y,{cU:P,2K:["pr","gw","pq"],6j:P,9s:1d,8x:1d,8G:1b,1i:P,1H:P,8b:P,9a:P,67:P,71:P,1Y:P,j0:P,lR:P,qq:P,ba:P,73:P,wa:100,99:P,9b:1b,9L:P,c3:P,1o:Q(d,c){c=c||{};K.1i=d;K.8b=[];K.9a=[];K.lR=O.1c.1M({},K.1i.W||K.1i.aZ.gg(P,c.qq));K.lR.4V=0.3;K.lR.aS=0.3;K.j0=[46,68];K.99=O.1y.98.qn;O.1y.1g.1o.1j(K,[c]);if(!(O.1c.4k(K.j0))){K.j0=[K.j0]}N f=K;N a={6j:K.6j,9s:K.9s,8x:K.8x,i8:1d,g7:K.wd,dp:K.qo,g6:K.wc,2y:K};if(K.8G===1b){K.67=S O.1y.kH(d,a)}N b={6j:["O.1h.1F"],Fh:K.Fh,wj:Q(h,g){f.Ff.1j(f,[h,g])},wi:Q(h,g){f.Fe.1j(f,[h,g])},wh:Q(g){f.Fd.1j(f,[g])},wg:{6B:Q(g){if(f.8G!==1d||g.iZ||f.1H===g){f.71.dq.1j(f.71,[g])}}}};b.f7=K;K.71=S O.1y.wf(d,b);N e={fF:K.Fc};K.1Y={we:S O.1Z.qu(K,e)};K.F7()},1m:Q(){K.1i=P;K.8G||K.67.1m();K.71.1m();O.1y.1g.1m.1j(K,[]);K.Fg()},Fg:Q(){if(K.73&&K.73.1a>0){1f(N c=0,a=K.73.1a;c<a;c++){N b=K.73[c][1];b.1m()}K.73.1a=0}if(K.ba&&K.ba.1a>0){1f(c=0,a=K.ba.1a;c<a;c++){N b=K.ba[c][1];b.1m()}K.ba.1a=0}},2r:Q(){R((K.8G||K.67.2r())&&K.1Y.we.2r()&&O.1y.1g.2r.1j(K,1s))},2h:Q(){N c=1b;if(O.1y.1g.2h.1j(K,1s)){K.1i.af(K.8b,{5Q:1d});K.1i.af(K.9a,{5Q:1d});K.8b=[];K.71.2h();N a=K.1H;N b=a&&a.1v&&a.1i;if(K.8G===1b){if(b){K.67.bF.1j(K.67,[a])}K.67.2h()}V{if(b){K.wc(a)}}K.1Y.we.2h();c=1d}R c},wd:Q(a){K.1n.1L("pr",{1H:a});R K.1i.1n.1L("pr",{1H:a})},qo:Q(b){if(!K.8G||K.wd(b)!==1b){K.1H=b;K.9b=1b;K.qr();K.71.2r()}N a=b.9b;if(b.1v&&!(a&&a.1v)){K.qs=b.1v.1R()}K.7F=b},wc:Q(a){K.1i.af(K.8b,{5Q:1d});K.8b=[];K.1i.a8(K.9a,{5Q:1d});K.9a=[];if(K.c3){K.1i.a8([K.c3],{5Q:1d});2t K.c3}if(K.9L){K.1i.a8([K.9L],{5Q:1d});2t K.9L}K.1H=P;K.71.2h();K.1n.1L("pq",{1H:a,9b:K.9b});K.1i.1n.1L("pq",{1H:a,9b:K.9b});K.9b=1b},Ff:Q(b,a){if(b!==K.1H&&!b.1v.dP&&b!==K.c3&&b!==K.9L){if(K.8G===1b&&K.1H){K.67.cw.1j(K.67,[K.1H])}if(K.6j==P||O.1c.2N(K.6j,b.1v.1p)!==-1){K.8G||K.67.cw.1j(K.67,[b]);K.71.dq.1j(K.71,[b]);K.71.j1=a;K.71.1Y.5B.6u=1d;K.71.1Y.5B.3V=a;K.71.1Y.5B.3x=a}}K.iY=K.1H.1v.1R();O.2I.aq(K.U.3D,"lS");K.U.3D.W.3I="4u"},Fe:Q(b,a){K.9b=1d;if(K.1H.1v.1p==="O.1h.1F"){if(K.1H!==b){K.1H=b}K.1i.1n.1L("pp",{ap:b.1v,1H:K.1H,dS:a})}V{if(b.qp){b.1v.dP.89(b.1v,b.qp);2t b.qp;O.1c.aM(K.9a,b);K.8b.1u(b)}V{if(b===K.c3){K.1i.af(K.8b,{5Q:1d});K.8b=[];if(K.9L){K.1i.a8([K.9L],{5Q:1d});K.9L=P}}V{if(b!==K.9L){K.1i.1n.1L("pp",{ap:b.1v,1H:K.1H,dS:a})}}}if(K.9a.1a>0){K.1i.a8(K.9a,{5Q:1d});K.9a=[]}K.1i.3Q(K.1H,K.8G?2b:K.67.7l)}K.1i.3Q(b)},Fd:Q(a){K.qr();K.wb();K.1n.1L("gw",{1H:K.1H});K.1i.1n.1L("gw",{1H:K.1H})},wb:Q(){if(K.1H.7V!==O.6o.gW&&K.1H.7V!==O.6o.cf){K.1H.7V=O.6o.dT;if(K.9b&&K.qs){N a=K.1H;a.9b=O.1c.1M(a.9b,{1v:K.qs});2t K.qs}}},qr:Q(){if(K.71.1H){K.71.eC(K.71.1H)}if(K.8b.1a>0){K.1i.af(K.8b,{5Q:1d});K.8b=[]}if(K.9a.1a>0){K.1i.af(K.9a,{5Q:1d});K.9a=[]}if(K.c3){K.1i.a8([K.c3],{5Q:1d});K.c3=P}if(K.9L){K.1i.a8([K.9L],{5Q:1d});K.9L=P}if(K.1H&&K.1H.1v.1p!=="O.1h.1F"){if((K.99&O.1y.98.F4)){K.F9()}if((K.99&(O.1y.98.w9|O.1y.98.qm))){K.F8()}if(K.99&O.1y.98.qn){if(!(K.99&O.1y.98.qm)){K.Fa()}}}},Fc:Q(a){N b=a.Fb;if(K.1H&&O.1c.2N(K.j0,b)!==-1){N c=K.71.1H;if(c&&O.1c.2N(K.8b,c)!==-1&&!K.71.1Y.5B.41&&c.1v.dP){K.iY=K.1H.1v.1R();c.1v.dP.ak(c.1v);K.1i.1n.1L("uT",{ap:c.1v,1H:K.1H,dS:a.xy});K.1i.3Q(K.1H,K.8G?2b:K.67.7l);K.9b=1d;K.qr();K.wb();K.1n.1L("gw",{1H:K.1H});K.1i.1n.1L("gw",{1H:K.1H})}}},Fa:Q(){K.8b=[];K.9a=[];N a=K;Q b(h){N d,e,j,f;if(h.1p==="O.1h.1F"){e=S O.3o.31(h);e.iZ=1d;e.7l=a.qq;a.8b.1u(e)}V{N c=h.1x.1a;if(h.1p==="O.1h.4C"){c-=1}1f(d=0;d<c;++d){j=h.1x[d];if(j.1p==="O.1h.1F"){e=S O.3o.31(j);e.iZ=1d;e.7l=a.qq;a.8b.1u(e)}V{b(j)}}if(h.1p!=="O.1h.8J"){1f(d=0,f=h.1x.1a;d<f-1;++d){N m=h.1x[d];N n=h.1x[d+1];if(m.1p==="O.1h.1F"&&n.1p==="O.1h.1F"){N k=(m.x+n.x)/2;N g=(m.y+n.y)/2;N l=S O.3o.31(S O.1h.1F(k,g),P,a.lR);l.1v.dP=h;l.qp=d+1;l.iZ=1d;a.9a.1u(l)}}}}}b.47(K,K.1H.1v);K.1i.7I(K.9a,{5Q:1d});K.1i.7I(K.8b,{5Q:1d})},F9:Q(){N d=K;N e=K.1H.1v;N a=e.5s().64();N c=S O.1h.1F(a.1P,a.1S);N b=S O.3o.31(c);c.3B=Q(f,g){O.1h.1F.1g.3B.47(K,f,g);e.3B(f,g);d.1n.1L("po",{ap:e,1H:d.1H,dS:S O.2C(f,g)});d.1i.1n.1L("po",{ap:e,1H:d.1H,dS:S O.2C(f,g)})};b.iZ=1d;K.c3=b;K.1i.7I([K.c3],{5Q:1d})},F8:Q(){N h=K;N i=K.1H.1v;N a=i.5s();N b=a.64();N j=S O.1h.1F(b.1P,b.1S);N g=S O.1h.1F(a.1I,a.1N);N f=S O.3o.31(g);N c=(K.99&O.1y.98.qm);N e=(K.99&O.1y.98.qn);N d=(K.99&O.1y.98.w9);g.3B=Q(u,t){O.1h.1F.1g.3B.47(K,u,t);N v=K.x-j.x;N q=K.y-j.y;N w=v-u;N r=q-t;if(d){N l=1k.lI(r,w);N k=1k.lI(q,v);N o=k-l;o*=2R/1k.PI;i.5g(o,j);h.1n.1L("pn",{ap:i,1H:h.1H,dS:S O.2C(u,t)});h.1i.1n.1L("pn",{ap:i,1H:h.1H,dS:S O.2C(u,t)})}if(c){N n,s;if(e){n=q/r;s=(v/w)/n}V{N p=1k.5A((w*w)+(r*r));N m=1k.5A((v*v)+(q*q));n=m/p}i.7Q(n,j,s);h.1n.1L("pm",{ap:i,1H:h.1H,dS:S O.2C(u,t)});h.1i.1n.1L("pm",{ap:i,1H:h.1H,dS:S O.2C(u,t)})}};f.iZ=1d;K.9L=f;K.1i.7I([K.9L],{5Q:1d})},F7:Q(){N a=K;K.ba=[];K.73=[];K.1n.on({gw:Q(b){N c=b.1H;a.iX([c,a.iY])},po:Q(b){N c=b.1H;a.iX([c,a.iY])},pn:Q(b){N c=b.1H;a.iX([c,a.iY])},pm:Q(b){N c=b.1H;a.iX([c,a.iY])}})},iX:Q(a){if(K.ba.1a>=K.wa){6F O.a4("F6")}K.ba.1u(a)},F5:Q(a){if(K.73.1a>=K.wa){6F O.a4("F6")}K.73.1u(a)},lQ:Q(){if(K.ba&&K.ba.1a>0){N d=K.ba.8F();N c=d[0],e=d[1];if(K.1i.2n.2N(c)===-1){R}N b=[c,c.1v];e.id=c.1v.id;c.1v=e;K.1i.3Q(c,K.8G?2b:K.67.7l);if(!K.8G){N a=K.67.8x;K.67.8x=1b;K.67.cw(c);K.67.8x=a}V{K.qo(c)}K.F5(b)}},lP:Q(){if(K.73&&K.73.1a>0){N d=K.73.8F();N c=d[0],e=d[1];if(K.1i.2n.2N(c)===-1){R}N b=[c,c.1v];e.id=c.1v.id;c.1v=e;K.1i.3Q(c,K.8G?2b:K.67.7l);if(!K.8G){N a=K.67.8x;K.67.8x=1b;K.67.cw(c);K.67.8x=a}V{K.qo(c)}K.iX(b)}},2Z:Q(a){K.8G||K.67.2Z(a);K.71.2Z(a);O.1y.1g.2Z.1j(K,1s)},1p:"O.1y.98"});O.1y.98.qn=1;O.1y.98.qm=2;O.1y.98.w9=4;O.1y.98.F4=8;O.1y.qk=O.1A(O.1y,{3G:P,5j:P,1Q:P,5S:P,gT:Q(b){b=b||1W.gU.88;N c=O.1c.gT(b);N a=b.2N("#");if(a>0){b="?"+b.bv(a+1,b.1a);O.1c.1M(c,O.1c.gT(b))}R c},2Z:Q(e){O.1y.1g.2Z.1j(K,1s);1f(N c=0,a=K.U.3Z.1a;c<a;c++){N d=K.U.3Z[c];if((d!==K)&&(d.1p==="O.1y.qk")){if(d.5S!==K.5S){K.5S=d.5S}1D}}if(c===K.U.3Z.1a){N b=K.gT();if(b.1Q){K.1Q=b.1Q;K.U.1n.4Q("f4",K,K.ql);K.ql()}if(b.1S&&b.1P){K.3G=S O.3k(3r(b.1P),3r(b.1S));if(b.5j){K.5j=3r(b.5j)}K.U.1n.4Q("97",K,K.6g);K.6g()}}},6g:Q(){if(K.U.2a){K.U.1n.6H("97",K,K.6g);if(K.5S){K.3G.3N(K.5S,K.U.5X())}K.U.6g(K.3G,K.5j)}},ql:Q(){if(K.1Q.1a===K.U.1Q.1a){K.U.1n.6H("f4",K,K.ql);1f(N d=0,a=K.1Q.1a;d<a;d++){N b=K.U.1Q[d];N e=K.1Q.ef(d);if(e==="B"){K.U.f6(b)}V{if((e==="T")||(e==="F")){b.f5(e==="T")}}}}},1m:Q(){K.3G=P;K.5j=P;K.1Q=P;K.5S=P},1p:"O.1y.qk"});O.1y.w7=O.1A(O.1y,{w8:O.1y.qk,2o:P,3b:1b,gS:"",5S:P,1o:Q(b,c,a){if(b!==P&&2v b==="6z"&&!O.1c.S2(b)){a=b;K.gS=1O.gU.88;O.1y.1g.1o.1j(K,[a]);if(K.2o!==P){K.2o=O.1c.6t(K.2o)}}V{O.1y.1g.1o.1j(K,[a]);K.2o=O.1c.6t(b);K.gS=c||1O.gU.88}},1m:Q(){if(K.2o&&K.2o.2Y===K.1q){K.1q.2U(K.2o);K.2o=P}if(K.U){K.U.1n.6H("6V",K,K.iW)}O.1y.1g.1m.1j(K,1s)},2Z:Q(d){O.1y.1g.2Z.1j(K,1s);1f(N b=0,a=K.U.3Z.1a;b<a;b++){N c=K.U.3Z[b];if(c.1p===K.w8.1p){if(c.5S!==K.5S){K.5S=c.5S}1D}}if(b===K.U.3Z.1a){K.U.kL(S K.w8({5S:K.5S}))}},2H:Q(){O.1y.1g.2H.1j(K,1s);if(!K.2o&&!K.3b){K.2o=1O.2G("a");K.2o.6k=O.a4("w7");K.2o.88="";K.1q.1X(K.2o)}K.U.1n.on({6V:K.iW,7w:K.iW,97:K.iW,2y:K});K.iW();R K.1q},iW:Q(){N b=K.3b?"#":"?";N a=K.gS;if(a.2N(b)!==-1){a=a.bv(0,a.2N(b))}a+=b+O.1c.gV(K.F3());if(K.3b&&!K.2o){1W.gU.88=a}V{K.2o.88=a}},F3:Q(a,k,e){a=a||K.U.b9();N d=O.1c.gT(K.gS);if(a){d.5j=k||K.U.4I();N j=a.1S;N b=a.1P;if(K.5S){N c=O.3h.3N({x:b,y:j},K.U.5X(),K.5S);b=c.x;j=c.y}d.1S=1k.2s(j*hU)/hU;d.1P=1k.2s(b*hU)/hU;e=e||K.U.1Q;d.1Q="";1f(N f=0,h=e.1a;f<h;f++){N g=e[f];if(g.5y){d.1Q+=(g===K.U.2a)?"B":"0"}V{d.1Q+=(g.dn())?"T":"F"}}}R d},1p:"O.1y.w7"});O.1y.w6=O.1A(O.1y,{qj:", ",F2:"${1Q}",1m:Q(){K.U.1n.un({dR:K.9K,f4:K.9K,7w:K.9K,97:K.9K,2y:K});O.1y.1g.1m.1j(K,1s)},2H:Q(){O.1y.1g.2H.1j(K,1s);K.U.1n.on({97:K.9K,7w:K.9K,f4:K.9K,dR:K.9K,2y:K});K.9K();R K.1q},9K:Q(){N d=[];if(K.U&&K.U.1Q){1f(N c=0,a=K.U.1Q.1a;c<a;c++){N b=K.U.1Q[c];if(b.9J&&b.dn()){if(O.1c.2N(d,b.9J)===-1){d.1u(b.9J)}}}K.1q.6k=O.5t.5d(K.F2,{1Q:d.6d(K.qj)})}},1p:"O.1y.w6"});O.1y.EK=O.1A(O.1y,{8a:P,iQ:P,1i:P,gQ:50,lN:29,iT:32,9I:P,lM:7,w4:P,6Z:20,6K:18,iS:[],lL:[],gN:1b,94:1d,iP:P,gP:S1,iR:P,qe:P,1o:Q(a){K.gR=S O.2C(lO,60);O.1y.1g.1o.1j(K,1s)},1m:Q(){N a=K;K.8a=P;K.iQ=P;K.1i=P;K.gQ=P;K.lN=P;K.iT=P;K.9I=P;K.lM=P;K.6Z=P;K.w4=P;K.iS=P;K.lL=P;K.gN=P;if(K.94){K.iP.un({4g:a.w1,4y:a.w0,4x:a.vZ});K.w2.un({4y:a.5R,4x:a.5R})}K.94=P;K.iP=P;K.gP=P;K.iR=P;K.qe=P;O.1y.1g.1m.1j(K,1s)},g5:Q(a){K.gN=1b;K.1i=a;a.iV=K;a.w5()},F1:Q(){N c=K;if(c.1i&&c.1i.aH){N a=c.1i.aH.bz;N b=a.1a;if(b>0){c.iR=c.gP/a.1a;c.gN=1d}}},2H:Q(){N f=O.1y.1g.2H.1j(K,1s),a=K.qh(f),c=a.EZ,b=a.EY,e=a.EX;if(!K.qi){N d=Q(g){R Q(h){g.qd(h)}}(K);O.1J.3q(c,"4g",O.2z.5e(d,c));O.1J.3q(e,"4g",O.2z.5e(d,c));K.qi=1d}K.vW=c;K.F0=b;K.vX=e;R f},qh:Q(f){N d=K.vW,c=K.F0,g=K.vX,a=K.8a,e;if(!a){a=K.ao(f,"1q",P,K.gR.y,K.gR.x);K.8a=a}if(!d){d=K.iU(a,"dQ-cT-S0.2V",0);O.2I.5b(d,"iN")}if(!c){c=K.EW(a)}if(!g){g=K.iU(a,"dQ-cT-3t.2V",1);O.2I.5b(g,"iN")}R{EZ:d,EY:c,EX:g}},iU:Q(g,a,d){N e=K,c,b,h,f;if(d===1){c=e.94?(e.gP+e.6K):e.gQ;f=e.iT+c}h=O.1c.4X()+a;b=e.ao(g,"1q","3i",P,f,e.lN,e.iT,P,h,"4u");R b},EW:Q(d){N f,a,e,b=K;a=b.94?(b.gP+b.6K):b.gQ;e=O.1c.4X()+"dQ-cT-3G.2V";f=b.ao(d,"1q","3i",P,b.iT,b.lN,a,P,e,P);if(b.94){b.EV(f);b.ET(f)}V{b.EU(f)}R f},EV:Q(b){N e,f,i,g=1O,h=K,j,a,c;c=h.lN/2;j=c-h.lM/2;a=O.1c.4X()+"dQ-cT-RZ.2V";e=h.ao(b,"1q","3i",j,h.6K/2,h.lM,h.gP,P,a,"4u");O.1J.3q(e,"4g",O.2z.5e(h.EQ,h));a=O.1c.4X()+"dQ-cT-RY.2V";f=h.ao(e,"1q","3i",1,1,h.lM-1,P,P,a,"4u");h.9I=f;j=c-h.6Z/2;a=O.1c.4X()+"RX-cT-RW.2V";i=h.ao(b,"1q","3i",j,0,h.6Z,h.6K,P,a,"4u");h.w4=i;h.iS.1u(i);h.lL.1u(0);h.EP=h.gR.x+h.iT+h.6K/2;h.iP=S O.4o(h,i,P,1d);h.iP.on({4g:h.w1,4y:h.w0,4x:h.vZ});h.w2=S O.4o(h,g,P,1d);h.w2.on({4y:h.5R,4x:h.5R})},EU:Q(c){N a,e=1O,b;a=e.2G("1q");b=a.W;b.ES="RV";b.ga="3G";c.1X(a);K.iQ=a},ET:Q(f){N k,g,b,h,a,d,i,l=K,o;N r=8;N q=8;N j=26;N m=6;N c=3;N n=j+q;N e=2*m+l.gQ;i=-e/2+m;k=l.ao(f,"1q","3i",-n-c,i,n,e);k.W.2g="2L";l.qe=k;l.iS.1u(k);l.lL.1u(i);o=O.1c.4X()+"dQ-cT-RU.2V";h=l.ao(k,"1q","3i",7,P,j,m,P,o,"4u");o=O.1c.4X()+"dQ-cT-RT.2V";g=l.ao(k,"1q","3i",7,m,j,l.gQ,P,o,"4u");o=O.1c.4X()+"dQ-cT-RS.2V";i=m+l.gQ;a=l.ao(k,"1q","3i",7,i,j,m,P,o,"4u");i=e/2-r/2;o=O.1c.4X()+"dQ-cT-RR.2V";b=l.ao(k,"1q","3i",j+c,i,q,r,P,o,"4u");d=l.ao(g,"1q",P,P,P,P,P,P,P,"4u");d.W.ES="ER";d.W.ga="3G";O.2I.5b(d,"RQ");l.iQ=d},ao:Q(f,j,g,k,c,n,b,a,m,l){N o,h,i=1O;if(f){h=i.2G(j);o=h.W;if(g){o.2x=g}if(k){o.1t=k+"px"}if(c){o.1r=c+"px"}if(n){o.1E=n+"px"}if(b){o.1B=b+"px"}if(a){o.qg=a}if(m){o.qg="1z("+m+")"}if(l){o.3I=l}f.1X(h);R h}R P},EQ:Q(a){if(!O.1J.b7(a)){R}N b=K;if(b.gN){b.vY=1d;b.3j=a.g9;b.lJ(a.g9)}O.1J.2Q(a)},lJ:Q(c){N b=K;b.9I.W.1B=c+"px";1f(N a=0;a<b.iS.1a;a++){b.iS[a].W.1r=c+b.lL[a]+"px"}},w1:Q(a){if(!O.1J.b7(a)){R}if(K.gN){K.qf=1d}O.1J.2Q(a)},w0:Q(a){if(K.qf){N b=K;b.3j=a.b8-b.EP;if(b.3j>=0&&b.3j<=b.gP){b.lJ(b.3j)}}O.1J.2Q(a)},vZ:Q(a){if(!O.1J.b7(a)){R}N b=K;if(b.qf){b.qf=1b;b.qb(0)}V{if(b.vY){b.vY=1b;b.qb(0)}}O.1J.2Q(a)},qb:Q(b){N c=K,a;if(b===0){a=1k.2s(c.3j/c.iR);if(a>=1&&a<=c.1i.aH.bz.1a-1){a-=1}V{if(a<0){a=0}V{if(a>c.1i.aH.bz.1a-1){a=c.1i.aH.bz.1a-1}}}c.1i.9C=a;c.1i.lK();if(c.1i.9C===c.1i.gO){c.lJ((a+1)*c.iR)}}if(b===1){a=c.1i.gO;if(c.1i.9C===a){c.lJ((a+1)*c.iR)}}if(c.gN){c.qe.W.2g="iE"}},EL:Q(a){K.1i.iQ=K;N b=a.qc;if(b===K.vX){K.1i.EO()}V{if(b===K.vW){K.1i.EN()}}O.1J.2Q(a)},EM:Q(a){if(a&&a!==P){K.iQ.6k=a}},qd:Q(a){N d=O.1J.2o(a);if(d&&(O.1J.b7(a)||!~a.2A.2N("vV"))){N c=K.q9(d);if(c){N b={qc:c};K.EL(b);K.qb(1)}}},5R:Q(a){if(K.94){K.iP.qa(a)}},q9:Q(b){N c=3,a;do{if(O.2I.iO(b,"iN")){a=b;1D}b=b.2Y}4U(--c>0&&b);R a},1p:"O.1y.EK"});O.1y.kH=O.1A(O.1y,{oH:P,oF:P,cs:1b,9s:1d,8x:1b,i8:1b,cv:1b,i5:1b,5n:1b,g7:Q(){},dp:Q(){},g6:Q(){},2y:P,6j:P,1i:P,1Q:P,3H:P,oD:P,7l:"7k",1Y:P,1o:Q(c,a){O.1y.1g.1o.1j(K,[a]);if(K.2y===P){K.2y=K}K.ey(c);N b={2X:K.cw,9s:K.i6,6B:K.dq,4n:K.eC};K.3H=O.1c.1M(b,K.3H);K.1Y={1H:S O.1Z.3o(K,K.1i,K.3H,{6j:K.6j,7m:1b})};if(K.5n){K.1Y.5n=S O.1Z.kJ(K,{7j:K.oB},{oI:"Ch"})}},ey:Q(a){if(O.1c.4k(a)){K.1Q=a;K.1i=S O.1C.31.kI(K.id+"Cg",{1Q:a})}V{K.1i=a}},1m:Q(){if(K.3O&&K.1Q){K.U.bG(K.1i)}O.1y.1g.1m.1j(K,1s);if(K.1Q){K.1i.1m()}},2r:Q(){if(!K.3O){if(K.1Q){K.U.g8(K.1i)}K.1Y.1H.2r();if(K.5n&&K.1Y.5n){K.1Y.5n.2r()}}R O.1y.1g.2r.1j(K,1s)},2h:Q(){if(K.3O){K.1Y.1H.2h();if(K.1Y.5n){K.1Y.5n.2h()}if(K.1Q){K.U.bG(K.1i)}}R O.1y.1g.2h.1j(K,1s)},aL:Q(b){N f=K.1Q||[K.1i];N e,d;1f(N a=0;a<f.1a;++a){e=f[a];1f(N c=e.6i.1a-1;c>=0;--c){d=e.6i[c];if(!b||b.i7!==d){K.bF(d)}}}},cw:Q(b,a){if(!K.cv){N c=(O.1c.2N(b.1i.6i,b)>-1);if(c){if(K.oG()){K.bF(b)}V{if(!K.ez()){K.aL({i7:b});if(K.i8){K.dp.47(K.2y,b,a)}}}}V{if(!K.ez()){K.aL({i7:b})}K.7k(b,a)}}},ez:Q(){R K.cs||(K.1Y.1H.7i&&K.1Y.1H.7i[K.oH])},oG:Q(){R K.8x||(K.1Y.1H.7i&&K.1Y.1H.7i[K.oF])},i6:Q(a){if(!K.cv&&K.9s){K.aL()}},dq:Q(c,a){N b=c.1i;if(K.cv){if(K.i5){K.eA(c)}V{if(O.1c.2N(b.6i,c)===-1){K.7k(c,a)}}}V{K.1i.U.6A.W.3I="4u"}},eC:Q(a){if(K.cv){if(K.i5){if(a.aN===K.id){if(a.7G&&a.7G!==K.id){2t a.aN;N b=K.U.oE(a.7G);if(b){b.eA(a)}}V{K.i3(a)}}}V{K.bF(a)}}V{K.1i.U.6A.W.3I=""}},eA:Q(c){N b=c.1i;if(b 1V O.1C.oC){R}N a=K.1n.1L("Cf",{1H:c});if(a!==1b){c.7G=c.aN;c.aN=K.id;N d=c.cu=O.1c.eB(K.oD);c.7l=K.7l;if(d&&!d.4p){if(c.W&&c.W.4p){d.4p=c.W.4p}}b.3Q(c,d,{i4:1d});K.1n.1L("Ce",{1H:c})}},i3:Q(b){N a=b.1i;if(a 1V O.1C.oC){R}if(b.7G==2b){2t b.aN}V{if(b.7G===K.id){2t b.7G}V{b.aN=b.7G;2t b.7G}}if(b.cu||b.cu==P){2t b.cu}b.7l="4m";a.3Q(b,b.W||b.1i.W||"4m",{i4:1d});K.1n.1L("Cd",{1H:b})},7k:Q(d,b){N a=K.g7.47(K.2y,d);N c=d.1i;if(P===c){R}if(a!==1b){a=c.1n.1L("tW",{1H:d});if(a!==1b){c.6i.1u(d);K.eA(d);if(!K.1Y.1H.7F){K.1Y.1H.7F=c.6i[0]}c.1n.1L("tV",{1H:d,7i:b});K.dp.47(K.2y,d,b)}}},bF:Q(b){N a=b.1i;K.i3(b);O.1c.aM(a.6i,b);a.1n.1L("tU",{1H:b});K.g6.47(K.2y,b)},oB:Q(e){if(e 1V O.1U){N h=K.U.6Q({x:e.1r,y:e.1N});N k=K.U.6Q({x:e.1I,y:e.1t});N a=S O.1U(h.1P,h.1S,k.1P,k.1S);if(!K.ez()){K.aL()}N j=K.cs;K.cs=1d;N d=K.1Q||[K.1i];N f;1f(N b=0;b<d.1a;++b){f=d[b];1f(N c=0,g=f.2n.1a;c<g;++c){N m=f.2n[c];if(!m.dn()){5K}if(K.6j==P||O.1c.2N(K.6j,m.1v.1p)>-1){if(a.fX().6P(m.1v)){if(O.1c.2N(f.6i,m)===-1){K.7k(m)}}}}}K.cs=j}},2Z:Q(a){K.1Y.1H.2Z(a);if(K.5n){K.1Y.5n.2Z(a)}O.1y.1g.2Z.1j(K,1s)},g5:Q(b){N a=K.3O;K.aL();K.2h();if(K.1Q){K.1i.1m();K.1Q=P}K.ey(b);K.1Y.1H.1i=K.1i;if(a){K.2r()}},1p:"O.1y.kH"});O.1y.EE=O.1A(O.1y,{9s:1d,8x:1b,i8:1b,g7:Q(){},dp:Q(){},g6:Q(){},2y:P,6j:P,1i:P,1Q:P,3H:P,7l:"7k",1Y:P,1o:Q(b,a){O.1y.1g.1o.1j(K,[a]);if(K.2y===P){K.2y=K}if(b){K.1i=b}N c={2X:K.7k,9s:K.bF,6B:K.EJ,4n:K.EI};K.3H=O.1c.1M(c,K.3H);K.1Y={4N:S O.1Z.dE(K,K.1i,K.3H,{7m:1b})}},1m:Q(){if(K.3O&&K.1Q){K.U.bG(K.1i)}O.1y.1g.1m.1j(K,1s);if(K.1Q){K.1i.1m()}},2r:Q(){if(!K.3O){if(K.1Q){K.U.g8(K.1i)}K.1Y.4N.2r();if(K.5n&&K.1Y.5n){K.1Y.5n.2r()}}R O.1y.1g.2r.1j(K,1s)},2h:Q(){if(K.3O){K.1Y.4N.2h();if(K.1Y.5n){K.1Y.5n.2h()}if(K.1Q){K.U.bG(K.1i)}}R O.1y.1g.2h.1j(K,1s)},EJ:Q(){if(K.1i.U){K.1i.U.6A.W.3I="4u"}},EI:Q(){if(K.1i.U){K.1i.U.6A.W.3I=""}},7k:Q(d,b){N a=K.g7.47(K.2y,d);N c=K.1i;if(a!==1b){a=c.1n.1L("EH",{4N:d});if(a!==1b){c.cS.1u(d);if(!K.1Y.4N.am){K.1Y.4N.am=c.cS[0]}c.1n.1L("EG",{4N:d,7i:b});K.dp.47(K.2y,d,b)}}},bF:Q(b){N a=K.1i;O.1c.aM(a.cS,b);a.1n.1L("EF",{4N:b});K.g6.47(K.2y,b)},2Z:Q(a){K.1Y.4N.2Z(a);if(K.5n){K.1Y.5n.2Z(a)}O.1y.1g.2Z.1j(K,1s)},1p:"O.1y.EE"});O.1h=O.1A({id:P,dP:P,2k:P,tF:P,1o:Q(){K.id=O.1c.7L(K.1p+"49")},1m:Q(){K.id=P;K.2k=P;K.tF=P},1R:Q(){R S O.1h()},vT:Q(a){if(a){K.2k=a.1R()}},al:Q(){K.2k=P;if(K.dP){K.dP.al()}},RP:Q(b){N a=K.5s();if(!a){K.vT(b)}V{K.2k.1M(b)}},5s:Q(){if(K.2k==P){K.a9()}R K.2k},a9:Q(){},7d:Q(b,a){},4R:Q(a){},nw:Q(e,h,f){N c=1b;N d=K.5s();if((d!=P)&&(e!=P)){N b=(h!=P)?h:0;N a=(f!=P)?f:0;N g=S O.1U(K.2k.1r-b,K.2k.1N-a,K.2k.1I+b,K.2k.1t+a);c=g.f3(e)}R c},ew:Q(){R 0},8u:Q(){R 0},9u:Q(){R P},7A:Q(){N a;if(O.iM&&O.iM.q8){a=O.iM.q8.1g.RO(S O.3o.31(K))}V{a=6O.1g.7A.47(K)}R a},1p:"O.1h"});O.1h.vU=Q(f){N d;if(O.iM&&O.iM.q8){N g=O.1h.vU.5d;if(!g){g=S O.iM.q8();O.1h.vU.5d=g}N b=g.uk(f);if(b 1V O.3o.31){d=b.1v}V{if(O.1c.4k(b)){N a=b.1a;N e=S 3T(a);1f(N c=0;c<a;++c){e[c]=b[c].1v}d=S O.1h.5P(e)}}}R d};O.1h.q6=Q(a,H,b){N s=b&&b.3m;N z=b&&b.vP;N f=1b;N B=a.x1-H.x1;N F=a.y1-H.y1;N o=a.x2-a.x1;N w=a.y2-a.y1;N t=H.y2-H.y1;N l=H.x2-H.x1;N D=(t*o)-(l*w);N e=(l*F)-(t*B);N c=(o*F)-(w*B);if(D==0){if(e==0&&c==0){f=1d}}V{N E=e/D;N C=c/D;if(E>=0&&E<=1&&C>=0&&C<=1){if(!s){f=1d}V{N h=a.x1+(E*o);N g=a.y1+(E*w);f=S O.1h.1F(h,g)}}}if(z){N r;if(f){if(s){N n=[a,H];N A,h,g;cR:1f(N v=0;v<2;++v){A=n[v];1f(N u=1;u<3;++u){h=A["x"+u];g=A["y"+u];r=1k.5A(1k.2W(h-f.x,2)+1k.2W(g-f.y,2));if(r<z){f.x=h;f.y=g;1D cR}}}}}V{N n=[a,H];N q,G,h,g,m,k;cR:1f(N v=0;v<2;++v){q=n[v];G=n[(v+1)%2];1f(N u=1;u<3;++u){m={x:q["x"+u],y:q["y"+u]};k=O.1h.q5(m,G);if(k.3K<z){if(s){f=S O.1h.1F(m.x,m.y)}V{f=1d}1D cR}}}}}R f};O.1h.q5=Q(k,d){N c=k.x;N j=k.y;N b=d.x1;N i=d.y1;N a=d.x2;N f=d.y2;N m=a-b;N l=f-i;N h=((m*(c-b))+(l*(j-i)))/(1k.2W(m,2)+1k.2W(l,2));N g,e;if(h<=0){g=b;e=i}V{if(h>=1){g=a;e=f}V{g=b+h*m;e=i+h*l}}R{3K:1k.5A(1k.2W(g-c,2)+1k.2W(e-j,2)),x:g,y:e}};O.1h.5P=O.1A(O.1h,{1x:P,dN:P,1o:Q(a){O.1h.1g.1o.1j(K,1s);K.1x=[];if(a!=P){K.ED(a)}},1m:Q(){K.1x.1a=0;K.1x=P;O.1h.1g.1m.1j(K,1s)},1R:Q(){N 1v=ot("S "+K.1p+"()");1f(N i=0,os=K.1x.1a;i<os;i++){1v.89(K.1x[i].1R())}O.1c.4D(1v,K);R 1v},lz:Q(){N b=[];1f(N c=0,a=K.1x.1a;c<a;c++){b.1u(K.1x[c].vS())}R b.6d(",")},a9:Q(){K.2k=P;N d=S O.1U();N c=K.1x;if(c){1f(N b=0,a=c.1a;b<a;b++){d.1M(c[b].5s())}}if(d.1r!=P&&d.1N!=P&&d.1I!=P&&d.1t!=P){K.vT(d)}},ED:Q(c){if(!(O.1c.4k(c))){c=[c]}1f(N b=0,a=c.1a;b<a;b++){K.89(c[b])}},89:Q(b,a){N d=1b;if(b){if(K.dN==P||(O.1c.2N(K.dN,b.1p)>-1)){if(a!=P&&(a<K.1x.1a)){N e=K.1x.a3(0,a);N c=K.1x.a3(a,K.1x.1a);e.1u(b);K.1x=e.7E(c)}V{K.1x.1u(b)}b.dP=K;K.al();d=1d}}R d},RN:Q(b){N c=1b;if(!(O.1c.4k(b))){b=[b]}1f(N a=b.1a-1;a>=0;--a){c=K.ak(b[a])||c}R c},ak:Q(a){O.1c.aM(K.1x,a);K.al();R 1d},ew:Q(){N c=0;1f(N b=0,a=K.1x.1a;b<a;b++){c+=K.1x[b].ew()}R c},8u:Q(){N c=0;1f(N b=0,a=K.1x.1a;b<a;b++){c+=K.1x[b].8u()}R c},g1:Q(b){N d=0;1f(N c=0,a=K.1x.1a;c<a;c++){d+=K.1x[c].g1(b)}R d},9u:Q(g){if(!g){R K.1x.1a&&K.1x[0].9u()}N l=K.1x.1a;if(!l){R 1b}N b=[];N c=[];N d=0;N h=6c.lq;N m;1f(N k=0;k<l;++k){m=K.1x[k];N e=m.8u();N f=m.9u(1d);if(2w(e)||2w(f.x)||2w(f.y)){5K}b.1u(e);d+=e;h=(e<h&&e>0)?e:h;c.1u(f)}l=b.1a;if(d===0){1f(N k=0;k<l;++k){b[k]=1}d=b.1a}V{1f(N k=0;k<l;++k){b[k]/=h}d/=h}N j=0,a=0,f,e;1f(N k=0;k<l;++k){f=c[k];e=b[k];j+=f.x*e;a+=f.y*e}R S O.1h.1F(j/d,a/d)},oy:Q(b){N d=0;1f(N c=0,a=K.1x.1a;c<a;c++){d+=K.1x[c].oy(b)}R d},3B:Q(b,d){1f(N c=0,a=K.1x.1a;c<a;c++){K.1x[c].3B(b,d)}},5g:Q(d,b){1f(N c=0,a=K.1x.1a;c<a;++c){K.1x[c].5g(d,b)}},7Q:Q(d,a,c){1f(N b=0;b<K.1x.1a;++b){K.1x[b].7Q(d,a,c)}R K},7d:Q(h,j){N c=!(j&&j.lF===1b);N a=c&&j&&j.nu;N k,d,b;N e=6c.q7;1f(N f=0,g=K.1x.1a;f<g;++f){k=K.1x[f].7d(h,j);b=a?k.3K:k;if(b<e){e=b;d=k;if(e==0){1D}}}R d},3A:Q(d){N b=1d;if(!d||!d.1p||(K.1p!==d.1p)){b=1b}V{if(!(O.1c.4k(d.1x))||(d.1x.1a!==K.1x.1a)){b=1b}V{1f(N c=0,a=K.1x.1a;c<a;++c){if(!K.1x[c].3A(d.1x[c])){b=1b;1D}}}}R b},3N:Q(e,c){if(e&&c){1f(N d=0,a=K.1x.1a;d<a;d++){N b=K.1x[d];b.3N(e,c)}K.2k=P}R K},6P:Q(d){N b=1b;1f(N c=0,a=K.1x.1a;c<a;++c){b=d.6P(K.1x[c]);if(b){1D}}R b},4R:Q(b){N c=[];1f(N d=0,a=K.1x.1a;d<a;++d){3T.1g.1u.1j(c,K.1x[d].4R(b))}R c},1p:"O.1h.5P"});O.1h.1F=O.1A(O.1h,{x:P,y:P,vR:P,2A:P,1o:Q(b,d,c,a){O.1h.1g.1o.1j(K,1s);K.x=3r(b);K.y=3r(d);if(a||a==0){K.vR=3r(a)}K.2A=c||"6J"},1R:Q(a){if(a==P){a=S O.1h.1F(K.x,K.y)}O.1c.4D(a,K);R a},a9:Q(){K.2k=S O.1U(K.x,K.y,K.x,K.y)},7d:Q(f,j){N d=!(j&&j.lF===1b);N a=d&&j&&j.nu;N b,e,h,c,g,i;if(f 1V O.1h.1F){e=K.x;h=K.y;c=f.x;g=f.y;b=1k.5A(1k.2W(e-c,2)+1k.2W(h-g,2));i=!a?b:{x0:e,y0:h,x1:c,y1:g,3K:b}}V{i=f.7d(K,j);if(a){i={x0:i.x1,y0:i.y1,x1:i.x0,y1:i.y0,3K:i.3K}}}R i},3A:Q(a){N b=1b;if(a!=P){b=((K.x===a.x&&K.y===a.y)||(2w(K.x)&&2w(K.y)&&2w(a.x)&&2w(a.y)))}R b},vS:Q(){R(K.x+", "+K.y)},3B:Q(a,b){K.x=K.x+a;K.y=K.y+b;K.al()},5g:Q(d,b){d*=1k.PI/2R;N a=K.7d(b);N c=d+1k.lI(K.y-b.y,K.x-b.x);K.x=b.x+(a*1k.8T(c));K.y=b.y+(a*1k.7Z(c));K.al()},9u:Q(){R S O.1h.1F(K.x,K.y)},7Q:Q(c,a,b){b=(b==2b)?1:b;K.x=a.x+(c*b*(K.x-a.x));K.y=a.y+(c*(K.y-a.y));K.al();R K},6P:Q(b){N a=1b;if(b.1p==="O.1h.1F"){a=K.3A(b)}V{a=b.6P(K)}R a},3N:Q(b,a){if((b&&a)){O.3h.3N(K,b,a);K.2k=P}R K},1m:Q(){K.x=P;K.y=P;K.vR=P;O.1h.1g.1m.1j(K,1s)},4R:Q(a){R[K]},1p:"O.1h.1F"});O.1h.8J=O.1A(O.1h.5P,{dN:["O.1h.1F"],1o:Q(a){O.1h.5P.1g.1o.1j(K,1s)},iL:Q(a,b){K.89(a,b)},iK:Q(a){K.ak(a)},1p:"O.1h.8J"});O.1h.dM=O.1A(O.1h.8J,{dN:["O.1h.1F","O.1l.An"],1o:Q(a){O.1h.8J.1g.1o.1j(K,1s)},ew:Q(){N c=0;if(K.1x&&(K.1x.1a>1)){1f(N b=1,a=K.1x.1a;b<a;b++){c+=K.1x[b-1].7d(K.1x[b])}}R c},oy:Q(b){N e=K;if(b){N c=S O.3h("4t:9r");if(!c.3A(b)){e=K.1R().3N(b,c)}}N f=0;if(e.1x&&(e.1x.1a>1)){N h,g;1f(N d=1,a=e.1x.1a;d<a;d++){h=e.1x[d-1];g=e.1x[d];f+=O.1c.vQ({1P:h.x,1S:h.y},{1P:g.x,1S:g.y})}}R f*gM},1p:"O.1h.dM"});O.1h.2p=O.1A(O.1h.dM,{1o:Q(a){O.1h.dM.1g.1o.1j(K,1s)},ak:Q(a){N b=K.1x&&(K.1x.1a>2);if(b){O.1h.5P.1g.ak.1j(K,1s)}R b},6P:Q(m){N c=1b;N l=m.1p;if(l==="O.1h.2p"||l==="O.1h.4C"||l==="O.1h.1F"){N p=K.iJ();N n;if(l==="O.1h.1F"){n=[{x1:m.x,y1:m.y,x2:m.x,y2:m.y}]}V{n=m.iJ()}N s,g,e,a,r,q,d,b;cR:1f(N h=0,k=p.1a;h<k;++h){s=p[h];g=s.x1;e=s.x2;a=s.y1;r=s.y2;RM:1f(N f=0,o=n.1a;f<o;++f){q=n[f];if(q.x1>e){1D}if(q.x2<g){5K}d=q.y1;b=q.y2;if(1k.4q(d,b)>1k.3l(a,r)){5K}if(1k.3l(d,b)<1k.4q(a,r)){5K}if(O.1h.q6(s,q)){c=1d;1D cR}}}}V{c=m.6P(K)}R c},iJ:Q(){N a=K.1x.1a-1;N b=S 3T(a),e,d;1f(N c=0;c<a;++c){e=K.1x[c];d=K.1x[c+1];if(e.x<d.x){b[c]={x1:e.x,y1:e.y,x2:d.x,y2:d.y}}V{b[c]={x1:d.x,y1:d.y,x2:e.x,y2:e.y}}}Q f(h,g){R h.x1-g.x1}R b.93(f)},EC:Q(r,b){N c=!(b&&b.lF===1b);N o=b&&b.vP;N a=[];N t=K.4R();N n=[];N v=[];N h=1b;N e,d,l;N j,q,u;N f={3m:1d,vP:o};N g=P;1f(N m=0,k=t.1a-2;m<=k;++m){e=t[m];n.1u(e.1R());d=t[m+1];u={x1:e.x,y1:e.y,x2:d.x,y2:d.y};l=O.1h.q6(r,u,f);if(l 1V O.1h.1F){if((l.x===r.x1&&l.y===r.y1)||(l.x===r.x2&&l.y===r.y2)||l.3A(e)||l.3A(d)){q=1d}V{q=1b}if(q||c){if(!l.3A(v[v.1a-1])){v.1u(l.1R())}if(m===0){if(l.3A(e)){5K}}if(l.3A(d)){5K}h=1d;if(!l.3A(e)){n.1u(l)}a.1u(S O.1h.2p(n));n=[l.1R()]}}}if(h){n.1u(d.1R());a.1u(S O.1h.2p(n))}if(v.1a>0){N p=r.x1<r.x2?1:-1;N s=r.y1<r.y2?1:-1;g={EB:a,5I:v.93(Q(w,i){R(p*w.x-p*i.x)||(s*w.y-s*i.y)})}}R g},4B:Q(x,b){N n=P;N d=b&&b.vG;N l,e,m,c;if(x 1V O.1h.2p){N w=K.4R();N g,f,v,h,a,p;N s=[];m=[];1f(N t=0,o=w.1a-2;t<=o;++t){g=w[t];f=w[t+1];v={x1:g.x,y1:g.y,x2:f.x,y2:f.y};c=c||[x];if(d){s.1u(g.1R())}1f(N r=0;r<c.1a;++r){h=c[r].EC(v,b);if(h){a=h.EB;if(a.1a>0){a.iI(r,1);3T.1g.6f.1j(c,a);r+=a.1a-2}if(d){1f(N q=0,u=h.5I.1a;q<u;++q){p=h.5I[q];if(!p.3A(g)){s.1u(p);m.1u(S O.1h.2p(s));if(p.3A(f)){s=[]}V{s=[p.1R()]}}}}}}}if(d&&m.1a>0&&s.1a>0){s.1u(f.1R());m.1u(S O.1h.2p(s))}}V{n=x.vH(K,b)}if(c&&c.1a>1){e=1d}V{c=[]}if(m&&m.1a>1){l=1d}V{m=[]}if(e||l){if(d){n=[m,c]}V{n=c}}R n},vH:Q(b,a){R b.4B(K,a)},4R:Q(a){N b;if(a===1d){b=[K.1x[0],K.1x[K.1x.1a-1]]}V{if(a===1b){b=K.1x.a3(1,K.1x.1a-1)}V{b=K.1x.a3()}}R b},7d:Q(h,g){N k=!(g&&g.lF===1b);N B=k&&g&&g.nu;N q,e={};N t=6c.q7;if(h 1V O.1h.1F){N r=K.iJ();N p=h.x;N o=h.y;N z;1f(N v=0,w=r.1a;v<w;++v){z=r[v];q=O.1h.q5(h,z);if(q.3K<t){t=q.3K;e=q;if(t===0){1D}}V{if(z.x2>p&&((o>z.y1&&o<z.y2)||(o<z.y1&&o>z.y2))){1D}}}if(B){e={3K:e.3K,x0:e.x,y0:e.y,x1:p,y1:o}}V{e=e.3K}}V{if(h 1V O.1h.2p){N d=K.iJ();N c=h.iJ();N b,a,n,A,f;N m=c.1a;N l={3m:1d};cR:1f(N v=0,w=d.1a;v<w;++v){b=d[v];A=b.x1;f=b.y1;1f(N u=0;u<m;++u){a=c[u];n=O.1h.q6(b,a,l);if(n){t=0;e={3K:0,x0:n.x,y0:n.y,x1:n.x,y1:n.y};1D cR}V{q=O.1h.q5({x:A,y:f},a);if(q.3K<t){t=q.3K;e={3K:t,x0:A,y0:f,x1:q.x,y1:q.y}}}}}if(!B){e=e.3K}if(t!==0){if(b){q=h.7d(S O.1h.1F(b.x2,b.y2),g);N s=B?q.3K:q;if(s<t){if(B){e={3K:t,x0:q.x1,y0:q.y1,x1:q.x0,y1:q.y0}}V{e=s}}}}}V{e=h.7d(K,g);if(B){e={3K:e.3K,x0:e.x1,y0:e.y1,x1:e.x0,y1:e.y0}}}}R e},RL:Q(h){if(K&&K!==P){N j=K.4R();if(j.1a<3){R K}N d=Q(l,k){R(l-k)};N f=0;N i=j.1a-1;N e=[];N b=Q(o,n,l){N p=1k.3C(0.5*(o.x*n.y+n.x*l.y+l.x*o.y-n.x*o.y-l.x*n.y-o.x*l.y));N m=1k.5A(1k.2W(o.x-n.x,2)+1k.2W(o.y-n.y,2));N k=p/m*2;R k};N c=Q(n,q,o,k){N p=0;N m=0;1f(N l=q,r;l<o;l++){r=b(n[q],n[o],n[l]);if(r>p){p=r;m=l}}if(p>k&&m!==q){e.1u(m);c(n,q,m,k);c(n,m,o,k)}};e.1u(f);e.1u(i);4U(j[f].3A(j[i])){i--;e.1u(i)}c(j,f,i,h);N a=[];e.93(d);1f(N g=0;g<e.1a;g++){a.1u(j[e[g]])}R S O.1h.2p(a)}V{R K}},1p:"O.1h.2p"});O.1h.2p.RK=Q(B,c,x,A){N h="RJ";if(c!=2b){h=c}N k=10;if(x!=2b){k=x}N n={5W:h,RI:"RH",RG:k,RF:0};N z=[];1f(N C=0;C<B.1a;C++){z.1u([B[C].x,B[C].y])}N e=Q(p,i){R 1k.5A(1k.2W(p[0]-i[0],2)+1k.2W(p[1]-i[1],2))};N D=80;if(A!=2b){D=A}N y=[];N l,r,d,g,v,q,f,o,m,j,b,a;l=e(z[0],z[z.1a-1])/D;g=2;q=RE(z,n);1f(o=0,j=1/g;o<1;o+=j){b=[q(C+o),q(C+o+1/g)],f=b[0],d=b[1];v=e(f,d);r=l/v;1f(m=0,a=1/g;0<=a?m<a:m>a;m+=r){N w=q(C+o+m);y.1u(S O.1h.1F(w[0],w[1]))}}N w=q(C+1);y.1u(S O.1h.1F(w[0],w[1]));R S O.1h.2p(y)};O.1h.2p.RD=Q(m,f){if(m.1a<2){R P}N s=[];N h=10;if(f!=2b){h=f}N n,l,v,u,t,c,b,a;N q,p;c=1/h;N e=1k.5A((1k.2W(m[1].x-m[0].x,2)+1k.2W(m[1].y-m[0].y,2))/2);N o=S O.1h.1F(m[0].x-e,m[0].y-e);N r=[];r[0]=o;1f(n=0;n<m.1a-1;n++){N d=[];d[0]=m[n];N g=S O.1h.1F(m[n].x*2-r[n].x,m[n].y*2-r[n].y);d[1]=g;r[n+1]=g;d[2]=m[n+1];s.1u(d[0]);1f(l=0;l<=h;l++){b=l*c;a=b*b;v=(a-2*b+1)/2;u=(2*b-2*a+1)/2;t=a/2;q=v*d[0].x+u*d[1].x+t*d[2].x;p=v*d[0].y+u*d[1].y+t*d[2].y;s.1u(S O.1h.1F(q,p))}}s.1u(m[m.1a-1]);R S O.1h.2p(s)};O.1h.2p.RC=Q(o,h,a){if(a){R O.1h.2p.Ez(o,a)}N b=[];1f(N d=0;d<o.1a;d++){b[d]=o[d]}N g;N e;N f=0;N p;N l=b.1a;N c=[];N n=1d;4U(n){p=1d;1f(g=0;g<l-3;g+=3){if(vM(b,g)>h){p=1b;vN(b,g,c);b.6f(g+1,2);1f(e=0;e<5;e++){b.6f(g+1+e,0,c[e+1])}g-=3;l=b.1a}if(p){1D}}4U(f<l-1){if(b[f]===b[f+1]){b.6f(f+1,1);l--}f++}n=1b}R S O.1h.2p(b)};O.1h.2p.EA=Q(l,a){if(!a){a=20}N b=[];N d=0.vO;if(a>0){d=1/a}1f(N f=0;f<l.1a-2;){N c=l[f];N o=l[f+1];N k=l[f+2];b.1u(c);1f(N n=0;n<1;){N h=(1-n)*(1-n)*c.x+2*n*(1-n)*o.x+n*n*k.x;N g=(1-n)*(1-n)*c.y+2*n*(1-n)*o.y+n*n*k.y;N j=S O.1h.1F(h,g);b.1u(j);n+=d}f+=2;if(f>=l.1a){b.1u(c)}}N e=b[b.1a-1];N m=l[l.1a-1];if(!e.3A(m)){b.1u(m.1R())}R b};O.1h.2p.Ey=Q(n,a){if(!a){a=20}N b=[];N d=0.vO;if(a>0){d=1/a}1f(N f=0;f<n.1a-3;){N c=n[f];N h=n[f+1];N g=n[f+2];N m=n[f+3];b.1u(c);1f(N p=0;p<1;){N k=(1-p)*(1-p)*(1-p)*c.x+3*p*(1-p)*(1-p)*h.x+3*p*p*(1-p)*g.x+p*p*p*m.x;N j=(1-p)*(1-p)*(1-p)*c.y+3*p*(1-p)*(1-p)*h.y+3*p*p*(1-p)*g.y+p*p*p*m.y;N l=S O.1h.1F(k,j);b.1u(l);p+=d}f+=3;if(f>=n.1a){b.1u(c)}}N e=b[b.1a-1];N o=n[n.1a-1];if(!e.3A(o)){b.1u(o.1R())}R b};O.1h.2p.q2=Q(m,a){if(!a){a=m.1a*8}N c=[];N e=0.vO;if(a>0){e=1/a}1f(N p=0;p<=1;){N k=0;N j=0;N d=m.1a;1f(N g=0;g<m.1a;g++){N h=O.1h.2p.Ex(d-1,g,p);k+=m[g].x*h;j+=m[g].y*h}N l=S O.1h.1F(k,j);c.1u(l);p+=e}N f=c[c.1a-1];N o=m[m.1a-1];if(!f.3A(o)){c.1u(o.1R())}R c};O.1h.2p.RB=Q(b,a){N c=O.1h.2p.EA(b,a);R S O.1h.2p(c)};O.1h.2p.Ez=Q(b,a){N c=O.1h.2p.Ey(b,a);R S O.1h.2p(c)};O.1h.2p.RA=Q(l,g){N a=[];1f(N c=0;c<l.1a;c++){a[c]=l[c]}N f,d,e=0,n,h=a.1a;N b=[];4U(1d){n=1d;1f(f=0;f<h-3;f+=3){if(vM(a,f)>g){n=1b;vN(a,f,b);a.6f(f+1,2);1f(d=0;d<5;d++){a.6f(f+1+d,0,b[d+1])}f-=3;h=a.1a}if(n){1D}}4U(e<h-1){if(a[e]===a[e+1]){a.6f(e+1,1);h--}e++}R S O.1h.2p(a)}};Q vN(b,c,e){N a=[];a[0]=[];a[1]=[];a[2]=[];N d;1f(d=0;d<3;d++){a[0][d]=S O.1h.1F;a[0][d].x=(b[c+d].x+b[c+d+1].x)/2;a[0][d].y=(b[c+d].y+b[c+d+1].y)/2}1f(d=0;d<2;d++){a[1][d]=S O.1h.1F;a[1][d].x=(a[0][d].x+a[0][d+1].x)/2;a[1][d].y=(a[0][d].y+a[0][d+1].y)/2}a[2][0]=S O.1h.1F;a[2][0].x=(a[1][0].x+a[1][1].x)/2;a[2][0].y=(a[1][0].y+a[1][1].y)/2;e[0]=b[c];e[1]=a[0][0];e[2]=a[1][0];e[3]=a[2][0];e[4]=a[1][1];e[5]=a[0][2];e[6]=b[c+3];R 1d}Q vM(a,b){N d=0;1f(N c=1;c<4;c++){if(1k.3C(a[b+c].x-a[b+c-1].x)>d){d=1k.3C(a[b+c].x-a[b+c-1].x)}if(1k.3C(a[b+c].y-a[b+c-1].y)>d){d=1k.3C(a[b+c].y-a[b+c-1].y)}}R d}O.1h.2p.Rz=Q(b,a){N c=O.1h.2p.q2(b,a);R S O.1h.2p(c)};O.1h.2p.Ex=Q(c,a,b){R O.1h.2p.Ew(c,a)*1k.2W(b,a)*1k.2W(1-b,c-a)};O.1h.2p.Ew=Q(d,a){N c=O.1h.2p.q4(d);N b=O.1h.2p.q4(a)*O.1h.2p.q4(d-a);R c/b};O.1h.2p.q4=Q(c){N a=1;1f(N b=1;b<=c;b++){a*=b}R a};O.1h.2p.Ry=Q(z){if(z==P||z.1a<3){R z}N A=z;N j=[];N p=0.4;N H=0.5;N D=0.Ev;N v=A.1a-1;1f(N y=0;y<=v+1-3;y++){N g=A[y];N f=A[y+1];N d=A[y+2];N m=S O.1h.1F();N h=S O.1h.1F();N F=S O.1h.1F(f.x-g.x,f.y-g.y);N a=S O.1h.1F(d.x-f.x,d.y-f.y);N u=1k.5A(F.x*F.x+F.y*F.y);N I=1k.5A(a.x*a.x+a.y*a.y);N s=S O.1h.1F(F.x/u,F.y/u);N l=S O.1h.1F(a.x/I,a.y/I);N G=S O.1h.1F(s.x+l.x,s.y+l.y);N c=1k.5A(G.x*G.x+G.y*G.y);N r=S O.1h.1F(G.x/c,G.y/c);N o=(s.x*l.x+s.y*l.y)/1;if(1k.3C(1-o)<D){m.x=f.x-l.x*u*p;m.y=f.y-l.y*u*p;h.x=f.x+s.x*I*p;h.y=f.y+s.y*I*p}V{m.x=f.x-r.x*u*p;m.y=f.y-r.y*u*p;h.x=f.x+r.x*I*p;h.y=f.y+r.y*I*p}j[y*3+2+0]=m;j[y*3+2+1]=f;j[y*3+2+2]=h;if(y==0){N E=S O.1h.1F();N x=S O.1h.1F(m.x-g.x,m.y-g.y);N C=1k.5A(x.x*x.x+x.y*x.y);N i=S O.1h.1F(x.x/C,x.y/C);E.x=g.x+i.x*u*p*H;E.y=g.y+i.y*u*p*H;j[y*3+0]=g;j[y*3+1]=E}if(y==v+1-3){N w=S O.1h.1F();N J=S O.1h.1F(h.x-d.x,h.y-d.y);N B=1k.5A(J.x*J.x+J.y*J.y);N q=S O.1h.1F(J.x/B,J.y/B);w.x=d.x+q.x*I*p*H;w.y=d.y+q.y*I*p*H;j[y*3+2+3]=w;j[y*3+2+4]=d}}R j};O.1h.2p.Rx=Q(w){if(w==P||w.1a<3){R w}N o=w[0];w.1u(o);N x=w;N i=[];N p=0.4;N B=0.5;N y=0.Ev;N u=x.1a-1;1f(N v=0;v<=u-1;v++){if(v==u-1){N g=x[u-1];N f=x[0];N d=x[1]}V{N g=x[v];N f=x[v+1];N d=x[v+2]}N l=S O.1h.1F();N h=S O.1h.1F();N z=S O.1h.1F(f.x-g.x,f.y-g.y);N a=S O.1h.1F(d.x-f.x,d.y-f.y);N s=1k.5A(z.x*z.x+z.y*z.y);N C=1k.5A(a.x*a.x+a.y*a.y);N r=S O.1h.1F(z.x/s,z.y/s);N j=S O.1h.1F(a.x/C,a.y/C);N A=S O.1h.1F(r.x+j.x,r.y+j.y);N c=1k.5A(A.x*A.x+A.y*A.y);N q=S O.1h.1F(A.x/c,A.y/c);N m=(r.x*j.x+r.y*j.y)/1;if(1k.3C(1-m)<y){l.x=f.x-j.x*s*p;l.y=f.y-j.y*s*p;h.x=f.x+r.x*C*p;h.y=f.y+r.y*C*p}V{l.x=f.x-q.x*s*p;l.y=f.y-q.y*s*p;h.x=f.x+q.x*C*p;h.y=f.y+q.y*C*p}if(v==u-1){i[0]=f;i[1]=h;i[(u-2)*3+2+3]=l;i[(u-2)*3+2+4]=x[u]}V{i[v*3+2+0]=l;i[v*3+2+1]=f;i[v*3+2+2]=h}}R i};O.1h.2p.vK=Q(z){if(z.1a<3){R z}N A=z.1a,u={},e=z[0],b=z[1],a=z[2];N k=0,j=0,t=1d,B=0,G=0,C=0,c=72,u={},s=[];N v=(a.y-e.y)/(a.x-e.x);N f=a.y-v*a.x;if((((a.x!=e.x)&&(a.y!=e.y))&&(b.y==v*b.x+f))||((a.x==e.x)&&(b.x==e.x))||((a.y==e.y)&&(b.y==e.y))||((a.x==e.x)&&(a.y==e.y))||((a.x==b.x)&&(a.y==b.y))||((e.x==b.x)&&(e.y==b.y))){s.1u(e);s.1u(b);s.1u(a)}V{N q=((b.x*b.x+b.y*b.y)-(e.x*e.x+e.y*e.y))*(2*(a.y-e.y))-((a.x*a.x+a.y*a.y)-(e.x*e.x+e.y*e.y))*(2*(b.y-e.y));N p=(2*(b.x-e.x))*((a.x*a.x+a.y*a.y)-(e.x*e.x+e.y*e.y))-(2*(a.x-e.x))*((b.x*b.x+b.y*b.y)-(e.x*e.x+e.y*e.y));N o=4*((b.x-e.x)*(a.y-e.y)-(a.x-e.x)*(b.y-e.y));u.x=q/o;u.y=p/o;k=1k.5A((e.x-u.x)*(e.x-u.x)+(e.y-u.y)*(e.y-u.y));N r=(e.x-a.x)*(e.x-a.x)+(e.y-a.y)*(e.y-a.y);N h=(2*k*k-r)/(2*k*k);h=h>=1?1:h;h=h<=-1?-1:h;C=1k.Rw(h)*2R/1k.PI;if(a.x==e.x){C=((u.x>e.x&&b.x>e.x)||(u.x<e.x&&b.x<e.x))?(l1-C):C}V{C=((u.y>(v*u.x+f)&&b.y>(v*b.x+f))||(u.y<(v*u.x+f)&&b.y<(v*b.x+f)))?(l1-C):C}j=C/72;if(a.y!=e.y){if(a.x==e.x){if(a.y>e.y){if(b.x<e.x){t=1b}}V{if(b.x>e.x){t=1b}}}V{if(a.x<e.x){if(b.y<v*b.x+f){t=1b}}V{if(b.y>v*b.x+f){t=1b}}}}V{if(a.x>e.x){if(b.y>e.y){t=1b}}V{if(b.y<e.y){t=1b}}}N g=(e.y-u.y)/(e.x-u.x);N l=g>=0?1k.q3(g)*2R/1k.PI:1k.3C(1k.q3(g)*2R/1k.PI)+90;N H=1k.3C(u.y);if((e.y==H)&&(H==a.y)){if(e.x<a.x){l=l+2R}}N d=e.y-u.y;s.1u(e);1f(N w=1;w<c;w++){B=j*w;G=l;if(t){if(d>=0){if(g>=0){G=G+B}V{G=(2R-(G-90))+B}}V{if(g>0){G=(G-2R)+B}V{G=(90-G)+B}}}V{if(d>=0){if(g>=0){G=G-B}V{G=(2R-(G-90))-B}}V{if(g>=0){G=(G-2R)-B}V{G=(90-G)-B}}}G=G*1k.PI/2R;N n=u.x+k*1k.8T(G);N m=u.y+k*1k.7Z(G);s.1u(S O.1h.1F(n,m))}s.1u(a)}R s};O.1h.2p.hX=Q(e){N f=[],b=0,a=e.1a;if(e==P||a<2){R e}1f(N c=0;c<a;){N d=e[c].2A;if(d=="q1"){N g=O.1h.2p.Eu(f,c,a,e);f=g[0];c=g[1]}V{f.1u(e[c]);c++}}R f},O.1h.2p.Eu=Q(e,b,a,c){if(b==0){N f=O.1h.2p.lH(c,b,a,"q1");3T.1g.1u.1j(e,f[0]);b=f[1]+1}V{if(b==a-1){N d=[c[b-1],c[b]],g=O.1h.2p.vK(d);3T.1g.1u.1j(e,g);b++}V{N f=O.1h.2p.lH(c,b,a,"q1");e.8F();3T.1g.1u.1j(e,f[0]);b=f[1]+1}}R[e,b]},O.1h.2p.Rv=Q(e,b,a,c){if(b==0){N f=O.1h.2p.lH(c,b,a,"vL");3T.1g.1u.1j(e,f[0]);b=f[1]+1}V{if(b==a-1){N d=[c[b-1],c[b]],g=O.1h.2p.q2(d);3T.1g.1u.1j(e,g);b++}V{N f=O.1h.2p.lH(c,b,a,"vL");e.8F();3T.1g.1u.1j(e,f[0]);b=f[1]+1}}R[e,b]},O.1h.2p.lH=Q(e,c,a,d){N f=[],b=c+1;if(c==0){3T.1g.1u.1j(f,[e[c],e[c+1]])}V{if(c==a-1){3T.1g.1u.1j(f,[e[c-1],e[c]])}V{3T.1g.1u.1j(f,[e[c-1],e[c],e[c+1]])}}if(d=="vL"){N g=O.1h.2p.q2(f)}V{if(d=="q1"){N g=O.1h.2p.vK(f)}}R[g,b]};O.1h.4C=O.1A(O.1h.2p,{dN:["O.1h.1F"],1o:Q(a){O.1h.2p.1g.1o.1j(K,1s)},89:Q(a,b){N c=1b;N d=K.1x.8F();if(b!=P||!a.3A(d)){c=O.1h.5P.1g.89.1j(K,1s)}N e=K.1x[0];O.1h.5P.1g.89.1j(K,[e]);R c},ak:Q(a){N b=K.1x&&(K.1x.1a>3);if(b){K.1x.8F();O.1h.5P.1g.ak.1j(K,1s);N c=K.1x[0];O.1h.5P.1g.89.1j(K,[c])}R b},3B:Q(b,d){1f(N c=0,a=K.1x.1a;c<a-1;c++){K.1x[c].3B(b,d)}},5g:Q(d,b){1f(N c=0,a=K.1x.1a;c<a-1;++c){K.1x[c].5g(d,b)}},7Q:Q(e,b,d){1f(N c=0,a=K.1x.1a;c<a-1;++c){K.1x[c].7Q(e,b,d)}R K},3N:Q(e,c){if(e&&c){1f(N d=0,a=K.1x.1a;d<a-1;d++){N b=K.1x[d];b.3N(e,c)}K.2k=P}R K},9u:Q(){if(K.1x){N f=K.1x.1a;if(f>0&&f<=2){R K.1x.1R()}V{if(f>2){N j=0;N g=0;N d=K.1x[0].x;N n=K.1x[0].y;N a=-1*K.8u();if(a!=0){1f(N e=0;e<f-1;e++){N l=K.1x[e];N h=K.1x[e+1];j+=(l.x+h.x-2*d)*((l.x-d)*(h.y-n)-(h.x-d)*(l.y-n));g+=(l.y+h.y-2*n)*((l.x-d)*(h.y-n)-(h.x-d)*(l.y-n))}N m=d+j/(6*a);N k=n+g/(6*a)}V{1f(N e=0;e<f-1;e++){j+=K.1x[e].x;g+=K.1x[e].y}N m=j/(f-1);N k=g/(f-1)}R S O.1h.1F(m,k)}V{R P}}}},8u:Q(){N g=0;if(K.1x&&(K.1x.1a>2)){N f=0;1f(N e=0,d=K.1x.1a;e<d-1;e++){N a=K.1x[e];N h=K.1x[e+1];f+=(a.x+h.x)*(h.y-a.y)}g=-f/2}R g},g1:Q(b){N d=K;if(b){N c=S O.3h("4t:9r");if(!c.3A(b)){d=K.1R().3N(b,c)}}N f=0;N a=d.1x&&d.1x.1a;if(a>2){N h,g;1f(N e=0;e<a-1;e++){h=d.1x[e];g=d.1x[e+1];f+=O.1c.vJ(g.x-h.x)*(2+1k.7Z(O.1c.vJ(h.y))+1k.7Z(O.1c.vJ(g.y)))}f=f*vI*vI/2}R f},dO:Q(m){N s=O.6c.lG;N l=14;N k=s(m.x,l);N j=s(m.y,l);Q r(w,t,v,i,u){R(w-u)*((i-t)/(u-v))+i}N a=K.1x.1a-1;N g,f,q,d,o,b,e,c;N h=0;1f(N n=0;n<a;++n){g=K.1x[n];q=s(g.x,l);d=s(g.y,l);f=K.1x[n+1];o=s(f.x,l);b=s(f.y,l);if(d===b){if(j===d){if(q<=o&&(k>=q&&k<=o)||q>=o&&(k<=q&&k>=o)){h=-1;1D}}5K}e=s(r(j,q,d,o,b),l);if(e===k){if(d<b&&(j>=d&&j<=b)||d>b&&(j<=d&&j>=b)){h=-1;1D}}if(e<=k){5K}if(q!==o&&(e<1k.4q(q,o)||e>1k.3l(q,o))){5K}if(d<b&&(j>=d&&j<b)||d>b&&(j<d&&j>=b)){++h}}N p=(h===-1)?1:!!(h&1);R p},6P:Q(d){N b=1b;if(d.1p==="O.1h.1F"){b=K.dO(d)}V{if(d.1p==="O.1h.2p"){b=d.6P(K)}V{if(d.1p==="O.1h.4C"){b=O.1h.2p.1g.6P.1j(K,[d])}V{1f(N c=0,a=d.1x.1a;c<a;++c){b=d.1x[c].6P(K);if(b){1D}}}}}R b},4R:Q(a){R(a===1d)?[]:K.1x.a3(0,K.1x.1a-1)},1p:"O.1h.4C"});O.1h.8l=O.1A(O.1h.5P,{dN:["O.1h.2p"],1o:Q(a){O.1h.5P.1g.1o.1j(K,1s)},4B:Q(n,s){N g=P;N r=s&&s.vG;N o,a,q,m,b;N e=[];N p=[n];1f(N f=0,h=K.1x.1a;f<h;++f){a=K.1x[f];m=1b;1f(N d=0;d<p.1a;++d){o=a.4B(p[d],s);if(o){if(r){q=o[0];1f(N c=0,l=q.1a;c<l;++c){if(c===0&&e.1a){e[e.1a-1].89(q[c])}V{e.1u(S O.1h.8l([q[c]]))}}m=1d;o=o[1]}if(o.1a){o.iI(d,1);3T.1g.6f.1j(p,o);1D}}}if(!m){if(e.1a){e[e.1a-1].89(a.1R())}V{e=[S O.1h.8l(a.1R())]}}}if(e&&e.1a>1){m=1d}V{e=[]}if(p&&p.1a>1){b=1d}V{p=[]}if(m||b){if(r){g=[e,p]}V{g=p}}R g},vH:Q(n,s){N g=P;N r=s&&s.vG;N o,c,q,m,a,e,p;if(n 1V O.1h.2p){p=[];e=[n];1f(N f=0,h=K.1x.1a;f<h;++f){a=1b;c=K.1x[f];1f(N d=0;d<e.1a;++d){o=e[d].4B(c,s);if(o){if(r){q=o[0];if(q.1a){q.iI(d,1);3T.1g.6f.1j(e,q);d+=q.1a-2}o=o[1];if(o.1a===0){o=[c.1R()]}}1f(N b=0,l=o.1a;b<l;++b){if(b===0&&p.1a){p[p.1a-1].89(o[b])}V{p.1u(S O.1h.8l([o[b]]))}}a=1d}}if(!a){if(p.1a){p[p.1a-1].89(c.1R())}V{p=[S O.1h.8l([c.1R()])]}}}}V{g=n.4B(K)}if(e&&e.1a>1){m=1d}V{e=[]}if(p&&p.1a>1){a=1d}V{p=[]}if(m||a){if(r){g=[e,p]}V{g=p}}R g},1p:"O.1h.8l"});O.1h.3R=O.1A(O.1h.5P,{dN:["O.1h.4C"],1o:Q(a){O.1h.5P.1g.1o.1j(K,1s)},8u:Q(){N c=0;if(K.1x&&(K.1x.1a>0)){c+=1k.3C(K.1x[0].8u());1f(N b=1,a=K.1x.1a;b<a;b++){c-=1k.3C(K.1x[b].8u())}}R c},g1:Q(b){N d=0;if(K.1x&&(K.1x.1a>0)){d+=1k.3C(K.1x[0].g1(b));1f(N c=1,a=K.1x.1a;c<a;c++){d-=1k.3C(K.1x[c].g1(b))}}R d},dO:Q(a){N e=K.1x.1a;N c=1b;if(e>0){c=K.1x[0].dO(a);if(c!==1){if(c&&e>1){N d;1f(N b=1;b<e;++b){d=K.1x[b].dO(a);if(d){if(d===1){c=1}V{c=1b}1D}}}}}R c},6P:Q(e){N b=1b;N d,a;if(e.1p==="O.1h.1F"){b=K.dO(e)}V{if(e.1p==="O.1h.2p"||e.1p==="O.1h.4C"){1f(d=0,a=K.1x.1a;d<a;++d){b=e.6P(K.1x[d]);if(b){1D}}if(!b){1f(d=0,a=e.1x.1a;d<a;++d){b=K.dO(e.1x[d]);if(b){1D}}}}V{1f(d=0,a=e.1x.1a;d<a;++d){b=K.6P(e.1x[d]);if(b){1D}}}}if(!b&&e.1p==="O.1h.3R"){N c=K.1x[0];1f(d=0,a=c.1x.1a;d<a;++d){b=e.dO(c.1x[d]);if(b){1D}}}R b},7d:Q(d,b){N c=!(b&&b.lF===1b);N a;if(!c&&K.6P(d)){a=0}V{a=O.1h.5P.1g.7d.1j(K,[d,b])}R a},1p:"O.1h.3R"});O.1h.3R.Et=Q(j,f,b,l){N c=1k.PI*((1/b)-(1/2));if(l){c+=(l/2R)*1k.PI}N a,h,g;N k=[];1f(N e=0;e<b;++e){a=c+(e*2*1k.PI/b);h=j.x+(f*1k.8T(a));g=j.y+(f*1k.7Z(a));k.1u(S O.1h.1F(h,g))}N d=S O.1h.4C(k);R S O.1h.3R([d])};O.1h.3R.Ru=Q(n,j,c,a,h,d){if(d==2b){d=1}N m=a*1k.PI/(2R*c);N b,l,k;N o=[];1f(N g=0;g<c;++g){b=m*g;l=n.x+(j*d*1k.8T(b));k=n.y+(j*d*1k.7Z(b));o.1u(S O.1h.1F(l,k))}b=a*1k.PI/2R;l=n.x+(j*d*1k.8T(b));k=n.y+(j*d*1k.7Z(b));o.1u(S O.1h.1F(l,k));o.1u(n);N e=S O.1h.4C(o);e.5g(3r(h),n);N f=S O.1h.3R([e]);f.6E=n;f.4K=j;f.r=a;f.vF=h;f.gL=c;f.vE="dM";R f};O.1h.3R.Rt=Q(j,k,c,a,g,d){if(d==2b){d=1}N h=[];h.1u(j);h.1u(S O.1h.1F(j.x+a*d,j.y));N b=S O.1h.2p(h);b.5g(3r(g),j);N e=[];e.1u(S O.1h.1F(j.x+k*d,j.y));e.1u(S O.1h.1F(j.x+a*d,j.y+c*d/2));e.1u(S O.1h.1F(j.x+a*d,j.y-c*d/2));N i=S O.1h.4C(e);i.5g(3r(g),j);N f=S O.1h.5P([b,i]);f.6E=j;f.1E=k;f.1B=c;f.Rs=a;f.vF=g;f.vE="Rr";R f};O.1h.3R.Rq=Q(v,f,h,a,m,o){if(m==2b){m=1}if(o==2b){o=10}N l=[];l.1u(v);l.1u(v);l.1u(S O.1h.1F(v.x+f*m*2/3,v.y+h*m/2));l.1u(S O.1h.1F(v.x+f*m,v.y+h*m/2));l.1u(S O.1h.1F(v.x+f*m,v.y-h*m/2));l.1u(S O.1h.1F(v.x+f*m*2/3,v.y-h*m/2));l.1u(v);l.1u(v);N r=[];N q,p,y,w,u,e,d,c;N t,s;N g=l.1a;e=1/o;r.1u(S O.1h.1F((l[0].x+l[1].x)/2,(l[0].y+l[1].y)/2));1f(q=1;q<g-1;q++){1f(p=0;p<=o;p++){d=p*e;c=d*d;y=(c-2*d+1)/2;w=(2*d-2*c+1)/2;u=c/2;t=y*l[q-1].x+w*l[q].x+u*l[q+1].x;s=y*l[q-1].y+w*l[q].y+u*l[q+1].y;r.1u(S O.1h.1F(t,s))}}N b=S O.1h.4C(r);b.5g(3r(a),v);N x=S O.1h.5P([b]);x.6E=v;x.1E=f;x.1B=h;x.vF=a;x.vE="Rp";R x};O.1h.8k=O.1A(O.1h.5P,{dN:["O.1h.3R"],1o:Q(a){O.1h.5P.1g.1o.1j(K,1s)},1p:"O.1h.8k"});O.1h.ag=O.1A(O.1h,{x:P,y:P,1B:P,1E:P,1o:Q(b,d,c,a){O.1h.1g.1o.1j(K,1s);K.x=b;K.y=d;K.1B=c;K.1E=a},a9:Q(){K.2k=S O.1U(K.x,K.y,K.x+K.1B,K.y+K.1E)},ew:Q(){N a=(2*K.1B)+(2*K.1E);R a},8u:Q(){N a=K.1B*K.1E;R a},3B:Q(a,b){K.x=K.x+a;K.y=K.y+b;K.a9()},9u:Q(){N b=K.x+K.1B/2,a=K.y+K.1E/2;R S O.1h.1F(b,a)},1p:"O.1h.ag"});O.1h.ds=O.1A(O.1h,{x:P,y:P,8y:P,8U:P,1o:Q(a,c,b){O.1h.1g.1o.1j(K,1s);K.8U={h:P,w:P};K.x=3r(a);K.y=3r(c);K.8y=b.7A();K.2o=1O.2G("eY")},1m:Q(){O.1h.1g.1m.1j(K,1s);K.x=P;K.y=P;K.8y=P},9u:Q(){R S O.1h.1F(K.x,K.y)},1R:Q(a){if(a==P){a=S O.1h.ds(K.x,K.y,K.8y)}O.1c.4D(a,K);R a},a9:Q(){K.2k=S O.1U(K.x,K.y,K.x,K.y)},oK:Q(g,j,f,c){N d,e,b,k,m;N i=O.1c.eB(g);N h=c.4p||K.8y;N a=h.4B("\\n");N l=a.1a;j=3r(j);f=3r(f);if(l>1){f=3r(f)*l}if(c.3g&&c.3g!=="cm"){5m(c.3g){1K"lt":i.x+=j/2;i.y+=f/2;1D;1K"lm":i.x+=j/2;1D;1K"lb":i.x+=j/2;i.y-=f/2;1D;1K"ct":i.y+=f/2;1D;1K"cb":i.y-=f/2;1D;1K"rt":i.x-=j/2;i.y+=f/2;1D;1K"rm":i.x-=j/2;1D;1K"rb":i.x-=j/2;i.y-=f/2;1D;4m:1D}}K.8U.h=f;K.8U.w=j;e=i.x-3r(j)/2;b=i.y+3r(f)/2;m=i.x+3r(j)/2;k=i.y-3r(f)/2;d=S O.1U(e,b,m,k);R d},uf:Q(e,b){N c,d,a,h,i;N f=K.Es(b);N g=O.1c.eB(e);if(b.3g&&b.3g!=="cm"){5m(b.3g){1K"lt":g.x+=f.w/2;g.y+=f.h/2;1D;1K"lm":g.x+=f.w/2;1D;1K"lb":g.x+=f.w/2;g.y-=f.h/2;1D;1K"ct":g.y+=f.h/2;1D;1K"cb":g.y-=f.h/2;1D;1K"rt":g.x-=f.w/2;g.y+=f.h/2;1D;1K"rm":g.x-=f.w/2;1D;1K"rb":g.x-=f.w/2;g.y-=f.h/2;1D;4m:1D}}K.8U.h=f.h;K.8U.w=f.w;d=g.x-f.w/2;a=g.y+f.h/2;if(b.7o&&b.7o&&b.7o==="nJ"){i=g.x+f.w/2+2l(3r(b.4h)/2)}V{i=g.x+f.w/2}h=g.y-f.h/2;c=S O.1U(d,a,i,h);R c},Es:Q(b){N n,o,k=1,j=0.2,f=3r(b.4v);n=b.4p||K.8y;if(b.4h){o=3r(b.4h)}V{R P}N l,e;N a=n.4B("\\n");N h=a.1a;if(h>1){e=o*h+h+f+j*o}V{e=o+f+j*o+1}l=0;if(K.ia&&l<K.ia){l=K.ia}1f(N g=0;g<h;g++){N c=K.Er(a[g]);N m=K.ia=O.1c.v5(b,a[g],K.2o).lp+c.Ep*k+f;if(l<m){l=m}}N d=S 6O();d.h=e;d.w=l;R d},Ro:Q(a,b){K.ia=P;N f={};f=O.1c.ci(f,b);f.4p=K.8y;f.4h=3r(f.4h);if(f.4h<12){f.4h=12}f.4h=f.4h.7A()+"px";if(f.gJ===2b){f.gJ=100}if(f.gJ<0){f.gJ=0}if(f.gJ>nK){f.gJ=nK}if(f.gK===2b){f.gK=0}if(f.gK>30){f.gK=30}if(f.gK<0){f.gK=0}N e=a.dF(S O.3k(K.x,K.y));N j=K.uf(e,f);N c=((j.3J()+f.gK*(K.8y.1a-1))*(f.gJ/100))-j.3J();if(f.3g&&(f.3g==="lt"||f.3g==="lm"||f.3g==="lb")){j.1I+=c}V{if(f.3g&&(f.3g==="rt"||f.3g==="rm"||f.3g==="rb")){j.1r-=c}V{if(f.3g&&(f.3g==="ct"||f.3g==="cm"||f.3g==="cb")){j.1r-=c/2;j.1I+=c/2}}}N d=a.6Q(S O.2C(j.1r,j.1t));N k=a.6Q(S O.2C(j.1I,j.1N));N m=S O.1U(d.1P,k.1S,k.1P,d.1S);if(f.7r){N l=[];l.1u(S O.1h.1F(m.1r,m.1t));l.1u(S O.1h.1F(m.1I,m.1t));l.1u(S O.1h.1F(m.1I,m.1N));l.1u(S O.1h.1F(m.1r,m.1N));1f(N h=0;h<l.1a;h++){l[h].5g(-f.7r,S O.1h.1F(K.x,K.y))}N g=S O.1h.2p(l);R g.5s()}V{R m}},Er:Q(e){N d=S 6O();N c=0;N a=0;1f(N b=0;b<e.1a;b++){if(e.Eq(b)>7W){c++}V{a++}}d.Rn=c;d.Rm=a;d.Ep=e.1a;R d},1p:"O.1h.ds"});O.2f=O.1A({6l:P,3f:P,5a:P,7J:1b,1G:P,7K:P,U:P,gA:0,1o:Q(a,b){K.6l=O.1c.6t(a);O.1c.1M(K,b)},1m:Q(){K.6l=P;K.5a=P;K.1G=P;K.7K=P;K.U=P},bV:Q(){R 1b},9A:Q(a,b){K.5a=a.1R();if(K.U.2a&&K.U.2a.5z){K.5a=a.5z(K.U.9F())}if(b){K.7K=P}R 1d},6G:Q(a){K.1G=a.1R();K.7K=P},2u:Q(){K.7K=K.7K||K.U.2u();R K.7K},3Q:Q(i,b){if(b==P){b=i.W}if(i.1v){N a=i.1v.5s();if(a){N h;if(K.U.2a&&K.U.2a.5z){h=K.U.9F()}if(!a.9E(K.5a,{dL:h})){b={2g:"2L"}}V{K.pt(a,h)}N c=K.9D(i.1v,b,i.id);if(i.1v.vo&&i.1v.vo===1d){R 1d}if(b.2g!=="2L"&&b.4p&&c!==1b){N g;if(b.CI){N j=i.1v.2k.64();g=S O.1h.1F(j.1P,j.1S)}V{g=i.1v.9u()}if(g==P){R P}if(b.7q||b.7p){N e=2w(b.7q)?0:b.7q;N d=2w(b.7p)?0:b.7p;N f=K.2u();g.3B(e*f,d*f)}K.dJ(i.id,b,g)}V{K.la(i.id)}R c}}},pt:Q(e,d){K.gA=0;if(d){N f=d.3J(),b=(K.5a.1r+K.5a.1I)/2,c=(e.1r+e.1I)/2,a=1k.2s((c-b)/f);K.gA=a*f}},9D:Q(c,a,b){},dJ:Q(c,b,a){},la:Q(a){},5L:Q(){},gq:Q(a){},gr:Q(d){if(!(O.1c.4k(d))){d=[d]}1f(N c=0,a=d.1a;c<a;++c){N b=d[c];K.gx(b.1v,b.id);K.la(b.id)}},gx:Q(b,a){},ii:Q(a){},uJ:Q(){R K.6l.id},vp:Q(b){N a=O.1c.1M({},O.2f.Eo);if(b.2q===1b){2t a.4v;2t a.8X}if(b.2j===1b){2t a.7s}O.1c.1M(a,b);R a},1p:"O.2f"});O.2f.Eo={7s:"#aP",8X:"#aP",4v:1,4V:1,aS:1,4M:0};O.2f.cN={Rl:[vD,75,Rk,pZ,Rj,pZ,Ri,Em,Rh,En,vD,q0,Rg,En,Rf,Em,Re,pZ,Rd,pZ,vD,75],Rc:[4,0,6,0,6,4,10,4,10,6,6,6,6,10,4,10,4,6,0,6,0,4,4,4,4,0],x:[0,0,25,0,50,35,75,0,100,0,65,50,100,100,75,100,50,65,25,100,0,100,35,50,0,0],Rb:[0,0,0,1,1,1,1,0,0,0],Ra:[0,10,10,10,5,0,0,10],dK:[0,0,9.pU,-3.pV,9.pW,-1.pX,9.pY,-0.61,9.pY,0.61,9.pW,1.pX,9.pU,3.pV,0,0],R9:[0,0,-3.pV,-9.pU,-1.pX,-9.pW,-0.61,-9.pY,0.61,-9.pY,1.pX,-9.pW,3.pV,-9.pU,0,0,9.Eb,2.Ea,9.Ec,3.uz,8.Ef,4.Ed,8.Eh,5.Eg,7.Ej,6.Ei,6.El,7.Ek,0,0,-6.El,7.Ek,-7.Ej,6.Ei,-8.Eh,5.Eg,-8.Ef,4.Ed,-9.Ec,3.uz,-9.Eb,2.Ea,0,0]};O.f2=O.1A({gI:P,8v:P,iH:P,vC:P,1o:Q(a){K.vC=a?O.f2.lE.E6:O.f2.lE.E7;K.5L()},E4:Q(c){if(K.E9(c)){K.iG(c)}N f=c.id;K.E8(c);N d=-1;N e=K.8v.1a;N a;4U(e-d>1){a=2l((d+e)/2);N b=K.vC(K,c,O.1c.6t(K.8v[a]));if(b>0){d=a}V{e=a}}K.8v.6f(e,0,f);K.iH[f]=K.gH(c);R K.vB(e)},iG:Q(b){N d=b.id;N a=O.1c.2N(K.8v,d);if(a>=0){K.8v.6f(a,1);2t K.iH[d];if(K.8v.1a>0){N c=K.8v[K.8v.1a-1];K.gI=K.iH[c]}V{K.gI=0}}},5L:Q(){K.8v=[];K.iH={};K.gI=0},E9:Q(a){R(K.iH[a.id]!=P)},gH:Q(a){R a.9H.pT},E8:Q(a){N b=a.9H.pT;if(b==P){b=K.gI;a.9H.pT=b}V{if(b>K.gI){K.gI=b}}},vB:Q(b){N a=b+1;if(a<K.8v.1a){N c=O.1c.6t(K.8v[a]);if(c==2b){c=K.vB(a)}R c}V{R P}},1p:"O.f2"});O.f2.lE={vA:Q(e,d,b){N a=e.gH(d);N f=0;if(b){N c=e.gH(b);f=a-c}R f},E7:Q(c,b,a){N d=O.f2.lE.vA(c,b,a);if(a&&d==0){d=1}R d},E6:Q(d,c,b){N e=O.f2.lE.vA(d,c,b);if(b&&e===0){N a=b.vz-c.vz;e=(a===0)?1:a}R e}};O.2f.bX=O.1A(O.2f,{ah:P,3f:P,aO:P,cA:P,iF:P,f1:P,lC:"R8",eG:"R7",1o:Q(a,b){O.2f.1g.1o.1j(K,1s);K.ah=K.ve();K.3f=K.vd("R6");K.aO=K.3f;K.cA=K.3f;K.ah.1X(K.3f);K.6l.1X(K.ah);if(b&&(b.R5||b.E5)){K.f1=S O.f2(b.E5)}},1m:Q(){K.5L();K.ah=P;K.3f=P;K.iF=P;O.2f.1g.1m.1j(K,1s)},5L:Q(){N b;N a=K.aO;if(a){4U(b=a.aj){a.2U(b)}}a=K.cA;if(a){4U(b=a.aj){a.2U(b)}}if(K.f1){K.f1.5L()}},pM:Q(b,a){},9D:Q(j,a,d){N h=j.1p;N c=1d;if((h==="O.1h.5P")||(h==="O.1h.8J")||(h==="O.1h.8l")||(h==="O.1h.8k")||j.uM||(h==="O.1l.k9")){1f(N f=0,g=j.1x.1a;f<g;f++){c=K.9D(j.1x[f],a,d)&&c}R c}c=1b;N e=1b;if(a.2g!=="2L"){if(a.lD){K.E3(j.id,j,a,d)}V{e=1d}c=K.vy(j.id,j,a,d)}if(c==1b){N b=1O.8E(j.id);if(b){if(b.9H.lD){e=1d}b.2Y.2U(b)}}if(e){N b=1O.8E(j.id+K.lC);if(b){b.2Y.2U(b)}}R c},vy:Q(g,f,b,e){b=K.vp(b);N c=K.6S(g,K.pM(f,b));c.dv=e;c.vz=f.5s().1N;c.du=f.1p;c.9H=b;N a=K.DZ(c,f,b);if(a===1b){R 1b}c=a.DY;if(K.f1){N d=K.f1.E4(c);if(d){K.aO.vv(c,d)}V{K.aO.1X(c)}}V{if(c.2Y!==K.aO){K.aO.1X(c)}}K.vj(c);R a.bY},E3:Q(e,d,b,c){N a=O.1c.1M({},b);a.6m=a.lD;a.ab=a.E2;a.aa=a.E1;a.pT=a.E0;a.5O=a.R4||a.5O;a.5N=a.R3||a.5N;a.lD=P;a.E2=P;a.E1=P;a.E0=P;R K.vy(e+K.lC,d,a,P)},DZ:Q(c,e,b){b=b||c.9H;N a={cP:b.2j===2b?1d:b.2j,lv:b.2q===2b?!!b.4v:b.2q};N d;if(O.1h.4C&&(e 1V O.1h.4C)){d=K.6X(c,e)}V{if(O.1h.2p&&(e 1V O.1h.2p)){a.cP=1b;d=K.eV(c,e)}V{if(O.1h.3R&&(e 1V O.1h.3R)){d=K.eU(c,e)}V{if(O.1h.1F&&(e 1V O.1h.1F)){if(b.4N===1b){a.cP=1b;a.lv=1b}d=K.cL(c,e)}V{if(O.1h.ag&&(e 1V O.1h.ag)){d=K.eS(c,e)}}}}}c.vn=a;if(d!=1b){R{DY:K.dw(c,b,a,e),bY:d}}V{R 1b}},vj:Q(a){},cL:Q(a,b){},eV:Q(a,b){},6X:Q(a,b){},eU:Q(a,b){},eS:Q(a,b){},gC:Q(a,b){},vb:Q(a,b){},dJ:Q(c,b,a){},la:Q(b){N a=1O.8E(b+K.eG);if(a){K.cA.2U(a)}},Dk:Q(b){N a=1O.8E(b+K.lC);if(a){a.2Y.2U(a)}},gq:Q(a){N d=a.ai;N b=d&&d.R2;N c=b?b:(d||a.pS);N e=c.dv;R e},gx:Q(l,g){if((l.1p==="O.1h.8J")||(l.1p==="O.1h.8l")||(l.1p==="O.1h.8k")||(l.1p==="O.1h.5P")||l.uM){1f(N h=0,k=l.1x.1a;h<k;h++){K.gx(l.1x[h],g)}}V{N j=O.1c.6t(l.id);if(j&&j.2Y){if(j.1v){j.1v.1m();j.1v=P}j.2Y.2U(j);if(K.f1){K.f1.iG(j)}if(j.9H.lD){N n=l.id+K.lC;N a=O.1c.6t(n);if(a&&a.2Y){a.2Y.2U(a)}}N d="DT",c="DS";N b=j.9H.7s,m;if(b 1V O.2F.aW){if(b 1V O.2F.l3){m=l.id+d}V{if(b 1V O.2F.l2){m=l.id+c}}N f=O.1c.6t(m);if(f&&f.2Y){f.2Y.2U(f)}}N o=j.9H.8X,m;if(o 1V O.2F.aW){if(o 1V O.2F.l3){m=l.id+d}V{if(o 1V O.2F.l2){m=l.id+c}}N e=O.1c.6t(m);if(e&&e.2Y){e.2Y.2U(e)}}}}},6S:Q(c,a){N b=O.1c.6t(c);if(b){if(!K.pI(b,a)){b.2Y.2U(b);b=K.6S(c,a)}}V{b=K.gD(a,c)}R b},pI:Q(b,a){},gD:Q(a,b){},ii:Q(b){N a=K.3f;if(b.3f.2Y==K.ah){a=b.3f}a.2Y.2U(a);b.ah.1X(a)},uJ:Q(){R K.3f.2Y.2Y.id},lw:Q(a){R(a!="pw")&&!!a},1p:"O.2f.bX"});O.2f.6C=O.1A(O.2f.bX,{iF:"4s://gG.w3.f0/R1/lA",DW:"4s://gG.w3.f0/R0/QZ",eZ:QY,gF:P,lx:P,1o:Q(a){if(!K.bV()){R}O.2f.bX.1g.1o.1j(K,1s);K.gF={x:0,y:0};K.lx={};if(O.8R.2c!=="DX"){K.eZ=At}K.2o=1O.2G("eY")},bV:Q(){N a="4s://gG.w3.f0/TR/QX/1H#";R(1O.pR&&(1O.pR.vx("f0.QW.lA","1.0")||1O.pR.vx(a+"6C","1.1")||1O.pR.vx(a+"QV","1.1")))},5L:Q(){O.2f.bX.1g.5L.47(K);if(K.cQ){N a;4U(a=K.cQ.aj){K.cQ.2U(a)}}},ly:Q(a,e,b){N d=a+(b?0:K.gF.x);N c=e+(b?0:K.gF.y);R(d>=-K.eZ&&d<=K.eZ&&c>=-K.eZ&&c<=K.eZ)},9A:Q(b,d){O.2f.bX.1g.9A.1j(K,1s);N a=K.2u();N f=-b.1r/a;N e=b.1t/a;if(d){K.1r=f;K.1t=e;N c="0 0 "+K.1G.w+" "+K.1G.h;K.ah.2m(P,"pO",c);K.3Y(0,0);R 1d}V{N g=K.3Y(f-K.1r,e-K.1t);if(!g){K.9A(b,1d)}R g}},3Y:Q(a,c){if(!K.ly(a,c,1d)){R 1b}V{N b="";if(a||c){b="3Y("+a+","+c+")"}K.3f.2m(P,"3N",b);K.gF={x:a,y:c};R 1d}},6G:Q(a){O.2f.1g.6G.1j(K,1s);K.ah.2m(P,"1B",K.1G.w);K.ah.2m(P,"1E",K.1G.h)},pM:Q(c,b){N a=P;if(O.1h.4C&&(c 1V O.1h.4C)){a="6Y"}V{if(O.1h.2p&&(c 1V O.1h.2p)){a="QU"}V{if(O.1h.dM&&(c 1V O.1h.dM)){a="9G"}V{if(O.1h.3R&&(c 1V O.1h.3R)){a="9G"}V{if(O.1h.1F&&(c 1V O.1h.1F)){if(b.6m){a="4Y"}V{if(K.lw(b.4W)){a="lA"}V{a="pw"}}}V{if(O.1h.ag&&(c 1V O.1h.ag)){a="ig"}}}}}}R a},dw:Q(t,x,b,d){x=x||t.9H;b=b||t.vn;if(t.du=="O.1h.3R"&&b.cP==1b){N w=x.4V;x.4V=0;b.cP=1d}N n=3r(t.pP(P,"r"));N m=1;N f;if(t.du==="O.1h.1F"&&n){t.W.3v="";if(x.4N===1b){t.W.3v="9y"}V{if(x.6m){f=K.pQ(t);if(x.b6){t.2m(P,"7H",x.b6);N i=K.6S(P,"7H");i.oL=x.b6;t.1X(i)}if(x.5O&&x.5N){t.2m(P,"QT","2L")}N q=x.5O||x.5N;N p=x.5N||x.5O;q=q?q:x.4M*2;p=p?p:x.4M*2;N y=(x.ab!=2b)?x.ab:-(0.5*q);N j=(x.aa!=2b)?x.aa:-(0.5*p);N a=x.gk||x.4V;t.2m(P,"x",(f.x+y).lB());t.2m(P,"y",(f.y+j).lB());t.2m(P,"1B",q);t.2m(P,"1E",p);t.2m(K.DW,"88",x.6m);t.2m(P,"W","2M: "+a);t.vw=O.2f.6C.c2}V{if(K.lw(x.4W)){N e=x.4M*3;N o=e*2;N g=K.pC(x.4W);f=K.pQ(t);m=K.lx[g.id][0]*3/o;N k=t.2Y;N l=t.QS;if(k){k.2U(t)}t.aj&&t.2U(t.aj);t.1X(g.aj.DV(1d));t.2m(P,"pO",g.pP(P,"pO"));t.2m(P,"1B",o);t.2m(P,"1E",o);t.2m(P,"x",f.x-e);t.2m(P,"y",f.y-e);if(l){k.vv(t,l)}V{if(k){k.1X(t)}}}V{t.2m(P,"r",x.4M)}}}N v=x.8N;if((v!==2b||t.pJ!==2b)&&f){t.pJ=v;v|=0;if(t.vf!=="lA"){t.2m(P,"3N","5g("+v+" "+f.x+" "+f.y+")")}V{N u=K.lx[g.id];t.aj.2m(P,"3N","5g("+v+" "+u[1]+" "+u[2]+")")}}}if(b.cP){N c=x.7s;if(c 1V O.2F.aW){N h=K.vt(c,d.id);if(h){c="1z(#"+h+")";t.2m(P,"W","2j:"+c);t.2m(P,"2j-2M",1);t.W.2j=c}}V{t.2m(P,"W","");t.2m(P,"2j",c);t.2m(P,"2j-2M",x.4V)}}V{t.2m(P,"2j","2L")}if(b.lv){N s=x.8X;if(s 1V O.2F.aW){N h=K.vt(s,d.id);if(h){s="1z(#"+h+")";t.2m(P,"W","2q:"+s);t.W.2q=s}}V{t.2m(P,"2q",x.8X)}t.2m(P,"2q-2M",x.aS);t.2m(P,"2q-1B",x.4v*m);t.2m(P,"2q-QR",x.8W||"2s");t.2m(P,"2q-CX","2s");x.aR&&t.2m(P,"2q-QQ",K.8q(x,m))}V{t.2m(P,"2q","2L")}if(x.dC){t.2m(P,"4u-1n",x.dC);t.W.dC=x.dC}V{t.2m(P,"4u-1n","DU");t.W.dC="DU"}if(x.3I!=P){t.2m(P,"3I",x.3I)}if(w){x.4V=w;b.cP=1b;w=""}R t},8q:Q(c,b){N a=c.4v*b;N d=c.aR;5m(d){1K"cD":R"2L";1K"lo":R[1,4*a].6d();1K"ln":R[4*a,4*a].6d();1K"ll":R[4*a,4*a,1,4*a].6d();1K"lk":R[8*a,4*a].6d();1K"lj":R[8*a,4*a,1,4*a].6d();4m:R O.5t.li(d).42(/\\s+/g,",")}},gD:Q(a,c){N b=1O.QP(K.iF,a);if(c){b.2m(P,"id",c)}R b},pI:Q(b,a){R(a===b.vf)},ve:Q(){N a=K.6S(K.6l.id+"QO","lA");a.W.2g="iE";R a},vd:Q(a){R K.6S(K.6l.id+a,"g")},vs:Q(){N a=K.6S(K.6l.id+"QN","cQ");K.ah.1X(a);R a},cL:Q(a,b){R K.gC(a,b,1)},gC:Q(d,e,b){N c=K.2u();N a=(e.x/c+K.1r);N f=(K.1t-e.y/c);if(K.ly(a,f)){d.2m(P,"cx",a);d.2m(P,"cy",f);d.2m(P,"r",b);R d}V{R 1b}},eV:Q(b,c){N a=K.lz(c.1x);if(a.9G){b.2m(P,"5I",a.9G);R(a.bY?b:P)}V{R 1b}},6X:Q(b,c){N a=K.lz(c.1x);if(a.9G){b.2m(P,"5I",a.9G);R(a.bY?b:P)}V{R 1b}},eU:Q(b,h){N g="";N i=1d;N a=1d;N c,k;1f(N e=0,f=h.1x.1a;e<f;e++){g+=" M";c=K.lz(h.1x[e].1x," ");k=c.9G;if(k){g+=" "+k;a=c.bY&&a}V{i=1b}}g+=" z";if(i){b.2m(P,"d",g);b.2m(P,"2j-QM","QL");R a?b:P}V{R 1b}},eS:Q(c,d){N b=K.2u();N a=(d.x/b+K.1r);N e=(K.1t-(d.y+d.1E)/b);if(K.ly(a,e)){c.2m(P,"x",a);c.2m(P,"y",e);c.2m(P,"1B",d.1B/b);c.2m(P,"1E",d.1E/b);R c}V{R 1b}},vb:Q(f,h){N g=P;N b=1d;1f(N e=0,a=h.1x.1a;e<a;e++){if((e%3)==0&&(e/3)==0){N c=K.gE(h.1x[e]);if(!c){b=1b}g="M "+c}V{if((e%3)===1){N c=K.gE(h.1x[e]);if(!c){b=1b}g+=" C "+c}V{N c=K.gE(h.1x[e]);if(!c){b=1b}g+=" "+c}}}g+=" Z";if(b){f.2m(P,"d",g);R f}V{R 1b}},dJ:Q(f,b,q){N c=K.2u();N p=(q.x/c+K.1r);N m,k=O.8R.2c;if(k==="i1"){if(!b.4h){b.4h=12}N g=3r(b.4h)*0.35;m=(q.y/c-K.1t)-g}V{m=(q.y/c-K.1t)}N o=K.6S(f+K.eG,"8y");o.2m(P,"x",p);o.2m(P,"y",-m);if(b.2g){o.2m(P,"2g",b.2g)}if(b.7r){o.2m(P,"3N","5g("+b.7r+" "+p+","+(-m)+")")}if(b.8z){o.2m(P,"2j",b.8z)}if(b.dt){o.2m(P,"2M",b.dt)}if(b.8V){o.2m(P,"a7-ue",b.8V)}if(b.4h){o.2m(P,"a7-1G",b.4h)}if(b.7C){o.2m(P,"a7-ud",b.7C)}if(b.7o){o.2m(P,"a7-W",b.7o)}if(b.bM===1d){o.2m(P,"4u-1n","7e");o.dv=f}V{o.2m(P,"4u-1n","2L")}N j=b.3g||"cm";o.2m(P,"8y-3b",O.2f.6C.a6[j[0]]||"kS");if(O.gc===1d){o.2m(P,"CE-oM",O.2f.6C.a6[j[1]]||"CD")}N d=b.4p.4B("\\n");N h=d.1a;4U(o.bI.1a>h){o.2U(o.oN)}1f(N e=0;e<h;e++){N l=K.6S(f+K.eG+"CB"+e,"CA");if(b.bM===1d){l.dv=f;l.uc=q;l.du=q.1p}if(O.gc===1b){l.2m(P,"oM-i9",O.2f.6C.ub[j[1]]||"-35%")}l.cC("x",p);if(e==0){N n=O.2f.6C.ua[j[1]];if(n==P){n=-0.5}l.cC("dy",(n*(h-1))+"em")}V{l.cC("dy","kU")}N a=(d[e]==="")?" ":d[e];if(b.v6){if(k=="i1"){K.2o.6k=a;l.oL=K.2o.6k}V{l.6k=a}}V{l.oL=a}if(!l.2Y){o.1X(l)}}if(!o.2Y){K.cA.1X(o)}},lz:Q(d,c){N f=[];N a=1d;N e=d.1a;N j=[];N g,h;1f(N b=0;b<e;b++){h=d[b];f.1u(h);g=K.gE(h);if(g){j.1u(g)}V{if(b>0){if(K.gE(d[b-1])){j.1u(K.vu(d[b],d[b-1]))}}if(b<e-1){if(K.gE(d[b+1])){j.1u(K.vu(d[b],d[b+1]))}}a=1b}}R{9G:j.6d(c||","),bY:a}},vu:Q(e,h){if(h.3A(e)){R""}N f=K.2u();N b=K.eZ-K.gF.x;N a=K.eZ-K.gF.y;N d=h.x/f+K.1r;N j=K.1t-h.y/f;N c=e.x/f+K.1r;N i=K.1t-e.y/f;N g;if(c<-b||c>b){g=(i-j)/(c-d);c=c<0?-b:b;i=j+(c-d)*g}if(i<-a||i>a){g=(c-d)/(i-j);i=i<0?-a:a;c=d+(i-j)*g}R c+","+i},gE:Q(b){N c=K.2u();N a=(b.x/c+K.1r);N d=(K.1t-b.y/c);if(K.ly(a,d)){R a+","+d}V{R 1b}},pQ:Q(a){R({x:3r(a.pP(P,"cx")),y:3r(a.pP(P,"cy"))})},pC:Q(f){if(!K.cQ){K.cQ=K.vs()}N b=K.6l.id+"-"+f;N c=1O.8E(b);if(c!=P){R c}N e=O.2f.cN[f];if(!e){6F S eO(f+" is gj a pu cN 2c")}N h=K.6S(b,"cN");N d=K.6S(P,"6Y");h.1X(d);N n=S O.1U(6c.lq,6c.lq,0,0);N l=[];N k,j;1f(N g=0;g<e.1a;g=g+2){k=e[g];j=e[g+1];n.1r=1k.4q(n.1r,k);n.1N=1k.4q(n.1N,j);n.1I=1k.3l(n.1I,k);n.1t=1k.3l(n.1t,j);l.1u(k,",",j)}d.2m(P,"5I",l.6d(" "));N a=n.3J();N m=n.4J();N o=[n.1r-a,n.1N-m,a*3,m*3];h.2m(P,"pO",o.6d(" "));K.lx[b]=[1k.3l(a,m),n.64().1P,n.64().1S];K.cQ.1X(h);R h},vt:Q(k,a){if(!K.cQ){K.cQ=K.vs()}N f,e;if(k 1V O.2F.l3){e=a+"DT";f=O.1c.6t(e);if(f){1f(N g=0,h=k.eK.1a;g<h;g++){N j=k.eK[g];N c=f.bI[g];N b="2Q-57:"+j.57+";2Q-2M:"+j.2M;c.W.vr=j.57;c.W.vq=j.2M;c.2m(P,"W",b)}R e}f=K.6S(e,"QK");f.2m(P,"x1",k.x1);f.2m(P,"y1",k.y1);f.2m(P,"x2",k.x2);f.2m(P,"y2",k.y2)}V{if(k 1V O.2F.l2){e=a+"DS";f=O.1c.6t(e);if(f){1f(N g=0,h=k.eK.1a;g<h;g++){N j=k.eK[g];N c=f.bI[g];N b="2Q-57:"+j.57+";2Q-2M:"+j.2M;c.W.vr=j.57;c.W.vq=j.2M;c.2m(P,"W",b)}R e}f=K.6S(e,"QJ");f.2m(P,"cx",k.cx);f.2m(P,"cy",k.cy);f.2m(P,"r",k.4K);f.2m(P,"fx",k.fx);f.2m(P,"fy",k.fy)}V{R}}N d=k.eK;1f(N g=0,h=d.1a;g<h;g++){N j=d[g];N c=K.6S(P,"2Q");c.2m(P,"3j",j.3j);N b="2Q-57:"+j.57+";2Q-2M:"+j.2M;c.W.vr=j.57;c.W.vq=j.2M;c.2m(P,"W",b);f.1X(c)}K.cQ.1X(f);R e},gq:Q(a){N c=O.2f.bX.1g.gq.1j(K,1s);if(!c){N b=a.ai;c=b.2Y&&b!==K.ah&&b.2Y.dv}R c},1p:"O.2f.6C"});O.2f.6C.a6={l:"3V",r:"gd",b:"1N",t:"QI"};O.2f.6C.ub={t:"-70%",b:"0"};O.2f.6C.ua={t:0,b:-1};O.2f.6C.c2=Q(a){a.c2&&a.c2()};O.2f.5f=O.1A(O.2f,{2T:1d,dG:0,1w:P,2n:P,b3:1b,dH:{},ip:{},1o:Q(a,b){O.2f.1g.1o.1j(K,1s);K.3f=1O.2G("1w");K.6l.1X(K.3f);K.1w=K.3f.5M("2d");K.2n={};if(K.2T){K.cM=1O.2G("1w");K.23=K.cM.5M("2d")}K.2o=1O.2G("eY")},9A:Q(a,b){O.2f.1g.9A.1j(K,1s);R 1b},gx:Q(b,a){K.gr(K.2n[a][0])},bV:Q(){N a=1O.2G("1w");R!!a.5M},6G:Q(b){K.1G=b.1R();N a=K.3f;a.W.1B=b.w+"px";a.W.1E=b.h+"px";a.1B=b.w;a.1E=b.h;K.7K=P;if(K.2T){N c=K.cM;c.W.1B=b.w+"px";c.W.1E=b.h+"px";c.1B=b.w;c.1E=b.h}},3Q:Q(a,b){N d;if(a.1v){b=K.vp(b||a.W);N c=a.1v.5s();d=(b.2g!=="2L")&&!!c&&c.9E(K.5a);if(d){K.2n[a.id]=[a,b]}V{2t(K.2n[a.id])}K.b3=1d}if(K.b3&&!K.7J){K.3p();K.b3=1b}R d},9D:Q(f,d,e){N c=f.1p;if((c==="O.1h.5P")||(c==="O.1h.8J")||(c==="O.1h.8l")||(c==="O.1h.8k")||(c==="O.1l.k9")){1f(N b=0;b<f.1x.1a;b++){K.9D(f.1x[b],d,e)}R}if(O.1h.4C&&(f 1V O.1h.4C)){K.6X(f,d,e)}V{if(O.1h.2p&&(f 1V O.1h.2p)){K.eV(f,d,e)}V{if(O.1h.3R&&(f 1V O.1h.3R)){if(d.2j==1b){N a=d.4V;d.2j=1d;d.4V=0}K.eU(f,d,e)}V{if(O.1h.1F&&(f 1V O.1h.1F)){K.cL(f,d,e)}V{if(O.1h.ag&&(f 1V O.1h.ag)){K.eS(f,d,e)}}}}}if(a){d.2j=1b;d.4V=a;a=""}},py:Q(g,d,f){N b=K;if(K.ip[f]){K.ip[f].eW=Q(){R 1b}}N c=Q(){N l=K.ix;N q=K.1v;N h=K.W;N m=K.3e;b.ip[l]=P;if(!b.2n[l]){R}N i=h.5O||h.5N;N s=h.5N||h.5O;i=i?i:h.4M*2;s=s?s:h.4M*2;N o=(h.ab!=2b)?h.ab:-(0.5*i);N k=(h.aa!=2b)?h.aa:-(0.5*s);N n=h.gk||h.4V;N v=b.6R(q);N u=v[0];N r=v[1];if(!2w(u)&&!2w(r)){N j=b.1w;j.b5();N t;if(h.8N){t=h.8N/2R*1k.PI}j.3Y(u,r);if(t){j.5g(t)}j.3Y(o,k);j.5v=n;N p=O.2f.5f.iq||(O.2f.5f.iq=/pA 2.1/.dr(bE.iz.dm())?DF/1W.DE.1B:1);j.7P(m,0,0,i*p,s*p);j.b4();if(b.2T){b.6I("2j",l);b.23.b5();b.23.3Y(u,r);if(t){b.23.5g(t)}b.23.3Y(o,k);b.23.iv(0,0,i,s);b.23.b4()}if(!K.pz){b.2n[l][0].3e=K.3e;b.iy&&1W.5J(b.iy);b.iy=1W.6h(Q(){b.3p()},100)}}};if(K.2n[f][0].3e){N a=K.2n[f][0].3e;N e={ix:f,1v:g,W:d,3e:a};if(a.4O===d.6m){e.pz=1d;c.47(e)}V{a.eW=Q(){c.47(e)};a.4O=d.6m}}V{N a=S 4F();a.4O=d.6m;K.ip[f]=a;K.2n[f][0].3e=a;if(d.b6){a.7H=d.b6}a.eW=Q(){c.47({ix:f,1v:g,W:d,3e:a})};if(K.2n[f][0].1v.vo===1d){a.eW()}}},5Z:Q(b,a){if(b==="2j"){if(a.7s 1V DH){K.1w.5v=1;K.1w.81=a.7s}V{K.1w.5v=a.4V;K.1w.81=a.7s}}V{if(b==="2q"){K.1w.5v=a.aS;K.1w.9x=a.8W;K.1w.7M=a.8X;K.1w.8O=a.4v}V{K.1w.5v=0;K.1w.8O=1}}},pB:Q(c){N d=6c(c.4B("49").8F())+1;if(d>=io){K.dG=d-uX;d=d%io+1}N b="aP"+d.7A(16);N a=b.1a;b="#"+b.bv(a-6,a);R b},6I:Q(b,d,a){N c=K.pB(d);if(a&&a.8W){K.23.9x=a.8W}if(b==="2j"){K.23.5v=1;K.23.81=c}V{if(b==="2q"){K.23.5v=1;K.23.7M=c;K.23.8O=a.4v+6}V{K.23.5v=0;K.23.8O=1}}},cL:Q(g,c,f){if(c.4N!==1b){if(c.6m){K.py(g,c,f)}V{if(c.4W&&(c.4W!="pw")){K.pv(g,c,f)}V{N d=K.6R(g);N h=d[0];N e=d[1];if(!2w(h)&&!2w(e)){N b=1k.PI*2;N a=c.4M;if(c.2j!==1b){K.5Z("2j",c);K.1w.6s();K.1w.dB(h,e,a,0,b,1d);K.1w.2j();if(K.2T){K.6I("2j",f,c);K.23.6s();K.23.dB(h,e,a,0,b,1d);K.23.2j()}}if(c.2q!==1b){K.5Z("2q",c);K.1w.6s();K.1w.dB(h,e,a,0,b,1d);K.1w.2q();if(K.2T){K.6I("2q",f,c);K.23.6s();K.23.dB(h,e,a,0,b,1d);K.23.2q()}K.5Z("4T")}}}}}},pv:Q(m,b,h){N n,l,g,f,j,a,c,e;N k;N o=1k.PI/2R;N d=O.2f.cN[b.4W];if(!d){6F S eO(b.4W+" is gj a pu cN 2c")}if(!d.1a||d.1a<2){R}N r=K.6R(m);N q=r[0];N p=r[1];if(2w(q)||2w(p)){R}K.1w.9x="2s";K.1w.dz="2s";if(K.2T){K.23.9x="2s";K.23.dz="2s"}if(b.4W in K.dH){a=K.dH[b.4W]}V{a=S O.1U();if(b.4W==="dK"){}V{1f(j=0;j<d.1a;j+=2){a.1M(S O.3k(d[j],d[j+1]))}}K.dH[b.4W]=a}K.1w.b5();if(K.2T){K.23.b5()}K.1w.3Y(q,p);if(K.2T){K.23.3Y(q,p)}e=o*b.8N;if(!2w(e)){K.1w.5g(e);if(K.2T){K.23.5g(e)}}c=2*b.4M/1k.3l(a.3J(),a.4J());if(b.4W==="dK"){c=b.4M/10}K.1w.3M(c,c);if(K.2T){K.23.3M(c,c)}g=a.64().1P;f=a.64().1S;if(b.4W!=="dK"){K.1w.3Y(-g,-f)}if(K.2T&&b.4W!=="dK"){K.23.3Y(-g,-f)}k=b.4v;b.4v=k/c;if(b.2j!==1b){K.5Z("2j",b);K.1w.6s();1f(j=0;j<d.1a;j=j+2){n=d[j];l=d[j+1];if(j==0){K.1w.2S(n,l)}K.1w.9w(n,l)}K.1w.8B();K.1w.2j();if(K.2T){K.6I("2j",h,b);K.23.6s();1f(j=0;j<d.1a;j=j+2){n=d[j];l=d[j+1];if(j==0){K.1w.2S(n,l)}K.23.9w(n,l)}K.23.8B();K.23.2j()}}if(b.2q!==1b){K.5Z("2q",b);K.1w.6s();1f(j=0;j<d.1a;j=j+2){n=d[j];l=d[j+1];if(j==0){K.1w.2S(n,l)}K.1w.9w(n,l)}K.1w.8B();K.1w.2q();if(K.2T){K.6I("2q",h,b);K.23.6s();1f(j=0;j<d.1a;j=j+2){n=d[j];l=d[j+1];if(j==0){K.1w.2S(n,l)}K.23.9w(n,l)}K.23.8B();K.23.2q()}}b.4v=k;K.1w.b4();if(K.2T){K.23.b4()}},eV:Q(c,a,b){a=O.1c.4D({2j:1b},a);K.6X(c,a,b)},6X:Q(c,a,b){if(a.2j!==1b){K.5Z("2j",a);K.bW(K.1w,c,a,b,"2j");if(K.2T){K.6I("2j",b,a);K.bW(K.23,c,a,b,"2j")}}if(a.2q!==1b){K.5Z("2q",a);K.bW(K.1w,c,a,b,"2q");if(K.2T){K.6I("2q",b,a);K.bW(K.23,c,a,b,"2q")}}K.5Z("4T")},bW:Q(c,l,a,e,j){N h=1;if(2v c.bO==="Q"){N m=K.8q(a,h);c.bO(m)}N f=l.1x;N g=f.1a;c.6s();N b=K.6R(f[0]);N n=b[0];N k=b[1];if(!2w(n)&&!2w(k)){c.2S(b[0],b[1]);1f(N d=1;d<g;++d){N o=K.6R(f[d]);c.9w(o[0],o[1])}if(j==="2j"){c.2j()}V{if(a.DC&&a.4v===0){c.8B()}V{c.2q()}}}if(2v c.bO==="Q"){c.bO([])}},eU:Q(f,c,e){N d=f.1x;N a=d.1a;K.6X(d[0],c,e);1f(N b=1;b<a;++b){K.1w.dI="v0-4n";if(K.2T){K.23.dI="v0-4n"}K.6X(d[b],O.1c.4D({2q:1b,4V:1},c),e);K.1w.dI="lg-6B";if(K.2T){K.23.dI="lg-6B"}K.6X(d[b],O.1c.4D({2j:1b},c),e)}},eS:Q(d,a,c){N b=(S O.1h.4C([S O.1h.1F(d.x,d.y),S O.1h.1F(d.x+d.1B,d.y),S O.1h.1F(d.x+d.1B,d.y+d.1E),S O.1h.1F(d.x,d.y+d.1E)]));K.6X(b,a,c)},dJ:Q(o,a,g){a=O.1c.1M({8z:"#aP",3g:"cm"},a);N p=K.6R(o);if(a.7q||a.7p){N j=2w(a.7q)?0:a.7q;N c=2w(a.7p)?0:a.7p;p[0]+=j;p[1]-=c}K.5Z("4T");K.1w.81=a.8z;K.1w.5v=a.dt||1;N e=[a.7o?a.7o:"bL","bL",a.7C?a.7C:"bL",a.4h?a.4h:"kU",a.8V?a.8V:"u9-u8"].6d(" ");if(a.v6){a.4p=a.4p.42(/^&#x/,"");a.4p=5t.DB(2l(a.4p,16))}N d=a.4p.4B("\\n");N h=d.1a;if(K.1w.gb){K.1w.a7=e;K.1w.ga=O.2f.5f.a6[a.3g[0]]||"3G";K.1w.kT=O.2f.5f.a6[a.3g[1]]||"kS";N m=O.2f.5f.bK[a.3g[1]];if(m==P){m=-0.5}N n=K.1w.eF("Mg").1E||K.1w.eF("xx").1B;p[1]+=n*m*(h-1);1f(N f=0;f<h;f++){if(a.7r!=0){K.1w.b5();K.1w.3Y(p[0],p[1]);K.1w.5g(a.7r*1k.PI/2R);K.1w.gb(d[f],0,(n*f));K.1w.b4()}V{K.1w.gb(d[f],p[0],p[1]+(n*f))}}if(!!g&&a.bM){K.iw(p[0],p[1],a,e,d,g)}}V{if(K.1w.kR){K.1w.u7=e;N b=O.2f.5f.bK[a.3g[0]];if(b==P){b=-0.5}N m=O.2f.5f.bK[a.3g[1]];if(m==P){m=-0.5}N n=K.1w.kQ("xx");p[1]+=n*(1+(m*h));1f(N f=0;f<h;f++){N l=p[0]+(b*K.1w.kQ(d[f]));N k=p[1]+(f*n);K.1w.3Y(l,k);K.1w.kR(d[f]);K.1w.3Y(-l,-k)}if(!!g&&a.bM){K.iw(l,k,a,e,d,g)}}}K.5Z("4T")},iw:Q(l,j,a,c,b,e){N h=0;N k=0;N o=l;N n=j;c=c.4B(" ");N f={7C:c[2],4h:c[3],8V:c[4]};1f(N d=0,g=b.1a;d<g;d++){N m=O.1c.v5(f,b[d],K.2o);if(m.lp>h){h=m.lp}k+=m.DA}5m(K.1w.ga){1K"1r":1D;1K"1I":l=l-h;1D;1K"3G":l=l-h/2;1D}5m(K.1w.kT){1K"1t":1D;1K"1N":j=j-k;1D;1K"3G":j=j-k/2;1D}if(a.7r!==0){if(K.2T){K.23.b5();K.23.3Y(o,n);K.23.5g(a.7r*1k.PI/2R);K.23.3Y(-o,-n);K.6I("2j",e,a);K.23.iv(l,j,h,k);K.23.b4()}}V{if(K.2T){K.6I("2j",e,a);K.23.iv(l,j,h,k)}}},8q:Q(c,b){if(!c){R[]}N a=c.4v*b;N d=c.aR;5m(d){1K"cD":R[];1K"lo":R[1,4*a];1K"ln":R[4*a,4*a];1K"ll":R[4*a,4*a,1,4*a];1K"lk":R[8*a,4*a];1K"lj":R[8*a,4*a,1,4*a];4m:if(!d){R[]}if(O.1c.4k(d)){R d}d=O.5t.li(d).42(/\\s+/g,",");R d.42(/\\[|\\]/gi,"").4B(",")}},6R:Q(b){N c=K.2u();N d=K.5a;N a=(b.x/c+(-d.1r/c));N e=((d.1t/c)-b.y/c);R[a,e]},5L:Q(){N a=K.3f.1E;N b=K.3f.1B;K.1w.4L(0,0,b,a);K.2n={};if(K.2T){K.23.4L(0,0,b,a)}},gq:Q(b){N c=P;if(K.2T){if(K.U&&!K.U.41){N f=b.xy;N a=f.x|0;N h=f.y|0;N d=K.23.uW(a,h,1,1).52;if(d[3]===7W){N g=d[2]+(eP*(d[1]+(eP*d[0])));if(g){N e=K.2n["O.3o.Dz"+(g-1+K.dG)];c=e&&e[0]}}}}R c},gr:Q(b){if(!(O.1c.4k(b))){b=[b]}1f(N a=0;a<b.1a;++a){2t K.2n[b[a].id]}K.3p()},3p:Q(){if(!K.7J){N a=K.3f.1E;N e=K.3f.1B;K.1w.4L(0,0,e,a);if(K.2T){K.23.4L(0,0,e,a)}N c,d;1f(N g in K.2n){if(!K.2n.cj(g)){5K}c=K.2n[g][0];d=K.2n[g][1];if(d.2j!==1b||d.2q!==1b){K.9D(c.1v,d,c.id)}if(d.4p){N b=c.1v.9u();if(b==P){5K}N f=c.id;K.dJ(b,d,f)}}}},1p:"O.2f.5f"});O.2f.5f.a6={l:"1r",r:"1I",t:"1t",b:"1N"};O.2f.5f.bK={l:0,r:-1,t:0,b:-1};O.2f.5f.iq=P;O.2f.bJ=O.1A(O.2f.bX,{iF:"DR:QH-DQ-7x:QG",v9:{},3j:P,1o:Q(b){if(!K.bV()){R}if(!1O.pN.87){1O.pN.3t("87",K.iF);N e=1O.QF();N c=["iD","ig","DP","2j","2q","DN","DJ","DI"];1f(N d=0,a=c.1a;d<a;d++){e.QE("87\\\\:"+c[d],"QD: 1z(#4m#bJ); 2x: 3i; 2g: QC-iE;")}}O.2f.bX.1g.1o.1j(K,1s)},bV:Q(){c1{R!!(1O.pN)}c0(a){R 1d}},9A:Q(j,a){O.2f.bX.1g.9A.1j(K,1s);N c=K.2u();N b=(j.1r/c)|0;N f=(j.1t/c-K.1G.h)|0;if(a||!K.3j){K.3j={x:b,y:f};b=0;f=0}V{b=b-K.3j.x;f=f-K.3j.y}N l=b+" "+f;K.3f.vh=l;N h=[K.3f,K.aO,K.cA];N g;1f(N d=0,e=h.1a;d<e;++d){g=h[d];N k=K.1G.w+" "+K.1G.h;g.vg=k}K.3f.W.pH="y";R 1d},6G:Q(f){O.2f.1g.6G.1j(K,1s);N d=[K.ah,K.3f,K.aO,K.cA];N c=K.1G.w+"px";N g=K.1G.h+"px";N b;1f(N e=0,a=d.1a;e<a;++e){b=d[e];b.W.1B=c;b.W.1E=g}},pM:Q(c,b){N a=P;if(O.1h.4C&&(c 1V O.1h.4C)){a="87:iD"}V{if(O.1h.2p&&(c 1V O.1h.2p)){a="87:iD"}V{if(O.1h.dM&&(c 1V O.1h.dM)){a="87:iD"}V{if(O.1h.3R&&(c 1V O.1h.3R)){a="87:iD"}V{if(O.1h.1F&&(c 1V O.1h.1F)){if(b.6m){a="87:ig"}V{if(K.lw(b.4W)){a="87:iD"}V{a="87:DP"}}}V{if(O.1h.ag&&(c 1V O.1h.ag)){a="87:ig"}}}}}}R a},dw:Q(e,b,q,k){b=b||e.9H;q=q||e.vn;N c=b.7s;if(e.du==="O.1h.1F"){if(b.6m){q.cP=1d;if(b.b6){e.7H=b.b6}N d=b.5O||b.5N;N l=b.5N||b.5O;d=d?d:b.4M*2;l=l?l:b.4M*2;N g=K.2u();N i=(b.ab!=2b)?b.ab:-(0.5*d);N f=(b.aa!=2b)?b.aa:-(0.5*l);e.W.1r=(((k.x/g-K.3j.x)+i)|0)+"px";e.W.1t=(((k.y/g-K.3j.y)-(f+l))|0)+"px";e.W.1B=d+"px";e.W.1E=l+"px";e.W.pH="y";c="2L";q.lv=1b}V{if(K.lw(b.4W)){N a=K.pC(b.4W);e.9G=a.9G;e.vh=a.1r+","+a.1N;N p=a.1G;e.vg=p+","+p;K.gC(e,k,b.4M);e.W.pH="y"}V{K.gC(e,k,b.4M)}}}if(q.cP){e.vi=c}V{e.QB="1b"}N j=e.iC("2j");N o=(j.1a==0)?P:j[0];if(!q.cP){if(o){e.2U(o)}}V{if(!o){o=K.gD("87:2j",e.id+"QA")}if(b.eo==="pL"||b.eo==="pK"){if(b.eo==="pL"){o.2A="Qz";o.DO="-100%"}V{if(b.eo==="pK"){o.2A="Qy";o.Qx="50%, 50%"}}o.57=b.7s;o.Qw=b.Qv;o.2M=b.4V;o.Qu=b.Qt}V{o.2M=b.4V}if(e.du==="O.1h.1F"&&b.6m){if(b.gk){o.2M=b.gk}o.4O=b.6m;o.2A="6n";if(!(b.5O&&b.5N)){o.Qs="Qr"}}if(o.2Y!=e){e.1X(o)}}N n=b.8N;if((n!==2b||e.pJ!==2b)){e.pJ=n;if(b.6m){K.vm(e,i,f,b);o.2M=0}V{if(e.du==="O.1h.1F"){e.W.8N=n||0}}}N h=e.iC("2q");N m=(h.1a==0)?P:h[0];if(!q.lv){e.Qq=1b;if(m){m.on=1b}}V{if(!m){m=K.gD("87:2q",e.id+"Qp");e.1X(m)}m.on=1d;m.57=b.8X;m.ud=b.4v+"px";m.2M=b.aS;m.Qo=b.8W==="DG"?"Qn":(b.8W||"2s");if(b.aR){m.Qm=K.8q(b)}}if(b.3I!=="pG"&&b.3I!=P){e.W.3I=b.3I}R e},vm:Q(n,r,e,q){N q=q||n.9H;N o=q.8N||0;N a,j;if(!(q.5O&&q.5N)){N s=S 4F();s.bZ=O.2z.3P(Q(){if(s.7g==="bY"||s.7g==="Ql"){a=s.1B/s.1E;j=1k.3l(q.4M*2,q.5O||0,q.5N||0);r=r*a;q.5O=j*a;q.5N=j;K.vm(n,r,e,q)}},K);s.4O=q.6m;R}V{j=1k.3l(q.5O,q.5N);a=q.5O/q.5N}N m=1k.2s(q.5O||j*a);N k=1k.2s(q.5N||j);n.W.1B=m+"px";n.W.1E=k+"px";N l=1O.8E(n.id+"DM");if(!l){l=K.gD("87:DN",n.id+"DM");n.1X(l)}l.W.1B=m+"px";l.W.1E=k+"px";l.4O=q.6m;l.W.58="vl:vk.lu.Qk(4O=\'\', Qj=\'3M\')";N f=o*1k.PI/2R;N h=1k.7Z(f);N d=1k.8T(f);N g="vl:vk.lu.Qi(Qh="+d+",Qg="+(-h)+",Qf="+h+",Qe="+d+",Qd=\'4w Qc\')\\n";N b=q.gk||q.4V;if(b&&b!==1){g+="vl:vk.lu.Qb(2M="+b+")\\n"}n.W.58=g;N p=S O.1h.1F(-r,-e);N c=S O.1U(0,0,m,k).fX();c.5g(q.8N,p);N i=c.5s();n.W.1r=1k.2s(2l(n.W.1r)+i.1r)+"px";n.W.1t=1k.2s(2l(n.W.1t)-i.1N)+"px"},vj:Q(a){a.W.3v="7e";N c=a.9H.7s;N b=a.9H.8X;if(c==="2L"&&a.vi!==c){a.vi=c}if(b==="2L"&&a.DL!==b){a.DL=b}},pD:Q(b,e){N d=e.5s();if(d){N a=K.2u();N c=S O.1U((d.1r/a-K.3j.x)|0,(d.1N/a-K.3j.y)|0,(d.1I/a-K.3j.x)|0,(d.1t/a-K.3j.y)|0);b.W.1r=c.1r+"px";b.W.1t=c.1t+"px";b.W.1B=c.3J()+"px";b.W.1E=c.4J()+"px";b.vh=c.1r+" "+c.1t;b.vg=c.3J()+" "+c.4J()}},8q:Q(a){N c=a.aR;5m(c){1K"cD":1K"lo":1K"ln":1K"ll":1K"lk":1K"lj":R c;4m:N b=c.4B(/[ ,]/);if(b.1a===2){if(1*b[0]>=2*b[1]){R"lk"}R(b[0]===1||b[1]===1)?"lo":"ln"}V{if(b.1a===4){R(1*b[0]>=2*b[1])?"lj":"ll"}}R"cD"}},gD:Q(a,c){N b=1O.2G(a);if(c){b.id=c}b.DK="on";b.cO=O.2z.iB;R b},pI:Q(c,b){N d=b;N a=d.2N(":");if(a!==-1){d=d.9m(a+1)}N e=c.vf;a=e.2N(":");if(a!==-1){e=e.9m(a+1)}R(d===e)},ve:Q(){R K.6S(K.6l.id+"Qa","1q")},vd:Q(a){R K.6S(K.6l.id+a,"87:DJ")},cL:Q(a,b){R K.gC(a,b,1)},gC:Q(d,e,a){if(!2w(e.x)&&!2w(e.y)){N b=K.2u();d.W.1r=(((e.x/b-K.3j.x)|0)-a)+"px";d.W.1t=(((e.y/b-K.3j.y)|0)-a)+"px";N c=a*2;d.W.1B=c+"px";d.W.1E=c+"px";R d}R 1b},eV:Q(a,b){R K.vc(a,b,1b)},6X:Q(a,b){R K.vc(a,b,1d)},vc:Q(b,k,g){K.pD(b,k);N c=K.2u();N a=k.1x.1a;N e=S 3T(a);N h,l,j;1f(N f=0;f<a;f++){h=k.1x[f];l=(h.x/c-K.3j.x)|0;j=(h.y/c-K.3j.y)|0;e[f]=" "+l+","+j+" l "}N d=(g)?" x e":" e";b.9G="m"+e.6d("")+d;R b},eU:Q(c,m){K.pD(c,m);N d=K.2u();N r=[];N e,k,o,a,g,b,f,q,h,p,n,l;1f(e=0,k=m.1x.1a;e<k;e++){r.1u("m");o=m.1x[e].1x;a=(e===0);g=P;b=P;1f(f=0,q=o.1a;f<q;f++){h=o[f];n=(h.x/d-K.3j.x)|0;l=(h.y/d-K.3j.y)|0;p=" "+n+","+l;r.1u(p);if(f==0){r.1u(" l")}if(!a){if(!g){g=p}V{if(g!==p){if(!b){b=p}V{if(b!==p){a=1d}}}}}}r.1u(a?" x ":" ")}r.1u("e");c.9G=r.6d("");R c},eS:Q(b,c){N a=K.2u();b.W.1r=((c.x/a-K.3j.x)|0)+"px";b.W.1t=((c.y/a-K.3j.y)|0)+"px";b.W.1B=((c.1B/a)|0)+"px";b.W.1E=((c.1E/a)|0)+"px";R b},dJ:Q(d,a,h){N g=K.6S(d+K.eG,"87:ig");N f=K.6S(d+K.eG+"Q9","87:DI");N c=K.2u();g.W.1r=((h.x/c-K.3j.x)|0)+"px";g.W.1t=((h.y/c-K.3j.y)|0)+"px";g.W.pH="y";f.Q8=a.4p;if(a.3I!=="pG"&&a.3I!=P){f.W.3I=a.3I}if(a.8z){f.W.57=a.8z}if(a.dt){f.W.58="ls(2M="+(a.dt*100)+")"}if(a.8V){f.W.8V=a.8V}if(a.4h){f.W.4h=a.4h}if(a.7C){f.W.7C=a.7C}if(a.7o){f.W.7o=a.7o}if(a.bM===1d){g.dv=d;f.dv=d;f.uc=h;f.du=h.1p}f.W.Q7="iA";f.Q6="pF,bS,bS,bS";if(!g.2Y){g.1X(f);K.cA.1X(g)}N e=a.3g||"cm";if(e.1a===1){e+="m"}N i=f.lr*(O.2f.bJ.v8[e.9m(0,1)]);N b=f.pE*(O.2f.bJ.v8[e.9m(1,1)]);if(2w(i)){i=0}if(2w(b)){b=0}g.W.1r=2l(g.W.1r)-i-1+"px";g.W.1t=2l(g.W.1t)+b+"px"},vb:Q(a,g){K.pD(a,g);N b=K.2u();N j=[];N d,h,f;1f(N c=0,e=g.1x.1a;c<e;c++){d=g.1x[c];h=(d.x/b-K.3j.x)|0;f=(d.y/b-K.3j.y)|0;if((c%3)==0&&(c/3)==0){j.1u("m")}V{if((c%3)===1){j.1u(" c")}}j.1u(" "+h+","+f)}j.1u(" x e");a.9G=j.6d("");R a},ii:Q(b){N a=K.U.va(b.6l.id);if(a 1V O.1C.31.kI){a=K.U.va(K.6l.id)}a&&a.2i.5L();O.2f.bX.1g.ii.1j(K,1s);a&&a.3p()},pC:Q(d){N b=K.6l.id+"-"+d;N a=K.v9[b];if(a){R a}N c=O.2f.cN[d];if(!c){6F S eO(d+" is gj a pu cN 2c")}N k=S O.1U(6c.lq,6c.lq,0,0);N e=["m"];1f(N f=0;f<c.1a;f=f+2){N h=c[f];N g=c[f+1];k.1r=1k.4q(k.1r,h);k.1N=1k.4q(k.1N,g);k.1I=1k.3l(k.1I,h);k.1t=1k.3l(k.1t,g);e.1u(h);e.1u(g);if(f==0){e.1u("l")}}e.1u("x e");N l=e.6d(" ");N j=(k.3J()-k.4J())/2;if(j>0){k.1N=k.1N-j;k.1t=k.1t+j}V{k.1r=k.1r+j;k.1I=k.1I-j}a={9G:l,1G:k.3J(),1r:k.1r,1N:k.1N};K.v9[b]=a;R a},1p:"O.2f.bJ"});O.2f.bJ.v8={l:0,c:0.5,r:1,t:0,m:0.5,b:1};O.2f.pk=O.1A(O.2f,{2T:1d,dG:0,1w:P,2n:P,b3:1b,dH:{},eR:P,iu:P,gy:P,uZ:P,eQ:P,gz:P,Q5:[],86:P,1i:P,cI:P,lh:P,Dx:P,eT:P,gB:P,1o:Q(a,b,c){O.2f.1g.1o.1j(K,1s);K.3f=1O.2G("1w");K.1w=K.3f.5M("2d");K.6l.1X(K.3f);K.eR=1O.2G("1w");K.iu=K.eR.5M("2d");K.eT=1O.2G("1w");K.gB=K.eT.5M("2d");K.2n={};K.86={};if(c){K.1i=c}K.cI=S O.v7(K.1i);if(K.2T){K.cM=1O.2G("1w");K.23=K.cM.5M("2d");K.eQ=1O.2G("1w");K.gz=K.eQ.5M("2d")}K.2o=1O.2G("eY")},9A:Q(a,b){K.gy=!!K.5a?K.5a.1R():a.1R();b&&K.eX();O.2f.1g.9A.1j(K,1s);R 1b},Q4:Q(a){K.7K=a},ld:Q(){K.uZ=S O.2C(2l(K.6l.W.1r),2l(K.6l.W.1t));K.iu.4L(0,0,K.1G.w,K.1G.h);K.iu.7P(K.3f,0,0);if(K.2T){K.gz.4L(0,0,K.1G.w,K.1G.h);K.gz.7P(K.cM,0,0)}},eX:Q(){K.iu.4L(0,0,K.1G.w,K.1G.h);if(K.2T){K.gz.4L(0,0,K.1G.w,K.1G.h)}},gx:Q(b,a){K.gr(K.2n[a][0])},pt:Q(e,d){K.gA=0;if(d){N f=d.3J(),b=(K.5a.1r+K.5a.1I)/2,c=(e.1r+e.1I)/2,a=1k.2s((c-b)/f);K.gA=a*f}},bV:Q(){N a=1O.2G("1w");R!!a.5M},6G:Q(b){K.1G=b.1R();N a=K.3f;a.W.1B=b.w+"px";a.W.1E=b.h+"px";a.1B=b.w;a.1E=b.h;K.eR.1B=b.w;K.eR.1E=b.h;K.eR.W.1B=b.w+"px";K.eR.W.1E=b.h+"px";K.7K=P;K.Q3={};if(K.2T){N c=K.cM;c.W.1B=b.w+"px";c.W.1E=b.h+"px";c.1B=b.w;c.1E=b.h;K.eQ.W.1B=b.w+"px";K.eQ.W.1E=b.h+"px";K.eQ.1B=b.w;K.eQ.1E=b.h}K.eT.1B=b.w;K.eT.1E=b.h;K.eT.W.1B=b.w+"px";K.eT.W.1E=b.h+"px"},v4:Q(g,t,p){p=p||K.U.2u();N f=g.1v;N a;if(t.6m){N b=t.5O||t.5N;N l=t.5N||t.5O;b=b?b:t.4M*2;l=l?l:t.4M*2;N x=(t.ab!=2b)?t.ab:-(0.5*b);N k=(t.aa!=2b)?t.aa:-(0.5*l);N d,v,m,h,e,y,o;if(t.8N){o=t.8N/2R*1k.PI;e=1k.7Z(o);y=1k.8T(o)}if(o){N w,u,n,s=[];s.1u({x:x,y:-k});s.1u({x:x,y:-k-l});s.1u({x:x+b,y:-k-l});s.1u({x:x+b,y:-k});1f(N r=0;r<4;r++){n=s[r];w=y*n.x+e*n.y;u=e*n.x-y*n.y;s[r]={x:w,y:u}}d=v=s[0].x;m=h=s[0].y;1f(N q=1;q<4;q++){if(d>s[q].x){d=s[q].x}if(s[q].x>v){v=s[q].x}if(m>s[q].y){m=s[q].y}if(s[q].y>h){h=s[q].y}}d=f.x+d*p;v=f.x+v*p;m=f.y-m*p;h=f.y-h*p}V{d=f.x+x*p;v=d+b*p;m=f.y-k*p;h=m-l*p}a=S O.1U(d,h,v,m)}V{N c=0;if(t.4v){c+=t.4v}if(t.4M){c+=t.4M}a=S O.1U(f.x+(-c*p),f.y+(-c*p),f.x+(c*p),f.y+(c*p))}R a},3Q:Q(n,b,h){N d,m,f;N c=!!h&&!!h.i4;N i=!!h&&!!h.eE;N g=!!h&&!!h.Q2;if(n.1v==P||!n.1v.5s()){R 1b}if(n.1v){N a;if(n.1v.1p==="O.1h.1F"){a=K.v4(n,b)}V{N a=n.1v.5s()}N k;if(K.U.2a&&K.U.2a.5z){k=K.U.9F()}N j=a&&a.9E(K.5a,{dL:k});N e=1b;N l=1b;if(!i){e=K.gy.a0(a);l=!e&&K.gy.9E(a)||c}m=(b.2g!=="2L")&&!!a&&j;d=m&&!e||(c&&m)||(i&&m);if(i){K.86[n.id]=[n,b]}if(d){K.2n[n.id]=[n,b,l]}V{2t(K.2n[n.id])}K.b3=1d}if(K.b3&&!K.7J){K.3p(h);K.b3=1b}R d},5Z:Q(a,c,b){if(c==="2j"){if(b.7s 1V DH){a.5v=1;a.81=b.7s}V{a.5v=b.4V;a.81=b.7s}}V{if(c==="2q"){a.5v=b.aS||1;a.9x=b.8W||"DG";a.7M=b.8X;a.8O=b.4v}V{if(c==="5L"){a.5v=1;a.81="Q1(7W, 7W, 7W)"}V{a.5v=1;a.8O=1}}}},6I:Q(b,d,a){N c=K.pB(d);if(a&&a.8W){K.23.9x=a.8W}if(b==="2j"){K.23.5v=1;K.23.81=c}V{if(b==="2q"&&a){K.23.5v=1;K.23.7M=c;K.23.8O=a.4v+2}V{K.23.5v=1;K.23.8O=1}}},pB:Q(c){N d=6c(c.4B("49").8F())+1;if(d>=io){K.dG=d-uX;d=d%io+1}N b="aP"+d.7A(16);N a=b.1a;b="#"+b.bv(a-6,a);R b},9D:Q(f,d,e){N c=f.1p;if((c==="O.1h.5P")||(c==="O.1h.8J")||(c==="O.1h.8l")||(c==="O.1h.8k")||(c==="O.1l.k9")){1f(N b=0;b<f.1x.1a;b++){K.9D(f.1x[b],d,e)}R}if(O.1h.4C&&(f 1V O.1h.4C)){K.6X(f,d,e)}V{if(O.1h.2p&&(f 1V O.1h.2p)){K.eV(f,d,e)}V{if(O.1h.3R&&(f 1V O.1h.3R)){if(d.2j==1b){N a=d.4V;d.2j=1d;d.4V=0}K.eU(f,d,e)}V{if(O.1h.1F&&(f 1V O.1h.1F)){K.cL(f,d,e)}V{if(O.1h.ag&&(f 1V O.1h.ag)){K.eS(f,d,e)}}}}}if(a){d.2j=1b;d.4V=a;a=""}},py:Q(k,b,f){N j=K;N c=b.5O||b.5N;N l=b.5N||b.5O;c=c?c:b.4M*2;l=l?l:b.4M*2;N h=(b.ab!=2b)?b.ab:-(0.5*c);N d=(b.aa!=2b)?b.aa:-(0.5*l);N g=1;N i=Q(){N p=K.ix;N s=K.1v;N m=K.W;N q=K.3e;if(!j.86[p]){R}N w=j.6R(s);N v=w[0];N t=w[1];if(!2w(v)&&!2w(t)){N o=j.1w;o.b5();o.3Y(v,t);N u;if(m.8N){u=m.8N/2R*1k.PI}if(u){o.5g(u)}o.3Y(h,d);o.5v=g;N r=O.2f.5f.iq||(O.2f.5f.iq=/pA 2.1/.dr(bE.iz.dm())?DF/1W.DE.1B:1);o.7P(q,0,0,c*r,l*r);if(j.2T){j.6I("2j",p);j.23.b5();j.23.3Y(v,t);if(u){j.23.5g(u)}j.23.3Y(h,d);j.23.iv(0,0,c,l)}}o.b4();j.23.b4();j.5Z(j.1w,"4T");if(!m.uY){j.lh--;if(j.lh==0){j.ld()}}if(!K.pz){j.86[p][0].3e=K.3e;1f(N n in j.86){if(j.86.cj(n)){j.2n[n]=j.86[n]}}j.iy&&1W.5J(j.iy);j.iy=1W.6h(Q(){j.eX();j.3p()},100)}};if(K.86[f][0].3e){N e=K.2n[f][0].3e;if(e.7H&&b.b6&&e.7H!==b.b6){e.7H=b.b6}N a={ix:f,1v:k,W:b,3e:e};if(e.4O===b.6m){a.pz=1d;i.47(a)}V{e.eW=Q(){i.47(a)};e.4O=b.6m}}V{N e=S 4F();e.4O=b.6m;K.86[f][0].3e=e;if(b.b6){e.7H=b.b6}e.eW=Q(){i.47({ix:f,1v:k,W:b,3e:e})}}},cL:Q(f,b,d){if(b.4N!==1b){if(b.6m||b.uY){K.py(f,b,d)}V{if(b.4W&&(b.4W!="pw")){K.pv(f,b,d)}V{N i=K.6R(f);N h=2l(i[0]);N g=2l(i[1]);if(!2w(h)&&!2w(g)){N e=b.4M;N c=K.1w;c.6s();c.dB(h,g,e,0,6.DD,1d);if(b.2q!==1b){K.5Z(K.1w,"2q",b);c.2q()}if(b.2j!==1b){K.5Z(K.1w,"2j",b);c.2j()}if(K.2T){K.6I("2j",d,b);N a=K.23;a.6s();a.dB(h,g,e,0,6.DD,1d);if(b.2q!==1b){a.2q()}if(b.2j!==1b){a.2j()}}}}}}},pv:Q(m,b,h){N n,l,g,f,j,a,c,e;N k;N o=1k.PI/2R;N d=O.2f.cN[b.4W];if(!d){6F S eO(b.4W+" is gj a pu cN 2c")}if(!d.1a||d.1a<2){R}N r=K.6R(m);N q=r[0];N p=r[1];if(2w(q)||2w(p)){R}K.1w.9x="2s";K.1w.dz="2s";if(K.2T){K.23.9x="2s";K.23.dz="2s"}if(b.4W in K.dH){a=K.dH[b.4W]}V{a=S O.1U();if(b.4W==="dK"){}V{1f(j=0;j<d.1a;j+=2){a.1M(S O.3k(d[j],d[j+1]))}}K.dH[b.4W]=a}K.1w.b5();if(K.2T){K.23.b5()}K.1w.3Y(q,p);if(K.2T){K.23.3Y(q,p)}e=o*b.8N;if(!2w(e)){K.1w.5g(e);if(K.2T){K.23.5g(e)}}c=2*b.4M/1k.3l(a.3J(),a.4J());if(b.4W==="dK"){c=b.4M/10}K.1w.3M(c,c);if(K.2T){K.23.3M(c,c)}g=a.64().1P;f=a.64().1S;if(b.4W!=="dK"){K.1w.3Y(-g,-f)}if(K.2T&&b.4W!=="dK"){K.23.3Y(-g,-f)}k=b.4v;b.4v=k/c;if(b.2j!==1b){K.5Z(K.1w,"2j",b);K.1w.6s();1f(j=0;j<d.1a;j=j+2){n=d[j];l=d[j+1];if(j==0){K.1w.2S(n,l)}K.1w.9w(n,l)}K.1w.8B();K.1w.2j();if(K.2T){K.6I("2j",h,b);K.23.6s();1f(j=0;j<d.1a;j=j+2){n=d[j];l=d[j+1];if(j==0){K.1w.2S(n,l)}K.23.9w(n,l)}K.23.8B();K.23.2j()}}if(b.2q!==1b){K.5Z(K.1w,"2q",b);K.1w.6s();1f(j=0;j<d.1a;j=j+2){n=d[j];l=d[j+1];if(j==0){K.1w.2S(n,l)}K.1w.9w(n,l)}K.1w.8B();K.1w.2q();if(K.2T){K.6I("2q",h,b,c);K.23.6s();1f(j=0;j<d.1a;j=j+2){n=d[j];l=d[j+1];if(j==0){K.1w.2S(n,l)}K.23.9w(n,l)}K.23.8B();K.23.2q()}}b.4v=k;K.1w.b4();if(K.2T){K.23.b4()}},eV:Q(c,a,b){a=O.1c.4D({2j:1b},a);K.6X(c,a,b)},6X:Q(e,a,d){N c=(a.2j!==1b);N b=(a.2q!==1b);K.bW(K.1w,e,a,d,{2j:c,2q:b});if(K.2T){K.bW(K.23,e,a,d,{2j:c,2q:b},1d)}},bW:Q(c,l,a,e,j,o){N h=1;if(2v c.bO==="Q"){N m=K.8q(a,h);c.bO(m)}N f=l.1x;N g=f.1a;c.6s();N b=K.6R(f[0]);N n=b[0];N k=b[1];if(!2w(n)&&!2w(k)){c.2S(b[0],b[1]);1f(N d=1;d<g;++d){N p=K.6R(f[d]);c.9w(p[0],p[1])}if(j.2j){if(o){K.6I("2j",e,a)}V{if(a){K.5Z(c,"2j",a)}}c.2j()}if(j.2q){if(o){K.6I("2q",e,a)}V{if(a){K.5Z(c,"2q",a)}}if(a.DC&&a.4v===0){c.8B()}V{c.2q()}}}if(2v c.bO==="Q"){c.bO([])}},eU:Q(g,a,c){N e=g.1x;N f=e.1a;if(f===1){K.6X(e[0],a,c)}V{K.gB.4L(0,0,K.1G.w,K.1G.h);N h=(a.2j!==1b);N j=(a.2q!==1b);if(h){K.bW(K.gB,e[0],O.1c.4D({2q:1b,4V:1},a),c,{2j:1d});K.gB.dI="Q0";1f(N d=1;d<f;++d){K.bW(K.gB,e[d],O.1c.4D({2q:1b,4V:1},a),c,{2j:1d})}K.gB.dI="lg-6B";N b=K.1w.5v;K.1w.5v=a.4V;K.1w.7P(K.eT,0,0);K.1w.5v=b}if(j){K.6X(e[0],O.1c.4D({2j:1b},a),c);1f(N d=1;d<f;++d){K.6X(e[d],O.1c.4D({2j:1b},a),c)}}if(K.2T){1f(N d=0;d<f;++d){K.bW(K.23,e[d],a,c,{2j:h,2q:j},1d)}}}},eS:Q(d,a,c){N b=(S O.1h.4C([S O.1h.1F(d.x,d.y),S O.1h.1F(d.x+d.1B,d.y),S O.1h.1F(d.x+d.1B,d.y+d.1E),S O.1h.1F(d.x,d.y+d.1E)]));K.6X(b,a,c)},dJ:Q(o,a,g){a=O.1c.1M({8z:"#aP",3g:"cm"},a);N p=K.6R(o);if(a.7q||a.7p){N j=2w(a.7q)?0:a.7q;N c=2w(a.7p)?0:a.7p;p[0]+=j;p[1]-=c}K.5Z(K.1w,"4T");K.1w.81=a.8z;K.1w.5v=a.dt||1;N e=[a.7o?a.7o:"bL","bL",a.7C?a.7C:"bL",a.4h?a.4h:"kU",a.8V?a.8V:"u9-u8"].6d(" ");if(a.v6){a.4p=a.4p.42(/^&#x/,"");a.4p=5t.DB(2l(a.4p,16))}N d=a.4p.4B("\\n");N h=d.1a;if(K.1w.gb){K.1w.a7=e;K.1w.ga=O.2f.5f.a6[a.3g[0]]||"3G";K.1w.kT=O.2f.5f.a6[a.3g[1]]||"kS";N m=O.2f.5f.bK[a.3g[1]];if(m==P){m=-0.5}N n=K.1w.eF("Mg").1E||K.1w.eF("xx").1B;p[1]+=n*m*(h-1);1f(N f=0;f<h;f++){if(a.7r!=0){K.1w.b5();K.1w.3Y(p[0],p[1]);K.1w.5g(a.7r*1k.PI/2R);K.1w.gb(d[f],0,(n*f));K.1w.b4()}V{K.1w.gb(d[f],p[0],p[1]+(n*f))}}if(!!g&&a.bM){K.iw(p[0],p[1],a,e,d,g)}}V{if(K.1w.kR){K.1w.u7=e;N b=O.2f.5f.bK[a.3g[0]];if(b==P){b=-0.5}N m=O.2f.5f.bK[a.3g[1]];if(m==P){m=-0.5}N n=K.1w.kQ("xx");p[1]+=n*(1+(m*h));1f(N f=0;f<h;f++){N l=p[0]+(b*K.1w.kQ(d[f]));N k=p[1]+(f*n);K.1w.3Y(l,k);K.1w.kR(d[f]);K.1w.3Y(-l,-k)}if(!!g&&a.bM){K.iw(l,k,a,e,d,g)}}}K.5Z(K.1w,"4T")},iw:Q(l,j,a,c,b,e){N h=0;N k=0;N o=l;N n=j;c=c.4B(" ");N f={7C:c[2],4h:c[3],8V:c[4]};1f(N d=0,g=b.1a;d<g;d++){N m=O.1c.v5(f,b[d],K.2o);if(m.lp>h){h=m.lp}k+=m.DA}5m(K.1w.ga){1K"1r":1D;1K"1I":l=l-h;1D;1K"3G":l=l-h/2;1D}5m(K.1w.kT){1K"1t":1D;1K"1N":j=j-k;1D;1K"3G":j=j-k/2;1D}if(a.7r!==0){if(K.2T){K.23.b5();K.23.3Y(o,n);K.23.5g(a.7r*1k.PI/2R);K.23.3Y(-o,-n);K.6I("2j",e,a);K.23.iv(l,j,h,k);K.23.b4()}}V{if(K.2T){K.6I("2j",e,a);K.23.iv(l,j,h,k)}}},8q:Q(c,b){if(!c){R[]}N a=c.4v*b;N d=c.aR;5m(d){1K"cD":R[];1K"lo":R[1,4*a];1K"ln":R[4*a,4*a];1K"ll":R[4*a,4*a,1,4*a];1K"lk":R[8*a,4*a];1K"lj":R[8*a,4*a,1,4*a];4m:if(!d){R[]}if(O.1c.4k(d)){R d}d=O.5t.li(d).42(/\\s+/g,",");R d.42(/\\[|\\]/gi,"").4B(",")}},6R:Q(b){N c=K.2u();N d=K.5a;N a=((b.x-K.gA)/c+(-d.1r/c));N e=((d.1t/c)-b.y/c);R[a,e]},Dy:Q(a,f){N b=K.2u();N c=K.5a;N e=a*b+K.gA+c.1r;N d=c.1t-f*b;R S O.1h.1F(e,d)},5L:Q(){N a=K.3f.1E;N b=K.3f.1B;K.1w.4L(0,0,b,a);K.2n={};K.86={};if(K.2T){K.23.4L(0,0,b,a);K.gz.4L(0,0,b,a)}K.iu.4L(0,0,b,a);if(K.2T){K.gz.4L(0,0,b,a)}},PZ:Q(a){K.2n={}},gq:Q(g){N h=P;N j=P;if(K.2T){if(K.U&&!K.U.41){N i=g.xy;N e=i.x|0;N d=i.y|0;N c=K.23.uW(e,d,1,1).52;if(c[3]===7W){N b=c[2]+(eP*(c[1]+(eP*c[0])));if(b){h=K.86["O.3o.Dz"+(b-1+K.dG)];if(h){j=h[0];N a;if(j.1v.1p==="O.1h.1F"){a=K.v4(j,h[1])}V{a=j.1v.5s()}N f=K.Dy(e,d);if(!K.86[j.id][1].bM&&!a.cB(f.x,f.y)){j=P}}}}}}R j},gr:Q(j,n){if(!(O.1c.4k(j))){j=[j]}K.1w.dI="v0-4n";N e={};1f(N q=0,r=j.1a;q<r;++q){N l=j[q].1v.5s();N c=l&&l.9E(K.5a);if(c){N h=K.86[j[q].id];N f=h[0].1v;N s=h[1];N d=K.6R(S O.1h.1F(l.1r,l.1t));N b=K.6R(S O.1h.1F(l.1I,l.1N));K.1w.4L(d[0],d[1],1k.3C(b[0]-d[0]),1k.3C(b[1]-d[1]));1f(N m in K.1i.2n){N p=K.1i.2n[m];if(!e[p.id]){if(l.9E(p.1v.5s())){K.2n[p.id]=[p,K.86[p.id][1]];e[p.id]=[p,K.86[p.id][1]]}}}1f(N k=PY;k<=PX;k++){1f(N g=PW;g<=PV;g++){N u=k*1i.Ds+g;N t=1i.uO[u];if(t){1f(N o in t){N p=t[o]}}}}if(!(n&&n.PU)){2t K.86[h[0].id]}}}1f(N o in e){N a=e[o];K.9D(a[0].1v,O.1c.4D({4V:1,2q:1b},a[1]),a[0].id)}K.1w.dI="lg-6B";K.ld();K.3p()},3p:Q(f){if(K.7J){R}K.5Z(K.1w,"4T");N n=K.3f.1E;N c=K.3f.1B;K.1w.4L(0,0,c,n);if(K.2T){K.23.4L(0,0,c,n)}if(K.gy){if(f&&f.i4){N k=S O.2C(0,0)}V{N k=K.U.ir(K.uZ)}K.1w.7P(K.eR,k.x,k.y,K.1G.w,K.1G.h);if(K.2T){K.23.7P(K.eQ,k.x,k.y,K.1G.w,K.1G.h)}}K.Dx=[];N o,j,a,g;N m=(K.U.2a&&K.U.2a.5z)&&K.U.9F();K.lh=0;N d=K.2n;1f(N b in d){g=d[b];o=g[0];a=g[1];j=o.1v;K.pt(j.5s(),m);if(a.6m&&!a.uY&&j.1p==="O.1h.1F"){K.lh++}K.9D(j,a,o.id);if(a.2q==1d){N h=j.1p;if((h==="O.1h.5P")||(h==="O.1h.8k")){1f(N e=0;e<j.1x.1a;e++){K.6X(j.1x[e],O.1c.4D({2j:1b},a),o.id)}}5m(j.1p){1K"O.1h.3R":K.6X(j.1x[0],O.1c.4D({2j:1b},a),o.id);1D;4m:1D}}2t d[b];if(a.4p){N l=j.9u();if(l==P){5K}K.dJ(l,a,b)}}K.ld();K.1w.dI="lg-6B"},1m:Q(){K.cI.1m();K.cI=P;O.2f.1g.1m.1j(K,1s)},1p:"O.2f.pk"});O.2f.5f.a6={l:"1r",r:"1I",t:"1t",b:"1N"};O.2f.5f.bK={l:0,r:-1,t:0,b:-1};O.2f.5f.iq=P;O.2f.dE=O.1A(O.2f,{2T:1b,dG:0,1w:P,4E:P,b3:1b,dH:{},ip:{},7O:1b,b2:P,1o:Q(a,b,c){O.2f.1g.1o.1j(K,1s);K.3f=1O.2G("1w");K.6l.1X(K.3f);K.1w=K.3f.5M("2d");K.1i=c;K.4E={};K.b2=[];if(b&&b.2T){K.2T=b.2T;if(!!b.7O){K.7O=b.7O}if(K.7O){K.cM=1O.2G("1w");K.23=K.cM.5M("2d")}}},9A:Q(a,b){O.2f.1g.9A.1j(K,1s);R 1b},gx:Q(b,a){K.ps(K.4E[a][0])},bV:Q(){N a=1O.2G("1w");R!!a.5M},6G:Q(b){K.1G=b.1R();N a=K.3f;a.W.1B=b.w+"px";a.W.1E=b.h+"px";a.1B=b.w;a.1E=b.h;K.7K=P;if(K.2T&&K.7O){N c=K.cM;c.W.1B=b.w+"px";c.W.1E=b.h+"px";c.1B=b.w;c.1E=b.h}},lf:Q(d,a){N c;if(!a.eE&&a.a2===0){K.b2=[];K.4E={}}if(d.1v){N b=d.1v.5s();c=!!b&&b.9E(K.5a);if(c){if(K.7O){K.4E[d.id]=d}V{K.b2.1u(d)}}K.b3=1d}if(K.b3&&!K.7J){K.3p();K.b3=1b}R c},9D:Q(c,a,b){if(O.1h.1F&&(c 1V O.1h.1F)){K.cL(c,a,b)}},Dw:Q(c){N d=6c(c.4B("49").8F())+1;if(d>=io){K.dG=d-uX;d=d%io+1}N b="aP"+d.7A(16);N a=b.1a;b="#"+b.bv(a-6,a);R b},6I:Q(b,d,a){N c=K.Dw(d);if(b==="2j"){K.23.5v=1;K.23.81=c;K.23.7M=c}},cL:Q(f,b,e){b=b||K.1i.W;if(b.4Y){N c=K.6R(f);N g=c[0]-b.4Y.3b[0];N d=c[1]-b.4Y.3b[1];N a=b.4Y.3e||b.4Y.1w;if(b.5N&&b.5O){K.1w.7P(a,g,d,b.5N,b.5O)}V{K.1w.7P(a,g,d)}if(K.2T&&K.7O){K.6I("2j",e);b.4Y.kY(K.23,g,d)}}},6R:Q(b){N c=K.2u();N d=K.5a;N a=(b.x/c+(-d.1r/c));N e=((d.1t/c)-b.y/c);R[a,e]},5L:Q(){N a=K.3f.1E;N b=K.3f.1B;K.1w.4L(0,0,b,a);K.4E={};K.b2.1a=0;if(K.2T){if(K.7O){K.23.4L(0,0,b,a)}}},Dv:Q(k){N B=P,p,m;if(K.2T){if(K.U&&!K.U.41){N c=k.xy;N z=c.x|0;N y=c.y|0;if(K.7O){N C=K.23.uW(z,y,1,1).52;if(C[3]===7W){N o=C[2]+(eP*(C[1]+(eP*C[0])));if(o){N d=K.4E["O.PT"+(o-1+K.dG)];B=d;if(B&&B.1v){N n=B.W&&B.W.4Y.1G||(K.1i.W&&K.1i.W.4Y.1G);N b=K.U.dF(S O.3k(B.1v.x,B.1v.y));if(1k.3C(b.x-z)>=n[0]/2){B=P}V{if(1k.3C(b.y-y)>=n[0]/2){B=P}}}}}}V{N u=K.b2.1a-1,j=P;if(u>0){N l,e,a,A;N t=K.b2[0].W||K.1i.W;N g=t&&t.4Y;N x=g.3b&&g.3b[0]||0;N v=g.3b&&g.3b[1]||0;if(g.3e||g.1G){1f(N q=0;q<=u;q++){j=K.b2[q];p=K.6R(j.1v);if(g.3e){N f=t.5O||(g.1G&&g.1G.1B)||(g.3e&&g.3e.1B);N s=t.5N||(g.1G&&g.1G.1E)||(g.3e&&g.3e.1E);l=p[1]-v;e=p[1]-v+s;a=p[0]-x;A=p[0]-x+f}V{N m=g.4K;l=p[1]-m;e=p[1]+m;a=p[0]-m;A=p[0]+m}if(z>a&&z<A&&y>l&&y<e){B=j;1D}}}}}}}R B},ps:Q(b){if(!(O.1c.4k(b))){b=[b]}1f(N c=0,a=b.1a;c<a;++c){if(K.7O){2t K.4E[b[c].id]}V{K.Du(b[c].id)}}K.3p()},Du:Q(b){N a=K.PS.1a-1;1f(N c=a;c>=0;c++){if(K.b2[c].id===b){K.b2.6f(c,1);1D}}},3p:Q(){if(!K.7J){N b=K.3f.1E;N d=K.3f.1B;N f;K.1w.4L(0,0,d,b);if(K.2T&&K.7O){K.23.gh(1,0,0,1,0,0);K.23.4L(0,0,d,b)}if(K.7O){1f(N e in K.4E){if(!K.4E.cj(e)){5K}f=K.4E[e];K.9D(f.1v,f.W,f.id)}}V{N a=K.b2.1a-1;1f(N c=a;c>=0;c--){f=K.b2[c];K.9D(f.1v,f.W,f.id)}}}},1p:"O.2f.dE"});O.1C.31=O.1A(O.1C,{2K:["uV","Do","uU","Dn","PR","PQ","PP","uN","tW","tV","tU","pr","gw","pq","pp","uT","uS","le","Dt","im","cE","po","pn","pm"],5y:1b,gt:1b,cK:1d,Dl:1d,2n:P,58:P,6i:P,gs:P,PO:1d,W:P,aZ:P,9B:P,9v:P,uR:["6C","bJ","5f","pk"],2i:P,Dq:P,lc:P,7Y:1b,5h:1,pj:1d,il:1d,uO:[],PN:10,Ds:20,PM:P,PL:P,PK:[],bU:P,uP:1b,gv:0,gu:0,1o:Q(c,b){K.2K=O.1C.31.1g.2K.7E(O.1C.1g.2K);O.1C.1g.1o.1j(K,1s);if(!K.2i||!K.2i.bV()){K.Dr()}if(!K.2i||!K.2i.bV()){K.2i=P;K.Dp()}if(!K.aZ){K.aZ=S O.p5()}K.2n=[];K.6i=[];K.gs={};if(K.9B){1f(N d=0,a=K.9B.1a;d<a;d++){K.9B[d].g5(K)}}K.9C=[];K.uP=K.2i 1V O.2f.pk},1m:Q(){if(K.9B){N c,b,a;1f(b=0,a=K.9B.1a;b<a;b++){c=K.9B[b];if(c.um){c.1m()}}K.9B=P}if(K.9v){if(K.9v.um){K.9v.1m()}K.9v=P}K.a8();K.2n=P;K.6i=P;K.gs=P;if(K.2i){K.2i.1m()}K.2i=P;K.lc=P;K.7Y=P;O.1C.1g.1m.1j(K,1s)},1R:Q(e){if(e==P){e=S O.1C.31(K.2c,K.85())}e=O.1C.1g.1R.1j(K,[e]);N c=K.2n;N a=c.1a;N d=S 3T(a);1f(N b=0;b<a;++b){d[b]=c[b].1R()}e.2n=d;R e},cE:Q(a){if(K.cF()&&K.3v){K.1n.1L("cE",a)}},Dr:Q(){1f(N c=0,a=K.uR.1a;c<a;c++){N b=K.uR[c];N d=(2v b==="Q")?b:O.2f[b];if(d&&d.1g.bV()){K.2i=S d(K.1q,K.Dq,K);1D}}},Dp:Q(){},2Z:Q(b){O.1C.1g.2Z.1j(K,1s);if(!K.2i){K.U.bG(K)}V{K.2i.U=K.U;N a=K.U.5i();a.w=a.w*K.5h;a.h=a.h*K.5h;K.2i.6G(a)}},uQ:Q(){if(K.9B){N c,b,a;1f(b=0,a=K.9B.1a;b<a;b++){c=K.9B[b];if(c.9t){c.2r()}}}},ae:Q(c){K.7Y=1b;if(K.9B){N d,b,a;1f(b=0,a=K.9B.1a;b<a;b++){d=K.9B[b];if(d.9t){d.2h()}}}},dD:Q(){O.1C.1g.dD.1j(K,1s);N a=K.U.5i();a.w=a.w*K.5h;a.h=a.h*K.5h;K.2i.6G(a)},2S:Q(a,b,n){N k=K;O.1C.1g.2S.1j(K,1s);if(K.gt&&!K.cK){if(b){K.1q.W.1r=0+"px";K.1q.W.1t=0+"px"}V{K.1q.W.1r=-2l(K.U.3s.W.1r,10)+"px";K.1q.W.1t=-2l(K.U.3s.W.1t,10)+"px"}R}K.cK=1b;N i=K.uP;K.bU=b;N g=(O.2f.NG&&K.2i 1V O.2f.NG);if(g){n||K.2i.PJ(b)}V{N c=1d;if(!n){K.2i.3f.W.3v="9y";if(i){K.2i.ld()}N m=K.U.5i(),j=m.w,f=m.h,e=(j/2*K.5h)-j/2,d=(f/2*K.5h)-f/2;e+=2l(K.U.3s.W.1r,10);e=-1k.2s(e);d+=2l(K.U.3s.W.1t,10);d=-1k.2s(d);K.1q.W.1r=e+"px";K.1q.W.1t=d+"px";N p=K.U.48().3M(K.5h);c=K.2i.9A(p,b);K.2i.3f.W.3v="";if(O.gc===1d){K.1q.cJ=K.1q.cJ}if(!b&&c){K.eD(a)}}}if(!K.7Y||(!g&&(b||!c))){K.7Y=1d;if(K.pj&&i){if(!b||!K.gu){K.eD(a)}V{N h=K.U.bT(K.gu),o=O.2z.3P(Q(){R Q(q){k.eD(a,q)}(b)},K);K.2i.cI.b1(K.2i.3f,h,o)}}if(!i||!K.pj){K.eD(a)}K.il=1b}if(i){K.gv=K.U.2u();N l=S O.2C(2l(K.2i.6l.W.1r),2l(K.2i.6l.W.1t));K.gu=K.U.gp(l)}},b0:Q(b,a){if(K.gt){K.1q.W.1r=-2l(K.U.3s.W.1r,10)+"px";K.1q.W.1t=-2l(K.U.3s.W.1t,10)+"px"}},eD:Q(g,b){N f=K,e,d=f.2n;f.2i.7J=1d;1f(N c=0,a=d.1a;c<a;c++){if(c===(a-1)){f.2i.7J=1b}e=d[c];f.3Q(e,2b,{eE:f.il||(b||f.bU)})}},3p:Q(){if(O.2f.NG&&K.2i 1V O.2f.NG){K.7Y=1b}R O.1C.1g.3p.1j(K,1s)},2g:Q(a){O.1C.1g.2g.1j(K,1s);N b=K.1q.W.2g;if(b!==K.2i.3f.W.2g){K.2i.3f.W.2g=b}},7I:Q(b,l){if(!(O.1c.4k(b))){b=[b]}N j=!l||!l.5Q;if(j){N a={2n:b};N h=K.1n.1L("Do",a);if(h===1b){R}b=a.2n}N f=[];K.2i.7J=1d;1f(N d=0,g=b.1a;d<g;d++){if(d===(g-1)){K.2i.7J=1b}N k=b[d];if(K.lc&&!(k.1v 1V K.lc)){6F S ik("7I: PH PG be an "+K.lc.1g.1p)}k.1i=K;K.2n.1u(k);if(k.1v&&k.1v.1p==="O.1h.ds"){5K}N e=K.3Q(k,2b,{eE:1d});if(!e){f.1u(k)}}N c=f.1a==0?1d:1b;K.1n.1L("Dn",{2n:f,6b:c})},a8:Q(d,a){N c=(d==2b);if(c){d=K.2n}if(d){K.af(d,a);1f(N b=d.1a-1;b>=0;b--){d[b].1m()}}},af:Q(b){if(!b||b.1a===0){R}if(b===K.2n){R K.Dm()}if(!(O.1c.4k(b))){b=[b]}if(b===K.6i){b=b.a3()}N c=[];1f(N f=b.1a-1;f>=0;f--){N j=b[f];2t K.gs[j.id];N h=O.1c.2N(K.2n,j);if(h===-1){c.1u(j);5K}K.2n.6f(h,1);if(O.1c.2N(K.6i,j)!==-1){O.1c.aM(K.6i,j)}j.1i=P}K.2i.5L();N a=[];1f(N d=0,g=K.2n.1a;d<g;d++){j=K.2n[d];a.1u(j)}K.2n=[];K.7I(a);N e=c.1a==0?1d:1b;K.1n.1L("uN",{2n:c,6b:e})},Dm:Q(){K.2i.5L();K.uO=[];K.2n=[];K.gs={};K.6i=[];K.1n.1L("uN",{2n:[],6b:1d})},3Q:Q(p,b,j){N o=K;if(!K.7Y){R}if(!b||2v b!=="6z"){if(!b&&p.7V===O.6o.cf){b="2t"}N n=p.7l;if(n==="7k"&&p.cu){b=p.cu}V{b=p.W||K.W}if(!b){b=K.aZ.gg(p,n)}}N h;if(K.Dl&&(K.2i 1V O.2f.6C)||(K.2i 1V O.2f.bJ)){N f=p.1v;if(f){K.2i.la(p.id);K.2i.Dk(f.id);if((f.1p==="O.1h.5P")||(f.1p==="O.1h.8J")||(f.1p==="O.1h.8l")||(f.1p==="O.1h.8k")||f.uM){1f(N g=0,k=f.1x.1a;g<k;g++){N c=f.1x[g].id;d(c)}}V{d(f.id)}}N l=K.48();N a=l.3J();N e=l.4J();N m=O.1c.PF(p.1v,S O.1U(l.1r-a,l.1N-e,l.1I+a,l.1t+e),1d,1d);p.1v=m;h=K.2i.3Q(p,b,j);p.1v=f;K.2i.aO.W.3I="4u"}V{h=K.2i.3Q(p,b,j)}if(h===1b||h===P){K.gs[p.id]=p}V{2t K.gs[p.id]}R h;Q d(s,r){if(r){N q=1O.8E(s+"PE"+r);r++}V{N q=1O.8E(s);r=1}if(q){o.2i.aO.2U(q);d(s,r)}}},gr:Q(a){K.2i.gr(a)},l8:Q(a){if(K.3v==1b){R P}if(!K.2i){6F S eO("l8 Dj on 1i pi no 2i. Di Dh Dg Df De a 1i, Dd gj Dc 3w ij is Db pi it.")}N b=P;N c=K.2i.gq(a);if(c){if(2v c==="cp"){b=K.Da(c)}V{b=c}}R b},uL:Q(c,b){N a=P;1f(N d in K.2n){if(K.2n[d][c]===b){a=K.2n[d];1D}}R a},Da:Q(a){R K.uL("id",a)},PD:Q(a){R K.uL("kB",a)},PC:Q(c,d){N b,a,f=[];1f(N e in K.2n){a=K.2n[e];if(a&&a.6T){if(a.6T[c]===d){f.1u(a)}}}R f},PB:Q(a){},PA:Q(a){},uK:Q(){N a=P;N b=K.2n;if(b){N c=P;1f(N d in K.2n){c=b[d].1v;if(c){if(a===P){a=S O.1U()}a.1M(c.5s())}}}R a},1p:"O.1C.31"});O.1C.31.kI=O.1A(O.1C.31,{l9:1b,1Q:P,1o:Q(b,a){O.1C.31.1g.1o.1j(K,1s)},2g:Q(){},l8:Q(a){N d=K.1Q;N c;1f(N b=0;b<d.1a;b++){c=d[b].l8(a);if(c){R c}}},2Z:Q(b){O.1C.31.1g.2Z.1j(K,1s);K.uG();1f(N a=0;a<K.1Q.1a;a++){K.1Q[a].1q.W.dC="2L"}b.1n.4Q("7w",K,K.uI)},ae:Q(a){a.1n.6H("7w",K,K.uI);K.uH();O.1C.31.1g.ae.1j(K,1s)},uG:Q(){N b;1f(N a=0;a<K.U.1Q.1a;++a){b=K.U.1Q[a];if(O.1c.2N(K.1Q,b)!==-1){b.2i.ii(K.2i)}}},uH:Q(){N b;1f(N a=0;a<K.1Q.1a;++a){b=K.1Q[a];if(K.2i&&b.2i.uJ()===K.id){K.2i.ii(b.2i)}}},uI:Q(a){N b=a.1i;if(a.aV==="8v"&&O.1c.2N(K.1Q,b)!==-1){K.uH();K.uG()}},1p:"O.1C.31.kI"});O.4a.go=O.1A(O.4a,{9z:P,uF:1d,3b:P,1o:Q(h,d,g,c,b,f,e){N a=[h,d,g,c,f,e];O.4a.1g.1o.1j(K,a);K.3b=(b!=P)?b:{1G:S O.2J(0,0),3j:S O.2C(0,0)}},1m:Q(){K.3b=P;K.9z=P;O.4a.1g.1m.1j(K,1s)},eN:Q(){K.uE();O.4a.1g.eN.1j(K,1s)},2S:Q(c){N b=K.9z;K.9z=K.uD(c);N d=K.pg(c);N a=S 3T(d);O.4a.1g.2S.1j(K,a);if(K.9z!==b){K.ph()}},6G:Q(b){O.4a.1g.6G.1j(K,1s);if((K.5x)&&(K.U)){N a=K.U.bT(K.5x);K.2S(a)}},uD:Q(b){N d=K.U.gp(b);N c=K.U.48();N a=c.D9(d);R O.1U.D8(a)},ph:Q(){},pg:Q(b){N e=b.3j(K.3b.3j);N a=K.1G||K.83;if(K.l4){K.9z="tr"}N d=(K.9z.ef(0)==="t");e.y+=(d)?-a.h:K.3b.1G.h;N c=(K.9z.ef(1)==="l");e.x+=(c)?-a.w:K.3b.1G.w;R e},1p:"O.4a.go"});O.4a.p9=O.1A(O.4a.go,{pa:P,gm:P,pe:1b,aY:P,8Z:P,pd:1b,1o:Q(g,c,f,b,a,e,d){O.4a.go.1g.1o.1j(K,1s);if(K.pd){K.ph();K.uD=Q(h){R K.9z}}K.59.W.2x="3i";K.59.W.5u=1;if(e){K.6W.W.5u=1}K.91.W.2x="3i";K.91.W.1t="bS";K.91.W.1r="bS";K.91.W.1E="100%";K.91.W.1B="100%"},1m:Q(){K.pa=P;K.gm=P;K.pe=P;K.pd=1b;K.aY=P;1f(N a=0;a<K.8Z.1a;a++){N b=K.8Z[a];if(b.4Y){b.1q.2U(b.4Y)}b.4Y=P;if(b.1q){K.91.2U(b.1q)}b.1q=P}K.8Z=P;O.4a.go.1g.1m.1j(K,1s)},uC:Q(){},ad:Q(a){},6G:Q(a){O.4a.go.1g.6G.1j(K,1s);K.uB()},ph:Q(){K.4P=K.aY?K.aY[K.9z].4P:{1t:0,1I:0,1N:0,1r:0};if(K.6W){N a=K.l7();K.6W.W.1I=a.1I+K.4P.1I+"px";K.6W.W.1t=a.1t+K.4P.1t+"px"}K.uB()},pg:Q(a){N b=O.4a.go.1g.pg.1j(K,1s);if(K.aY){b=b.3j(K.aY[K.9z].3j)}R b},D7:Q(){K.8Z=[];N f=P;1f(N e in K.aY){f=e;1D}if(!K.aY){R}N a=K.aY[f];1f(N d=0;d<a.8Z.1a;d++){N h={};K.8Z.1u(h);N b=K.id+"Pz"+d;h.1q=O.1c.7v(b,P,P,P,"3i",P,"9y",P);N c=K.id+"Py"+d;N g=(K.pe)?O.1c.92:O.1c.pf;h.4Y=g(c,P,K.gm,K.pa,"3i",P,P,P);h.1q.1X(h.4Y);K.91.1X(h.1q)}},uB:Q(){if(!K.8Z){K.D7()}if(K.1G&&K.9z&&K.aY){N j=K.aY[K.9z];1f(N f=0;f<j.8Z.1a;f++){N c=j.8Z[f];N e=K.8Z[f];N d=c.3b.1r;N k=c.3b.1N;N a=c.3b.1I;N n=c.3b.1t;N m=(2w(c.1G.w))?K.1G.w-(a+d):c.1G.w;N g=(2w(c.1G.h))?K.1G.h-(k+n)+32:c.1G.h;e.1q.W.1B=(m<0?0:m)+"px";e.1q.W.1E=(g<0?0:g)+"px";e.1q.W.1r=(d!=P)?d+"px":"";e.1q.W.1N=(k!=P)?k+"px":"";e.1q.W.1I=(a!=P)?a+"px":"";e.1q.W.1t=(n!=P)?n+"px":"";e.4Y.W.1r=c.2x.x+"px";e.4Y.W.1t=c.2x.y+"px"}K.59.W.1r=K.4P.1r+"px";K.59.W.1t=K.4P.1t+"px"}},1p:"O.4a.p9"});O.4a.D3=O.1A(O.4a.p9,{l6:"Px",ih:1d,gn:1d,gm:S O.2J(Pw,Pv),pe:1b,pd:1b,aY:{tl:{3j:S O.2C(44,-32),4P:S O.1U(0,0,0,-2),8Z:[{1G:S O.2J("4w","4w"),3b:S O.1U(0,51,22,0),2x:S O.2C(0,0)},{1G:S O.2J(22,"4w"),3b:S O.1U(P,50,0,0),2x:S O.2C(-eM,0)},{1G:S O.2J("4w",19),3b:S O.1U(0,0,22,P),2x:S O.2C(0,-uA)},{1G:S O.2J(22,18),3b:S O.1U(P,0,0,P),2x:S O.2C(-eM,-Pu)},{1G:S O.2J(29,35),3b:S O.1U(P,-27,44,P),2x:S O.2C(-4,-Pt)}]},tr:{3j:S O.2C(-45,-32),4P:S O.1U(0,0,0,-1),8Z:[{1G:S O.2J("4w","4w"),3b:S O.1U(0,51,22,0),2x:S O.2C(0,0)},{1G:S O.2J(22,"4w"),3b:S O.1U(P,50,0,0),2x:S O.2C(-eM,0)},{1G:S O.2J("4w",19),3b:S O.1U(0,0,22,P),2x:S O.2C(0,-uA)},{1G:S O.2J(22,19),3b:S O.1U(P,0,0,P),2x:S O.2C(-eM,-uA)},{1G:S O.2J(29,35),3b:S O.1U(43,-27,P,P),2x:S O.2C(-Ps,-Pr)}]},bl:{3j:S O.2C(45,32),4P:S O.1U(0,1,0,0),8Z:[{1G:S O.2J("4w","4w"),3b:S O.1U(0,53,22,0),2x:S O.2C(0,0)},{1G:S O.2J(22,"4w"),3b:S O.1U(P,53,0,0),2x:S O.2C(-eM,0)},{1G:S O.2J("4w",21),3b:S O.1U(0,0,22,P),2x:S O.2C(0,-pb)},{1G:S O.2J(22,21),3b:S O.1U(P,0,0,P),2x:S O.2C(-eM,-pb)},{1G:S O.2J(29,33),3b:S O.1U(P,P,43,-27),2x:S O.2C(-106,-Pq)}]},br:{3j:S O.2C(-44,32),4P:S O.1U(0,1,0,0),8Z:[{1G:S O.2J("4w","4w"),3b:S O.1U(0,53,22,0),2x:S O.2C(0,0)},{1G:S O.2J(22,"4w"),3b:S O.1U(P,53,0,0),2x:S O.2C(-eM,0)},{1G:S O.2J("4w",21),3b:S O.1U(0,0,22,P),2x:S O.2C(0,-pb)},{1G:S O.2J(22,21),3b:S O.1U(P,0,0,P),2x:S O.2C(-eM,-pb)},{1G:S O.2J(29,33),3b:S O.1U(45,P,P,-28),2x:S O.2C(-Pp,-Po)}]}},bR:S O.2J(105,30),bQ:S O.2J(Pn,Pm),cH:P,l4:1d,1o:Q(h,d,g,c,a,f,e,b){if(b!=2b){K.l4=b}K.pa=O.1c.4X()+"Pl-66-gl.2V";O.4a.p9.1g.1o.1j(K,1s);K.59.3U=K.l6},2H:Q(a){O.4a.1g.2H.1j(K,[a]);if(K.l4){K.cH=K.D6(2l(K.1q.W.1r),2l(K.1q.W.1t),2l(K.1q.W.1B),2l(K.1q.W.1E));K.U.l5.1X(K.cH)}R K.1q},D6:Q(p,o,d,r){N q={1z:O.1c.4X()+"ko-66-D4.2V",1B:Pk,1E:Pj,7N:{x:uz,y:0},9Z:{x:8,y:D5},bx:{x:Pi,y:0},bP:{x:Ph,y:D5}};q.5h=(q.9Z.y-q.7N.y)/(q.7N.x-q.9Z.x);N k=r*(2/3);N a=k/q.5h;N c={1r:p,1t:2l(o+r-k+15),1B:2l(d+a+a/4),1E:2l(k)};N b=1O.2G("1q");b.id=O.1c.7L("Pg");b.W.2x="3i";b.W.1r=c.1r+"px";b.W.1t=c.1t+"px";b.W.1B=c.1B+"px";b.W.1E=c.1E+"px";N g=2l(a);N j=10;N m=[];m[0]={1q:{1r:0,1t:0,1B:g,1E:j},3e:{1r:-q.7N.x+g,1t:-q.7N.y,1B:q.1B,1E:q.1E}};m[1]={1q:{1r:g,1t:0,1B:c.1B-g*2,1E:j},3e:{1r:-q.7N.x,1t:-q.7N.y,1B:q.1B,1E:q.1E}};m[6]={1q:{1r:0,1t:c.1E-j,1B:g,1E:j},3e:{1r:-(c.1E)/q.5h-q.9Z.x+g,1t:-q.9Z.y+j,1B:q.1B,1E:q.1E}};m[3]={1q:{1r:0,1t:j,1B:g,1E:c.1E-j*2},3e:{1r:-q.7N.x+g,1t:-q.7N.y-j,1B:q.1B,1E:q.1E}};m[4]={1q:{1r:g,1t:j,1B:c.1B-g*2,1E:c.1E-j*2},3e:{1r:-q.7N.x,1t:-q.7N.y-j,1B:q.1B,1E:q.1E}};m[8]={1q:{1r:c.1B-g,1t:c.1E-j,1B:g,1E:j},3e:{1r:-q.bP.x,1t:-q.bP.y+j,1B:q.1B,1E:q.1E}};m[7]={1q:{1r:g,1t:c.1E-j,1B:c.1B-g*2,1E:j},3e:{1r:-q.bP.x+c.1B-g*2,1t:-q.bP.y+j,1B:q.1B,1E:q.1E}};m[5]={1q:{1r:c.1B-g,1t:j,1B:g,1E:c.1E-j*2},3e:{1r:-q.bP.x,1t:-q.bP.y+c.1E-j,1B:q.1B,1E:q.1E}};m[2]={1q:{1r:c.1B-g,1t:0,1B:g,1E:j},3e:{1r:-q.bx.x+(c.1E)/q.5h,1t:-q.bx.y,1B:q.1B,1E:q.1E}};1f(N h=0;h<m.1a;h++){if(m[h]!=P){N l=1O.2G("1q");l.id=O.1c.7L("Pf");l.W.ac="9y";l.W.a2=1;l.W.5u=h+1;l.W.2x="3i";l.W.1r=m[h].1q.1r+"px";l.W.1t=m[h].1q.1t+"px";l.W.1B=m[h].1q.1B+"px";l.W.1E=m[h].1q.1E+"px";N f=1O.2G("3e");f.4O=O.1c.4X()+"ko-66-D4.2V";f.W.2x="3i";f.W.1r=m[h].3e.1r+"px";f.W.1t=m[h].3e.1t+"px";f.W.1B=m[h].3e.1B+"px";f.W.1E=m[h].3e.1E+"px";l.1X(f);b.1X(l)}}N e=1O.2G("1q");e.id=O.1c.7L("Pe");e.W.ac="9y";e.W.a2=1;e.W.5u=0;e.W.2x="3i";e.W.1r=50+"px";e.W.1t=c.1E-11+"px";e.W.1B=80+"px";e.W.1E=20+"px";N n=1O.2G("3e");n.4O=O.1c.4X()+"ko-66-Pd.2V";n.W.2x="3i";n.W.1r=0+"px";n.W.1t=0+"px";n.W.1B=80+"px";n.W.1E=20+"px";e.1X(n);b.1X(e);R b},aX:Q(){O.4a.1g.aX.1j(K);if(K.cH){K.l4=1b;K.cH.W.2g="2L"}},1p:"O.4a.D3"});O.2F=O.1A({id:P,2c:P,7H:P,nE:P,8K:P,Pc:1b,8D:P,7u:P,82:P,ux:1b,p7:P,1o:Q(b,a){O.1c.1M(K,a);K.8D=[];if(a&&a.8D){K.uq(a.8D)}K.D2(b||O.3o.31.W["4m"]);K.id=O.1c.7L(K.1p+"49")},1m:Q(){1f(N b=0,a=K.8D.1a;b<a;b++){K.8D[b].1m();K.8D[b]=P}K.8D=P;K.82=P},gg:Q(k){N a=K.ux?{}:K.uw(O.1c.1M({},K.82),k);N j=K.8D;N h,b;N c=[];N f=1b;1f(N d=0,e=j.1a;d<e;d++){h=j[d];N g=h.oX(k);if(g){if(h 1V O.kX&&h.CQ){c.1u(h)}V{f=1d;K.uy(h,a,k)}}}if(f==1b&&c.1a>0){f=1d;1f(N d=0,e=c.1a;d<e;d++){K.uy(c[d],a,k)}}if(j.1a>0&&f==1b){a.2g="2L"}if(a.4p!=P&&2v a.4p!=="cp"){a.4p=5t(a.4p)}R a},uy:Q(f,d,b){N a=b.1v?K.D1(b.1v):O.2F.uu[0];N c=f.8Y[a]||f.8Y;if(K.ux===1d){N e=K.82;O.1c.4D(c,{4M:e.4M});if(c.2q===1d||c.4N===1d){O.1c.4D(c,{4v:e.4v,8X:e.8X,aS:e.aS,aR:e.aR,8W:e.8W})}if(c.2j===1d||c.4N===1d){O.1c.4D(c,{7s:e.7s,4V:e.4V})}if(c.4N===1d){O.1c.4D(c,{4M:K.82.4M,6m:K.82.6m,4W:K.82.4W,gk:K.82.gk,5O:K.82.5O,5N:K.82.5N,ab:K.82.ab,aa:K.82.aa})}}R K.uw(O.1c.1M(d,c),b)},uw:Q(d,c){N b=O.1c.1M({},c.6T||c.52);O.1c.1M(b,K.7u);1f(N a in K.p7){d[a]=O.2F.oZ(d[a],b,c,a)}R d},uv:Q(){N d={};N f=K.82;K.p8(d,f);N h=K.8D;N e,g;1f(N c=0,a=h.1a;c<a;c++){e=h[c].8Y;1f(N b in e){g=e[b];if(2v g==="6z"){K.p8(d,g)}V{K.p8(d,e);1D}}}R d},p8:Q(b,c){N d;1f(N a in c){d=c[a];if(2v d==="cp"&&d.eL(/\\$\\{\\w+\\}/)){b[a]=1d}}R b},uq:Q(a){3T.1g.1u.1j(K.8D,a);K.p7=K.uv()},D2:Q(a){K.82=a;K.p7=K.uv()},D1:Q(d){N c=O.2F.uu;1f(N b=0,a=c.1a;b<a;b++){if(d.1p.2N(c[b])!==-1){R c[b]}}},1R:Q(){N b=O.1c.1M({},K);if(K.8D){b.8D=[];1f(N c=0,a=K.8D.1a;c<a;++c){b.8D.1u(K.8D[c].1R())}}b.7u=K.7u&&O.1c.1M({},K.7u);N d=O.1c.1M({},K.82);R S O.2F(d,b)},1p:"O.2F"});O.2F.oZ=Q(d,b,a,c){if(2v d==="cp"&&d.2N("${")!==-1){d=O.5t.5d(d,b,[a,c]);d=(2w(d)||!d)?d:3r(d)}R d};O.2F.uu=["1F","tL","3R","tJ","tK"];O.2F.aW=O.1A({id:P,eK:P,1o:Q(a){K.D0(a);K.id=O.1c.7L(K.1p+"49")},1m:Q(){K.id=P;K.eK=P},D0:Q(a){if(O.1c.4k(a)){if(a.1a>1){K.eK=a}V{6F 6N("it CZ be Pb Pa P9 57!")}}V{6F 6N("P8 is gj P7!")}},1p:"O.2F.aW"});O.2F.l3=O.1A(O.2F.aW,{x1:P,y1:P,x2:P,y2:P,1o:Q(c,e,b,d,a){K.x1=c||0;K.y1=e||0;K.x2=b||0;K.y2=d||0;O.2F.aW.1g.1o.47(K,a)},1m:Q(){K.x1=P;K.y1=P;K.x2=P;K.y2=P;O.2F.aW.1g.1m.47(K)},1p:"O.2F.l3"});O.2F.l2=O.1A(O.2F.aW,{cx:P,cy:P,4K:P,fx:P,fy:P,1o:Q(b,f,a,e,d,c){K.cx=b||0;K.cy=f||0;K.4K=a||0;K.fx=e||0;K.fy=d||0;O.2F.aW.1g.1o.47(K,c)},1m:Q(){K.cx=P;K.cy=P;K.4K=P;K.fx=P;K.fy=P;O.2F.aW.1g.1m.47(K)},1p:"O.2F.l2"});O.2F.CY=O.1A({57:P,1o:Q(a){O.1c.1M(K,a)},1m:Q(){K.57=P},1p:"O.2F.CY"});O.2F.CW=O.1A({57:P,9x:"2s",dz:"2s",ie:10,1B:P,1o:Q(a){O.1c.1M(K,a)},1m:Q(){K.57=P;K.9x=P;K.CX=P;K.ie=P;K.1B=P},1p:"O.2F.CW"});O.2F.4F=S O.1A({3e:P,1w:P,2j:P,2q:P,4K:P,6E:[0,0],3b:P,1G:P,1o:Q(a){O.1c.1M(K,a)},1m:Q(){K.1w=P;if(K.2j){K.2j.1m();K.2j=P}if(K.2q){K.2q.1m();K.2q=P}K.4K=P;K.3b=P;K.1G=P},dA:Q(){},kY:Q(c,a,e){N b,d;if(K.1G){b=K.1G.1B;d=K.1G.1E}V{b=K.3e&&K.3e.W.1B;d=K.3e&&K.3e.W.1E}if(b&&d){c.ig(a,e,b,d);c.2j()}},kZ:Q(c,a){N b=1O.2G("P6");if(c){b.1B=c}if(a){b.1E=a}R b.5M("2d")},1p:"O.2F.4F"});O.2F.CV=O.1A(O.2F.4F,{1o:Q(a){O.2F.4F.1g.1o.1j(K,[a]);K.dA()},1m:Q(){O.2F.4F.1g.1m.1j(K,1s)},dA:Q(){N a=P,f,e=0;if(K.2q){f=K.2q.57;e=K.2q.1B;if(e===2b){e=1}a=K.2q.eJ}N d=2*(K.4K+e)+1;N b={7M:f,4v:e,1G:d,eJ:a};N c=K.kZ(d,d);K.1w=c.1w;d=K.1w.1B;K.2H(b,c,0,0);K.3b=[d/2,d/2];K.1G=[d,d]},2H:Q(b,c,a,d){c.gh(1,0,0,1,0,0);c.3Y(a,d);c.6s();c.dB(b.1G/2,b.1G/2,K.4K,0,2*1k.PI,1d);if(K.2j){c.81=K.2j.57;c.2j()}if(K.2q){c.7M=b.7M;c.8O=b.4v;if(b.eJ){c.bO(b.eJ)}c.2q()}c.8B()},kY:Q(b,a,c){b.gh(1,0,0,1,0,0);b.3Y(a,c);b.6s();b.dB(K.1G[0]/2,K.1G[0]/2,K.4K,0,2*1k.PI,1d);b.2j();b.8B()},1p:"O.2F.CV"});O.2F.p6=O.1A(O.2F.4F,{6r:30,l0:0,8C:3,1o:Q(a){O.2F.4F.1g.1o.1j(K,1s);K.6r=a.6r!==2b?a.6r:K.6r;K.8C=a.8C!==2b?a.8C:K.8C;K.dA()},1m:Q(){O.2F.4F.1g.1m.1j(K,1s);K.6r=P;K.l0=P;K.8C=P},dA:Q(){N d=K.2q.1B===2b?1:K.2q.1B;N c=2*(K.4K+d)+1;N a={7M:K.2q,81:K.2j,1G:c};N b=K.kZ(c,c);K.1w=b.1w;c=K.1w.1B;K.3b=[c/2,c/2];K.2H(b,a,0,0);K.1G=[c,c]},2H:Q(f,c,a,g){f.gh(1,0,0,1,0,0);N b=0;N e=K.6r;K.l0=l1/K.8C-K.6r;if(K.l0<0){R}f.3Y(a,g);f.6s();1f(N d=0;d<K.8C;d++){K.ut(f,K.3b[0],K.3b[1],K.4K,b,e);b=e+K.l0;e=b+K.6r}if(c){K.dw(f,c)}V{f.2j()}f.8B()},dw:Q(b,a){if(a.81){b.81=a.81.57;b.2j()}if(a.7M){b.7M=a.7M.57;b.8O=a.7M.1B;if(a.7M.eJ){b.bO(a.7M.eJ)}b.2q()}},ut:Q(d,a,f,e,b,c){b=b/2R*1k.PI;c=c/2R*1k.PI;d.2S(a,f);d.9w(a+e*1k.8T(b),f+e*1k.7Z(b));d.dB(a,f,e,b,c);d.9w(a,f)},kY:Q(b,a,c){K.2H(b,2b,a,c)},1p:"O.2F.p6"});O.2F.CU=O.1A(O.2F.p6,{7u:P,1o:Q(){},1m:Q(){O.2F.p6.1g.1m.1j(K,1s);K.7u=P},dA:Q(b){if(K.7u===P||K.1w.1B!==b.1G[0]){K.7u=K.kZ(b.1G[0],b.1G[1]);K.1w=K.7u.1w}N a=K.1w.1B;K.3b=[a/2,a/2];K.2H(K.7u,b,0,0);K.1G=[a,a]},2H:Q(c,b,a,d){c.4L(0,0,K.1w.1B,K.1w.1E);c.gh(1,0,0,1,0,0);c.3Y(a,d);c.6s();K.ut(c,K.3b[0],K.3b[1],b.4K,b.P5,b.P4);K.dw(c,b);c.8B()},1p:"O.2F.CU"});O.2F.CT=S O.1A(O.2F.4F,{cG:P,eI:P,6r:P,1o:Q(a){N b=K;if(a.4K===P){R}O.2F.4F.1g.1o.1j(K,1s);b.cG=a.cG;b.eI=a.eI!==2b?a.eI:b.4K;b.6r=a.6r!==2b?a.6r/2R*1k.PI:0;K.dA()},1m:Q(){O.2F.4F.1g.1m.1j(K,1s);K.cG=P;K.eI=P;K.6r=P},dA:Q(){N h="";N a="";N b=0;N g;N f=0;if(K.2q){g=K.2q.57;f=K.2q.1B;if(f===2b){f=1}a=K.2q.dz;h=K.2q.9x;b=K.2q.ie}N e=2*(K.4K+f)+1;N c={7M:g,4v:f,1G:e,9x:h,dz:a,ie:b};N d=K.kZ(e,e);K.1w=d.1w;e=K.1w.1B;K.2H(c,d,0,0);K.3b=[e/2,e/2];K.1G=[e,e]},2H:Q(b,d,a,g){N c,f,e;d.gh(1,0,0,1,0,0);d.3Y(a,g);d.6s();if(K.eI!==K.4K){K.cG=2*K.cG}1f(c=0;c<=K.cG;c++){f=c*2*1k.PI/K.cG-1k.PI/2+K.6r;e=c%2===0?K.4K:K.eI;d.9w(b.1G/2+e*1k.8T(f),b.1G/2+e*1k.7Z(f))}if(K.2j){d.81=K.2j.57;d.2j()}if(K.2q){d.7M=b.7M;d.8O=b.4v;if(b.eJ){d.bO(b.eJ)}d.9x=b.9x;d.dz=b.dz;d.ie=b.ie;d.2q()}d.8B()},kY:Q(c,a,f){c.gh(1,0,0,1,0,0);c.3Y(a,f);c.6s();N b,d,e;1f(b=0;b<=K.cG;b++){e=b*2*1k.PI/K.cG-1k.PI/2+K.6r;d=b%2===0?K.4K:K.eI;c.9w(K.1G[0]/2+d*1k.8T(e),K.1G[0]/2+d*1k.7Z(e))}c.2j();c.8B()},1p:"O.2F.CT"});O.p5=O.1A({6D:P,CS:1d,1o:Q(c,a){K.6D={"4m":S O.2F(O.3o.31.W["4m"]),7k:S O.2F(O.3o.31.W.7k),ic:S O.2F(O.3o.31.W.ic),"2t":S O.2F(O.3o.31.W["2t"])};if(c 1V O.2F){K.6D["4m"]=c;K.6D.7k=c;K.6D.ic=c;K.6D["2t"]=c}V{if(2v c==="6z"){1f(N b in c){if(c[b]1V O.2F){K.6D[b]=c[b]}V{if(2v c[b]==="6z"){K.6D[b]=S O.2F(c[b])}V{K.6D["4m"]=S O.2F(c);K.6D.7k=S O.2F(c);K.6D.ic=S O.2F(c);K.6D["2t"]=S O.2F(c);1D}}}}}O.1c.1M(K,a)},1m:Q(){1f(N a in K.6D){K.6D[a].1m()}K.6D=P},gg:Q(b,c){if(!b){b=S O.3o.31()}if(!K.6D[c]){c="4m"}b.7l=c;N a={};if(K.CS&&c!=="4m"){a=K.6D["4m"].gg(b)}R O.1c.1M(a,K.6D[c].gg(b))},P3:Q(b,d,f,a){N e=[];1f(N c in f){e.1u(S O.kX({8Y:f[c],7u:a,58:S O.gf.CR({2A:O.gf.CR.P2,aV:d,dx:c})}))}K.6D[b].uq(e)},1p:"O.p5"});O.kX=O.1A({id:P,2c:P,7H:P,nE:P,7u:P,58:P,CQ:1b,8Y:P,eH:P,p4:P,oY:P,1o:Q(a){K.8Y={};O.1c.1M(K,a);if(K.eH){2t K.8Y}K.id=O.1c.7L(K.1p+"49")},1m:Q(){1f(N a in K.8Y){K.8Y[a]=P}K.8Y=P;2t K.eH},oX:Q(c){N b=K.5M(c);N a=1d;if(K.p4||K.oY){N d=c.1i.U.uo()}if(K.p4){a=d>=O.2F.oZ(K.p4,b)}if(a&&K.oY){a=d<O.2F.oZ(K.oY,b)}if(a&&K.58){if(K.58.1p==="O.gf.P1"){a=K.58.oX(c)}V{a=K.58.oX(b)}}R a},5M:Q(b){N a=K.7u;if(!a){a=b.6T||b.52}if(2v K.7u==="Q"){a=K.7u(b)}R a},1R:Q(){N b=O.1c.1M({},K);if(K.eH){N a=K.eH.1a;b.eH=S 3T(a);1f(N d=0;d<a;++d){b.eH[d]=K.eH[d].1R()}}V{b.8Y={};N f,e;1f(N c in K.8Y){f=K.8Y[c];e=2v f;if(e==="6z"){b.8Y[c]=O.1c.1M({},f)}V{if(e==="cp"){b.8Y[c]=f}}}}b.58=K.58&&K.58.1R();b.7u=K.7u&&O.1c.1M({},K.7u);R S O.kX(b)},1p:"O.kX"});O.7n=O.1A({1i:P,2D:P,3O:P,9t:1d,um:1d,1o:Q(a){O.1c.1M(K,a);K.2D=a;K.3O=1b},1m:Q(){K.2h();K.1i=P;K.2D=P},g5:Q(a){K.1i=a},2r:Q(){if(!K.3O){K.3O=1d;R 1d}R 1b},2h:Q(){if(K.3O){K.3O=1b;R 1d}R 1b},1p:"O.7n"});O.7n.ul=O.1A(O.7n,{2k:P,7K:P,5h:2,oW:P,ib:P,2r:Q(){N a=O.7n.1g.2r.47(K);if(a){K.1i.1n.on({6V:K.6U,cE:K.6U,ge:K.6U,2y:K});K.6U()}R a},2h:Q(){N a=O.7n.1g.2h.47(K);if(a){K.1i.1n.un({6V:K.6U,cE:K.6U,ge:K.6U,2y:K})}R a},6U:Q(b){N a=K.oV();if(a!==P&&((b&&b.P0)||(K.1i.3v&&K.1i.cF()&&K.CP(a)))){K.a9(a);K.7K=K.1i.U.2u();K.CO(b)}},oV:Q(){if(K.1i.U===P){R P}N a=K.1i.U.48();if(a&&!K.1i.2O.3A(K.1i.U.5X())){a=a.1R().3N(K.1i.U.5X(),K.1i.2O)}R a},CP:Q(a){if(!a){a=K.oV()}N c=!K.2k||!K.2k.a0(a);if(!c&&K.oW){N b=K.7K/K.1i.U.2u();c=(b>=K.oW||b<=(1/K.oW))}R c},a9:Q(b){if(!b){b=K.oV()}N a=b.64();N d=b.3J()*K.5h;N c=b.4J()*K.5h;K.2k=S O.1U(a.1P-(d/2),a.1S-(c/2),a.1P+(d/2),a.1S+(c/2))},CO:Q(a){if(K.ib&&!(a&&a.OZ===1d)){K.1i.9v.oU(K.ib);K.1i.1n.1L("7t")}K.1i.1n.1L("aU");K.ib=K.1i.9v.uk(O.1c.4D({58:K.CN(),3n:K.oT,2y:K},a))},CN:Q(){N a=S O.gf.CM({2A:O.gf.CM.ul,dx:K.2k,2O:K.1i.2O});if(K.1i.58){a=S O.gf.CL({2A:O.gf.CL.OY,OX:[K.1i.58,a]})}R a},oT:Q(g){K.1i.a8();N e=g.2n;if(e&&e.1a>0){N f=K.1i.2O;N d=K.1i.U.5X();if(!d.3A(f)){N c;1f(N b=0,a=e.1a;b<a;++b){c=e[b].1v;if(c){c.3N(f,d)}}}K.1i.7I(e)}K.ib=P;K.1i.1n.1L("7t")},1p:"O.7n.ul"});O.7n.CJ=O.1A(O.7n,{CK:1b,2r:Q(){N a=O.7n.1g.2r.1j(K,1s);if(a){K.1i.1n.on({cE:K.aT,2y:K});if(K.1i.3v==1d||K.CK){K.aT()}V{K.1i.1n.on({ge:K.aT,2y:K})}}R a},2h:Q(){N a=O.7n.1g.2h.47(K);if(a){K.1i.1n.un({cE:K.aT,ge:K.aT,2y:K})}R a},aT:Q(a){N b=K.1i;b.1n.1L("aU",{58:b.58});b.9v.uk(O.1c.4D({3n:K.oT,58:b.58,2y:K},a));b.1n.un({ge:K.aT,2y:K})},oT:Q(h){N e=K.1i;e.a8();N f=h.2n;if(f&&f.1a>0){N g=e.2O;N d=e.U.5X();if(!d.3A(g)){N c;1f(N b=0,a=f.1a;b<a;++b){c=f[b].1v;if(c){c.3N(g,d)}}}e.7I(f)}e.1n.1L("7t",{ib:h})},1p:"O.7n.CJ"});O.7n.ds=O.1A(O.7n,{kW:P,W:P,82:{8z:"#aP",dt:1,4h:"uj",7o:"bL",7C:"bL",3g:"cm",7q:0,7p:0,7r:0,2j:1b,7s:"#oS",4V:0.4,2q:1b,8X:"#oS",aS:1,4v:1,8W:"2s",aR:"cD",bM:1d,CI:1d},uh:1d,ui:1d,oR:P,oQ:P,oO:0,1o:Q(a){K.kW=[];O.7n.1g.1o.1j(K,1s)},1m:Q(){O.7n.1g.1m.1j(K,1s);K.kW=P;K.W=P;K.ui=1d;K.uh=1d;K.oR=P;K.oQ=P;K.oO=0},1R:Q(){N b=S O.7n.ds();N a={};1f(N d in K.W){N c=K.W[d];if(c!==2b){a[d]=c}}b.W=a;R b},dw:Q(g){N l=g;l.W=O.1c.ci(l.W,K.82);if(K.W&&K.W.4h&&3r(K.W.4h)<12){K.W.4h="uj"}l.W=O.1c.ci(l.W,K.W);if(K.oR&&K.oQ&&l.6T){N f=K.oR;N e=l.6T;N j=K.oQ;N b=1b;N d=P;1f(N h in e){if(f===h){b=1d;d=e[h];1D}}if(b){1f(N a=0,c=j.1a;a<c;a++){if((d>=j[a].3V)&&(d<j[a].gd)){N k=j[a].W;if(k&&k.4h&&3r(k.4h)<12){k.4h="uj"}l.W=O.1c.ci(l.W,k)}}}}l.W.4p=l.1v.8y;R l},Cu:Q(f){N e,b=[];1f(N d=0,a=f.1a;d<a;d++){N c=f[d];if(c.1v.1p==="O.1h.ds"){if(c.1v.8U.w||c.1v.8U.h){c.1v.8U.w=P;c.1v.8U.h=P;c.1v.ia=P}e=K.dw(c);e.1i=K.1i;b.1u(e)}}R b},Ct:Q(f){N m=[],p,h,u=[],v,b,d={3g:"cm",7q:0,7p:0};K.kW=[];1f(N s=0,t=f.1a;s<t;s++){h=f[s];if(h.oP){h=K.dw(h)}N g=K.CH(h);if((g.x>=0&&g.x<=K.1i.U.1G.w)&&(g.y>=0&&g.y<=K.1i.U.1G.h)){if(h.W.aQ>-1){if(K.1i.U.4I()<=h.W.aQ){5K}}if(h.W.bN>-1){if(K.1i.U.4I()>h.W.bN){5K}}N n=P;if(h.oP){h.oP=P;n=K.ug(h,g)}V{if(h.1v.8U.w&&h.1v.8U.h){n=K.CG(h,g)}V{n=K.ug(h,g)}}N o=S O.1U(0,K.1i.U.1G.h,K.1i.U.1G.w,0),c=n.1a;if(K.ui){N l=K.Cy(o,n);if(l){if(l.u5==="1r"){h.W.7q+=l.g9;1f(N q=0;q<c;q++){n[q].x+=l.g9}}V{if(l.u5==="1I"){h.W.7q+=(-l.g9);1f(N q=0;q<c;q++){n[q].x+=(-l.g9)}}}if(l.u4==="1t"){h.W.7p+=l.kO;1f(N q=0;q<c;q++){n[q].y+=l.kO}}V{if(l.u4==="1N"){h.W.7p+=(-l.kO);1f(N q=0;q<c;q++){n[q].y+=(-l.kO)}}}h.oP=1d}}if(K.uh){N k=1b;if(s!=0){1f(N q=0;q<u.1a;q++){if(K.Cx(n,u[q])){k=1d;1D}}}if(k){5K}V{u.1u(n)}}N a=[];1f(N q=0;q<c-1;q++){a.1u(K.1i.5w(n[q]))}N r=[S O.1h.1F(a[0].1P,a[0].1S),S O.1h.1F(a[1].1P,a[1].1S),S O.1h.1F(a[2].1P,a[2].1S),S O.1h.1F(a[3].1P,a[3].1S)],w=S O.1h.4C(r),e=S O.1h.3R([w]);v=O.1c.eB(h.W);b=O.1c.eB(O.1c.ci(v,d));p=S O.3o.31(e,h.6T,b);p.id=h.id;p.kB=h.kB;m.1u(p);K.kW.1u(p)}V{5K}}R m},CH:Q(j){N a=S O.2C();N f=j.1v;N b=j.W;N c=f.9u();N i=S O.3k(c.x,c.y);N d=K.1i.8A(i);N g=S O.1h.1F(d.x,d.y);if(b.7q||b.7p){N h=2w(b.7q)?0:b.7q;N e=2w(b.7p)?0:b.7p;g.3B(h,-e);a.x=g.x;a.y=g.y;R a}V{a.x=g.x;a.y=g.y;R a}},ug:Q(c,f){N e=c.1v;N a=P;if(K.oO==0){a=e.uf(f,c.W)}V{if(K.oO===1){K.CF();if((K.1i.2i.1p==="O.2f.6C")||(K.1i.2i.1p==="O.2f.bJ")){N d=K.1i.2i.kV(c.id,c.W,c.1v.9u());a=e.oK(f,d.w,d.h,c.W)}V{N d=K.1i.2i.kV(c.1v.9u(),c.W);a=e.oK(f,d.w,d.h,c.W)}}V{R P}}N b=[];if((c.W.7r%2R)==0){b=[{x:a.1r,y:a.1t},{x:a.1I,y:a.1t},{x:a.1I,y:a.1N},{x:a.1r,y:a.1N},{x:a.1r,y:a.1t}]}V{b=K.u6(a,f,c.W.7r)}e.2k=S O.1U(b[1].x,b[3].y,b[2].x,b[4].y);R b},CG:Q(k,f){N j,c,a,g,i;N d=k.1v.8U;N b=k.W;N e=O.1c.eB(f);if(b.3g&&b.3g!=="cm"){5m(b.3g){1K"lt":e.x+=d.w/2;e.y+=d.h/2;1D;1K"lm":e.x+=d.w/2;1D;1K"lb":e.x+=d.w/2;e.y-=d.h/2;1D;1K"ct":e.y+=d.h/2;1D;1K"cb":e.y-=d.h/2;1D;1K"rt":e.x-=d.w/2;e.y+=d.h/2;1D;1K"rm":e.x-=d.w/2;1D;1K"rb":e.x-=d.w/2;e.y-=d.h/2;1D;4m:1D}}c=e.x-d.w/2;a=e.y+d.h/2;if(b.7o&&b.7o==="nJ"){i=e.x+d.w/2+2l(3r(b.4h)/2)}V{i=e.x+d.w/2}g=e.y-d.h/2;j=S O.1U(c,a,i,g);N h=[];if((b.7r%2R)==0){h=[{x:j.1r,y:j.1t},{x:j.1I,y:j.1t},{x:j.1I,y:j.1N},{x:j.1r,y:j.1N},{x:j.1r,y:j.1t}]}V{h=K.u6(j,f,b.7r)}k.1v.2k=S O.1U(h[1].x,h[3].y,h[2].x,h[4].y);R h},CF:Q(){N a=K.1i;if(a.2i.kV){R}if((a.2i.1p==="O.2f.6C")||(a.2i.1p==="O.2f.bJ")){a.2i.kV=Q(p,r,b){N n=K.2u();N s=0;N d=[];N j=(b.x/n+K.1r);N h=(b.y/n-K.1t);N g=K.6S(p+K.eG,"8y");g.2m(P,"x",j);g.2m(P,"y",-h);if(r.7r){g.2m(P,"3N","5g("+r.7r+" "+j+","+(-h)+")")}if(r.8z){g.2m(P,"2j",r.8z)}if(r.dt){g.2m(P,"2M",0)}if(r.8V){g.2m(P,"a7-ue",r.8V)}if(r.4h){g.2m(P,"a7-1G",r.4h)}if(r.7C){g.2m(P,"a7-ud",r.7C)}if(r.7o){g.2m(P,"a7-W",r.7o)}if(r.bM===1d){g.2m(P,"4u-1n","7e");g.dv=p}V{g.2m(P,"4u-1n","2L")}N o=r.3g||"cm";g.2m(P,"8y-3b",O.2f.6C.a6[o[0]]||"kS");if(O.gc===1d){g.2m(P,"CE-oM",O.2f.6C.a6[o[1]]||"CD")}N e=r.4p.4B("\\n");N c=e.1a;4U(g.bI.1a>c){g.2U(g.oN)}1f(N q=0;q<c;q++){N f=K.6S(p+K.eG+"CB"+q,"CA");if(r.bM===1d){f.dv=p;f.uc=b;f.du=b.1p}if(O.gc===1b){f.2m(P,"oM-i9",O.2f.6C.ub[o[1]]||"-35%")}f.cC("x",j);if(q==0){N k=O.2f.6C.ua[o[1]];if(k==P){k=-0.5}f.cC("dy",(k*(c-1))+"em")}V{f.cC("dy","kU")}f.oL=(e[q]==="")?" ":e[q];if(!f.2Y){g.1X(f)}d.1u(f)}if(!g.2Y){K.cA.1X(g)}1f(N q=0;q<d.1a;q++){N t=d[q];N m=t.OW();if(s<m){s=m}}N l=S 6O();if(s){l.w=s}V{R P}l.h=r.4h;l.Cz=c;R l}}V{a.2i.kV=Q(p,b){b=O.1c.1M({8z:"#aP",3g:"cm"},b);N q=K.6R(p);N m=0;if(b.7q||b.7p){N l=2w(b.7q)?0:b.7q;N d=2w(b.7p)?0:b.7p;q[0]+=l;q[1]-=d}K.5Z("4T");K.1w.81=b.8z;K.1w.5v=b.dt||1;N f=[b.7o?b.7o:"bL","bL",b.7C?b.7C:"bL",b.4h?b.4h:"kU",b.8V?b.8V:"u9-u8"].6d(" ");N e=b.4p.4B("\\n");N k=e.1a;if(K.1w.gb){K.1w.a7=f;K.1w.ga=O.2f.5f.a6[b.3g[0]]||"3G";K.1w.kT=O.2f.5f.a6[b.3g[1]]||"kS";N n=O.2f.5f.bK[b.3g[1]];if(n==P){n=-0.5}N o=K.1w.eF("Mg").1E||K.1w.eF("xx").1B;q[1]+=o*n*(k-1);1f(N g=0;g<k;g++){N j=K.1w.eF(e[g]).1B;if(m<j){m=j}}}V{if(K.1w.kR){K.1w.u7=f;N c=O.2f.5f.bK[b.3g[0]];if(c==P){c=-0.5}N n=O.2f.5f.bK[b.3g[1]];if(n==P){n=-0.5}N o=K.1w.kQ("xx");q[1]+=o*(1+(n*k));1f(N g=0;g<k;g++){N j=K.1w.eF(e[g]).1B;if(m<j){m=j}}}}K.5Z("4T");N h=S 6O();if(m){h.w=m}V{R P}h.h=b.4h;h.Cz=e.1a;R h}}},oK:Q(g,j,f,c){N d,e,b,k,m;N i=O.1c.eB(g);N h=c.4p||K.1i.8y;N a=h.4B("\\n");N l=a.1a;j=3r(j);f=3r(f);if(l>1){f=3r(f)*l}if(c.3g&&c.3g!=="cm"){5m(c.3g){1K"lt":i.x+=j/2;i.y+=f/2;1D;1K"lm":i.x+=j/2;1D;1K"lb":i.x+=j/2;i.y-=f/2;1D;1K"ct":i.y+=f/2;1D;1K"cb":i.y-=f/2;1D;1K"rt":i.x-=j/2;i.y+=f/2;1D;1K"rm":i.x-=j/2;1D;1K"rb":i.x-=j/2;i.y-=f/2;1D;4m:1D}}K.8U.h=f;K.8U.w=j;e=i.x-3r(j)/2;b=i.y+3r(f)/2;m=i.x+3r(j)/2;k=i.y-3r(f)/2;d=S O.1U(e,b,m,k);R d},u6:Q(a,c,e){N g=S O.1h.1F(a.1r,a.1t);N b=S O.1h.1F(a.1I,a.1t);N j=S O.1h.1F(a.1I,a.1N);N d=S O.1h.1F(a.1r,a.1N);N h=[];h.1u(K.kP(g.x,g.y,c.x,c.y,e));h.1u(K.kP(b.x,b.y,c.x,c.y,e));h.1u(K.kP(j.x,j.y,c.x,c.y,e));h.1u(K.kP(d.x,d.y,c.x,c.y,e));N k=[];1f(N f=0;f<h.1a;f++){k.1u({x:h[f].x,y:h[f].y})}k.1u({x:h[0].x,y:h[0].y});R k},kP:Q(a,h,e,d,g){N f=S 6O(),b,c;h=-h;d=-d;g=-g;b=(a-e)*1k.8T((g/2R)*1k.PI)-(h-d)*1k.7Z((g/2R)*1k.PI)+e;c=(a-e)*1k.7Z((g/2R)*1k.PI)+(h-d)*1k.8T((g/2R)*1k.PI)+d;f.x=b;f.y=-c;R f},Cy:Q(a,q){if(q.1a!==5){R P}N d=[{x:a.1r,y:a.1t},{x:a.1I,y:a.1t},{x:a.1I,y:a.1N},{x:a.1r,y:a.1N},{x:a.1r,y:a.1t}];N e=1b,m=d.1a,f=q.1a;N l=0,k=0,p="",c="";1f(N h=0;h<m-1;h++){1f(N g=0;g<f-1;g++){N n=O.1c.Cw(d[h],d[h+1],q[g],q[g+1]);if(n.1p==="O.1h.1F"){o(q[g]);o(q[g+1]);e=1d}}}if(e){N b={u5:c,u4:p,g9:l,kO:k};R b}V{R P}Q o(r){if(!a.cB(r.x,r.y)){if(r.y<a.1t){N i=1k.3C(a.1t-r.y);if(i>k){k=i;p="1t"}}if(r.y>a.1N){N i=1k.3C(r.y-a.1N);if(i>k){k=i;p="1N"}}if(r.x<a.1r){N j=1k.3C(a.1r-r.x);if(j>l){l=j;c="1r"}}if(r.x>a.1I){N j=1k.3C(r.x-a.1I);if(j>l){l=j;c="1I"}}}}},Cx:Q(b,h){N g=b.1a,a=h.1a;if(g!==5||a!==5){R P}N e=1b;1f(N d=0;d<g;d++){if(K.u3(b[d],h)){e=1d;1D}}1f(N d=0;d<a;d++){if(K.u3(h[d],b)){e=1d;1D}}1f(N d=0;d<g-1;d++){if(e){1D}1f(N c=0;c<a-1;c++){N f=O.1c.Cw(b[d],b[d+1],h[c],h[c+1]);if(f.1p==="O.1h.1F"){e=1d;1D}}}R e},u3:Q(f,d){1f(N e=1b,c=-1,a=d.1a,b=a-1;++c<a;b=c){((d[c].y<=f.y&&f.y<d[b].y)||(d[b].y<=f.y&&f.y<d[c].y))&&(f.x<(d[b].x-d[c].x)*(f.y-d[c].y)/(d[b].y-d[c].y)+d[c].x)&&(e=!e)}R e},g5:Q(a){O.7n.1g.g5.1j(K,1s);K.Cv()},Cs:Q(d){if(!(O.1c.4k(d))){d=[d]}if(!K.1i){R}K.1i.2i.7J=1d;N a=d.1a;if(a===0){K.1i.2i.7J=1b;K.1i.3Q({},2b,{eE:1d});R}1f(N c=0;c<a;c++){if(c===(a-1)){K.1i.2i.7J=1b}N b=d[c];b.1i=K.1i;K.1i.3Q(b,2b,{eE:1d})}},Cv:Q(){N a=K.1i;if(!a){R}N b=K;a.7I=Q(d,c){O.1C.31.1g.7I.1j(K,[d,c]);a.eD()};a.3Q=Q(c,e,d){if(c.1v&&c.1v.1p==="O.1h.ds"){R 1d}V{R O.1C.31.1g.3Q.1j(K,[c,e,d])}};a.eD=Q(c){a.2i.5L();O.1C.31.1g.eD.1j(K,[c]);N d=b.Cu(a.2n);if(!a.7Y){R}N e=b.Ct(d);e&&b.Cs(e);if((a.2i.1p==="O.2f.6C")||(a.2i.1p==="O.2f.bJ")){a.2i.aO.W.3I="4u";a.2i.cA.W.3I="4u"}V{a.2i.6l.W.3I="4u"}}},1p:"O.7n.ds"});O.1y.Ci=O.1A(O.1y,{3Z:P,9t:1d,u1:P,u2:1b,Cp:1b,kN:P,1o:Q(a){O.1y.1g.1o.1j(K,[a]);K.3Z=[];K.kN={}},1m:Q(){O.1y.1g.1m.1j(K,1s);1f(N a,b=K.3Z.1a-1;b>=0;b--){a=K.3Z[b];if(a.1n){a.1n.un({2r:K.tZ,2h:K.tY})}O.1J.a5(a.cz);a.cz=P}K.kN=P},2r:Q(){if(O.1y.1g.2r.1j(K,1s)){N c;1f(N b=0,a=K.3Z.1a;b<a;b++){c=K.3Z[b];if(c===K.u1||(K.u2&&K.kN[c.id])){c.2r()}}if(K.u2===1d){K.u1=P}K.3p();R 1d}V{R 1b}},2h:Q(){if(O.1y.1g.2h.1j(K,1s)){N c;1f(N b=0,a=K.3Z.1a;b<a;b++){c=K.3Z[b];K.kN[c.id]=c.2h()}K.3p();R 1d}V{R 1b}},2H:Q(){O.1y.1g.2H.1j(K,1s);K.u0(K.3Z);R K.1q},3p:Q(){1f(N b=K.1q.bI.1a,c=b-1;c>=0;c--){K.1q.2U(K.1q.bI[c])}K.1q.6k="";if(K.3O){1f(N c=0,a=K.3Z.1a;c<a;c++){K.1q.1X(K.3Z[c].cz)}}},Cl:Q(d){if(!K.3O){R 1b}if(d.2A===O.1y.Cr){d.oJ();R}if(d.2A===O.1y.Cq){if(d.3O){d.2h()}V{d.2r()}R}if(K.Cp&&d.3O){d.2h()}V{N e;1f(N b=0,a=K.3Z.1a;b<a;b++){e=K.3Z[b];if(e!==d&&(e.2A===O.1y.kM||e.2A==P)){e.2h()}}d.2r()}},Co:Q(b){if(!(O.1c.4k(b))){b=[b]}K.3Z=K.3Z.7E(b);1f(N d=0,a=b.1a;d<a;d++){N c=1O.2G("1q");c.3U=b[d].5Y+"tX";b[d].cz=c;if(b[d].7H!=""){b[d].cz.7H=b[d].7H}O.1J.3q(b[d].cz,"2X",O.2z.3P(K.Cm,K,b[d]));O.1J.3q(b[d].cz,"4H",O.2z.3P(K.Ck,K,b[d]));O.1J.3q(b[d].cz,"4g",O.2z.5e(O.1J.2Q))}if(K.U){K.u0(b);K.3p()}},u0:Q(b){N d;1f(N c=0,a=b.1a;c<a;c++){d=b[c];if(d.9t===1d){d.9t=1b;K.U.kL(d);d.9t=1d}V{K.U.kL(d);d.2h()}d.1n.on({2r:K.tZ,2h:K.tY})}},tZ:Q(){N a=K.cz;a.3U=a.3U.42(/tX$/,"Cn")},tY:Q(){N a=K.cz;a.3U=a.3U.42(/Cn$/,"tX")},Cm:Q(b,a){O.1J.2Q(a?a:1W.bH);K.Cl(b)},Ck:Q(b,a){O.1J.2Q(a?a:1W.bH)},kK:Q(c,a){N d=(2v a.dr==="Q");N b=O.3T.58(K.3Z,Q(e){R e[c]===a||(d&&a.dr(e[c]))});R b},OV:Q(a){R K.kK("2c",a)},Cj:Q(a){R K.kK("1p",a)},1p:"O.1y.Ci"});O.1y.kH=O.1A(O.1y,{oH:P,oF:P,cs:1b,9s:1d,8x:1b,i8:1b,cv:1b,i5:1b,5n:1b,g7:Q(){},dp:Q(){},g6:Q(){},2y:P,6j:P,1i:P,1Q:P,3H:P,oD:P,7l:"7k",1Y:P,1o:Q(c,a){O.1y.1g.1o.1j(K,[a]);if(K.2y===P){K.2y=K}K.ey(c);N b={2X:K.cw,9s:K.i6,6B:K.dq,4n:K.eC};K.3H=O.1c.1M(b,K.3H);K.1Y={1H:S O.1Z.3o(K,K.1i,K.3H,{6j:K.6j,7m:1b})};if(K.5n){K.1Y.5n=S O.1Z.kJ(K,{7j:K.oB},{oI:"Ch"})}},ey:Q(a){if(O.1c.4k(a)){K.1Q=a;K.1i=S O.1C.31.kI(K.id+"Cg",{1Q:a})}V{K.1i=a}},1m:Q(){if(K.3O&&K.1Q){K.U.bG(K.1i)}O.1y.1g.1m.1j(K,1s);if(K.1Q){K.1i.1m()}},2r:Q(){if(!K.3O){if(K.1Q){K.U.g8(K.1i)}K.1Y.1H.2r();if(K.5n&&K.1Y.5n){K.1Y.5n.2r()}}R O.1y.1g.2r.1j(K,1s)},2h:Q(){if(K.3O){K.1Y.1H.2h();if(K.1Y.5n){K.1Y.5n.2h()}if(K.1Q){K.U.bG(K.1i)}}R O.1y.1g.2h.1j(K,1s)},aL:Q(b){N f=K.1Q||[K.1i];N e,d;1f(N a=0;a<f.1a;++a){e=f[a];1f(N c=e.6i.1a-1;c>=0;--c){d=e.6i[c];if(!b||b.i7!==d){K.bF(d)}}}},cw:Q(b,a){if(!K.cv){N c=(O.1c.2N(b.1i.6i,b)>-1);if(c){if(K.oG()){K.bF(b)}V{if(!K.ez()){K.aL({i7:b});if(K.i8){K.dp.47(K.2y,b,a)}}}}V{if(!K.ez()){K.aL({i7:b})}K.7k(b,a)}}},ez:Q(){R K.cs||(K.1Y.1H.7i&&K.1Y.1H.7i[K.oH])},oG:Q(){R K.8x||(K.1Y.1H.7i&&K.1Y.1H.7i[K.oF])},i6:Q(a){if(!K.cv&&K.9s){K.aL()}},dq:Q(c,a){N b=c.1i;if(K.cv){if(K.i5){K.eA(c)}V{if(O.1c.2N(b.6i,c)===-1){K.7k(c,a)}}}V{K.1i.U.6A.W.3I="4u"}},eC:Q(a){if(K.cv){if(K.i5){if(a.aN===K.id){if(a.7G&&a.7G!==K.id){2t a.aN;N b=K.U.oE(a.7G);if(b){b.eA(a)}}V{K.i3(a)}}}V{K.bF(a)}}V{K.1i.U.6A.W.3I=""}},eA:Q(c){N b=c.1i;if(b 1V O.1C.oC){R}N a=K.1n.1L("Cf",{1H:c});if(a!==1b){c.7G=c.aN;c.aN=K.id;N d=c.cu=O.1c.eB(K.oD);c.7l=K.7l;if(d&&!d.4p){if(c.W&&c.W.4p){d.4p=c.W.4p}}b.3Q(c,d,{i4:1d});K.1n.1L("Ce",{1H:c})}},i3:Q(b){N a=b.1i;if(a 1V O.1C.oC){R}if(b.7G==2b){2t b.aN}V{if(b.7G===K.id){2t b.7G}V{b.aN=b.7G;2t b.7G}}if(b.cu||b.cu==P){2t b.cu}b.7l="4m";a.3Q(b,b.W||b.1i.W||"4m",{i4:1d});K.1n.1L("Cd",{1H:b})},7k:Q(d,b){N a=K.g7.47(K.2y,d);N c=d.1i;if(P===c){R}if(a!==1b){a=c.1n.1L("tW",{1H:d});if(a!==1b){c.6i.1u(d);K.eA(d);if(!K.1Y.1H.7F){K.1Y.1H.7F=c.6i[0]}c.1n.1L("tV",{1H:d,7i:b});K.dp.47(K.2y,d,b)}}},bF:Q(b){N a=b.1i;K.i3(b);O.1c.aM(a.6i,b);a.1n.1L("tU",{1H:b});K.g6.47(K.2y,b)},oB:Q(e){if(e 1V O.1U){N h=K.U.6Q({x:e.1r,y:e.1N});N k=K.U.6Q({x:e.1I,y:e.1t});N a=S O.1U(h.1P,h.1S,k.1P,k.1S);if(!K.ez()){K.aL()}N j=K.cs;K.cs=1d;N d=K.1Q||[K.1i];N f;1f(N b=0;b<d.1a;++b){f=d[b];1f(N c=0,g=f.2n.1a;c<g;++c){N m=f.2n[c];if(!m.dn()){5K}if(K.6j==P||O.1c.2N(K.6j,m.1v.1p)>-1){if(a.fX().6P(m.1v)){if(O.1c.2N(f.6i,m)===-1){K.7k(m)}}}}}K.cs=j}},2Z:Q(a){K.1Y.1H.2Z(a);if(K.5n){K.1Y.5n.2Z(a)}O.1y.1g.2Z.1j(K,1s)},g5:Q(b){N a=K.3O;K.aL();K.2h();if(K.1Q){K.1i.1m();K.1Q=P}K.ey(b);K.1Y.1H.1i=K.1i;if(a){K.2r()}},1p:"O.1y.kH"});O.1y.tQ=O.1A(O.1y,{2K:["ex","oz"],8w:P,3H:P,tR:"Cc",kF:1b,tS:{OU:["dd"],OT:["mi","ft","in"],Cc:["km","m"]},Ca:fW,g2:P,aK:1b,oA:1b,1o:Q(b,a){K.2K=O.1y.tQ.1g.2K.7E(O.1y.1g.2K);O.1y.1g.1o.1j(K,[a]);N c={7j:K.oi,3m:K.Cb};if(K.oA){c.g4=K.tT}K.3H=O.1c.1M(c,K.3H);K.8w=O.1c.1M({aK:K.aK},K.8w);K.3w=S b(K,K.3H,K.8w)},2h:Q(){K.kG();R O.1y.1g.2h.1j(K,1s)},8S:Q(){K.kG();K.3w.8S()},OR:Q(a){K.oA=a;if(K.oA){K.3H.g4=K.tT}V{2t K.3H.g4}},OQ:Q(b,a){N c=K.3O;if(c){K.2h()}K.3w=S b(K,K.3H,a);if(c){K.2r()}},oi:Q(a){K.kG();K.ex(a,"ex")},Cb:Q(a,b){K.kG();N c=b.1v;c=c.1R();if(K.3w.g3(K.3w.7i)){K.ex(c,"oz")}V{K.g2=1W.6h(O.2z.3P(Q(){K.g2=P;K.ex(c,"oz","2X")},K),K.Ca)}},tT:Q(a,c,b){if(b&&K.g2===P&&!K.3w.g3(K.3w.7i)){K.ex(c.1v,"oz","3B")}},kG:Q(){if(K.g2!==P){1W.5J(K.g2);K.g2=P}},ex:Q(e,b,d){N c,a;if(e.1p.2N("2p")>-1){c=K.C8(e);a=1}V{c=K.C9(e);a=2}K.1n.1L(b,{ex:c[0],2P:c[1],8v:a,1v:e,2A:d})},C9:Q(f){N b=K.tS[K.tR];N e,d;1f(N c=0,a=b.1a;c<a;++c){e=b[c];d=K.8u(f,e);if(d>1){1D}}R[d,e]},8u:Q(f,a){N b,c;if(K.kF){b=f.g1(K.U.5X());c="m"}V{b=f.8u();c=K.U.cr()}N e=O.g0[a];if(e){N d=O.g0[c];b*=1k.2W((d/e),2)}R b},C8:Q(f){N b=K.tS[K.tR];N e,d;1f(N c=0,a=b.1a;c<a;++c){e=b[c];d=K.ew(f,e);if(d>1){1D}}R[d,e]},ew:Q(f,a){N b,c;if(K.kF){b=f.oy(K.U.5X());c="m"}V{b=f.ew();c=K.U.cr()}N e=O.g0[a];if(e){N d=O.g0[c];b*=(d/e)}R b},1p:"O.1y.tQ"});O.1y.tM=O.1A(O.1y,{2K:["C5","C3","C7"],i2:bE.i2,3P:1d,tO:1b,ox:P,1o:Q(a){K.2K=O.1y.tM.1g.2K.7E(O.1y.1g.2K);K.ox={};O.1y.1g.1o.1j(K,[a])},1m:Q(){K.2h();O.1y.1g.1m.1j(K,1s)},2r:Q(){if(!K.i2){K.1n.1L("C7");R 1b}if(O.1y.1g.2r.1j(K,1s)){if(K.tO){K.tP=K.i2.OP(O.2z.3P(K.tN,K),O.2z.3P(K.5V,K),K.ox)}V{K.C4()}R 1d}R 1b},2h:Q(){if(K.3O&&K.tP!==P){K.i2.OO(K.tP)}R O.1y.1g.2h.1j(K,1s)},tN:Q(b){N a=S O.3k(b.C6.ON,b.C6.OM).3N(S O.3h("4t:9r"),K.U.5X());if(K.3P){K.U.6g(a)}K.1n.1L("C5",{2x:b,3m:S O.1h.1F(a.1P,a.1S)})},C4:Q(){if(!K.3O||K.tO){R 1b}K.i2.OL(O.2z.3P(K.tN,K),O.2z.3P(K.5V,K),K.ox);R 1d},5V:Q(a){K.1n.1L("C3",{6N:a})},1p:"O.1y.tM"});O.6q=O.1A({5u:0,1o:Q(a){O.1c.1M(K,a)},1R:Q(){N fZ=ot(K.1p);R S fZ(O.1c.1M({},K))},1p:"O.6q"});O.6q.1F=O.1A(O.6q,{1o:Q(a){O.6q.1g.1o.1j(K,1s)},1p:"O.6q.1F"});O.6q.tL=O.1A(O.6q,{1o:Q(a){O.6q.1g.1o.1j(K,1s)},1p:"O.6q.tL"});O.6q.3R=O.1A(O.6q,{1o:Q(a){O.6q.1g.1o.1j(K,1s)},1p:"O.6q.3R"});O.6q.tK=O.1A(O.6q,{1o:Q(a){O.6q.1g.1o.1j(K,1s)},1p:"O.6q.tK"});O.6q.tJ=O.1A(O.6q,{1o:Q(a){O.6q.1g.1o.1j(K,1s)},1p:"O.6q.tJ"});O.bD={5H:P,C1:"en",7X:Q(){if(!O.bD.5H){O.bD.C2()}R O.bD.5H},C2:Q(b){N d;if(!b){b=(O.8R.2c==="i1")?bE.OK:bE.OJ}N c=b.4B("-");c[0]=c[0].dm();if(2v O.bD[c[0]]==="6z"){d=c[0]}if(c[1]){N a=c[0]+"-"+c[1].i0();if(2v O.bD[a]==="6z"){d=a}}if(!d){d=O.bD.C1}O.bD.5H=d},3Y:Q(b,a){N d=O.bD[O.bD.7X()];N c=d&&d[b];if(!c){c=b}if(a){c=O.5t.5d(c,a)}R c}};O.a4=O.bD.3Y;O.4f=O.1A({7h:P,1z:P,a1:P,a2:P,1a:P,2D:P,8Q:P,hZ:3,ow:P,ov:P,4j:P,1o:Q(b,a){if(!b){R 1b}K.7h=a&&a.7h;N c=K;if(O.1c.4k(b)){c.a1=b;c.1a=b.1a;c.8Q=c.1a;if(c.1a==1){c.1z=b[0]}V{c.a2=2l(1k.ou()*c.1a);c.1z=b[c.a2]}}V{c.8Q=1;c.1z=b}if(O.1c.4k(b)&&!c.BW()){c.1z=b[0];c.8Q=1}if(a&&a.4j!==P&&a.4j!==2b){c.4j=a.4j}V{c.4j=(c.7h&&O.1c.4j(c.7h))||O.1c.4j(c.1z)}},1m:Q(){N a=K;if(O.1c.4k(a.a1)){a.a1=P;a.a2=P;a.1a=P;a.8Q=P}a.1z=P;a.2D=P;a.ow=P;a.ov=P;a.4j=P},8n:Q(b){N d=K;b.1z=b.1z||d.1z;b.4j=d.4j;if(b.8r||O.aJ.dk){N c=b.8r||O.aJ.dk;N a=b.1z.bv(b.1z.1a-1,b.1z.1a);if(b.1z.2N("?")>-1&&a==="?"){b.1z+=c.kw()}V{if(b.1z.2N("?")>-1&&a!=="?"){b.1z+="&"+c.kw()}V{b.1z+="?"+c.kw()}}}if(K.7h){b.7h=K.7h}d.BX();d.ow=b.6x;d.ov=b.5V;b.2y=d;b.6x=d.C0;b.5V=d.BZ;d.2D=b;O.1c.tI(d.2D)},C0:Q(a){N b=K;b.ow(a)},BZ:Q(a){N b=K;if(b.8Q>0){b.8Q--;b.BY()}V{b.ov(a)}},BY:Q(){N d=K,b=d.2D.1z,c=/^4s:\\/\\/([a-z]{9}|(\\d+\\.){3}\\d+):\\d{0,4}/;d.a2=2l(1k.ou()*d.1a);d.1z=d.a1[d.a2];b=b.42(c,c.fY(d.1z)[0]);N a=O.1c.4j(b);if(a){if(b.2N(".5q")>0){b=b.42(/.5q/,".5G")}}V{if(!(b.2N(".5q")>0)){b=b.42(/.5G/,".5q")}}d.2D.1z=b;d.2D.4j=a;O.1c.tI(d.2D)},BX:Q(){N a=K;if(a.kE){if(a.8Q>a.hZ){if(a.kE>a.hZ){a.8Q=a.hZ}V{a.8Q=a.kE}}V{if(a.kE<a.8Q){a.8Q=a.kE}}}V{if(a.8Q>a.hZ){a.8Q=a.hZ}}a.8Q--},BW:Q(){N a=K;if(a.1p=="O.1l.OI"||a.1p=="O.1l.OH"){R 1b}R 1d},1p:"O.4f"});O.1l.BS=O.1A(O.4f,{2K:["4S","5p"],1z:P,4j:P,1o:Q(b,a){if(!b){R 1b}if(a){O.1c.1M(K,a)}N c=K;c.1n=S O.4o(c,P,c.2K,1d);if(c.2E 1V 6O){c.1n.on(c.2E)}c.1z=b;c.4j=O.1c.4j(c.1z)},1m:Q(){O.4f.1g.1m.1j(K,1s);N a=K;a.2K=P;if(a.1n){a.1n.1m();a.1n=P}if(a.2E){a.2E=P}},8o:Q(){N c=K;N b=/^4s:\\/\\/([a-z]{9}|(\\d+\\.){3}\\d+):\\d{0,4}\\/OG\\/OF/,a=b.fY(c.1z)[0]+"/OE.5G";if(!c.4j){a=a.42(/.5G/,".5q")}O.1c.tI({1z:a,5W:"cl",2y:c,4j:c.4j,6x:c.BV,5V:c.BT})},BV:Q(3d){N me=K;N 1z,ev={},a1=[],re=/^4s:\\/\\/([a-z]{9}|(\\d+\\.){3}\\d+):\\d{0,4}/,a2=re.fY(me.1z)[0].1a,BU=me.1z.a3(a2);if(3d.7g==4&&3d.bC==dj){ev=ot(3d.hY)}V{if(3d.6b){ev=3d}V{me.1n.1L("4S",[me.1z]);R}}if(52.1a==0){me.1n.1L("4S",[me.1z])}V{1f(N i=0,os=ev.1a;i<os;i++){1z="4s://"+ev[i].OD+BU;a1.1u(1z)}me.1n.1L("4S",a1)}},BT:Q(a){N b=K;b.1n.1L("4S",[b.1z])},1p:"O.1l.BS"});O.54=O.1A({or:P,1o:Q(a){K.or=a},1m:Q(){K.or=P},1p:"O.54"});O.8m=O.1A({5H:P,oq:P,1o:Q(c,b){N a=K;a.5H=c;a.oq=b},1m:Q(){N a=K;a.5H=P;a.oq=P},1p:"O.8m"});O.8m.2B=Q(a){if(!a){R}R S O.8m(a.5H,a.oq)};O.9l=O.1A(O.54,{6N:P,1o:Q(a,c){O.54.1g.1o.1j(K,[c]);N b=K;b.6N=a},1m:Q(){O.54.1g.1m.1j(K);N a=K;if(a.6N){a.6N.1m();a.6N=P}},1p:"O.9l"});O.1l.7D=O.1A({id:0,W:P,bB:P,5I:P,2A:P,5r:P,1o:Q(a){if(a){O.1c.1M(K,a)}},1m:Q(){N a=K;a.id=P;a.W=P;a.bB=P;a.oo=P;a.5I=P;a.2A=P;a.5r=P},fX:Q(){N b=K,a=b.2A;5m(a){1K O.1l.8P.dl:R b.tG();1K O.1l.8P.es:R b.BR();1K O.1l.8P.tH:R b.BP();1K O.1l.8P.kD:R b.BO();1K O.1l.8P.OC:R b.tG();1K O.1l.8P.OB:R b.BQ();1K O.1l.8P.OA:R b.BN()}},tG:Q(){N e=K,f=e.bB||[],c=e.5I||[],b=f.1a;if(b>0){if(b===1){R S O.1h.1F(c[0].x,c[0].y)}V{1f(N d=0,a=[];d<b;d++){a.1u(S O.1h.1F(c[d].x,c[d].y))}R S O.1h.8J(a)}}V{R P}},BR:Q(){N f=K,g=f.bB||[],c=f.5I||[],b=g.1a;if(b>0){if(b===1){1f(N e=0,a=[];e<g[0];e++){a.1u(S O.1h.1F(c[e].x,c[e].y))}if(a[0].3A(a[g[0]-1])){R S O.1h.4C(a)}V{R S O.1h.2p(a)}}V{1f(N e=0,h=[];e<b;e++){1f(N d=0,a=[];d<g[e];d++){a.1u(S O.1h.1F(c[d].x,c[d].y))}h.1u(S O.1h.2p(a));c.6f(0,g[e])}R S O.1h.8l(h)}}V{R P}},BQ:Q(){N h=K,c=h.bB||[],k=h.5I||[],d,b,a,e,g,f=c.1a;if(f>0){if(f===1){1f(d=0,a=[];d<c[0];d++){a.1u(S O.1h.1F(k[d].x,k[d].y,k[d].2A))}if(a[0].3A(a[c[0]-1])){g=O.1h.2p.hX(a);R S O.1h.Oz(g)}V{g=O.1h.2p.hX(a);R S O.1h.2p(g)}}V{1f(d=0,e=[];d<f;d++){1f(b=0,a=[];b<c[d];b++){a.1u(S O.1h.1F(k[b].x,k[b].y))}g=O.1h.2p.hX(a);e.1u(S O.1h.2p(g));k.6f(0,c[d])}R S O.1h.8l(e)}}V{R P}},BP:Q(){N a=K;R S O.1l.k9.2B(a)},BO:Q(){N s=K,d=s.bB||[],q=s.oo||[],v=s.5I||[],m=d.1a;if(m<=0){R P}N c=[];N f=[];if(m==1){1f(N l=0;l<v.1a;l++){f.1u(S O.1h.1F(v[l].x,v[l].y))}c.1u(S O.1h.3R([S O.1h.4C(f)]));f=[];R S O.1h.8k(c)}N n=[];N a=[];N p=[];N u=[];1f(N l=0,o=0;l<m;l++){1f(N h=0;h<d[l];h++){f.1u(S O.1h.1F(v[o+h].x,v[o+h].y))}o+=d[l];N e=S O.1h.3R([S O.1h.4C(f)]);f=[];p.1u(e);u.1u(1);a.1u(e.8u())}O.1l.7D.kC(a,p);if(q.1a===0){N t=[];1f(N l=1;l<p.1a;l++){1f(N h=l-1;h>=0;h--){t[l]=-1;if(p[h].5s().a0(p[l].5s())){u[l]=u[h]*-1;if(u[l]<0){t[l]=h}1D}}}1f(N l=0;l<p.1a;l++){if(u[l]>0){c.1u(p[l])}V{c[t[l]].1x=c[t[l]].1x.7E(p[l].1x);c.1u("")}}}V{O.1l.7D.kC(a,p,q);N c=S 3T();1f(N l=0;l<p.1a;l++){if(q[l]&&q[l]==-1){n=n.7E(p[l].1x)}V{if(n.1a>0&&c.1a>0){c[c.1a-1].1x=c[c.1a-1].1x.7E(n);n=[]}c.1u(p[l])}if(l==m-1){N r=c.1a;if(!!r){c[r-1].1x=c[r-1].1x.7E(n)}V{1f(N g=0,b=n.1a;g<b;g++){c.1u(S O.1h.3R(n))}}}}}R S O.1h.8k(c)},BN:Q(){N r=K,d=r.bB||[],u=r.5I||[],m=d.1a;if(m<=0){R P}N c=[];N f=[];if(m==1){1f(N l=0;l<u.1a;l++){f.1u(S O.1h.1F(u[l].x,u[l].y))}c.1u(S O.1h.3R([S O.1h.2p.hX(f)]));f=[];R S O.1h.8k(c)}N n=[];N a=[];N p=[];N t=[];1f(N l=0,o=0;l<m;l++){1f(N h=0;h<d[l];h++){f.1u(S O.1h.1F(u[o+h].x,u[o+h].y))}o+=d[l];N e=S O.1h.3R([S O.1h.4C.hX(f)]);f=[];p.1u(e);t.1u(1);a.1u(e.8u())}O.1l.7D.kC(a,p);if(op.1a===0){N s=[];1f(N l=1;l<p.1a;l++){1f(N h=l-1;h>=0;h--){s[l]=-1;if(p[h].5s().a0(p[l].5s())){t[l]=t[h]*-1;if(t[l]<0){s[l]=h}1D}}}1f(N l=0;l<p.1a;l++){if(t[l]>0){c.1u(p[l])}V{c[s[l]].1x=c[s[l]].1x.7E(p[l].1x);c.1u("")}}}V{O.1l.7D.kC(a,p,op);N c=S 3T();1f(N l=0;l<p.1a;l++){if(op[l]&&op[l]==-1){n=n.7E(p[l].1x)}V{if(n.1a>0&&c.1a>0){c[c.1a-1].1x=c[c.1a-1].1x.7E(n);n=[]}c.1u(p[l])}if(l==m-1){N q=c.1a;if(!!q){c[q-1].1x=c[q-1].1x.7E(n)}V{1f(N g=0,b=n.1a;g<b;g++){c.1u(S O.1h.3R(n))}}}}}R S O.1h.8k(c)},1p:"O.1l.7D"});O.1l.7D.2B=Q(a){if(!a){R}R S O.1l.7D({id:a.id,W:O.1l.ei.2B(a.W),bB:a.bB,oo:a.oo,5I:a.5I,3G:a.3G,1a:a.1a,BM:a.BM,BL:a.BL,2A:a.2A})};O.1l.7D.hQ=Q(p){if(!p){R}N a=0,g=[],r=[],o=P,t=p.1x,n=p.1p,m={hV:p.tF};if(!2w(p.id)){a=p.id}if(n!="O.1h.4C"&&n!="O.1h.2p"&&(p 1V O.1h.8J||p 1V O.1h.8l)){N c=t.1a;1f(N h=0;h<c;h++){N s=t[h].4R().1a;g.1u(s);1f(N f=0;f<s;f++){r.1u(S O.1h.1F(t[h].4R()[f].x,t[h].4R()[f].y))}}o=(n=="O.1h.8J")?O.1l.8P.dl:O.1l.8P.es}V{if(p 1V O.1h.8k){N c=t.1a;1f(N h=0;h<c;h++){N q=t[h],l=q.1x,b=l.1a;1f(N f=0;f<b;f++){N s=l[f].4R().1a+1;g.1u(s);1f(N e=0;e<s-1;e++){r.1u(S O.1h.1F(l[f].4R()[e].x,l[f].4R()[e].y))}r.1u(S O.1h.1F(l[f].4R()[0].x,l[f].4R()[0].y))}}o=O.1l.8P.kD}V{if(p 1V O.1h.3R){N c=t.1a;1f(N h=0;h<c;h++){N s=t[h].4R().1a+1;g.1u(s);1f(N f=0;f<s-1;f++){r.1u(S O.1h.1F(t[h].4R()[f].x,t[h].4R()[f].y))}r.1u(S O.1h.1F(t[h].4R()[0].x,t[h].4R()[0].y))}o=O.1l.8P.kD}V{N d=p.4R().1a;1f(N f=0;f<d;f++){r.1u(S O.1h.1F(p.4R()[f].x,p.4R()[f].y))}if(p 1V O.1h.4C){r.1u(S O.1h.1F(p.4R()[0].x,p.4R()[0].y));d++}g.1u(d);o=(p 1V O.1h.1F)?O.1l.8P.dl:O.1l.8P.es}}}R S O.1l.7D({id:a,W:P,bB:g,5I:r,2A:o,5r:m})};O.1l.7D.Oy=Q(c){N d=c.1a;if(d<3){R 0}N b=c[0].y*(c[d-1].x-c[1].x);c.1u(c[0]);1f(N a=1;a<d;a++){b+=c[a].y*(c[a-1].x-c[a+1].x)}R b*0.5};O.1l.7D.kC=Q(h,e,l){1f(N g=0;g<h.1a;g++){1f(N f=0;f<h.1a;f++){if(h[g]>h[f]){N k=h[f];h[f]=h[g];h[g]=k;N a=e[f];e[f]=e[g];e[g]=a;if(l&&l.1a>0){N m=l[f];l[f]=l[g];l[g]=m}}}}};O.1l.ku=O.1A({kA:P,kz:P,1v:P,1o:Q(a){if(a){O.1c.1M(K,a)}},1m:Q(){N a=K;a.kA=P;a.kz=P;if(a.1v){a.1v.1m();a.1v=P}},B6:Q(){N g,b,f,a={},e=K,d;g=e.kA;b=e.kz;1f(N c in g){a[g[c]]=b[c]}if(e.1v){f=e.1v.fX()}d=S O.3o.31(f,a);if(e.1v&&e.1v.id){d.kB=e.1v.id}R d},1p:"O.1l.ku"});O.1l.ku.2B=Q(a){N b=K,c=P;if(!a){R}c=a.1v;if(c){c=O.1l.7D.2B(c)}R S O.1l.ku({kA:a.kA,kz:a.kz,1v:c})};O.1l.BC=O.1A({BK:P,tE:P,BJ:P,BI:P,BH:P,BG:P,BF:P,om:P,BE:P,BD:P,ol:P,1o:Q(a){if(a){O.1c.1M(K,a)}},1m:Q(){N a=K;a.BK=P;a.tE=P;a.BJ=P;a.BI=P;a.BH=P;a.BG=P;a.BF=P;a.om=P;a.BE=P;a.BD=P;a.ol=P},1p:"O.1l.BC"});O.1l.th=O.1A({BB:P,BA:P,Bz:P,1o:Q(a){if(a){O.1c.1M(K,a)}},1m:Q(){N a=K;a.BB=P;a.BA=P;a.Bz=P},3X:Q(){N a={};a=O.1c.ci(a,K);R a},1p:"O.1l.th"});O.1l.Bs=O.1A({ok:P,Bx:P,Bw:P,Bv:P,Bu:P,2c:P,Bt:P,1o:Q(a){if(a){O.1c.1M(K,a)}},1m:Q(){N a=K;if(a.ok){a.ok.1m();a.ok=P}a.Bx=P;a.Bw=P;a.Bv=P;a.Bu=P;a.2c=P;a.Bt=P},1p:"O.1l.Bs"});O.1l.tz=O.1A(O.54,{3d:P,1o:Q(a,c){O.54.1g.1o.1j(K,[c]);N b=K;b.3d=a},1m:Q(){O.54.1g.1m.1j(K);N a=K;if(a.3d){a.3d.1m();a.3d=P}},1p:"O.1l.tz"});O.1l.Bq=O.1A({1v:P,bA:O.1l.Br.tD,5r:P,oj:P,1o:Q(b,a){if(!b){R}K.1v=b;if(a){O.1c.1M(K,a)}},1m:Q(){N a=K;a.1v=P;a.bA=P;a.5r=P},1p:"O.1l.Bq"});O.1l.kx=O.1A({eu:P,3K:P,bA:P,1o:Q(a){if(a){O.1c.1M(K,a)}},1m:Q(){N a=K;a.eu=P;a.3K=P;a.bA=P},1p:"O.1l.kx"});O.1l.kx.2B=Q(a){if(!a){R}R S O.1l.kx({eu:a.eu,3K:a.3K,bA:a.bA})};O.1l.Bn=O.1A(O.4f,{2K:["4S","5p"],1n:P,2E:P,3S:P,tB:O.1l.tA.tC,1o:Q(b,a){O.4f.1g.1o.1j(K,[b]);if(a){O.1c.1M(K,a)}N c=K;c.1n=S O.4o(c,P,c.2K,1d);if(c.2E 1V 6O){c.1n.on(c.2E)}},1m:Q(){O.4f.1g.1m.1j(K,1s);N a=K;a.2K=P;if(a.1n){a.1n.1m();a.1n=P}if(a.2E){a.2E=P}if(a.3S){a.3S.1m();a.3S=P}a.tB=P},8o:Q(c){if(!c){R}N g=K,h=c.1v,e=0,f=P,a=P,d=P;if(!h){R}d=g.1z.9m(g.1z.1a-1,1);if(g.tB===O.1l.tA.ky){if(g.4j){g.1z+=((d==="/")?"eu.5G?":"/eu.5G?")}V{g.1z+=((d==="/")?"eu.5q?":"/eu.5q?")}}V{if(g.4j){g.1z+=((d==="/")?"3K.5G?":"/3K.5G?")}V{g.1z+=((d==="/")?"3K.5q?":"/3K.5q?")}}N l=O.1l.7D.hQ(h);if(!l){R}e=l.bB[0];f=l.5I.6f(0,e);N j,i,k,b=c.oj;if(c.5r){if(2v(c.5r)==="6z"){i=c.5r.hW;j=\'{"hV"\'+i.bv(i.2N(":"),i.1a)+"}"}V{if(2v(c.5r)==="cp"){j=\'{"hV"\'+c.5r.bv(c.5r.2N(":"),c.5r.1a)+"}"}}k={Bp:O.1c.6y(f),bA:c.bA,5r:j,oj:b}}V{k={Bp:O.1c.6y(f),bA:c.bA,oj:b}}g.8n({5W:"cl",3L:k,2y:g,6x:g.oi,5V:g.Bo})},oi:Q(b){N d=K,c=P,a=P;b=O.1c.6a(b);a=O.1l.kx.2B(b);d.3S=a;c=S O.1l.tz(a,b);d.1n.1L("4S",c)},Bo:Q(b){N e=K,d=P,a=P,c=P;b=O.1c.6a(b);d=b.6N;if(!d){R}a=O.8m.2B(d);c=S O.9l(a,b);e.1n.1L("5p",c)},1p:"O.1l.Bn"});O.1l.kv=O.1A({3M:P,2k:P,7f:P,8t:P,cq:P,5c:P,1o:Q(a){if(a){O.1c.1M(K,a)}},1m:Q(){N a=K;a.3M=P;a.2k=P;a.7f=P;a.8t=P;a.cq=P;a.5c=P},1p:"O.1l.kv"});O.1l.kv.2B=Q(a){if(!a||!a.5r){R}N c=P;if(!a.5r.Bm){N b=P}V{N d=a.5r.Bm;b=d.Ox.Ow.Ov;c=a.5r.hV}R S O.1l.kv({3M:a.3M,2k:a.2k,7f:a.7f,8t:a.8t,cq:a.5r.cq,5c:b,Bl:c})};O.1l.tx=O.1A(O.54,{3d:P,1o:Q(a,c){O.54.1g.1o.1j(K,[c]);N b=K;b.3d=a},1m:Q(){O.54.1g.1m.1j(K);N a=K;if(a.3d){a.3d.1m();a.3d=P}},1p:"O.1l.tx"});O.1l.oh=O.1A(O.4f,{2K:["4S","5p"],1n:P,2E:P,2O:P,3S:P,1o:Q(c,b){O.4f.1g.1o.1j(K,1s);if(b){O.1c.1M(K,b)}N d=K;d.1n=S O.4o(d,P,d.2K,1d);d.2E&&d.1n.on(d.2E);d.1z+=d.4j?".5G":".5q";if(d.2O){if(2v d.2O==="cp"){d.2O=S O.3h(d.2O)}N a=d.2O.7X().4B(":");if(a 1V 3T&&a.1a===2){d.1z+=\'?5r={"hV":\'+a[1]+"}"}}},1m:Q(){O.4f.1g.1m.1j(K,1s);N a=K;a.2K=P;if(a.1n){a.1n.un(a.2E);a.1n.9q=P;a.1n.1m();a.1n=P;a.2E=P}if(a.3S){a.3S.1m();a.3S=P}},8o:Q(a){N c=K;if(2v Ou==="2b"){N b={5W:"cl",2y:c,6x:c.ty,5V:c.tw};c.8n(b)}V{if(a||O.aJ.dk){a=a||O.aJ.dk;N d=c.1z;d+=d.2N("?")>-1?"&":"?";d+=a.kw();c.1z=d}c.1z=c.1z.42(/.5q/,".5G");Ot.Os({1z:d,2A:"cl"}).Or(Q(e){c.ty(e)},Q(e){c.tw(e)})}},ty:Q(b){N g=K,f=P,e=P,d=P,a=P;b=O.1c.6a(b);if(!b.5H||(b.5H&&((b.5H>=dj&&b.5H<fW)||b.5H==0||b.5H===Oq))){N c=O.1l.kv.2B(b);g.3S=c;f=S O.1l.tx(c,b);g.1n&&g.1n.1L("4S",f)}V{d=b;if(!d){R}a=O.8m.2B(d);e=S O.9l(a,b);g.1n.1L("5p",e)}},tw:Q(b){N e=K,d=P,a=P,c=P;b=O.1c.6a(b);if(b.5H){d=b}V{d=b.6N}if(!d){R}a=O.8m.2B(d);c=S O.9l(a,b);e.1n.1L("5p",c)},1p:"O.1l.oh"});O.1l.tv=O.1A(O.54,{3d:P,1o:Q(a,b){O.54.1g.1o.1j(K,[b]);K.3d=a},1m:Q(){O.54.1g.1m.1j(K);if(K.3d){K.3d.1m();K.3d=2b}},1p:"O.1l.tv"});O.1l.Bk=O.1A({2n:P,oe:P,og:P,oc:P,od:P,1o:Q(a){if(a){O.1c.1M(K,a)}},1m:Q(){N a=K;a.2n=P;a.oe=P;a.oc=P},6y:Q(){N h=[];if(K.2n&&K.2n.1a>0){1f(N c=0,e=K.2n.1a;c<e;c++){N l=K.2n[c];N f=l&&l.1v&&l.1v.4R();1f(N b=0,d=f.1a;b<d;b++){N k=f[b];N g={x:k.x,y:k.y};h.1u(g)}}}N a={Op:h};if(K.og){a.og=K.og}V{a.oe=K.oe}if(K.od){a.od=K.od}V{a.oc=K.oc}R O.1c.6y(a)},1p:"O.1l.Bk"});O.1l.fV=O.1A({2n:P,1o:Q(a){if(a){O.1c.1M(K,a)}},1m:Q(){K.2n=2b},1p:"O.1l.fV"});O.1l.fV.2B=Q(k,b){N f=[];if(!k||!b){R S O.1l.fV()}1f(N d=0,e=b.1a;d<e;d++){N j=b[d];N g=j&&j.1v;N a=g&&g.4R();f=f.7E(a)}if(f.1a!==k.1a){R S O.1l.fV()}1f(d=0,e=k.1a;d<e;d++){N h=k[d];N c=f[d];if(c&&h){h=h.5I[0];c.x=h.x;c.y=h.y}}R S O.1l.fV({2n:b})};O.1l.Oo=O.1A(O.4f,{2K:["4S","5p"],1n:P,2E:P,3S:P,1o:Q(b,a){O.4f.1g.1o.1j(K,[b]);if(a){O.1c.1M(K,a)}N c=K;c.1n=S O.4o(c,P,c.2K,1d);if(c.2E 1V 6O){c.1n.on(c.2E)}},1m:Q(){O.4f.1g.1m.1j(K,1s);N a=K;a.2K=P;if(a.1n){a.1n.1m();a.1n=P}if(a.2E){a.2E=P}if(a.3S){a.3S.1m();a.3S=P}},8o:Q(c,h){if(!c){R}if(!c.2n){R}N d=c.6y();N a=c.2n;N b=[];1f(N e=0,g=a.1a;e<g;e++){N j=a[e].1R();b.1u(j)}N f={};if(K.4j){K.1z+=".5G?";f.4G=1d}V{K.1z+=".5q?4G=1d"}K.8n({5W:"de",3L:f,52:d,2y:K,8r:h,6x:K.Bj(b),5V:K.Bi})},Bj:Q(a){R Q(c){N e=K,d=P,b=P;c=O.1c.6a(c);b=O.1l.fV.2B(c,a);e.3S=b;d=S O.1l.tv(b,c);e.1n.1L("4S",d)}},Bi:Q(b){N e=K,c=P,a=P,d=P;b=O.1c.6a(b);c=b.6N;if(!c){R}a=O.8m.2B(c);d=S O.9l(a,b);e.1n.1L("5p",d)}});O.1l.tu=O.1A({ob:P,oa:P,o9:P,fU:P,o8:P,1o:Q(a){if(!a){R}O.1c.1M(K,a)},1m:Q(){N a=K;a.ob=P;a.oa=P;a.o9=P;a.fU=P;a.o8=P},Bh:Q(){N a="";a+=\'"ob":\'+K.ob+",";a+=\'"oa":\'+K.oa+",";a+=\'"o9":\'+K.o9+",";if(K.fU){a+=\'"fU": "\'+K.fU+\'",\'}a+=\'"o8":\'+K.o8;a="{"+a+"}";R a},1p:"O.1l.tu"});O.1l.Bg=O.1A({aI:P,2k:P,di:P,et:P,4G:1d,ep:0,eq:P,1o:Q(a){if(!a){R}O.1c.1M(K,a)},1m:Q(){N a=K;a.aI=P;a.2k=P;a.di=P;a.et=P;a.4G=1d;a.ep=0;a.eq=P},Bf:Q(){N l="";l+=\'"aI":"\'+K.aI+\'",\';if(K.di&&K.di.1a){N h=[];N a=K.di.1a;1f(N c=0;c<a;c++){h.1u(\'"\'+K.di[c]+\'"\')}N g="["+h.6d(",")+"]";l+=\'"di":\'+g+","}if(K.aI==="On"&&K.2k){l+=\'"2k":{"9Z":{"x":\'+K.2k.1r+\',"y":\'+K.2k.1N+\'},"bx":{"x":\'+K.2k.1I+\',"y":\'+K.2k.1t+"}},"}if(K.et&&K.et.1a){N f=[];N e=K.et.1a;1f(N b=0;b<e;b++){N k=S O.1l.tu();k=K.et[b];f.1u(k.Bh())}N d="["+f.6d(",")+"]";d=\'"Om":\'+d+",";d+=\'"ep":\'+K.ep+",";d+=\'"eq":\'+K.eq;d="{"+d+"}";l+=\'"Ol":\'+d}l="{"+l+"}";R l},1p:"O.1l.Bg"});O.1l.Be=O.1A(O.4f,{2K:["4S","5p"],1n:P,2E:P,3S:P,4G:P,1o:Q(c,b){O.4f.1g.1o.1j(K,[c]);if(b){O.1c.1M(K,b)}N d=K,a;d.1n=S O.4o(d,P,d.2K,1d);if(d.2E 1V 6O){d.1n.on(d.2E)}if(!d.1z){R}a=d.1z.9m(d.1z.1a-1,1);if(d.4j){d.1z+=(a==="/")?"er.5G?":"/er.5G?"}V{d.1z+=(a==="/")?"er.5q?":"/er.5q?"}},1m:Q(){O.4f.1g.1m.1j(K,1s);N a=K;a.2K=P;if(a.1n){a.1n.1m();a.1n=P}if(a.2E){a.2E=P}if(a.3S){a.3S.1m();a.3S=P}a.4G=P},8o:Q(c){if(!c){R}N a=K,b;a.4G=c.4G;b=c.Bf();if(a.4G){a.1z+="4G="+a.4G}a.8n({5W:"de",52:b,2y:a,6x:a.o0,5V:a.nZ})},o0:Q(a){N c=K,b=P,d=P;a=O.1c.6a(a);if(c.4G){d=O.1l.co.2B(a)}V{d=S O.1l.co();if(a.8M){d.fM=S O.1U(a.8M.1r,a.8M.1N,a.8M.1I,a.8M.1t)}d.dh=O.1l.fL.2B(a)}c.3S=d;b=S O.1l.kh(d,a);c.1n.1L("4S",b)},nZ:Q(b){N e=K,d=P,a=P,c=P;b=O.1c.6a(b);d=b.6N;if(!d){R}a=O.8m.2B(d);c=S O.9l(a,b);e.1n.1L("5p",c)},hR:Q(a){R S O.1l.8s({aI:a.aI,2k:a.2k,di:a.di,et:a.et,4G:a.4G})},1p:"O.1l.Be"});O.1l.8s=O.1A({nY:P,5r:P,eq:hU,nX:O.1l.8P.es,nW:O.1l.Bd.tt,hS:P,ep:0,eg:10,o1:1b,1o:Q(a){if(!a){R}O.1c.1M(K,a)},1m:Q(){N c=K;c.nY=P;c.eq=P;c.nX=P;c.nW=P;if(c.hS){1f(N b=0,d=c.hS,a=d.1a;b<a;b++){d[b].1m()}c.hS=P}c.ep=P;c.eg=P;c.o1=P;c.5r=P},1p:"O.1l.8s"});O.1l.B9=O.1A({fU:P,2c:P,8L:P,o7:P,Bc:P,Bb:P,Ba:P,hT:P,1o:Q(a){if(a){O.1c.1M(K,a)}},1m:Q(){N e=K;e.fU=P;e.2c=P;if(e.8L){1f(N c=0,d=e.8L,a=d.1a;c<a;c++){d[c].1m()}e.8L=P}if(e.o7){1f(N c=0,b=e.o7,a=b.1a;c<a;c++){b[c].1m()}e.o7=P}e.Bc=P;e.Bb=P;e.Ba=P;e.hT=P},1p:"O.1l.B9"});O.1l.B8=O.1A(O.1l.8s,{4G:1d,1o:Q(a){O.1l.8s.1g.1o.1j(K,1s);if(!a){R}O.1c.1M(K,a)},1m:Q(){O.1l.8s.1g.1m.1j(K,1s);N a=K;a.4G=P},1p:"O.1l.B8"});O.1l.B7=O.1A(O.1l.8s,{4G:1d,2k:P,1o:Q(a){O.1l.8s.1g.1o.1j(K,1s);if(!a){R}O.1c.1M(K,a)},1m:Q(){O.1l.8s.1g.1m.1j(K,1s);N a=K;a.4G=P;if(a.2k){a.2k=P}},1p:"O.1l.B7"});O.1l.kt=O.1A({o6:P,o5:P,hT:P,o4:P,2n:P,1o:Q(a){if(a){O.1c.1M(K,a)}},1m:Q(){N d=K;d.o6=P;d.o5=P;d.hT=P;d.o4=P;if(d.2n){1f(N b=0,c=d.2n,a=c.1a;b<a;b++){c[b].1m()}d.2n=P}},1p:"O.1l.kt"});O.1l.kt.2B=Q(e){if(!e){R}N d=P,f=P;if(e.2n){f=[];1f(N c=0,b=e.2n,a=b.1a;c<a;c++){d=O.1l.ku.2B(b[c]).B6();f.1u(d)}}R S O.1l.kt({o6:e.o6,o5:e.o5,hT:e.hT,o4:e.o4,2n:f})};O.1l.fL=O.1A({6b:P,eh:P,id:P,1o:Q(a){if(a){O.1c.1M(K,a)}},1m:Q(){N a=K;a.6b=P;a.eh=P;a.id=P},1p:"O.1l.fL"});O.1l.fL.2B=Q(a){if(!a){R}R S O.1l.fL({6b:a.6b,eh:a.eh,id:a.aG})};O.1l.co=O.1A({o3:P,o2:P,fM:P,fT:P,dh:P,1o:Q(a){if(a){O.1c.1M(K,a)}},1m:Q(){N d=K;d.o3=P;d.o2=P;d.fM=P;if(d.fT){1f(N c=0,b=d.fT,a=b.1a;c<a;c++){b[c].1m()}d.fT=P}if(d.dh){d.dh.1m();d.dh=P}},1p:"O.1l.co"});O.1l.co.2B=Q(d){if(!d){R}N b=P;if(d.fT){b=[];1f(N c=0,e=d.fT,a=e.1a;c<a;c++){b.1u(O.1l.kt.2B(e[c]))}}R S O.1l.co({o3:d.o3,o2:d.o2,fM:d.fM,fT:b,dh:d.dh})};O.1l.kh=O.1A(O.54,{3d:P,1o:Q(a,c){O.54.1g.1o.1j(K,[c]);N b=K;b.3d=a},1m:Q(){O.54.1g.1m.1j(K);N a=K;if(a.3d){a.3d.1m();a.3d=P}},1p:"O.1l.kh"});O.1l.9p=O.1A(O.4f,{2K:["4S","5p"],1n:P,2E:P,3S:P,4G:1b,1o:Q(c,b){O.4f.1g.1o.1j(K,[c,b]);if(b){O.1c.1M(K,b)}N d=K,a;d.1n=S O.4o(d,P,d.2K,1d);if(d.2E 1V 6O){d.1n.on(d.2E)}a=d.1z.9m(d.1z.1a-1,1);if(d.4j){d.1z+=(a==="/")?"er.5G?":"/er.5G?"}V{d.1z+=(a==="/")?"er.5q?":"/er.5q?"}},1m:Q(){O.4f.1g.1m.1j(K,1s);N a=K;a.2K=P;if(a.1n){a.1n.1m();a.1n=P}if(a.2E){a.2E=P}if(a.3S){a.3S.1m();a.3S=P}a.4G=P},8o:Q(e,a){if(!e){R}N c=K,b=P,d=P;c.4G=e.4G;d=c.ks(e);if(c.4G){c.1z+="4G="+c.4G}V{b=e.o1;if(b){c.1z+="o1="+b}}c.8n({5W:"de",52:d,2y:c,8r:a,6x:c.o0,5V:c.nZ})},o0:Q(a){N c=K,b=P,d=P;a=O.1c.6a(a);if(c.4G){d=O.1l.co.2B(a)}V{d=S O.1l.co();if(a.8M){d.fM=S O.1U(a.8M.1r,a.8M.1N,a.8M.1I,a.8M.1t)}d.dh=O.1l.fL.2B(a)}c.3S=d;b=S O.1l.kh(d,a);c.1n.1L("4S",b)},nZ:Q(b){N e=K,d=P,a=P,c=P;b=O.1c.6a(b);d=b.6N;if(!d){R}a=O.8m.2B(d);c=S O.9l(a,b);e.1n.1L("5p",c)},hR:Q(a){R S O.1l.8s({nY:a.nY,eq:a.eq,nX:a.nX,nW:a.nW,hS:a.hS,ep:a.ep,5r:a.5r,eg:a.eg})},1p:"O.1l.9p"});O.1l.B5=O.1A(O.1l.9p,{1o:Q(b,a){O.1l.9p.1g.1o.1j(K,1s)},1m:Q(){O.1l.9p.1g.1m.1j(K,1s)},ks:Q(d){N b=K,c="",a=P;a=b.hR(d);c+="\'aI\':\'Ok\',\'kr\':";c+=O.1c.6y(a);c="{"+c+"}";R c},1p:"O.1l.B5"});O.1l.B4=O.1A(O.1l.9p,{1o:Q(b,a){O.1l.9p.1g.1o.1j(K,1s)},1m:Q(){O.1l.9p.1g.1m.1j(K,1s)},ks:Q(e){N c=K,d="",a=P,b=e.2k;a=c.hR(e);d+="\'aI\':\'Oj\',\'kr\':";d+=O.1c.6y(a);d+=",\'2k\': {\'bx\':{\'y\':"+b.1t+",\'x\':"+b.1I+"},\'9Z\':{\'y\':"+b.1N+",\'x\':"+b.1r+"}}";d="{"+d+"}";R d},1p:"O.1l.B4"});O.1l.B2=O.1A(O.1l.8s,{4G:1d,1v:P,nV:O.1l.B3.fS,1o:Q(a){O.1l.8s.1g.1o.1j(K,1s);if(!a){R}O.1c.1M(K,a)},1m:Q(){N a=K;O.1l.8s.1g.1m.1j(a,1s);a.4G=P;a.1v=P;a.nV=P},1p:"O.1l.B2"});O.1l.B1=O.1A(O.1l.9p,{1o:Q(b,a){O.1l.9p.1g.1o.1j(K,1s)},1m:Q(){O.1l.9p.1g.1m.1j(K,1s)},ks:Q(f){N c=K,e="",a=P,d=f.1v,b=O.1l.7D.hQ(d);a=c.hR(f);e+="\'aI\':\'Oi\',\'kr\':";e+=O.1c.6y(a)+",\'1v\':"+O.1c.6y(b)+",\'nV\':"+O.1c.6y(f.nV);e="{"+e+"}";R e},1p:"O.1l.B1"});O.1l.B0=O.1A(O.1l.8s,{3K:0,1v:P,ts:P,4G:1d,1o:Q(a){O.1l.8s.1g.1o.1j(K,1s);if(!a){R}O.1c.1M(K,a)},1m:Q(){O.1l.8s.1g.1m.1j(K,1s);N a=K;a.4G=P;a.3K=P;a.ts=P;if(a.1v){a.1v.1m();a.1v=P}},1p:"O.1l.B0"});O.1l.AZ=O.1A(O.1l.9p,{1o:Q(b,a){O.1l.9p.1g.1o.1j(K,1s)},1m:Q(){O.1l.9p.1g.1m.1j(K,1s)},ks:Q(e){N c=K,d="",a=P,a=c.hR(e);N b=O.1l.7D.hQ(e.1v);d+=e.ts?"\'aI\':\'Oh\',\'kr\':":"\'aI\':\'Og\',\'kr\':";d+=O.1c.6y(a);d+=",\'1v\':"+O.1c.6y(b)+",\'3K\':"+e.3K;d="{"+d+"}";R d},1p:"O.1l.AZ"});O.1l.tq=O.1A(O.54,{3d:P,1o:Q(a,c){O.54.1g.1o.1j(K,[c]);N b=K;b.3d=a},1m:Q(){O.54.1g.1m.1j(K);N a=K;if(a.3d){a.3d.1m();a.3d=P}},1p:"O.1l.tq"});O.1l.tp=O.1A(O.4f,{2K:["4S","5p"],1n:P,2E:P,3S:P,1o:Q(b,a){O.4f.1g.1o.1j(K,1s);N c=K;if(a){O.1c.1M(c,a)}c.1n=S O.4o(c,P,c.2K,1d);if(c.2E 1V 6O){c.1n.on(c.2E)}},1m:Q(){O.4f.1g.1m.1j(K,1s);N a=K;a.2K=P;a.1n=P;a.2E=P;if(a.3S){a.3S.1m();a.3S=P}},8o:Q(){if(!K.1z){R}N c=K,b;N a=c.1z.9m(c.1z.1a-1,1);c.1z=c.1z+((a==="/")?"aH":"/aH")+(K.4j?".5G?":".5q?");c.8n({5W:"cl",2y:c,6x:c.AY,5V:c.AX})},AY:Q(a){N d=K,c,b;a=O.1c.6a(a);c=O.1l.kq.2B(a);d.3S=c;b=S O.1l.tq(c,a);d.1n.1L("4S",b)},AX:Q(b){N d=K,c=P,a=P,e=P;b=O.1c.6a(b);c=b.6N;if(!c){R}a=O.8m.2B(c);e=S O.9l(a,b);d.1n.1L("5p",e)},1p:"O.1l.tp"});O.1l.kq=O.1A({kp:P,2c:P,bz:P,1o:Q(a){if(a){O.1c.1M(K,a)}},1m:Q(){N a=K;a.kp=P;a.2c=P;a.bz=P},1p:"O.1l.kq"});O.1l.kq.2B=Q(e){if(!e||!e[0]){R}e=e[0];N c=S O.1l.kq();if(e.kp){c.kp=e.kp}if(e.bz){c.bz=[];1f(N d=0,b=e.bz,a=b.1a;d<a;d++){c.bz[d]=b[d]}}if(e.2c){c.2c=e.2c}R c};O.1l.7B=O.1A({9n:7W,bw:0,9Y:0,1o:Q(c,b,a){if(!c&&c!=0){K.9n=7W}V{K.9n=c}if(!b&&b!=0){K.bw=0}V{K.bw=b}if(!a&&a!=0){K.9Y=0}V{K.9Y=a}},1m:Q(){N a=K;a.9n=P;a.bw=P;a.9Y=P},1p:"O.1l.7B"});O.1l.7B.2B=Q(c){if(!c){R}N b=S O.1l.7B();N e=7W;if(c.9n!==P){e=6c(c.9n)}b.9n=e;N d=0;if(c.bw!==P){d=6c(c.bw)}b.bw=d;N a=0;if(c.9Y!==P){a=6c(c.9Y)}b.9Y=a;R b};O.1l.ei=O.1A({fR:P,nU:1b,fQ:P,eo:P,nT:0,nS:0,nR:0,nQ:100,nP:0,fP:P,nO:0,8O:1,nN:0,nM:1,nL:-1,1o:Q(a){N b=K;b.fR=S O.1l.7B(7W,7W,7W);b.fQ=S O.1l.7B(7W,0,0);b.fP=S O.1l.7B(0,0,0);if(a){O.1c.1M(K,a)}},1m:Q(){N a=K;if(a.fR){a.fR.1m();a.fR=P}a.nU=P;if(a.fQ){a.fQ.1m();a.fQ=P}a.eo=P;a.nT=P;a.nS=P;a.nR=P;a.nQ=P;a.nP=P;if(a.fP){a.fP.1m();a.fP=P}a.nO=P;a.8O=P;a.nN=P;a.nM=P;a.nL=P},3X:Q(){N a={};a=O.1c.ci(a,K);R a},1p:"O.1l.ei"});O.1l.ei.2B=Q(a){if(!a){R}R S O.1l.ei({fR:O.1l.7B.2B(a.fR),nU:a.nU,fQ:O.1l.7B.2B(a.fQ),eo:a.eo,nT:a.nT,nS:a.nS,nR:a.nR,nQ:a.nQ,nP:a.nP,fP:O.1l.7B.2B(a.fP),nO:a.nO,8O:a.8O,nN:a.nN,nM:a.nM,nL:a.nL})};O.1l.nI=O.1A({AV:O.1l.AW.to,fO:P,fN:P,AU:1b,tg:1d,AT:6,AS:0,7C:nK,AR:"Of Oe Od",AQ:1b,nJ:1b,AP:0,ko:1b,AO:1b,AN:1b,ti:0,AM:1b,8N:0,1o:Q(a){N b=K;b.fO=S O.1l.7B(7W,7W,7W);b.fN=S O.1l.7B(0,0,0);if(a){O.1c.1M(K,a)}},1m:Q(){N a=K;a.AV=P;if(a.fO){a.fO.1m();a.fO=P}if(a.fN){a.fN.1m();a.fN=P}a.AU=P;a.tg=P;a.AT=P;a.AS=P;a.7C=P;a.AR=P;a.AQ=P;a.nJ=P;a.AP=P;a.ko=P;a.AO=P;a.AN=P;a.ti=P;a.AM=P;a.8N=P},1p:"O.1l.nI"});O.1l.nI.fJ=Q(b){N a=S O.1l.nI(b);O.1c.Oc(a,b);a.fO=O.1l.7B.2B(b.fO);a.fN=O.1l.7B.2B(b.fN);R a};O.1l.nH=O.1A({5H:P,kn:P,1o:Q(a){if(!a){R}O.1c.1M(K,a)},1m:Q(){N a=K;a.5H=P;a.kn=P},2B:Q(b){N a=S O.1l.nH();if(b){if(b.5H!=P){a.5H=b.5H}if(b.kn){a.kn=b.kn}}R a},1p:"O.1l.nH"});O.1l.nG=O.1A({kl:P,5H:P,kk:P,2c:P,kj:P,hP:P,1o:Q(a){if(!a){R}O.1c.1M(K,a)},1m:Q(){N a=K;a.kl=P,a.5H=P,a.kk=P,a.2c=P,a.kj=P,a.hP=P},2B:Q(a){N e=S O.1l.nG();if(a){if(a.kl){e.kl=a.kl}if(a.5H!=P){e.5H=a.5H}if(a.kk){e.kk=a.kk}if(a.2c){e.2c=a.2c}if(a.kj){e.kj=a.kj}if(a.hP){N b=S O.1l.nH();N d=[];1f(N c in a.hP){d.1u(b.2B(a.hP[c]))}e.hP=d}}R e},1p:"O.1l.nG"});O.1l.tn=O.1A({ki:P,1o:Q(a){if(!a){R}O.1c.1M(K,a)},1m:Q(){N a=K;a.ki=P},2B:Q(b){if(b==P){R P}N a=S O.1l.tn();N e=[];N d=S O.1l.nG();1f(N c in b){e.1u(d.2B(b[c]))}a.ki=e;R a},1p:"O.1l.tn"});O.1l.AJ=O.1A(O.4f,{2K:["4S","5p"],1n:P,2E:P,3d:P,1o:Q(b,a){O.4f.1g.1o.1j(K,[b]);if(a){O.1c.1M(K,a)}N c=K;c.1n=S O.4o(c,P,c.2K,1d);if(c.2E 1V 6O){c.1n.on(c.2E)}},1m:Q(){O.4f.1g.1m.1j(K,1s);O.1c.4T(K)},8o:Q(){N b=K,c="cl",a=b.1z.9m(b.1z.1a-1,1);if(!b.kf){b.1z+=(a==="/")?"":"/";b.1z+=b.4j?"ki.5G?":"ki.5q?"}V{b.1z+=b.4j?".5G?":".5q?"}b.8n({5W:c,3L:P,2y:b,6x:b.AL,5V:b.AK})},AL:Q(a){N c=K,b=P,d=P;a=O.1c.6a(a);if(c.4G){d=O.1l.co.2B(a)}V{d=S O.1l.co();if(a.8M){d.fM=S O.1U(a.8M.1r,a.8M.1N,a.8M.1I,a.8M.1t)}d.dh=O.1l.fL.2B(a)}c.3S=d;b=S O.1l.kh(d,a);c.1n.1L("4S",b)},AK:Q(b){N e=K,d=P,a=P,c=P;b=O.1c.6a(b);d=b.6N;if(!d){R}a=O.8m.2B(d);c=S O.9l(a,b);e.1n.1L("5p",c)},1p:"O.1l.AJ"});O.1l.AG=O.1A(O.4f,{2K:["4S","5p"],1n:P,2E:P,3S:P,kf:1b,1o:Q(b,a){O.4f.1g.1o.1j(K,[b,a]);if(a){O.1c.1M(K,a)}N c=K;c.1n=S O.4o(c,P,c.2K,1d);if(c.2E 1V 6O){c.1n.on(c.2E)}},1m:Q(){O.4f.1g.1m.1j(K,1s);O.1c.4T(K)},8o:Q(b){N c=K,d="cl",a=c.1z.9m(c.1z.1a-1,1);if(!c.kf){c.1z+=(a==="/")?"":"/";c.1z+=c.4j?"1Q.5G?":"1Q.5q?"}V{c.1z+=c.4j?".5G?":".5q?"}c.8n({5W:d,3L:P,2y:c,6x:c.AI,5V:c.AH,8r:b&&b.8r})},AI:Q(b){N e=K,d,c,f,a=0;b=O.1c.6a(b);c=O.1c.Ob({},b);d=!!c&&c.1a>0;f=d?c[0].cg.1Q:P;a=f?f.1a:0;K.tm(a,f);e.3S=c[0];N g=S O.1l.t4(c[0],b);e.1n.1L("4S",g)},tm:Q(a,f){N e=K,b;if(a){1f(N c=0;c<a;c++){if(f[c].cg&&f[c].cg.1Q&&f[c].cg.1Q.1a>0){K.tm(f[c].cg.1Q.1a,f[c].cg.1Q)}V{N d=f[c].t6;5m(d){1K"Oa":b=S O.1l.t9();b.2B(f[c]);f[c]=b;1D;1K"nD":b=S O.1l.9o();b.2B(f[c]);f[c]=b;1D;1K"O9":b=S O.1l.4F();b.2B(f[c]);f[c]=b;1D;1K"O8":b=S O.1l.31();b.2B(f[c]);f[c]=b;1D;1K"tk":1D;1K"tj":1D}}}}},AH:Q(b){N e=K,d=P,a=P,c=P;b=O.1c.6a(b);d=b.6N;if(!d){R}a=O.8m.2B(d);c=S O.9l(a,b);e.1n.1L("5p",c)},1p:"O.1l.AG"});O.1l.ck=O.1A({2k:P,O7:P,nE:P,2c:P,O6:P,cg:P,2A:P,7e:P,1o:Q(a){a=a?a:{};O.1c.1M(K,a)},1m:Q(){N a=K;O.1c.4T(a)},2B:Q(c){c=c?c:{};O.1c.1M(K,c);N a=K.2k;if(a){K.2k=S O.1U(a.9Z.x,a.9Z.y,a.bx.x,a.bx.y)}},3X:Q(){N a={};a=O.1c.ci(a,K);if(a.2k){if(a.2k.3X){a.2k=a.2k.3X()}}R a},1p:"O.1l.ck"});O.1l.fK=O.1A(O.1l.ck,{O5:P,55:P,56:P,O4:P,ti:P,O3:P,O2:P,dg:P,el:P,1o:Q(a){a=a||{};O.1l.ck.1g.1o.1j(K,[a])},1m:Q(){O.1l.ck.1g.1m.1j(K,1s);O.1c.4T(K)},2B:Q(a){O.1l.ck.1g.2B.1j(K,[a])},3X:Q(){N a=O.1l.ck.1g.3X.1j(K,1s);R a},1p:"O.1l.fK"});O.1l.6p=O.1A(O.1l.fK,{ek:P,hM:P,8L:P,O1:P,t6:P,1o:Q(a){a=a||{};O.1l.fK.1g.1o.1j(K,[a])},2B:Q(c){O.1l.fK.1g.2B.1j(K,[c]);if(K.ek){K.ek=S O.1l.t8(K.ek)}if(K.8L&&K.8L.1a){N a=[];1f(N b=0;b<K.8L.1a;b++){a[b]=S O.1l.th(K.8L[b])}K.8L=a}},1m:Q(){O.1l.fK.1g.1m.1j(K,1s);O.1c.4T(K)},3X:Q(){N b=O.1l.fK.1g.3X.1j(K,1s);if(b.8L){N c=[];1f(N a=0;a<b.8L.1a;a++){if(b.8L[a].3X){c[a]=b.8L[a].3X()}}b.8L=c}if(b.ek){if(b.ek.3X){b.ek=b.ek.3X()}}R b},1p:"O.1l.6p"});O.1l.9o=O.1A(O.1l.6p,{nC:P,AE:P,O0:P,kg:P,AD:P,8q:P,NZ:P,NY:P,tg:P,ej:P,hO:P,NX:P,NW:P,NV:P,1o:Q(a){a=a||{};O.1l.6p.1g.1o.1j(K,[a])},1m:Q(){O.1l.6p.1g.1m.1j(K,1s);O.1c.4T(K)},2B:Q(f){O.1l.6p.1g.2B.1j(K,[f]);if(K.hO){K.hO=S O.1l.7B(K.hO.9n,K.hO.bw,K.hO.9Y)}if(K.kg){N a=[],c;1f(N e in K.kg){c=K.kg[e];a.1u(S O.1l.7B(c.9n,c.bw,c.9Y))}K.kg=a}if(K.8q){K.8q=S AF.1l.ei(K.8q)}if(K.ej){K.ej=S AF.1l.ei(K.ej)}if(K.ke){N g=[],b;1f(N d in K.ke){b=K.ke[d];g.1u(S O.1l.t7({t5:d,57:b}))}K.nC=g}2t K.ke},3X:Q(){N a=O.1l.6p.1g.3X.1j(K,1s);if(a.8q){if(a.8q.3X){a.8q=a.8q.3X()}}if(a.ej){if(a.ej.3X){a.ej=a.ej.3X()}}R a},1p:"O.1l.9o"});O.1l.4F=O.1A(O.1l.6p,{AE:P,NU:P,AD:P,NT:P,nF:P,hN:P,NS:P,1o:Q(a){a=a||{};O.1l.6p.1g.1o.1j(K,[a])},1m:Q(){O.1l.6p.1g.1m.1j(K,1s);O.1c.4T(K)},2B:Q(a){O.1l.6p.1g.2B.1j(K,[a]);if(K.hN){K.hN=S O.1l.7B(K.hN.9n,K.hN.bw,K.hN.9Y)}},3X:Q(){N a=O.1l.6p.1g.3X.1j(K,1s);R a},1p:"O.1l.4F"});O.1l.t9=O.1A(O.1l.6p,{8p:P,df:P,1o:Q(a){a=a||{};O.1l.6p.1g.1o.1j(K,[a])},1m:Q(){O.1l.6p.1g.1m.1j(K,1s);O.1c.4T(K)},2B:Q(b){O.1l.6p.1g.2B.1j(K,[b]);N a=K.8p;N c=a&&a.2A;5m(c){1K"tf":K.8p=O.1l.NR.fJ(a);1D;1K"te":K.8p=O.1l.NQ.fJ(a);1D;1K"td":K.8p=O.1l.NP.fJ(a);1D;1K"tc":K.8p=O.1l.NO.fJ(a);1D;1K"tb":K.8p=O.1l.NN.fJ(a);1D;1K"ta":K.8p=O.1l.NM.fJ(a);1D}if(K.df){K.df=S O.3k(K.df.x,K.df.y)}},3X:Q(){N a=O.1l.6p.1g.3X.1j(K,1s);if(a.df){if(a.df.3X){a.df=a.df.3X()}}if(a.8p){if(a.8p.3X){a.8p=a.8p.3X()}}R a},1p:"O.1l.t9"});O.1l.31=O.1A(O.1l.6p,{W:P,1o:Q(a){a=a||{};O.1l.6p.1g.1o.1j(K,[a])},1m:Q(){O.1l.6p.1g.1m.1j(K,1s);O.1c.4T(K)},2B:Q(b){O.1l.6p.1g.2B.1j(K,[b]);N a=K.W;if(a){K.W=S O.1l.ei(a)}},3X:Q(){N a=O.1l.6p.1g.3X.1j(K,1s);if(a.W){if(a.W.3X){a.W=a.W.3X()}}R a},1p:"O.1l.31"});O.1l.t8=O.1A({2k:P,NL:P,nE:P,NK:P,NJ:P,2c:P,5r:P,NI:P,2A:P,1o:Q(c){c=c||{};O.1c.1M(K,c);N a=K.2k;if(a){K.2k=S O.1U(a.9Z.x,a.9Z.y,a.bx.x,a.bx.y)}},1m:Q(){O.1c.4T(K)},3X:Q(){N a={};a=O.1c.ci(a,K);if(a.2k){if(a.2k.3X){a.2k=a.2k.3X()}}R a},1p:"O.1l.t8"});O.1l.AC=O.1A({NH:1d,NF:1d,NE:1b,ND:1d,NC:1b,NB:1b,NA:0,Nz:0,1o:Q(a){a=a||{};O.1c.1M(K,a)},1m:Q(){O.1c.4T(K)},2B:Q(a){O.1l.ck.1g.2B.1j(K,[a])},3X:Q(){N a=O.1l.ck.1g.3X.1j(K,1s);R a},7A:Q(){N b=O.1l.ck.1g.3X.1j(K,1s);N c="{";1f(N a in b){if(b.cj(a)){c+="\'"+a+"\':"+b[a]+","}}c=c.9m(0,c.1a-1);c+="}";R c},1p:"O.1l.AC"});O.1l.t7=O.1A({t5:P,57:P,1o:Q(a){a=a||{};O.1c.1M(K,a);N b=K,d=b.57;if(d){b.57=S O.1l.7B(d.9n,d.bw,d.9Y)}},1m:Q(){O.1c.4T(K)},3X:Q(){N a={};a=O.1c.ci(a,K);R a},1p:"O.1l.t7"});O.1l.AA=O.1A(O.4f,{2K:["4S","5p"],1n:P,2E:P,3S:P,bu:P,kf:1b,1o:Q(b,a){O.4f.1g.1o.1j(K,[b,a]);if(a){O.1c.1M(K,a)}N c=K;c.1n=S O.4o(c,P,c.2K,1d);if(c.2E 1V 6O){c.1n.on(c.2E)}},1m:Q(){O.4f.1g.1m.1j(K,1s);O.1c.4T(K)},8o:Q(d){N m,k=[],n=K,a="",e;if(!d){R}e=n.1z.9m(n.1z.1a-1,1);n.1z+=(e==="/")?"":"/";if(n.kf){n.1z+="nA/"+n.bu;a="kc"}V{n.1z+="nA";a="de"}n.1z+=n.4j?".5G?":".5q?";N h=d.cg.1Q,l=h.1a;1f(N g in h){if(h[g].t6==="nD"){N c={};N b=h[g].nC;1f(N f in b){N o=b[f].t5;c[o]=b[f].57}}h[g].ke=c;2t h[g].nC}1f(N g=0;g<l;g++){if(h[g].AB){k.1u(h[g].AB())}V{k.1u(h[g])}}m=O.1c.1M(m,d);m.cg={1Q:k};m.6z=P;N p=O.1c.6y([m]);n.8n({5W:a,52:p,2y:n,6x:n.hL,5V:n.fG})},hL:Q(a){N b=K,d;a=O.1c.6a(a);d=O.1l.hK.2B(a);N c=d.6b;if(c){N e=S O.1l.nx(d,a);b.3S=d;b.1n.1L("4S",e)}},fG:Q(b){N e=K,d=P,a=P,c=P;b=O.1c.6a(b);d=b.6N;if(!d){R}a=O.8m.2B(d);c=S O.9l(a,b);e.1n.1L("5p",c)},1p:"O.1l.AA"});O.1l.t4=O.1A(O.54,{3d:P,1o:Q(a,c){O.54.1g.1o.1j(K,[c]);N b=K;b.3d=a},1m:Q(){O.54.1g.1m.1j(K,1s);N a=K;if(a.3d){O.1c.4T(a.3d);a.3d=P}},1p:"O.1l.t4"});O.1l.nx=O.1A(O.54,{3d:P,1o:Q(a,c){O.54.1g.1o.1j(K,[c]);N b=K;b.3d=a},1m:Q(){O.54.1g.1m.1j(K,1s);N a=K;if(a.3d){a.3d=P}},1p:"O.1l.nx"});O.1l.hK=O.1A({6b:P,aG:P,eh:P,1o:Q(a){if(a){O.1c.1M(K,a)}},1m:Q(){N a=K;a.6b=P;a.aG=P;a.eh=P},1p:"O.1l.hK"});O.1l.hK.2B=Q(a){if(!a){R}R S O.1l.hK({6b:a.6b,aG:a.aG,eh:a.eh})};O.1l.Az=O.1A({8K:P,sZ:P,hM:P,nB:P,1o:Q(a){if(a){O.1c.1M(K,a)}},1m:Q(){N a=K;a.8K=P;a.sZ=P;a.hM=P},6y:Q(){N b="{";b+=\'"2A":"nz",\';N a=[];if(K.8K){a.1u(\'"2c":"\'+K.8K+\'"\');a.1u(\'"7e":\'+K.sZ)}if(K.hM){a.1u(\'"hM":"\'+K.hM+\'"\')}if(K.56||K.56==0){a.1u(\'"56":\'+K.56)}if(K.55||K.55==0){a.1u(\'"55":\'+K.55)}if(K.nB){a.1u(\'"nB":\'+O.1c.6y(K.nB))}b+=a;b+="}";R b},1p:"O.1l.Az"});O.1l.Ay=O.1A({fI:P,eg:15,bu:P,1o:Q(a){N b=K;b.fI=[];if(a){O.1c.1M(K,a)}},1m:Q(){N a=K;a.fI=P;a.eg=P;a.bu=P},6y:Q(){N d="{";d+=\'"1Q":[\';N b=[];1f(N c=0,a=K.fI.1a;c<a;c++){b.1u(K.fI[c].6y())}d+=b;d+="]";d+="}";R d},1p:"O.1l.Ay"});O.1l.kd=O.1A({6b:P,aG:P,1o:Q(a){if(a){O.1c.1M(K,a)}},1m:Q(){N a=K;a.6b=P;a.aG=P},1p:"O.1l.kd"});O.1l.kd.2B=Q(a){if(!a){R}R S O.1l.kd({6b:a.6b,aG:a.aG})};O.1l.sX=O.1A(O.54,{3d:P,1o:Q(a,c){O.54.1g.1o.1j(K,[c]);N b=K;b.3d=a},1m:Q(){O.54.1g.1m.1j(K,1s);N a=K;if(a.3d){a.3d=P}},1p:"O.1l.sX"});O.1l.Av=O.1A(O.4f,{2K:["4S","5p"],1n:P,2E:P,3S:P,fH:P,ny:P,1o:Q(b,a){O.4f.1g.1o.1j(K,[b,a]);if(a){O.1c.1M(K,a)}N c=K;c.1n=S O.4o(c,P,c.2K,1d);if(c.2E 1V 6O){c.1n.on(c.2E)}c.ny=b},1m:Q(){O.4f.1g.1m.1j(K,1s);O.1c.4T(K)},8o:Q(e){N c=[],b=K,f="de";if(!e){R}b.1z=b.ny;N a=b.1z.9m(b.1z.1a-1,1);b.1z+=(a==="/")?"":"/";if(e.bu==P){b.1z+="nA";b.1z+=b.4j?".5G?":".5q?";b.fH=e;b.8n({5W:f,2y:b,6x:b.Ax,5V:b.fG})}V{b.1z+="nA/"+e.bu;b.1z+=b.4j?".5G?":".5q?";b.1z+="Ny=1d&Nx="+e.bu+"&eg="+e.eg.7A();N d="[{";d+=\'"2A":"nz",\';if(e.fI!=P&&e.fI.1a>0){d+=\'"cg":\'+e.6y()}d+=\',"7e":\'+1d+",";d+=\'"2c":"\'+K.Aw(K.ny)+\'"\';d+="}]";b.8n({5W:"kc",52:d,2y:b,6x:b.hL,5V:b.fG})}},Ax:Q(a){N b=K;a=O.1c.6a(a);if(a.6b){b.fH.bu=a.aG}b.8o(b.fH)},Aw:Q(b){N d=b;if(d.ef(d.1a-1)==="/"){d=d.9m(0,d.1a-1)}N a=d.sY("/");N c=d.bv(a+1,d.1a);R c},hL:Q(a){N b=K,e;a=O.1c.6a(a);e=O.1l.kd.2B(a);N d=e.6b;if(d){N c=S O.1l.sX(e,a);b.3S=e;if(c.3d!=P&&b.fH!=P){c.3d.aG=b.fH.bu;b.3S.aG=b.fH.bu}b.1n.1L("4S",c)}},fG:Q(b){N e=K,d=P,a=P,c=P;b=O.1c.6a(b);d=b.6N;if(!d){R}a=O.8m.2B(d);c=S O.9l(a,b);e.1n.1L("5p",c)},1p:"O.1l.Av"});O.1l.Au=O.1A(O.4f,{2K:["4S","5p"],1n:P,2E:P,3S:P,bu:P,1o:Q(b,a){O.4f.1g.1o.1j(K,[b,a]);if(a){O.1c.1M(K,a)}N c=K;c.1n=S O.4o(c,P,c.2K,1d);if(c.2E 1V 6O){c.1n.on(c.2E)}},1m:Q(){O.4f.1g.1m.1j(K,1s);O.1c.4T(K)},8o:Q(c){N b=K;if(!c){R}b.1z+=b.4j?".5G":".5q";N a=O.1c.6y(c);b.8n({5W:"kc",52:a,2y:b,6x:b.hL,5V:b.fG})},hL:Q(a){N b=K,d;a=O.1c.6a(a);d=O.1l.hK.2B(a);N c=d.6b;if(c){N e=S O.1l.nx(d,a);b.3S=d;b.1n.1L("4S",e)}},fG:Q(b){N e=K,d=P,a=P,c=P;b=O.1c.6a(b);d=b.6N;if(!d){R}a=O.8m.2B(d);c=S O.9l(a,b);e.1n.1L("5p",c)},1p:"O.1l.Au"});O.ee=O.1A({dc:[],9X:At,fF:1b,hI:0,hH:0,As:["Am"],1n:P,1o:Q(d,c,b,a){if(a&&a.9X){K.Ap(a.9X)}K.Ao(d);K.Ar(c);K.Aq(b);K.kb(a);K.1n=S O.4o(K,P,K.As)},on:Q(){K.3O=1d},hJ:Q(){K.3O=1b},Nw:Q(){K.3O?K.hJ():K.on()},Ar:Q(a){if(!2w(a)){if(a>K.9X){a=K.9X}K.hI=a}V{K.hI=O.ee.sV}},Aq:Q(a){if(!2w(a)){if(a>K.9X){a=K.9X}K.hH=a}V{K.hH=O.ee.sV}},Ap:Q(a){if(!2w(a)){K.9X=a}V{K.9X=O.ee.sU}},Ao:Q(a){if(a&&a.1a>0){K.dc=a}V{K.hJ()}},kb:Q(a){a.Nv?K.on():K.hJ();a.9X?K.9X=a.9X:K.9X=O.ee.sU},ka:Q(n){if(K.3O){N g=n;N o=1k.3l(K.hI,K.hH);N a=o*K.2u();N q=S O.1h.1F(n.1P,n.1S);N b=q;1f(N h=0,l=K.dc.1a;h<l;h++){N m=K.dc[h];if(m 1V O.1C.31&&m.3v){1f(N f=0,e=m.2n.1a;f<e;f++){N r=m.2n[f];N p=r.1v;if(r.7V!==O.6o.cf&&r.nw(n,a,a)){5m(p.1p){1K"O.1h.1F":1K"O.1l.An":b=K.nv(p,q);1D;1K"O.1h.8J":1f(N c=0,d=p.1x.1a;c<d;c++){b=K.nv(p.1x[c],q);if(!b.3A(q)){1D}}1D;1K"O.1h.2p":1K"O.1l.k9":b=K.nt(p,q);1D;1K"O.1h.8l":1f(N c=0,d=p.1x.1a;c<d;c++){b=K.nt(p.1x[c],q);if(!b.3A(q)){1D}}1D;1K"O.1h.3R":b=K.sW(p,q);1D;1K"O.1h.8k":1f(N c=0,d=p.1x.1a;c<d;c++){b=K.sW(p.1x[c],q);if(!b.3A(q)){1D}}1D;4m:1D}}g=S O.3k(b.x,b.y);if(!b.3A(q)){R g}}}}K.1n.1L("Am",{Nu:q,3d:b});R g}V{R n}},nv:Q(d,a){N b=K.2u();N c=K.hI*b;N e=d.7d(a);if(e<c){R d}R a},nt:Q(g,j){N f=K.2u();N b=K.hH*f;N e=g.4R();1f(N c=0,d=e.1a;c<d;c++){N h=K.nv(e[c],j);if(!h.3A(j)){R h}}N k=g.7d(j,{nu:1d});N a=k.3K;if(a<b){R S O.1h.1F(k.x0,k.y0)}R j},sW:Q(b,a){R K.nt(b,a)},2u:Q(){N b;1f(N a=0;a<K.dc.1a;a++){if(K.dc[a].U){b=K.dc[a].U.2u();1D}}if(b==2b){b=K.dc[0].2u()}R b},1m:Q(){K.hJ();2t K.dc;2t K.hI;2t K.hH},1p:"O.ee"});O.ee.sV=5;O.ee.sU=sT;',62,3861,'||||||||||||||||||||||||||||||||||||||||||||||this|||var|SuperMap|null|function|return|new||map|else|style||||||||||||||length|false|Util|true||for|prototype|Geometry|layer|apply|Math|REST|destroy|events|initialize|CLASS_NAME|div|left|arguments|top|push|geometry|canvas|components|Control|url|Class|width|Layer|break|height|Point|size|feature|right|Event|case|triggerEvent|extend|bottom|document|lon|layers|clone|lat|resolutions|Bounds|instanceof|window|appendChild|handlers|Handler||||hitContext|||||||baseLayer|undefined|name|||Renderer|display|deactivate|renderer|fill|bounds|parseInt|setAttributeNS|features|element|LineString|stroke|activate|round|delete|getResolution|typeof|isNaN|position|scope|Function|type|fromJson|Pixel|options|eventListeners|Style|createElement|draw|Element|Size|EVENT_TYPES|none|opacity|indexOf|projection|units|stop|180|moveTo|hitDetection|removeChild|png|pow|click|parentNode|setMap||Vector|||||||||maxExtent|anchor|tileSize|result|img|root|labelAlign|Projection|absolute|offset|LonLat|max|point|callback|Feature|redraw|observe|parseFloat|layerContainerDiv|add|ovmap|visibility|handler|last|imgDiv|grid|equals|move|abs|viewPortDiv|mapObject|scales|center|callbacks|cursor|getWidth|distance|params|scale|transform|active|bind|drawFeature|Polygon|lastResult|Array|className|start|timerId|toServerJSONObject|translate|controls||dragging|replace|||||call|getExtent|_|Popup|line|CanvasLayer|tile||ServiceBase|mousedown|fontSize|useCanvas|isInTheSameDomain|isArray|dpi|default|out|Events|label|min|minResolution|http|EPSG|pointer|strokeWidth|auto|mouseup|mousemove|down|maxResolution|split|LinearRing|applyDefaults|graphics|Image|returnContent|dblclick|getZoom|getHeight|radius|clearRect|pointRadius|graphic|src|padding|register|getVertices|processCompleted|reset|while|fillOpacity|graphicName|getImagesLocation|image|icon|||data||ServiceEventArgs|maxScale|minScale|color|filter|contentDiv|extent|addClass|datumAxis|format|bindAsEventListener|Canvas|rotate|ratio|getSize|zoom|zoomBox|numZoomLevels|switch|box|minimizeDiv|processFailed|jsonp|prjCoordSys|getBounds|String|zIndex|globalAlpha|getLonLatFromViewPortPx|lonlat|isBaseLayer|wrapDateLine|sqrt|drag|touch|maximizeDiv|Tile|restrictedExtent|json|code|points|clearTimeout|continue|clear|getContext|graphicHeight|graphicWidth|Collection|silent|passEventToSlider|displayProjection|layersDiv|20037508|failure|method|getProjectionObject|displayClass|setCanvasStyle|||||getCenterLonLat||popup|selectControl||Google|transformResult|succeed|Number|join||splice|setCenter|setTimeout|selectedFeatures|geometryTypes|innerHTML|container|externalGraphic|frame|State|UGCSubLayer|Symbolizer|angle|beginPath|getElement|started|extentRectangle|number|success|toJSON|object|eventsDiv|over|SVG|styles|origin|throw|setSize|unregister|setHitContextStyle|NONE|sliderBarWidth|touches|canvasContext|error|Object|intersects|getLonLatFromPixel|getLocalXY|nodeFactory|attributes|update|moveend|closeDiv|drawLinearRing|polygon|sliderBarHeight||dragControl||redoStack|pan|||interval|Date|control|maps|minExtent|imageDiv|distanceTo|visible|viewBounds|readyState|proxy|evt|done|select|renderIntent|stopDown|Strategy|fontStyle|labelYOffset|labelXOffset|labelRotation|fillColor|loadend|context|createDiv|changelayer|com|termsOfUse|_object|toString|ServerColor|fontWeight|ServerGeometry|concat|lastFeature|_prevHighlighter|title|addFeatures|locked|resolution|createUniqueID|strokeStyle|leftTop|useCanvasEvent|drawImage|resize|documentDrag|pane|lastImage|markers|state|255|getCode|drawn|sin||fillStyle|defaultStyle|contentSize||getOptions|selectFeatures|olv|href|addComponent|body|vertices|inRange|buttons||dragHandler|sphericalMercator|google|proj|minPx|MultiPolygon|MultiLineString|ServiceException|request|processAsync|theme|dashStyle|credential|QueryParameters|viewer|getArea|order|handlerOptions|toggle|text|fontColor|getViewPortPxFromLonLat|closePath|count|rules|getElementById|pop|standalone|pinchZoom|dragPan|MultiPoint|layerName|joinItems|customResult|rotation|lineWidth|GeometryType|totalTimes|Browser|cancel|cos|bsInfo|fontFamily|strokeLinecap|strokeColor|symbolizer|blocks||groupDiv|createAlphaImageDiv|sort|showSlider|||changebaselayer|ModifyFeature|mode|virtualVertices|modified|doubleClick|floor|touchstart|border|version|serverResolutions|zOffset|layersID|paddingForPopups|ServiceFailedEventArgs|substr|red|Grid|QueryService|listeners|4326|clickout|autoActivate|getCentroid|protocol|lineTo|lineCap|hidden|relativePosition|setExtent|strategies|tempIndex|drawGeometry|intersectsBounds|getMaxExtent|path|_style|slider|attribution|updateAttribution|radiusHandle|getNumZoomLevels|touchmove|getStyle|_timeoutId|lastUp|RESOLUTION_PROPERTIES|changeDy|changeDx|mapStatus|backupCanvas|aniCanvas|maxTolerance|blue|leftBottom|containsBounds|urls|index|slice|i18n|stopObservingElement|LABEL_ALIGN|font|destroyFeatures|calculateBounds|graphicYOffset|graphicXOffset|overflow|setOpacity|removeMap|removeFeatures|Rectangle|rendererRoot|target|firstChild|removeComponent|clearBounds|lastGraphic||createElementWithStyle|vertex|removeClass|clientY|pixelTolerance|unload|stopObserving|mapDiv|getZoomForResolution|getResolutionForZoom|cache|getCachedCenter|memoryImg|singleTile|newImgTag|isLoading|headers|observers|newResourceID|tilesets|queryMode|Credential|persist|unselectAll|removeItem|_lastHighlighter|vectorRoot|000000|minZoomLevel|strokeDashstyle|strokeOpacity|load|loadstart|property|Gradient|hide|positionBlocks|styleMap|moveByPx|begin|graphicsArr|pendingRedraw|restore|save|graphicTitle|isLeftClick|clientX|getCenter|undoStack|mouseDown|baseLayersDiv|dataLayersDiv||mouseout|mini|mapLevel|triggerCallback|delta|white||marker|tileOrigin|getTime|buffer|_attempts||baseCanvas|inclusive|resourceID|substring|green|rightTop||tileVersions|unit|parts|status|Lang|navigator|unselect|removeLayer|event|childNodes|VML|LABEL_FACTOR|normal|labelSelect|maxZoomLevel|setLineDash|rightBottom|maxSize|minSize|0px|getLayerPxFromLonLat|zoomChanged|supported|renderPath|Elements|complete|onreadystatechange|catch|try|preventDefault|dragHandle|rectPxBounds|getProjection|Z_INDEX_BASE|finalize|selectUrl|poweredBy|HTTPRequest||viewRequestID|maxPx|popups|DELETE|subLayers||copyAttributes|hasOwnProperty|UGCLayer|GET|||QueryResult|string|coordUnit|getUnits|multiple||_selectStyle|hover|clickFeature|||panel_div|textRoot|contains|setAttribute|solid|refresh|calculateInRange|pointsLength|shadowDiv|transitionObj|scrollLeft|isFirstDraw|drawPoint|hitCanvas|symbol|onselectstart|isFilled|defs|outer|selectedGraphics|bcg|snap|Drag|layerOptions|eTop|zoomOut|divEvents|zoomStopHeight|divLevel|_addButton|stoppedDown|passesTolerance|onLoadEnd|clipRegion|backBufferTimerId|Easing|Request|toFloat||snapLayers||POST|themeElementPosition|overlapDisplayed|resourceInfo|chartLayerNames|200|CREDENTIAL|POINT|toLowerCase|getVisibility||onSelect|overFeature|test|GeoText|fontOpacity|_geometryClass|_featureId|setStyle|value||lineJoin|render|arc|pointerEvents|onMapResize|Graphic|getPixelFromLonLat|hitOverflow|cachedSymbolBounds|globalCompositeOperation|drawText|sector|worldBounds|Curve|componentTypes|containsPoint|parent|tilesversion|removelayer|pixel|UPDATE|mouseover|inputElem|eBottom|includeXY|div_zoombar_three|backgroundColor|Map|keyMask|kinetic|pinching|isApp|modifyFeature|lastDown|getTileUrl|EventPane|redirect|firstInView|tempCanvas|updateSize|panTween|Snap|charAt|holdTime|newResourceLocation|ServerStyle|solidStyle|datasetInfo|overlapDisplayedOptions|||fillGradientMode|startRecord|expectCount|queryResults|LINE|chartQueryFilterParameters|area|obj|getLength|measure|initLayer|multipleSelect|highlight|cloneObject|outFeature|drawFeatures|isNewAdd|measureText|LABEL_ID_SUFFIX|symbolizers|radius1|lineDash|colorStops|match|1238|show|Error|256|hitCanvasBack|backCanvas|drawRectangle|polygonCanvas|drawPolygon|drawLineString|onload|resetCanvas|span|MAX_PIXEL|org|indexer|ElementsIndexer|containsLonLat|addlayer|setVisibility|setBaseLayer|organizer|multi|controlSkinBlue|dataLbl|layerStates|log|zoomIn|mouseDragStart|touchend|handle|rightclick|clearTimer|getEventInfo|3427892|XYZ|getXYZ|3857|inverseMercator|setGMapVisibility|initResolutions|getScaleFromResolutionDpi|calculateResolutions||resolutionsFromScales|alwaysInRange|addEventType|||initGriddedTiles|duration|gutter|allOverlays|documentElement|extensions|keydown|setLayerFailed|lastparams|layerStatusList|fromObj|UGCMapLayer|ResourceInfo|customResponse|foreColor|backColor|lineColor|fillForeColor|fillBackColor|INTERSECT|recordsets|attributeFilter|CoordTransferResult|300|toGeometry|exec|Type|INCHES_PER_UNIT|getGeodesicArea|delayedTrigger|freehandMode|modify|setLayer|onUnselect|onBeforeSelect|addLayer|offsetX|textAlign|fillText|IS_GECKO|end|visibilitychanged|Filter|createSymbolizer|setTransform||not|graphicOpacity|relative|imageSize|panMapIfOutOfView|Anchored|getLonLatFromLayerPx|getFeatureIdFromEvent|eraseFeatures|unrenderedFeatures|isFixed|lastCanvasPosition|lastResolution|featuremodified|eraseGeometry|lastBounds|hitContextBack|featureDx|polygonContext|drawCircle|createNode|getShortString|translationParameters|www|getZIndex|maxZIndex|fontPercent|fontSpace|sides|1000|enable|tilesetsIndex|sliderWidth|infWidth|defaultPosition|base|getParameters|location|getParameterString|INSERT|minimizeControl|switcher|baseLbl|SKIN|zoomTo|alphaHack|div_zoombar|levelsDesc|slideFactor|minRectSize|double|unloadDestroy|fallThrough|cursorCSS|msGesture|oldOnselectstart|setZIndex|getSketch|destroyFeature|Path|getCurrentPointIndex|delay|rightclickTimerId|UNKNOWN|Marker|mapName|_callbackId|children|lng|getZoomForExtent||getResolutionFromScaleDpi|setTileSize|backBuffer|aniCtx|lefttop|contentHTML|movestart|calculateOffset|getResolutionFromScale|transforms|DONE|UNSENT|issue|clickTimeOutId_|centerLonLat|lineTolerance|pointTolerance|off|SetLayersInfoResult|setLayerComplted|displayFilter|transparentColor|specialColor|attributeFields|fromGeometry|getQueryParameters|queryParams|fields|100000|epsgCode|projCode|createLineEPS|responseText|POLLING_TIMES|toUpperCase|msie|geolocation|unhighlight|isSelected|highlightOnly|clickoutFeature|except|repeat|shift|labelWTmp|response|temporary||miterLimit||rect|autoSize|moveRoot|which|TypeError|firstLoad|sketchcomplete||16777216|londingimgs|drawImageScaleFactor|getViewPortPxFromLayerPx|||backCanvasContext|fillRect|drawTextRect|featureId|redrawByImgLoadEndTimeOutId|userAgent|nowrap|False|getElementsByTagName|shape|block|xmlns|remove|indices|unshift|getSortedSegments|removePoint|addPoint|Format|smButton|hasClass|sliderBarEvents|infDiv|tileWidth|changeElements|btnWidth|createBtn|TilesVersionControl|updateLink|storeUndo|lastGeometry_|_sketch|deleteCodes|lastPixel|dragstart|finishGeometry|maximizeControl|BLUE|checked|PanZoomBar|getSlideFactor|panright|panleft|pandown|panup|getComputedStyle|defaultView|currentStyle|fractionalZoom|offsets|sliderEvents|showCompass|device|attachEvent|wComp|hComp|rectEvents|stopDouble|lastXy|isIESingleTouch|wheel|contextmenu|checkModifiers|mousePosition|mode_|startTime_|snapAngle|destroyPersistedFeature|lastTouchPx|modifyDOMElement|BingMap|getURL|tileOptions|_blank|900913|LatLng|displayed|dragPanMapObject|forwardMercator|layerType|onLoadStart|removeTileMonitoringHooks|addTileMonitoringHooks|drawCanvasTile|fixPosition|erase|prjStr1|getMapStatusService|memoryKeys|isZoomming|redrawCanvas|scheduleMoveGriddedTiles|useHighSpeed|transitionEffect|Animal|baseCanvasCtx|backupCtx|layerAlphaHack|defaults|maxZoom|minZoom|XMLHttpRequest|_listeners|Route|beginSnap|setOptions|PUT|SetLayerResult|colorDictionary|isTempLayers|colors|QueryEventArgs|chartFeatureInfoSpecs|primitive|localName|acronym||required|shadow|metaData|TilesetsResult|queryParameters|getJsonParameters|Recordset|ServerFeature|MapServiceResult|getUrlParameters|MeasureResult|AREA|fieldValues|fieldNames|fid|bubbleSort|REGION|times|geodesic|cancelDelay|SelectFeature|RootContainer|Box|getControlsBy|addControl|TYPE_TOOL|activeState|offsetY|getRotatedLocation|mozMeasureText|mozDrawText|middle|textBaseline|1em|getLabelInfo|viewLabels|Rule|drawHitDetectionCanvas|createCanvasContext2D|spaceAngle|360|RadialGradient|LinearGradient|isShowShadow|shadowContainerDiv|contentDisplayClass|getContentDivPadding|getFeatureFromEvent|displayInLayerSwitcher|removeText||geometryType|restoreCanvas|sketchmodified|drawGraphic|source|externalGraphicCount|trim|longdashdot|longdash|dashdot||dash|dot|textWidth|MAX_VALUE|clientWidth|alpha||Microsoft|isStroked|isComplexSymbol|symbolMetrics|inValidRange|getComponentsString|svg|toFixed|BACKGROUND_ID_SUFFIX|backgroundGraphic|IndexingMethods|edge|limitSigDigs|addPointEPS|atan2|changElementsStyle|changeTilesVersion|elementLefts|sliderHeight|cHeight|120|redo|undo|virtualStyle|smDragDown|create|ignoreEvent|timeOut|button|clearLayersArray|zoomOutLink|zoomInLink|_pan_innerImage|SuperMap_Control_PanZoomBar_Zoombar|deltaY|zoomStart|zoomBarDrag|divClick|gif|Click|baseLayerChanged|showToggle|maximized|layerContainerOrigin|lastTouches|PinchZoom||currentCenter|pinchOrigin|animate||drawWhileDragging|eventListener|KEY_EVENTS|wheelListener|mousePosition_|clearInterval|boxOffsets|zoomDuration|documentEvents||setLayerZIndex|handleMapEvents|stopUp|drawingHole|registerPriority|createFeature|first|BROWSER_EVENTS|removePopup|unrenderedGraphics|minY|minX|metadata|anonymous|Bing|space|getMapContainer|SphericalMercator|FixedZoomLevels|RESOLUTIONS|nullTransform|Tianditu|Baidu|CanvasImage|CloudLayer|SimpleCachedLayer|TiledDynamicRESTLayer|mergeNewParams|urlAppend|getScaleForZoom|shouldDraw|_moveGriddedTiles|moveGriddedTiles|shiftRow|shiftColumn|tempContext|isFirstLoad|timeoutID|createBackBuffer|fadingTimer|useCORS|numLoadingTiles1|gridResolution|ceil|backBufferp|getTransitionValue|aniFinish|showTile|getScaleFromResolution|updateSizeDestroy|easeOut|xml|Content|OPENED|_headers|open|scrolls||extensionCount|eventTypes|_eventCacheID|time|snapLine|details|snapPoint|atPoint|SetLayersInfoEventArgs|mapUrl|UGC|tempLayersSet|fieldValuesDisplayFilter|colorDictionarys|GRID|description|transparent|ChartFeatureInfoSpec|ChartAttributeSpec|ServerTextStyle|italic|400|markerSymbolID|markerSize|markerAngle|lineSymbolID|fillSymbolID|fillOpaqueRate|fillGradientOffsetRatioY|fillGradientOffsetRatioX|fillGradientAngle|fillBackOpaque|spatialQueryMode|queryOption|networkType|customParams|queryError|queryComplete|returnCustomResult|currentCount|totalCount|fieldTypes|fieldCaptions|datasetName|linkItems|chartFeatureInfoSpecCode|isQueryRegion|isQueryLine|isQueryPoint|targetEpsgCode|targetPrj|sourceEpsgCode||sourcePrj|MapService|measureComplete|distanceMode|datasourceConnectionInfo|user|password||partTopo|geoTopo|errorMsg|originResult|len|eval|random|_processFailed|_processSuccess|geolocationOptions|getGeodesicLength|measurepartial|immediate|selectBox|AnimatorVector|selectStyle|getControl|toggleKey|toggleSelect|multipleKey|boxDivClassName|trigger|getLabelPxBoundsByLabel|textContent|baseline|lastChild|getPxBoundsMode|isStyleChange|styleGroups|groupField|ee9900|merge|abort|getMapBounds|resFactor|evaluate|maxScaleDenominator|createLiteral|||||minScaleDenominator|StyleMap|Clover|propertyStyles|addPropertyStyles|Framed|imageSrc|629||fixedRelativePosition|isAlphaImage|createImage|calculateNewPx|updateRelativePosition|with|transition|Canvas2||featureresize|featurerotate|featuremove|vertexmodified|afterfeaturemodified|beforefeaturemodified|eraseGraphics|calculateFeatureDx|valid|drawNamedSymbol|circle||drawExternalGraphic|notRedraw|android|featureIdToHex|importSymbol|setNodeDimension|clientHeight|1px|inherit|flip|nodeTypeCompare|_rotation|RADIAL|LINEAR|getNodeType|namespaces|viewBox|getAttributeNS|getPosition|implementation|srcElement|graphicZIndex|537|007|833|822|981|161|250|LTypeArc|calculatePointsFBZN|atan|factorial|distanceToSegment|segmentsIntersect|POSITIVE_INFINITY|WKT|getPressedButton|handleBrowserEvent|handleEventResult|buttonElement|buttonClick|popInfDiv|sliderBarDragStart|background|getOrCreateLinks|observed|separator|ArgParser|configureLayers|RESIZE|RESHAPE|selectFeature|_index|vertexRenderIntent|resetVertices|_originalGeometry||Keyboard|insertDirectionLength|insertDeltaXY|insertXY|ascending|controlSkinWhite|dataLayers|baseLayers|outsideViewport|topInUnits|zoomToMaxExtent|action|mouseOverLevel|crop|moveZoomBar|zoomBarUp|isSingleTouch|zoomBarDown|zoomend|div_zoombar_one|blank|setRectPxBounds|stopSingle|addLayers|maxRatio|minRatio|9e9e9e|defaultDblClick|defaultClick|pinchZoomOptions|dragPanOptions|DragPan|updateContainerOrigin|zoomWheelEnabled|zoomBoxEnabled|centerPixelOffset|panned|enableKinetic|zoomToExtent|lastClickGraphic|mousewheel|wheelZoom|opera||wheelDelta|trackpadIntervalId_||removeBox|irregular|fixedRadius|smDefault|True|isMultiTouch|dragend||timeoutId|setEvent|getLayerIndex|Overlay|getGeometry|maxVertices||delayedCall|152|305|611|1222|2445|4891|hwaptiles|gtimg|fromArray|getServerResolution|quadKey|Data|openstreetmap|getMapObjectPixelFromXY|getMapObjectLonLatFromLonLat|getLatitudeFromMapObjectLonLat|getLongitudeFromMapObjectLonLat|1100|GLatLng|dragObject|getMapObjectCenter|3392|num|33554432|calculateResolutionsLevel|tileOriginPx|supportCanvas|isDrawn|supermapcloud|upperCaseObject|getFullRequestString|layerInitialized|LocalStoragePlugin|cordova|getTileSize|bufferImgCount|drawCanvasTile2|inZoom|addTile|setFirstInView|lastZoom|useAnimation|removeBackBuffer|tileOriginCorner|canvasImage|idx|positionImage|crossOrigin|renderTile|backBufferTile|removeBackBufferDelay|numLoadingTiles|backBufferResolution||setUrl|values|requestAnimation_frame_|modifyAlphaImageDiv|panIntoView|Icon|STDDEVIATION|CROSS|IDENTITY|RIGHT|LEFT|ELLIPSE|SQUAREROOT|LOGARITHM|WITHIN|CONTAIN|Tween|clearMouseCache|Expo|Proj4js|defData|async|_data|send|withCredentials|setRequestHeader|detachEvent|scrollTop|clearMouseListener|eventHandler|finish|playing|500|MAX_TOLERANCE|DEFAULT_TOLERANCE|snapPolygon|SetLayersStatusEventArgs|lastIndexOf|isVisible|||||GetLayersInfoEventArgs|elevation|ugcLayerType|ColorDictionary|DatasetInfo|ServerTheme|RANGE|GRADUATEDSYMBOL|DOTDENSITY|GRAPH|UNIQUE|LABEL|sizeFixed|JoinItem|opaqueRate|WMS|WFS||handleLayers|ChartFeatureInfoSpecsResult|BASELINECENTER|TilesetsService|TilesetsEventArgs||isNearest|ATTRIBUTEANDGEOMETRY|ChartQueryFilterParameter|CoordTransferEventArgs|getMapStatusError|MapServiceEventArgs|getMapStatusCompleted|MeasureEventArgs|MeasureMode|measureMode|DISTANCE|METER|connect|SRID|toGeoPoint|LINEM|committer|Text|Raster|Line|Geolocate|geolocate|watch|watchId|Measure|displaySystem|displaySystemUnits|measureImmediate|featureunselected|featureselected|beforefeatureselected|ItemInactive|iconOff|iconOn|addControlsToMap|defaultControl|saveState|isPointInPoly|aspectH|aspectW|rotationBounds|mozTextStyle|serif|sans|LABEL_VFACTOR|LABEL_VSHIFT|_geometry|weight|family|getLabelPxBoundsByText|calculateLabelBounds|isOverLay|isAvoid|12px|read|BBOX|autoDestroy||getScale||addRules|||drawSector|SYMBOLIZER_PREFIXES|findPropertyStyles|createLiterals|defaultsPerSymbolizer|applySymbolizer|338|631|updateBlocks|setBorder|calculateRelativePosition|updatePosition|keepInMap|collectRoots|resetRoots|handleChangeLayer|getRenderLayerId|getDataExtent|getFeatureBy|isMultiPlotting|featuresremoved|featureGridList|useCanvas2|afterAdd|renderers|sketchstarted|vertexremoved|featureadded|beforefeatureadded|getImageData|16777215|externalGraphicSource|backCanvasPosition|destination||||getPointBounds|getTextBounds|isUnicode|Animal2|LABEL_SHIFT|symbolCache|getLayer|drawSurface|drawLine|createRoot|createRenderRoot|nodeName|coordsize|coordorigin|fillcolor|postDraw|DXImageTransform|progid|graphicRotate|_options|isPlottingGeometry|applyDefaultSymbolizer|StopOpacity|StopColor|createDefs|createGradient|clipLine|insertBefore|onclick|hasFeature|redrawNode|_boundsBottom|Z_ORDER|getNextElement|compare|350|polygonType|angel|mutual|splitWith|6378137|rad|calculateCircle|LTypeCurve|GetBezierGap|InciseBezier|05|tolerance|distVincenty|tag|toShortString|setBounds|fromWKT|mouse|tilesVersionReduceLink|tilesVersionAddLink|sliderMouseDown|sliderBarUp|sliderBarDrag|sliderBarDown|domEvents||sliderBar|getTilesetsInf|Attribution|Permalink|argParserClass|ROTATE|stackLimit|setFeatureState|unselectFeature|beforeSelectFeature|keyboard|DragFeature|featureCallbacks|onComplete|onDrag|onStart|Over|DrawFeature|insertDeflectionLength|LayerSwitcher|isMouseDown|minimize|showControls|updateMap|getBarLen|bottomInUnits|bottomOutUnits|topOutUnits|maxWidth|minus|zoommaxextent|zoomout|removeButtons|maxextent|doubleClickLevel|forceFixedZoomLevel|pagePosition|_removeZoomBar|divEventLevel|slideRatio|getOverviewPxFromLonLat|getLonLatFromOverviewPx|panTo|updateMapToRect|updateRectToMap|resolutionFactor|single|createMap|redrawAllLayers|getCenterPixel|baseLayerDraw|emptyString|granularity|isIEMultipTouch|MSGestureEnd|applyTransform|pinchDone|containerOrigin||||pinchMove|pinchStart|Pinch|Navigation|wheelChange|MouseWheel|ZoomBox|dblrightclick|oncontextmenu|handleRightClicks|MOD_SHIFT|Kinetic|geometryTypeMatches|getGraphicFromEvent|cumulative|hasSafari|setInterval|scroll|getPropertyValue|endBox|snapToggle|createGeometry|shiftKey|getDistance|MSPointerUp|MSPointerDown|_docUp|_docMove|removeDocumentEvents|adjustXY|||cur|cursors|mouseLeft|lastMoveEvt|dragmove|isRightClick|moveLayerToTop|stopClick|singleTouch|enforceTopology|finalizeInteriorRing|restoreFeature|holeModifier|freehand|freehandToggle|handleDouble|handleSingle|labelOutlineWidth|labelOutlineColor|visiblePainted|hoverPointUnit|hoverPointRadius|hoverStrokeWidth|hoverStrokeOpacity|hoverStrokeColor|hoverFillOpacity|hoverFillColor||||destroyPopup|destroyMarker|onScreen|popupClass|removeMarker|Graphics|graphicsremoved|drawGraphics|Tencent|zoomOffset|protocolRegex|zoomMin|resourceSets|quadkey|addOptions|culture|key|9783|19567|156543|w4c|cstl|mkt|comp|live|ditu|tiles|dynamic|OSM|repositionTimer||repositionListener|addListenerOnce|setMapObjectCenter|getMapObjectPixelFromMapObjectLonLat|getMapObjectLonLatFromMapObjectPixel|getDiv|9999px|resized|repositionMapElements|loadMapObject|_resized|getWarningHTML|removeGMapElements|_dragging|MAX_ZOOM_LEVEL|MIN_ZOOM_LEVEL|getMapObjectLonLatFromOLLonLat|getOLLonLatFromMapObjectLonLat|addTransform|vec|getMemoryImg|Markers|drawMarker|FileService|urlTemplate|cacheEnabled|getValue|DEFAULT_PARAMS|getStatusFailed|getStatusSucceed|strServiceUrl|storageType|getTileOrigin|encodeURIComponent|tileProxy|lenColumn|lenRow|drawImgData|tileClass|tileLoadingDelay|applyBackBuffer|initSingleTile|getTilesBounds|sdcardPath|displayImage|loadTileImage|reload|getBoundsFromBaseLayer|reproject|canvasType|clearGrid|removeExcessTiles|tileloaded|backBufferLonLat|SUPPORTED_TRANSITIONS|triggerAnimal|startTime|_execZoomTo|onImageLoad|getImageSize|imageOffset|displayOutsideMaxExtent|fixPadding|_oldOverflow|closeOnMove|restricted|isValidZoomLevel|isValidLonLat|forceZoomChange|eachStep|panMethod|addControlToMap|getBy|getLayersBy|degrees|titleRegEx|__func|statusText|responseXML|tagName|getResponseHeader|timeStamp|cancelable|bubbles|_aborted|stopPropagation|removeEventListener|addEventListener|onabort|application|onsend|onopen|LOADING|HEADERS_RECEIVED|wrapped|config|hasScrollEvent|func|boolean|_removeElementObservers|useCapture|observer|deceleration|theta|tick|easeInOut|easeIn|easing|receive|cannot|camelize|toISOString|snapping|PointWithMeasure|setSnapLayers|setMaxTolerance|setLineTolerance|setPointTolerance|eventType|Infinity|SetLayerInfoService|SetLayerStatusService|getMapName|createTempLayerComplete|SetLayerStatusParameters|LayerStatus|SetLayersInfoService|toJsonObject|OverlapDisplayedOptions|contrast|brightness|SupweMap|GetLayersInfoService|getLayerFailed|getLayerComplted|ChartFeatureInfoSpecsService|getFeatureFailed|getFeatureComplted|underline|outline|strikeout|italicAngle|bold|fontName|fontWidth|fontHeight|backOpaque|align|TextAlignment|findFacilityError|findFacilityComplete|QueryByDistanceService|QueryByDistanceParameters|QueryByGeometryService|QueryByGeometryParameters|SpatialQueryMode|QueryByBoundsService|QueryBySQLService|toFeature|QueryByBoundsParameters|QueryBySQLParameters|FilterParameter|groupBy|orderBy|ids|QueryOption|ChartQueryService|getVariablesJson|ChartQueryParameters|toJson|coordTransferError|coordTransferComplete|CoordTransferParameters|prjCode|coordSystem|MeasureService|measureError|point2Ds|MeasureParameters|Unit|LinkItem|primaryKeys|linkFilter|linkFields|foreignTable|foreignKeys||joinType|joinFilter|foreignTableName|DatasourceConnectionInfo|server|readOnly|OpenLinkTable|exclusive|engineType|driver|dataBase|alias|minM|maxM|toGeoRegionEPS|toGeoRegion|toGeoLinem|toGeoLineEPS|toGeoLine|ServiceUrls|getServiceUrlsFailed|urlService|getServiceUrlsCompleted|isServiceSupportPolling|calculatePollingTimes|ajaxPolling|getUrlFailed|getUrlCompleted|defaultCode|setCode|locationfailed|getCurrentLocation|locationupdated|coords|locationuncapable|getBestLength|getBestArea|partialDelay|measurePartial|metric|featureunhighlighted|featurehighlighted|beforefeaturehighlighted|_container|smHandlerBoxSelectFeature|Panel|getControlsByClass|onDoubleClick|activateControl|onClick|ItemActive|addControls|allowDepress|TYPE_TOGGLE|TYPE_BUTTON|addLabels|getDrawnLabels|setlabelsStyle|overWriteFunctions|lineIntersection|isQuadrilateralOverLap|getAvoidInfo|rows|tspan|_tspan_||central|dominant|addTmpFuncForRenderer|calculateLabelBounds2|getLabelPxLocation|_isGeoTextStrategyStyle|Fixed|preload|Logical|Spatial|createFilter|triggerRead|invalidBounds|elseFilter|Comparison|extendDefault|RegularShape|HitClover|Circle|Stroke|linejoin|Fill|must|setColorStops|getSymbolizerPrefix|setDefaultStyle|FramedCloud|subject|330|createShadowFromPopup|createBlocks|oppositeQuadrant|determineQuadrant|getFeatureById|associated|some|but|destroyed|you|means|usually|This|called|removeBackground|clipFeature|removeAllFeatures|featuresadded|beforefeaturesadded|displayError|rendererOptions|assignRenderer|featuresGridColumn|sketchaddvertex|eraseGraphicsArr|getGraphicIdFromEvent|graphicIdToHex|labelMap|localToMap|Vector_|textHeight|fromCharCode|lineWidthLimit|283185307179586|screen|320|butt|CanvasGradient|textbox|group|unselectable|strokecolor|_image|imagedata|focus|oval|microsoft|urn|_radialGradient|_linearGradient|visiblepainted|cloneNode|xlinkns|firefox|node|drawGeometryNode|backgroundGraphicZIndex|backgroundYOffset|backgroundXOffset|redrawBackgroundNode|insert|yOrdering|Z_ORDER_Y_ORDER|Z_ORDER_DRAWING_ORDER|determineZIndex|exists|164|763|426|462||949|519|339|494|604|373|756|215|301|defaultSymbolizer|textC|charCodeAt|getTextCount|getLabelPxSize|createRegularPolygon|createLineArc|005|combSort|BEZ|calculatePointsFBZ3|createBezier3|calculatePointsFBZ2|lines|splitWithSegment|addComponents|SelectGraphic|graphicunselected|graphicselected|beforegraphicselected|outGraphic|overGraphic|ChangeTilesVersion|onTilesVersionClick|setInf|lastTilesVersion|nextTilesVersion|sliderBarDragStartX|sliderDown|2px|margin|createPopInf|createInf|createSlider|createCenter|tilesVersionAdd|tilesVersionCenter|tilesVersionReduce|tilesVersionCenterLink|setTileWidth|template|createParams|DRAG|storeRedo|undoStackOverflow|resigterFeatureModifiedEvents|collectRadiusHandle|collectDragHandle|collectVertices|keyCode|handleKeypress|dragComplete|dragVertex|dragStart|clearUndoStack|snappingOptions|onLeave|doneDragging|upFeature|moveFeature|downFeature|onEnter|dragCallbacks|featureAdded|mouseUp|SuperMap_Control_MaximizeDiv|maximize|_layersDiv|minimizeControlCT|minimizeControlT|loadContents|borderWidth|3px|layerSwitcher|disabled|onInputClick|labelSpan|backgroundImage|checkRedraw|ScaleLine|getGeodesicPixelSize|isImperialUnits|Zoom|onZoomClick|30px|34px|zoomOutClassName|zoomInClassName|plus|zoomin|buttonDown|_removeButton|btnMouseOut|btnMouseOver|mouseOutLevel|_buttonLabel|startTop|levels|Opera|zoombar|zoombar_center|zoombar_glide|_addZoomBar|KeyboardDefaults|KEY_DOWN|KEY_UP|KEY_RIGHT|KEY_LEFT|defaultKeyPress|OverviewMap|getMapBoundsFromRectBounds|getRectBoundsFromMapBounds|ExtentRectangle|minRectDisplayClass|mapDivClick|rectDrag|mapOptions|updateOverview|isSuitableOverview|autoPan|MaximizeButton|overView|borderLeftColor|borderTopColor|updateLayers|MousePosition|suffix|prefix|numDigits|formatOutput|TouchNavigation|clickHandlerOptions|containerOriginCanvas|MSdone|MSmove|MSstart|wheelDown|wheelUp|defaultDblRightClick|mouseWheelOptions|zoomBoxKeyMask|panMapDone|panMap|panMapStart|kineticInterval|alwaysZoom|Active|LeftBottom|RightBottom|RightTop|LeftTop|Mode|allowSelection|removeControl|handleKeyEvent|DOMMouseScroll|detail|trackpadIntervalGap_|trackpad|trackpadEventGap_|onWheelEvent|safari|getBoxOffsets|smDrawBox|moveBox|9999|startBox|RegularPolygon|calculateAngle|modifyGeometry|getPinchData|MSGestureChange|MSGestureStart|pointerup|pointerdown|MSGesture|addDocumentEvents|Pan|removeTimeout|moveLayerBack|clickTolerance|EVENTMAP|returnValue|doubleTouchTolerance|geometryClone|Hover|stopMove|dblclickTolerance|passesDblclickTolerance|getTouchDistance|queuePotentialClick|delayedRightCall|unregisterMouseListeners|MOD_ALT|MOD_CTRL|66cccc|createPopup|createMarker|getGraphicBy|removeAllGraphics|addGraphics|removeGraphics|destroyGraphics|graphicsadded|meter|597164283477938|19432856695588|38865713391175|77731426782351|55462853564701|109257071294|218514142588|4370282851761|874056570352|748113140704|496226281409|99245256282|98490512563|96981025127|web|tencent|processMetadata|copyrights|logo|attributionTemplate|zoomMax|coverageAreas|resources|imageUrlSubdomains|head|metadataParams|loadMetadata|bing|class|5971642833948135|194328566789627|388657133579254|777314267158508|554628534317017|109257068634033|218514137268066|43702827453613|87405654907226|74811309814453|4962261962891|9924523925781|9849047851562|9698095703125|939619140625|87923828125|03390625|OpenStreetMap|removeListener|getBoundsZoomLevel|getMapObjectZoomFromMapObjectBounds|animationEnabled|getMapObjectBoundsFromOLBounds|gmnoprint|olLayerGoogleV3|olLayerGooglePoweredBy|olLayerGoogleCopyright|DEFAULTS|getContainer|checkResize|GEvent|getDragObject|GMap2|getYFromMapObjectPixel|getXFromMapObjectPixel|getMapObjectZoom|initMercatorParameters|40625|getMapObjectZoomFromOLZoom|getOLZoomFromMapObjectZoom|getMapObjectPixelFromOLPixel|getOLPixelFromMapObjectPixel|smoothDragPan|loadWarningMessage|projectInverse|projectForward|102100|102113|exp|tan|ter|setTiandituParam|isLabel|tianditu|addMemoryImg|Canvas_|clearMarkers|changeURL|clipRegionEnabled|clearMemoryImg|000131072|000065536|000032768|000016384|000008192|000004096|000002048|000001024|12e|56e|28e|getTileUrlByBounds|loadError|calculateDpi|getAppStatusSucceed|bmp|getServerZoom|adjustBounds|mapStyle|addtile|getAnimationValue|file|setNotFirstInView|IMAGE_RELOAD_ATTEMPTS|onErrorFunction|onLoadFunction|onLoadsaveUrlFunction|getMethodName|startTransition|isBackBuffer|tilelat|tilelon|tileoffsetlat|tileoffsetlon|tileoffsety|tileoffsetx|calculateGridLayout|100px|URL_HASH_FACTOR|Float32Array|bezierEase|Functions|animalEase|getBoundsByElapsed|animalEnd|execZoomTo|step|cancelAnimation_frame_|useBlankTile|isEquivalentUrl|removeImgDiv|initImgDiv|maxGetUrlLength|BORDER|OPACITY|COLOR|HEIGHT|WIDTH|ondblclick|onmouseout|onmouseup|onmousemove|onmousedown|registerEvents|addCloseBox|_contentDivPadding|_onImgLoad|registerImageListeners|setContentHTML|setBackgroundColor|disableFirefoxOverflowHack|defaultIcon|nodeType|EXP2|EXP1|SPHERICAL|GAUSSIAN|EXPONENTIAL|UniversalKriging|SimpleKriging|KRIGING|QUADTREE|KDTREE_FIXED_RADIUS|KDTREE_FIXED_COUNT|UBIT32|UBIT24|UBIT8|UBIT4|UBIT1|DOUBLE|SINGLE|BIT64|BIT32|BIT16|VARIANCE|SUM|MIN|MAX|AVERAGE|CUSTOM|RGB|CMYK|NO_SUBWAY|SUBWAY|BUS|MIN_DISTANCE|LESS_WALK|LESS_TRANSFER|LESS_TIME|RECORDSET_ONLY|DATASET_ONLY|DATASET_AND_RECORDSET|ISOREGION|ISOLINE|POLISH|BSPLINE|XOR|UNION|ERASE|CLIP|ROUND|FLAT|END|BACK|AHEAD|OPTIONALCENTER|NULL|FIXEDCENTER|MIDDLE|WEST|SOURTH|NORTH|EAST|OMIT|NEWLINE|TRIANGLE|ROUNDRECT|RECT|MARKER|DIAMOND|NORMAL|SQUARE|CONICAL|MIDDLERIGHT|MIDDLECENTER|MIDDLELEFT|BOTTOMRIGHT|BOTTOMCENTER|BOTTOMLEFT|BASELINERIGHT|BASELINELEFT|TOPRIGHT|TOPCENTER|TOPLEFT|TERRAIN|SPECTRUM|QUANTILE|EQUALINTERVAL|CUSTOMINTERVAL|CONSTANT|YAXES|ALL|STEP|STACK_BAR3D|STACK_BAR|ROSE3D|ROSE|RING|PIE3D|PIE|BAR3D|BAR|VALUE|PERCENT|CAPTION_VALUE|CAPTION_PERCENT|CAPTION|UDB|SQLPLUS|SDBPLUS|ORACLEPLUS|OGC|IMAGEPLUGINS|RADIAN|MINUTE|SECOND|FOOT|DECIMETER|INCH|CENTIMETER|MILLIMETER|DEGREE|YARD|MILE||KILOMETER|TOUCH|OVERLAP|DISJOINT|LEFTJOIN|INNERJOIN|GEOMETRY|ATTRIBUTE|TEXT|CIRCLE|leftTolerance|rightTolerance|clean|removed|added|TILE_HEIGHT|TILE_WIDTH|getLayerPxFromViewPortPx|getMaxResolution|centerLayerContainer|panDuration|panRatio|zoomFinished|offsetHeight|getCurrentSize|setLayerIndex|resetLayersZIndex|preremovelayer|preaddlayer|BaseLayer|smMap|link|CRS|ActiveXObject|readystatechange|dispatchEvent|_async|handleEvent|setCredentials|getAllResponseHeaders|XMLSerializer|onunload|OPTIONS|HEAD|TYPE|CONTENT|runCallbacks|requestUrl|URL_SPLIT_REGEX|ProxyHost|DEFAULT_CONFIG|getMousePosition|doubleClickTimeCap_|attachToElement|unloadCache|KHTML|Safari|Konqueror|appVersion|keypress|speed|threshold|nbPoints|Quad|Linear|invalid|play|INTERVAL|fromString|RegExp|decimalSeparator|thousandsSeparator|isNumeric|numberRegEx|tokenRegEx|orgin|actived|switchSnap|reference|elementRemain|verticalOverlappedSpaceSize|horizontalOverlappedSpaceSize|allowThemeGraphOverlap|allowThemeGraduatedSymbolOverlap|allowTextAndPointOverlap|allowTextOverlap|allowPointWithTextDisplay||allowPointOverlap|tableName|isReadOnly|encodeType|dataSourceName|ThemeRange|ThemeGraduatedSymbol|ThemeDotDensity|ThemeGraph|ThemeUnique|ThemeLabel|transparentColorTolerance|displayBandIndexes|colorSpaceType|verticalSpacing|specialValueTransparent|specialValue|horizontalSpacing|gridType|colorGradientType|representationField|symbolScale|symbolScalable|minVisibleGeometrySize|completeLineSymbolDisplayed|queryable|caption|VECTOR|IMAGE|THEME|JSONClone|copy|Roman|New|Times|DistanceQuery|FindNearest|SpatialQuery|BoundsQuery|SqlQuery|chartQueryParameters|chartQueryParams|ChartBoundsQuery|CoordTransferService|sourcePoints|304|then|xhr|WinJS|Windows|axis|spheroid|datum|IsClockWise|LineRing|REGIONEPS|LINEEPS|POINTEPS|address|proxyservers|services|iserver|EditFeaturesService|ThemeService|language|userLanguage|getCurrentPosition|latitude|longitude|clearWatch|watchPosition|updateHandler|setImmediate||english|geographic|getControlsByName|getComputedTextLength|filters|AND|noAbort|force|FeatureId|EQUAL_TO|addUniqueValueRules|eAngle|sAngle|CANVAS|array|parameters|two|than|more|isDefault|corner|SuperMapDivimgCorner|SuperMapDiv|SuperMapShadowDiv|845|1175|331|1187|cloud|660|1200|678|359|679|682|263|683|632|736|1276|smFramedCloudPopupContent|_FrameDecorationImg_|_FrameDecorationDiv_|preFeatureInsert|onFeatureInsert|getFeaturesByAttribute|getFeatureByFid|_clip_|clipGeometryRect|should|component||updateDimensions|featuresGrid|unitsHeight|unitsWidth|featuresGridRow|reportError|featureremoved|beforefeaturesremoved|beforefeatureremoved|graphicsAttr|Graphic_|forDisplay|endCol|startCol|endRow|startRow|clearFeatures|xor|rgb|isModify|toClearFeatures|setResolution|featuresIds|inset|whiteSpace|innerText|_textbox|_vmlRoot|BasicImage|expand|SizingMethod|M22|M21|M12|M11|Matrix|sizingMethod|AlphaImageLoader|interactive|dashstyle|flat|endcap|_stroke|stroked|atmost|aspect|fillOpacity2|opacity2|fillColor2|color2|focusposition|gradientradial|gradient|_fill|filled|inline|behavior|addRule|createStyleSheet|vml|schemas|hanging|radialGradient|linearGradient|evenodd|rule|_defs|_svgRoot|createElementNS|dasharray|linecap|nextSibling|preserveAspectRatio|polyline|BasicStructure|w3c|SVG11|15000|xlink|1999|2000|correspondingUseElement|backgroundHeight|backgroundWidth|zIndexing|_root|_label|_background|clover|triangle|square|cross|321|231|303|277|423|397|469|379|star|enC|cnC|getBoundsByText|Bspline|createBsplinesurface|Triangle|lineLength|createRegularPolygonTriangle|createRegularPolygonCurve|createLineCurve|acos|createCloseCardinal|calculateCardinalPoints|createBezierN|createBezier|createBezier2|createBezier1|createBspline|Smooth|cubicTension|lanczosFilterSize|mirror|clip|lanczos|createCurve|simplify|inner|removeComponents|write|extendBounds|smNoSelect|inf_bottom|inf_right|inf|inf_left|5px|sliderbar|tileservision|slider2|slider1|reduce|160|isElement|finishSketch|drawGraphicObject|PlottingLayer|layerSwitcherContent|SuperMap_Control_MinimizeDiv|171|Overlays|Base|borderColor|minimizeDivWhite|maximizeDivWhite|layerSwitcherHR|layersDivWhite|onLayerClick|gray|off_b|on_b|defaultChecked|_baseLayers|_input_|input|reverse|Layers|LayersDiv|onButtonClick|buttonclick|000001|Bottom|Top|smControlZoomOut|smControlZoomIn|getLinkStyle|east||west|south|north|div_zoom_name|sm_|zoombarThree|zoomBar|zoombarOne|getDoms|imageSources|4c4c4c|centered|zoomStopWidth|189|187|MinimizeButton|SuperMap_Control_minimizeDiv|Container|overviewMap|RectReplacement|smaller|Arial|moz|webkit|enableZoomWheel|disableZoomWheel|enableZoomBox|disableZoomBox|WHITE|smControlNoSelect|setPosition|keyup|now|150|black|smHandlerBoxZoomBox|flag|gesture|pointerId|addPointer|pointerType|PanDown|pause|MOD_NONE|altKey|ctrlKey|toState|Delete|Update|Insert|Unknown|popupContentHTML|popupSize|_popup|AnchoredBubble|getGraphicsByAttribute|getGraphicById|aftergraphicmodified|graphicmodified|beforegraphicmodified|graphicremoved|beforegraphicsremoved|beforegraphicremoved|graphicadded|beforegraphicsadded|beforegraphicadded|tencent_map|brandLogoUri|bbox|imageryProviders|subdomain|imageUrl|javascript|script|Metadata|Imagery|net|virtualearth||dev|ImageryProviders|include|_callback_|crossOriginKeyword|Road|Use|Terms|html|terms|product|olBingAttribution|01866138385609|03732276771218|07464553542435169|14929107084870338|29858214169740677|7584765625|39135|516953125|78271|idle|LatLngBounds|setMapTypeId|tilesloaded|10000002|1000000|1000001|center_changed|streetViewControl|scrollwheel|disableDoubleClickZoom|draggable|keyboardShortcuts|disableDefaultUI|mapTypeId|_GMapContainer|ROADMAP|MapTypeId|GPoint|fromLatLngToContainerPixel|fromContainerPixelToLatLng|GSize|moveBy|GLatLngBounds|setMapType|addListener|isLoaded|addMapType|getMapTypes|_GMap2Container|G_NORMAL_MAP|googleWarning|getNorthEast|getSouthWest|getOLBoundsFromMapObjectBounds|API|Maps|Unsupported|705522537231445e|000001341104507446289|00000268220901489257||00000536441802978515|00001072883605957031|00002145767211914062|00004291534423828125|0000858306884765625|000171661376953125|00034332275390625|0006866455078125|001373291015625|00274658203125|0054931640625|010986328125|02197265625|0439453125|087890625|17578125|3515625|703125|yellow|7px|_warning|darkblue|BROWSER_NAME|_EventPane|0339|degree|cta|cia|cva|DataServer|0254|baidu|scaler|20150815|udt|onlinelabel|bdimg|online|offsetXY|addMarker|93962050254|8792410051|supermap_cloud_map|quanguo|getGdp|desc|tileversion|tileImage|savaconfig|visibleScalesEnabled|visibleScales|layerContext|getconfig|jpg|usesCanvas|drawCanvasIE|putImageData|trnasitionObj|bufferContext|TempCanvas_|getsdcard|sdcard|File|5000|isTooBigCanvas|filtered|canvasFilter|onerror|base64|jpeg|10000|getImgFromLocal_|getMilliseconds|getSeconds|getMinutes|getHours|getDate|getMonth|getFullYear|getImg|toExponential|hideBackBuffer|filterProgress|reprojectionProgress|appropriate|getTileBounds|smBackBuffer|_bb|smBackBufferpp|_pp|getTileData|2500|_olSalt|range|bezier|001|AniCtx|AniCanvas|oCancelAnimationFrame|mozCancelAnimationFrame|webkitCancelAnimationFrame|cancelAnimationFrame|oRequestAnimationFrame|msRequestAnimationFrame|webkitRequestAnimationFrame|mozRequestAnimationFrame|requestAnimationFrame|checkImgURL|crossorigin|removeAttribute|smTileImage|_loadEvent|IFrame|getCanvasContext|Tile_|smPopupCloseBox|_close|getSafeContentSize|_onImageLoad|containerElement|getRenderedDimensions|_contentDiv|_GroupDiv|smPopupContent|olPopup|inflate|getLonLat|SM_icon_|Exponent|VariogramMode|InterpolationAlgorithmType|SearchMode|PixelFormat|StatisticMode|LayerType|ColorSpaceType|GridType|TransferPreference|TransferTactic|ADD|EditType|DataReturnMode|SurfaceAnalystMethod|SmoothMethod|OverlayOperationType|BufferEndType|TurnType|SupplyCenterType|SideType|DirectionType|LabelOverLengthMode|LabelBackShape|RIGHT_TOP_TO_LEFT_BOTTOM|RT_TO_LB|RIGHT_BOTTOM_TO_LEFT_TOP|RB_TO_LT|LEFT_TOP_TO_RIGHT_BOTTOM|LT_TO_RB|LEFT_BOTTOM_TO_RIGHT_TOP|LB_TO_RT|ALONG_LINE_NORMAL|AlongLineDirection|FillGradientMode|YELLOWWHITE|YELLOW_WHITE|YELLOWRED|YELLOW_RED|YELLOWGREEN|YELLOW_GREEN|YELLOWBLUE|YELLOW_BLUE|YELLOWBLACK|YELLOW_BLACK|REDWHITE|RED_WHITE|REDBLACK|RED_BLACK|RAINBOW|RAIN_BOW|PINKWHITE|PINK_WHITE|PINKRED|PINK_RED|PINKBLUE|PINK_BLUE|PINKBLACK|PINK_BLACK|GREENWHITE|GREEN_WHITE|GREENRED|GREEN_RED|GREENORANGEVIOLET|GREEN_ORANGE_VIOLET|GREENBLUE|GREEN_BLUE|GREENBLACK|GREEN_BLACK|CYANWHITE|CYAN_WHITE|CYANGREEN|CYAN_GREEN|CYANBLUE|CYAN_BLUE|CYANBLACK|CYAN_BLACK|BLUEWHITE|BLUE_WHITE|BLUERED|BLUE_RED|BLUEBLACK|BLUE_BLACK|BLACKWHITE|BLACK_WHITE|ColorGradientType|ThemeType|RangeMode|GraduatedMode|GraphAxesTextDisplayMode|ThemeGraphType|ThemeGraphTextFormat|EngineType|SpatialRelationType|JoinType|setIsBaseLayer|setName|ltr|dir|loadcancel|zoomToScale|adjustZoom|offsetWidth|removeAllPopup|addPopup|raiseLayer|getNumLayers|smLayerDiv|layerAlreadyAdded|getLayersByClass|getLayersByName|css|stylesheet|rel|item|layerContainerShadowDiv|_SuperMap_Container|_events|smMapViewport|_SuperMap_ViewPort|touchAction|Map_|isIEMultipeTouch|clearmarkers|removemarker|addmarker|popupclose|popupopen|1250|750|525|325|crs|def|ogc|srsCode|Proj|parsererror|parseError|loadXML|validateOnParse|XMLDOM|initEvent|eventPhase|currentTarget|serializeToString|track|trace|priority|XMLHTTP|MSIE|controllers|createUrlObject|decodeURIComponent|port|hostname|clientTop|clientLeft|getViewportElement|iPhone|getBrowser|extension|260|blur|eventCacheID_|findElement|cancelBubble|KEY_DELETE|KEY_ESC|KEY_RETURN|KEY_TAB|KEY_BACKSPACE|KEY_SPACE|asin|0155|token|leftbottom|rightbottom|righttop|getBoundingClientRect|static|toggleClass|setUTCHours|UTC|parse|getUTCMilliseconds|getUTCSeconds|getUTCMinutes|getUTCHours||getUTCDate|getUTCMonth|getUTCFullYear|Invalid||||fromSize||containsPixel|toBBOX|toArray|Void|toPrecision|numericIf|startsWith'.split('|'),0,{}))



/***/ }),
/* 283 */
/***/ (function(module, exports) {

eval(function(p,a,c,k,e,d){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)d[e(c)]=k[c]||e(c);k=[function(e){return d[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('1a.1J.bJ=1a.1U(1a.1J,{8p:1d,5D:50,1M:1d,6Q:1d,5r:1d,bL:1d,lC:1d,ge:1d,lD:1d,lG:1d,5G:["dg","gw","wy"],cn:1m,bO:1d,8P:1d,bM:1d,iL:1d,iK:1d,lF:1d,2V:1d,aI:1d,1B:1b(b,a){V.5G=1a.1J.bJ.1u.5G.5k(1a.1J.1u.5G);1a.1J.1u.1B.1x(V,1G);V.bO=2n.2K("1W");if(!V.bO.4G){1c}V.cn=1j;V.bO.id="DD"+V.id;V.bO.1k.2H="a5";V.2o.2r(V.bO);V.8P=V.bO.4G("2d")},6E:1b(a){if(!(1a.1t.5u(a))){a=[a]}V.1M=V.1M||[];if(0==V.1M.1g){V.1M=a}1f{V.1M=V.1M.5k(a)}V.1Y.2z("dg",{1M:a,aQ:1j});V.4i()},9d:1b(e){if(!e||e.1g===0||!V.1M||V.1M.1g===0){1c}if(e===V.1M){1c V.5t()}if(!(1a.1t.5u(e))){e=[e]}Z c,b,g=[];1i(Z d=0,a=e.1g;d<a;d++){c=e[d];b=1a.1t.3k(V.1M,c);if(b===-1){g.1r(c);3o}V.1M.6o(b,1)}Z f=g.1g==0?1j:1m;V.4i();V.1Y.2z("gw",{1M:g,aQ:f})},5t:1b(){V.1M=[];V.4i()},4i:1b(){if(V.1v){Z a=V.1v.7d();V.lE(a)}},1Q:1b(){if(V.1M&&V.1M.1g>0){1i(Z b=0,a=V.1M.1g;b<a;b++){V.1M[b].1Q();V.1M[b]=1d}}V.8p=1d;V.1M=1d;V.5D=1d;V.cn=1d;V.8P=1d;V.bM=1d;V.bO=1d;V.iL=1d;V.iK=1d;V.lF=1d;V.6Q=1d;V.5r=1d;V.bL=1d;V.ge=1d;V.2V=1d;V.aI=1d;V.lG=1d;1a.1J.1u.1Q.1x(V,1G)},bT:1b(a){1a.1J.1u.bT.1x(V,1G);if(!V.cn){V.1v.qA(V)}1f{V.6D()}},3A:1b(c,a,d){1a.1J.1u.3A.1x(V,1G);if(!V.cn){1c}V.sq=a;if(!d){V.2o.1k.ce="dt";V.2o.1k.2F=-2P(V.1v.7A.1k.2F)+"px";V.2o.1k.2m=-2P(V.1v.7A.1k.2m)+"px";Z b=V.1v.bS();V.bO.1I=2P(b.w);V.bO.1L=2P(b.h);V.2V=b.w;V.aI=b.h;V.2o.1k.ce="";if(!a){V.lE(c)}}if(a){V.lE(c)}},lE:1b(a){V.bM=[];if(V.1M&&V.1M.1g>0){V.qb(a);V.q9(a)}1f{V.8P.7E(0,0,V.2V,V.2V)}},qb:1b(a){Z k,b,d=V.1v.6U();1i(Z h=V.1M.1g-1;h>=0;h--){Z j=V.1M[h];Z l=j.27;if(a.dI(l.x,l.y)){Z c=V.wz(l.x,l.y,a,d);if(V.lD){c.7O=j.2Z[V.lD]}1f{c.7O=1}Z g=V.lG&&j.2Z[V.lG]?j.2Z[V.lG]:1d;c.J9=g?2P(g/d):g;V.bM.1r(c);k=k?k:c.7O;b=b?b:c.7O;k=1q.2L(k,c.7O);b=1q.2Q(b,c.7O)}}if(k===b){if(V.5r){b=V.5r>=b?0.Ja:V.5r}1f{b=0.Ja}}V.bL=b;V.lC=k;Z e=1m;if(V.6Q&&V.5r){V.bK=V.6Q-V.5r;e=1j;V.ge="5r"}1f{if(V.6Q||V.5r){if(V.6Q){V.bK=V.6Q-V.bL;V.ge="bL"}1f{V.bK=k-V.5r;V.ge="5r"}e=1j}}if(!e||(e&&V.bK<0)){V.bK=V.lC-V.bL;V.ge="bL"}},q9:1b(c){V.lF=V.8P.12N(V.2V,V.aI);V.iL=[];V.iK=[];Z d=[0,0,0,0],b,a;1i(b=V.2V-1;b>=0;b--){V.iL.1r(1n 4d(V.aI));V.iK.1r(1n 4d(V.aI))}1i(b=V.bM.1g-1;b>=0;b--){V.J8(V.bM[b].x,V.bM[b].y,V.bM[b].7O,V.bM[b].J9)}V.8P.7E(0,0,V.2V,V.aI);V.8P.u8(V.lF,0,0);V.1Y.2z("wy")},J8:1b(k,g,l,f){Z c,b,a,m,h;if(V.ge==="5r"&&(l-V.5r)>0){c=(l-V.5r)/V.bK}1f{c=(l-V.bL)/V.bK}b=3+2P(V.5D*c);if(f||0==f){b=f}1i(Z e=0;e<b;e++){1i(Z d=0;d<=b;d++){if(e&&d){a=1-1q.5x(e*e+d*d)/b;if(a<=0){m=0;h=0}1f{h=a*c;m=a*a*(0.1+0.9*c)}if(h<=0){1H}V.bN(k-e,g-d,m,h);V.bN(k-e,g+d,m,h);V.bN(k+e,g-d,m,h);V.bN(k+e,g+d,m,h)}1f{if(!d){a=1-e/b;h=a*c;m=a*a*(0.1+0.9*c);if(0!=e){V.bN(k+e,g,m,h);V.bN(k-e,g,m,h)}1f{V.bN(k,g,m,h)}}1f{if(!e){a=1-d/b;h=a*c;m=a*a*(0.1+0.9*c);V.bN(k,g-d,m,h);V.bN(k,g+d,m,h)}}}}}},bN:1b(h,f,i,g){if(h>=0&&h<V.2V&&f>=0&&f<V.aI){Z a=V.iL[h][f],b=V.iK[h][f],e=f*V.2V*4+h*4,c=V.lF;if(a){a=a+i-i*a;b=b+g-g*b}1f{a=i;b=g}V.iL[h][f]=a;V.iK[h][f]=b;Z d=V.wx(b);c.2g[e]=d.r;c.2g[e+1]=d.g;c.2g[e+2]=d.b;c.2g[e+3]=a*1V}},wx:1b(j){Z a,d,i,h=V;j=j*j*j;if(h.8p&&1a.1t.5u(h.8p)&&h.8p.1g>1){Z c,k,f=h.8p.1g;Z e=2P((j-j%(1/(f-1)))/(1/(f-1)));if(e===f-1){e--}c=h.8p[e];k=h.8p[e+1];a=c.7L+(k.7L-c.7L)*j;d=c.8c+(k.8c-c.8c)*j;i=c.7n+(k.7n-c.7n)*j}1f{if(j<0.65){d=6t;a=J2*j}1f{a=6t;d=50+(q8-q8*j)}}1c{r:a,g:d,b:i}},wz:1b(a,d,c,b){Z a=(a/b+(-c.2F/b));Z d=((c.2m/b)-d/b);1c{x:2P(a),y:2P(d)}},1T:"1a.1J.bJ"});1a.1J.J3=1a.1U(1a.1J.bJ,{8p:["7n","sd","sc","sb","7L"],5D:50,wA:1m,6Q:1d,1B:1b(b,a){1a.1J.bJ.1u.1B.1x(V,1G)},1Q:1b(){V.wA=1d;1a.1J.bJ.1u.1Q.1x(V,1G)},lE:1b(a){V.bM=[];if(V.1M&&V.1M.1g>0){V.qb(a)}1f{V.8P.7E(0,0,V.2V,V.2V)}},qb:1b(a){Z h=[],m,j,f,e=V.1v.6U(),l,b,c;V.qa=V.wA?2P(V.5D/e):V.5D;1i(Z g=0;g<V.1M.1g;g++){Z o=V.1M[g];Z n=o.27;if(a.dI(n.x,n.y)){Z d=V.wz(n.x,n.y,a,e);if(V.lD){d.7O=o.2Z[V.lD];if(!V.6Q){l=l?l:d.7O;b=b?b:d.7O;l=1q.2L(l,d.7O);b=1q.2Q(b,d.7O)}}1f{d.7O=1}m=1q.7m(d.x);j=1q.7m(d.y);f=d.7O;h.1r([m,j,f])}}if(!V.6Q){if(l&&b){c=(l+b)/2}1f{c=1}V.cB(h,c)}1f{V.cB(h,V.6Q)}},cB:1b(d,b){if(V.aI>0&&V.2V>0){Z a=V.8P;V.8P.7E(0,0,V.2V,V.aI);V.J6(V.qa);V.J5();1i(Z c=0;c<d.1g;c++){Z e=d[c];V.8P.3D=1q.2L(e[2]/b,0.jO);V.8P.7h(V.jX,e[0]-V.qa,e[1]-V.qa)}Z f=a.ff(0,0,V.2V,V.aI);V.J7(f.2g,V.J4);a.u8(f,0,0);V.1Y.2z("wy")}1f{1c 1m}},J7:1b(d,c){1i(Z b=0,a;b<d.1g;b+=4){a=d[b+3]*4;if(a){d[b]=c[a];d[b+1]=c[a+1];d[b+2]=c[a+2]}}},J6:1b(b){Z d=b/2;Z c=V.jX=2n.2K("1W"),a=c.4G("2d");c.1L=2*b;c.1I=2*b;a.gD=a.gC=2*b;a.gF=d;a.gE="#k3";a.4P();a.5v(-b,-b,b/2,0,1q.PI*2,1j);a.a0();a.26()},J5:1b(){Z c=V.8p;Z e=2n.2K("1W"),b=e.4G("2d"),g=b.nd(0,0,0,b6);e.1L=b6;e.1I=1;Z d=1;1i(Z f=0,a=c.1g;f<a;f++){g.f8(d/a,c[f]);d++}b.4W=g;b.eP(0,0,1,b6);V.J4=b.ff(0,0,1,b6).2g},1T:"1a.1J.J3"});1a.1J.J1=1a.1U(1a.1J.bJ,{3C:1d,8X:1d,1B:1b(b,a){1a.1J.bJ.1u.1B.1x(V,1G)},1Q:1b(){V.3C=1d;V.8X=1d;1a.1J.bJ.1u.1Q.1x(V,1G)},q9:1b(a){Z f,g=V;if(V.3C&&1a.1t.5u(V.3C)&&V.3C.1g>1){f=V.3C.1g;V.8X=[];Z d=V.3C[0].4m;Z h=V.3C[f-1].4E;V.5r=V.5r<d?V.5r:d;V.6Q=V.6Q>h?V.6Q:h;V.5r=V.5r<V.bL?V.bL:V.5r;V.6Q=V.6Q>V.lC?V.lC:V.6Q;V.bK=V.6Q-V.5r;1i(Z e=0;e<f;e++){Z b=(V.3C[e].4m-V.5r)/V.bK;Z c=(V.3C[e].4E-V.5r)/V.bK;Z j={4m:b,4E:c,ww:V.3C[e].ww,wv:V.3C[e].wv};V.8X.1r(j)}}1a.1J.bJ.1u.q9.1x(g,1G)},wx:1b(l){Z a=1V,f=1V,k=1V,j=V;if(j.8X){Z h=j.8X.1g;1i(Z e=0;e<h;e++){if(l>=j.8X[e].4m&&l<=j.8X[e].4E){Z c=(l-j.8X[e].4m)/(j.8X[e].4E-j.8X[e].4m);Z d=j.8X[e].ww;Z m=j.8X[e].wv;a=d.7L+(m.7L-d.7L)*c;f=d.8c+(m.8c-d.8c)*c;k=d.7n+(m.7n-d.7n)*c;1H}}}1f{l=l*l*l;if(l<0.65){f=6t;a=J2*l}1f{a=6t;f=50+(q8-q8*l)}k=0}1c{r:a,g:f,b:k}},1T:"1a.1J.J1"});1a.1J.IK=1a.1U(1a.1J.49,{wk:1d,IY:1j,fQ:60,IX:50,Gs:["im","IZ"],lA:[{d1:15,1k:{d3:"#wu",k2:1j,8h:1a.1t.kA()+"12M.hY",ck:37,cl:38,9h:-4,9g:5}},{d1:50,1k:{d3:"#wu",k2:1j,8h:1a.1t.kA()+"12L.hY",ck:41,cl:46,9h:-3,9g:6}},{d1:"q2",1k:{d3:"#wu",k2:1j,8h:1a.1t.kA()+"12K.hY",ck:48,cl:53,9h:-5,9g:8}}],IV:1m,lz:1j,d0:[],lB:1d,9Q:[],q4:[],gd:1d,hQ:1d,7w:1d,wi:[],iJ:[],q7:1d,wf:1d,1B:1b(b,a){1a.1J.49.1u.1B.1x(V,1G);V.5G=V.5G.5k(["IT"]);V.1Y=1n 1a.nG(V,V.2o,V.5G);if(V.ax 2a 3U){V.1Y.on(V.ax)}V.lA=V.lA.6n(1b(d,c){if(d.d1==="q2"){1c 1j}1f{if(c.d1==="q2"){1c 1m}1f{1c d.d1-c.d1}}})},6E:1b(s){Z d=1G[1];if(!s||(s 2a 4d&&s.1g==0)){1c}if(d==="wt"){V.d0=s}1f{s=V.d0=(V.d0||[]).5k(s);V.lz=1j}Z a=V.wm();Z A=V.wl();Z z=V.1v.7d();Z o=V.wr(z,a,A);Z j=o.wq;Z h=o.wp;Z c=o.wo;Z q=o.wn;Z b=[];Z B=[];1i(Z t=0;t<s.1g;t++){Z e=V.pZ(s[t],a,A);Z l=e[1];Z k=e[0];if(h<=k&&q>=k){if(j<=l&&c>=l){Z w=V.q7;Z v=e[2];Z u=v.27;u=1n 1a.aO(u.x,u.y);if(w&&w.12J(u)){B.1r(v)}1f{b.1r(e)}}}}Z n=[];1i(Z t=0;t<b.1g;t++){Z r=b[t];Z k=r[0];Z l=r[1];if(!n[k]){n[k]=[]}Z m=n[k];if(m[l]){m[l].1r(r[2])}1f{m[l]=[r[2]]}}if(B.1g>0){n.wj=B}V.IW(n,j,h,c,q);V.gd=n},4i:1b(){V.2f.8W=1j;V.q5();V.2f.8W=1m;V.6E(V.d0,"wt")},12I:1b(a){V.q7=a||V.1v.7d();V.4i()},12H:1b(){V.q7=1d;V.4i()},12G:1b(a){if(!V.gd||(V.gd.1g&&V.gd.1g==0)){1c[]}Z b=V.gd;Z c=V.wm();Z h=V.wl();Z g=V.1v.7d();Z i=V.wr(g,c,h);Z d=[];1i(Z e=i.wp;e<=i.wn;e++){if(b[e]){1i(Z f=i.wq;f<=i.wo;f++){if(b[e][f]){d=d.5k(b[e][f])}}}}1c d},q5:1b(a){V.5t("q6");V.lB=1d;if(a!==123){V.9Q=[];V.7w=1d}},J0:1b(){V.q5();V.d0=1d;V.gd=1d;V.lz=1j},5t:1b(a){if(a==="q6"){1a.1J.49.1u.5t.1x(V)}1f{V.J0()}},IM:1b(a){Z b=a;b.1k.94=1;1c b},9d:1b(b){if(!b||b.1g===0){1c}if(b===V.1M){1c V.5t("q6")}if(!(1a.1t.5u(b))){b=[b]}if(b===V.b3){b=b.4a()}Z c=[];1i(Z f=b.1g-1;f>=0;f--){Z j=b[f];4S V.12F[j.id];Z h=1a.1t.3k(V.1M,j);if(h===-1){c.1r(j);3o}V.1M.6o(h,1);if(1a.1t.3k(V.b3,j)!==-1){1a.1t.C2(V.b3,j)}}V.2f.3b();Z a=[];1i(Z d=0,g=V.1M.1g;d<g;d++){j=V.1M[d];a.1r(j)}V.1M=[];V.gc(a);Z e=c.1g==0?1j:1m;V.1Y.2z("gw",{1M:c,aQ:e})},bT:1b(a){1a.1J.49.1u.bT.1x(V,1G);if(V.en()){V.1v.1Y.oE("12E",V,1b(){V.7Y(V.wi);V.7Y(V.iJ);V.5t("q6")})}},en:1b(){1c(V.2f.1T==="1a.4C.IZ")},3A:1b(b,a){V.2f.8W=1j;V.q5(a?1d:123);1a.1J.49.1u.3A.1x(V,1G);V.2f.8W=V.7w?1j:1m;V.6E(V.d0,"wt");if(V.7w){if(V.en()){2u.8A(1b(c){1c 1b(){c.q3(c.9Q,c.7w.27,1d,"iJ")}}(V),100)}1f{V.2f.8W=1m;V.gc(V.9Q)}}},IJ:1b(k){if(V.IY){6k{Z h=V.en();if(h){Z m=V.iJ;if(m.1g>0){V.7Y(m);V.gb(V.q4)}}Z a,b,c;V.2f.8W=1j;if(V.7w){V.ws();V.2f.8W=1j;V.7w=1d}if(!h){V.gb(V.9Q)}1f{c=V.9Q.5k([]);V.q4=c}V.9Q=[];a=k.mS;if(V.IX>=a.1g){1i(Z g=0;g<a.1g;g++){b=V.wg(a[g],0,"#IS",2);1i(Z d=0;d<b.1g;d++){b[d].q1=1j;V.9Q.1r(b[d])}}V.7w=k;k.1k.4H="3c";V.2f.8W=1m;if(h){V.q3(V.9Q,1d,1b(e,f){1c 1b(){f.gb(e)}}(c,V),"iJ")}1f{V.gc(V.9Q)}}1f{if(h){V.gb(c)}}V.2f.8W=1m}6B(l){}}},II:1b(){6k{Z b=V.en();if(b){Z a=V.iJ;if(a.1g>0){V.7Y(a);V.gb(V.q4)}}V.ws();V.gb(V.9Q);V.9Q=[];V.7w=1d}6B(c){}},ws:1b(){if(V.7w){if(V.7w.1k.4H==="3c"){V.7w.1k.4H=""}1f{V.2f.8W=1j;V.gc([V.7w]);V.2f.8W=1m}}},wr:1b(b,h,j){Z k={x:b.2F,y:b.2m};Z d={x:b.4y,y:b.4F};Z i=V.pZ(k,h,j);Z f=i[1];Z g=i[0];i=V.pZ(d,h,j);Z c=i[1];Z e=i[0];1c{wq:f,wp:g,wo:c,wn:e}},wm:1b(){Z d=V.1v.7W();Z c=V.1v.IE(d);Z b={w:V.fQ*2,h:V.fQ*2};Z a={w:b.w*c,h:b.h*c};1c a},wl:1b(){if(!V.hQ){Z a=V.1v.I0();V.hQ={x:a.2F,y:a.2m}}1c V.hQ},IU:1b(){Z c=1m;6k{Z a=V.1v.7W();Z b=V.1v.9v.3r.1g;if(V.wk!=1d){b=V.wk+1}if(a&&b){if(a>=b-1){c=1j}}}6B(d){}1c c},IW:1b(q,h,l,c,g){if(V.IV){1c}Z p=V.IU();Z o=[];Z b=[];1i(Z k=l;k<=g;k++){if(q[k]){1i(Z e=h;e<=c;e++){if(q[k][e]){Z r=q[k][e];if(r.1g>=2&&!p){Z n=V.IO(r);b.1r(n);if(V.7w){Z a=V.7w.27;Z t=n.27;if(a.x===t.x&&a.y===t.y){V.7w=n;n=1d}}if(n){o=o.5k(n)}}1f{o=d(r,o,V)}}}}}Z m=q.wj;Z s={d0:b,wj:m};V.1Y.2z("IT",s);if(m&&m.1g>0){o=d(m,o,V)}if(V.lB){V.9d(V.lB)}V.lB=o;if(V.en()){V.q3(o,1d,1d,"wi")}1f{V.gc(o)}1b d(v,u,w){1i(Z i=0;i<v.1g;i++){Z x=w.wg(v[i],0,"#IS",4);1i(Z j=0;j<x.1g;j++){x[j].q1=1j;u.1r(x[j])}}1c u}},gc:1b(b,l){if(!(1a.1t.5u(b))){b=[b]}Z j=!l||!l.EX;if(j){Z a={1M:b};Z h=V.1Y.2z("gr",a);if(h===1m){1c}b=a.1M}Z f=[];V.2f.8W=1j;1i(Z d=0,g=b.1g;d<g;d++){if(d===(g-1)){V.2f.8W=1m}Z k=b[d];if(V.wh&&!(k.27 2a V.wh)){8y 1n s3("6E: 12D 7s be an "+V.wh.1u.1T)}k.1w=V;if(!k.1k&&V.1k){k.1k=1a.1t.8J({},V.1k)}V.1M.1r(k);V.IQ(k);Z e=V.dF(k,1z,{12C:1j});V.IR(k,e);V.2f.12B.1k.eX="rE";if(!e){f.1r(k)}}Z c=f.1g==0?1j:1m;V.1Y.2z("dg",{1M:f,aQ:c})},q3:1b(b,a,i,e){Z d=b.5k([]);if(a){a={bR:a.x,es:a.y}}Z h=a||V.1v.IG();d.6n(1b(j){1c 1b(k,c){1c 1q.4t(k.27.9W().2F-j.bR)-1q.4t(c.27.9W().2F-j.bR)}}(h));d.6n(1b(j,c){Z l=j.1k;Z k=c.1k;l.iI=l.iI||0;k.iI=k.iI||0;1c l.iI-k.iI});g(d,V,i,e);1b g(c,l,o,n){if(c.1g>0){Z j=[];1i(Z k=0;k<10;k++){Z m=c.89();if(m){j.1r(m)}1f{1H}}l.gc(j);f(c,g,l,o,n)}1f{if(o){o()}l[n]=[]}}1b f(c,j,k,n,m){Z l=2u.8A(1b(o,p,q,s,r){1c 1b(){p(o,q,s,r)}}(c,j,k,n,m),14);k[m].1r(l)}},7Y:1b(b){1i(Z a=0;a<b.1g;a++){2u.7Y(b[a])}b=[]},IR:1b(i,e){Z g=i.1k;if(g){Z c=g.IP;if(c&&e){Z f=g.7x?g.7x*2:(g.ck?g.ck:g.12A);Z b=g.7x?g.7x*2:(g.cl?g.cl:g.12z);Z a=2n.2K("sX");Z h=a.1k;h.6S="5Z";h.12y=f+"px";h.1I=b+"px";h.4H="12x-hM";h.1X=g.d3||"#hi";if(g.9h||g.9g){h.2H="4I";if(g.9h){h.2F=g.9h+"px"}if(g.9g){h.2m=(-1*g.9g)+"px"}}a.12w=i.id;a.12v=i.27.1T;Z d=2n.cv(c);a.2r(d);e.2r(a)}}},IQ:1b(b){if(V.en()&&b.pY){Z c=b.1k;if(c){Z a=c.4R;if(a){c.4R=1d;c.IN=1d;c.IP=a}}}},IO:1b(g){Z b=V.IL(g);Z j,h=V;1i(Z e=0;e<V.lA.1g;e++){Z d=V.lA[e];if(d.d1==="q2"){j=c(b,d.1k,g.1g,g,V)}1f{if(d.d1>=g.1g){j=c(b,d.1k,g.1g,g,V);1H}}}1c j;1b c(a,k,m,i,l){Z n=1n 1a.1O.49();n.27=1n 1a.1R.2N(a.x,a.y);n.1k=1a.1t.12u(1d,k);if(m){n.1k.4R=m+"";n.1k.IN=1j}if(i){n.mS=i;n.pY=1j}if(l.en()&&(k.8h||k.12t)){n.1k.97="3c"}1c n}},wg:1b(k,h,c,j,a){if(k.27){Z d=V.IM(k);if(d.1g){Z g=[];1i(Z e=0;e<d.1g;e++){Z b=d[e].2A();b.q1=1j;b.q0=d[e].q0;b.2Z=d[e].2Z;g.1r(b)}}1f{Z b=d.2A();b.q1=1j;b.q0=d.q0;b.2Z=d.2Z;Z g=[b]}}1f{Z g=1n 1a.1O.49();g.27=1n 1a.1R.2N(k.x,k.y);g.1k={6A:"#gH",8D:0.8,qk:"dl",97:c||"#Bn",6r:0.7,d3:"#gH"};g.1k.94=1;if(h){g.1k.4R=h+""}if(a){g.mS=a;g.pY=1j}g=[g]}1c g},gb:1b(a){if(a&&a.1g>0){V.9d(a)}},pZ:1b(e,d,c){Z b=e.27||e;Z a=1q.7m((b.x-c.x)/d.w);Z f=1q.7m((c.y-b.y)/d.h);1c[f,a,e]},IL:1b(d){Z e=d[0];e=e.27;Z b=d.1g;Z a=e.x;Z g=e.y;1i(Z c=1;c<b;c++){a=a+d[c].27.x;g=g+d[c].27.y}a=a/b;g=g/b;1c{x:a,y:g}},BQ:1b(){if(V.lz){V.lz=1m;Z a=1d;Z b=V.d0;if(b){Z c=1d;1i(Z d in b){c=b[d].27;if(c){if(a===1d){a=1n 1a.d9()}a.8J(c.9W())}}}V.wf=a}1c V.wf},1T:"1a.1J.IK"});1a.2l.IH=1a.1U(1a.2l.Ix,{iG:{},1B:1b(c,a){Z b=V;1a.2l.1u.1B.1x(V,[a]);if(V.6L===1d){V.6L=V}V.Iw(c);V.iG={4k:1b(g){6k{if(g&&g.pY&&g.1w){Z d=g.1w;d.IJ(g)}b.4w.4k&&b.4w.4k.1x(b,[g])}6B(h){}b.w6.1x(b,[g])},iH:1b(g){6k{if(g&&g.1w){Z d=g.1w;d.II(g)}b.4w.iH&&b.4w.iH.1x(b,[g])}6B(h){}b.12s.1x(b,[g])},2G:1b(d){6k{b.4w.2G&&b.4w.2G.1x(b,[d])}6B(g){}b.12r.1x(b,[d])},3u:1b(d){6k{b.4w.3u&&b.4w.3u.1x(b,[d])}6B(g){}b.12q.1x(b,[d])},9l:1b(d){b.4w.9l&&b.4w.9l.1x(b,[d])}};V.pS={6v:1n 1a.9k.1O(V,V.1w,V.iG,{pT:V.pT,w5:1m,w5:1m})};if(V.l3){V.pS.l3=1n 1a.9k.Im(V,{mW:V.Il},{Ik:"Ij"})}},1T:"1a.2l.IH"});1a.1J.ga=1a.1U(1a.1J.49,{7b:1d,ly:50,lx:50,3C:1d,lw:1j,wc:3,pX:1d,ID:1d,IC:1d,we:1j,wd:1,bI:0,b5:1d,8t:2,1B:1b(b,a){1a.1J.49.1u.1B.1x(V,1G);V.5G=1a.1J.49.1u.5G.5k(1a.1J.1u.5G);V.1Y=1n 1a.nG(V,V.2o,V.5G);if(V.ax 2a 3U){V.1Y.on(V.ax)}},pU:1b(d){if(V.we){Z e=d.27.9W().lW();Z g=V.1v.IF(e);Z a=V.1v.IG();Z b=V.1v.IF(a);Z c=V.1v.IE(V.1v.7W()+1);Z f=1n 1a.aO(e.bR-(g.x-b.x)*c,e.es+(g.y-b.y)*c);V.1v.12p(f,V.1v.7W()+V.wd)}},Iv:1b(a){},6E:1b(a){if(V.7b==1z){V.7b=a}1f{V.7b=V.7b.5k(a)}if(V.1v){1a.1J.49.1u.5t.1x(V,[]);Z b=V.pW(V.7b);1a.1J.49.1u.6E.1x(V,[b])}},9d:1b(c){if(!V.7b){1c}1i(Z b=0;b<V.7b.1g;b++){1i(Z a=0;a<c.1g;a++){if(V.7b[b]===c[a]){V.7b.6o(b--,1);1H}}}if(V.1v&&V.7b){1a.1J.49.1u.5t.1x(V,[]);Z d=V.pW(V.7b);1a.1J.49.1u.6E.1x(V,[d])}},5t:1b(){V.7b=1d;1a.1J.49.1u.5t.1x(V,1G)},3A:1b(c,a,d){if(a&&V.7b&&V.7b.1g>0){1a.1J.49.1u.5t.1x(V,[]);Z b=V.pW(V.7b);1a.1J.49.1u.6E.1x(V,[b])}1a.1J.49.1u.3A.1x(V,1G)},1Q:1b(){V.7b=1d;V.ly=1d;V.lx=1d;V.3C=1d;V.lw=1d;V.wc=1d;if(V.pX){V.pX.1Q();V.pX=1d}V.ID=1d;V.IC=1d;V.we=1d;V.wd=1d;V.bI=1d;V.b5=1d;V.8t=1d;1a.1J.49.1u.1Q.1x(V,1G)},pW:1b(a){Z b=V.1v.7W();if(b>=V.wc){V.1Y.2z("pV",V);1c a}1f{if(V.bI==0){1c V.IB(a)}1f{if(V.bI===1){1c V.wb(a,1m)}1f{if(V.bI===2){1c V.wa(a,1j)}1f{if(V.bI===3){1c V.wa(a,1m)}1f{if(V.bI===4){1c V.IA(a)}1f{if(V.bI===5){1c V.Iz(a)}1f{if(V.bI===6){1c V.Iy(a)}1f{if(V.bI===7){1c V.wb(a,1j)}}}}}}}}}},IB:1b(d){Z u,f;u=V.ly*V.1v.6U();f=V.lx*V.1v.6U();Z h=[],w=[];1i(Z s=0;s<d.1g;s++){if(!d[s].1k){d[s].1k={97:"#12o",6A:"#12n",8D:1,94:2,7x:4}}Z l=d[s].27;Z t,r,p;p=V.1v.7W();if(l.x>=0){t=(l.x-l.x%u)/u}1f{t=(l.x-(u+l.x%u))/u}if(l.y>=0){r=(l.y-l.y%f)/f}1f{r=(l.y-(f+l.y%f))/f}if(w[t+"3z"+r+"3z"+p]==1z){Z q=[1n 1a.1R.2N(t*u,r*f),1n 1a.1R.2N(t*u,r*f+f),1n 1a.1R.2N(t*u+u,r*f+f),1n 1a.1R.2N(t*u+u,r*f)],x=1n 1a.1R.9b(q),b=1n 1a.1R.6j([x]);Z c=1n 1a.1O.49(b);c.8u=[];c.8u.1r(d[s]);c.w9=t+"3z"+r+"3z"+p;w[t+"3z"+r+"3z"+p]=c;h.1r(c)}1f{Z a=w[t+"3z"+r+"3z"+p];a.8u.1r(d[s])}}1i(Z m=0;m<h.1g;m++){Z o=h[m];if(!o.1k){o.1k={6A:"#w8",94:1,97:"#w7",6r:0.5}}if(V.3C){1i(Z j=0;j<V.3C.1g;j++){if((V.3C[j].4m!=1z)&&(V.3C[j].4E!=1z)){if((V.3C[j].4m<=o.8u.1g)&&(o.8u.1g<V.3C[j].4E)){o.1k=1a.1t.eF(V.3C[j].1k)}}}}Z e=o.8u.1g;if(V.lw){if(V.8t<0){o.1k.4R=e.2c()}1f{Z v=1q.5K(10,V.8t);Z g=e.2c().6q(".");if(g.1g===2&&g[1].1g>V.8t){e=2P(e*v)/v}Z e=2P(e*v)/v;o.1k.4R=e.2c()}}}V.1Y.2z("pV",V);1c h},wb:1b(f,g){Z x,j;x=V.ly*V.1v.6U();j=V.lx*V.1v.6U();Z z=[];Z m=[];1i(Z v=0;v<f.1g;v++){Z p=f[v].27;Z w,u,s;s=V.1v.7W();if(p.x>=0){w=(p.x-p.x%x)/x}1f{w=(p.x-(x+p.x%x))/x}if(p.y>=0){u=(p.y-p.y%j)/j}1f{u=(p.y-(j+p.y%j))/j}if(z[w+"3z"+u+"3z"+s]==1z){Z t=[1n 1a.1R.2N(w*x,u*j),1n 1a.1R.2N(w*x,u*j+j),1n 1a.1R.2N(w*x+x,u*j+j),1n 1a.1R.2N(w*x+x,u*j)],C=1n 1a.1R.9b(t),d=1n 1a.1R.6j([C]);Z e=1n 1a.1O.49(d);e.8u=[];e.8u.1r(f[v]);e.cK=40(f[v].2Z[V.b5]);e.w9=w+"3z"+u+"3z"+s;z[w+"3z"+u+"3z"+s]=e;m.1r(e)}1f{Z c=z[w+"3z"+u+"3z"+s];c.8u.1r(f[v]);Z B=c.cK,A=40(f[v].2Z[V.b5]);if(g){c.cK=B+A}1f{B*=(c.8u.1g-1);c.cK=(B+A)/c.8u.1g}}}1i(Z q=0;q<m.1g;q++){Z r=m[q];if(!r.1k){r.1k={6A:"#w8",94:1,97:"#w7",6r:0.5}}if(V.3C){1i(Z o=0;o<V.3C.1g;o++){if((V.3C[o].4m!=1z)&&(V.3C[o].4E!=1z)){if((V.3C[o].4m<=r.cK)&&(r.cK<=V.3C[o].4E)){r.1k=1a.1t.eF(V.3C[o].1k)}}}}Z h=r.cK;if(V.lw){if(V.8t<0){r.1k.4R=h.2c()}1f{Z y=1q.5K(10,V.8t);Z l=h.2c().6q(".");if(l.1g===2&&l[1].1g>V.8t){h=2P(h*y)/y}r.1k.4R=h.2c()}}}V.1Y.2z("pV",V);1c m},wa:1b(d,A){Z v,e;v=V.ly*V.1v.6U();e=V.lx*V.1v.6U();Z x=[];Z g=[];1i(Z t=0;t<d.1g;t++){Z l=d[t].27;Z u,s,p;p=V.1v.7W();if(l.x>=0){u=(l.x-l.x%v)/v}1f{u=(l.x-(v+l.x%v))/v}if(l.y>=0){s=(l.y-l.y%e)/e}1f{s=(l.y-(e+l.y%e))/e}if(x[u+"3z"+s+"3z"+p]==1z){Z q=[1n 1a.1R.2N(u*v,s*e),1n 1a.1R.2N(u*v,s*e+e),1n 1a.1R.2N(u*v+v,s*e+e),1n 1a.1R.2N(u*v+v,s*e)],y=1n 1a.1R.9b(q),b=1n 1a.1R.6j([y]);Z c=1n 1a.1O.49(b);c.8u=[];c.8u.1r(d[t]);c.2L=40(d[t].2Z[V.b5]);c.2Q=40(d[t].2Z[V.b5]);c.w9=u+"3z"+s+"3z"+p;x[u+"3z"+s+"3z"+p]=c;g.1r(c)}1f{Z a=x[u+"3z"+s+"3z"+p];a.8u.1r(d[t]);Z r=40(d[t].2Z[V.b5]);Z j=40(d[t].2Z[V.b5]);a.2L=r>a.2L?r:a.2L;a.2Q=j<a.2Q?j:a.2Q}}1i(Z m=0;m<g.1g;m++){Z o=g[m];Z z=A?o.2L:o.2Q;if(!o.1k){o.1k={6A:"#w8",94:1,97:"#w7",6r:0.5}}if(V.3C){1i(Z h=0;h<V.3C.1g;h++){if((V.3C[h].4m!=1z)&&(V.3C[h].4E!=1z)){if((V.3C[h].4m<=z)&&(z<=V.3C[h].4E)){o.1k=1a.1t.eF(V.3C[h].1k)}}}}if(V.lw){if(V.8t<0){o.1k.4R=z.2c()}1f{Z w=1q.5K(10,V.8t);Z f=z.2c().6q(".");if(f.1g===2&&f[1].1g>V.8t){z=2P(z*w)/w}o.1k.4R=z.2c()}}}V.1Y.2z("pV",V);1c g},IA:1b(a){},Iz:1b(a){},Iy:1b(a){},1T:"1a.1J.ga"});1a.1J.ga.12m=0;1a.1J.ga.12l=1;1a.1J.ga.12k=2;1a.1J.ga.12j=3;1a.1J.ga.12i=7;1a.2l.Ii=1a.1U(1a.2l.Ix,{iG:{},1B:1b(c,a){Z b=V;1a.2l.1u.1B.1x(V,[a]);if(V.6L===1d){V.6L=V}V.Iw(c);V.iG={4k:1b(g){6k{if(g&&g.1w&&(g.27.1T===1a.1R.6j.1u.1T)){Z d=g.1w;d.pU(g);b.4w.pU&&b.4w.pU.1x(b,[g])}1f{if(g&&g.1w&&(g.27.1T===1a.1R.2N.1u.1T)){b.4w.w6&&b.4w.w6.1x(b,[g])}}}6B(h){}},iH:1b(g){6k{if(g&&g.1w){Z d=g.1w;d.Iv(g)}b.4w.iH&&b.4w.iH.1x(b,[g])}6B(h){}},2G:1b(d){6k{if(d&&d.1w&&(d.27.1T===1a.1R.6j.1u.1T)){b.4w.Iu&&b.4w.Iu.1x(b,[d])}1f{if(d&&d.1w&&(d.27.1T===1a.1R.2N.1u.1T)){b.4w.Is&&b.4w.Is.1x(b,[d])}}}6B(g){}},3u:1b(d){6k{if(d&&d.1w&&(d.27.1T===1a.1R.6j.1u.1T)){b.4w.Ir&&b.4w.Ir.1x(b,[d])}1f{if(d&&d.1w&&(d.27.1T===1a.1R.2N.1u.1T)){b.4w.Iq&&b.4w.Iq.1x(b,[d])}}}6B(g){}},9l:1b(d){if(d&&d.1w&&(d.27.1T===1a.1R.6j.1u.1T)){b.4w.Ip&&b.4w.Ip.1x(b,[d])}1f{if(d&&d.1w&&(d.27.1T===1a.1R.2N.1u.1T)){b.4w.Io&&b.4w.Io.1x(b,[d])}}}};V.pS={6v:1n 1a.9k.1O(V,V.1w,V.iG,{pT:V.pT,w5:1m})};if(V.l3){V.pS.l3=1n 1a.9k.Im(V,{mW:V.Il},{Ik:"Ij"})}},1T:"1a.2l.Ii"});1a.6M.9P=1a.1U(1a.6M,{2S:1d,lq:2,6u:1d,aZ:1d,1Q:1b(){V.3b();1a.6M.1u.1Q.1x(V,1G)},cB:1b(){Z a=V;Z c=1a.6M.1u.cB.1x(V,1G);if(c){if(V.9y){V.Ih();V.1Y.2z("DX")}1f{V.9y=1j;V.1Y.2z("DW")}V.2S=V.1w.oh(V.3Q);V.2S=2u.12h(V.2S);V.2S=V.2S.3h("#",2u.Dh("#"));if(V.1w.Ia){a.6u=1d;Z b=1n 1a.12g.12f({2S:V.2S,ak:1b(d){1c 1b(e){if(d===a.2S){a.9y=1m;a.1Y.2z("dX");a.6u=e.2g}}}(a.2S),6L:V});b.hN();V.lv=b}1f{V.lv=1a.12d.jK({2S:V.2S,ak:1b(d){1c 1b(e){if(d===a.2S){a.9y=1m;a.1Y.2z("dX");if(e.f5===n4){a.Ie(e.hd)}}}}(a.2S),6L:V})}}1f{V.12c()}1c c},Ih:1b(){if(V.lv){V.lv.12b();4S V.lv}V.9y=1m},dV:1b(b,a){Z c=1d;if(V.6u){Z d=V.pR(b,a);if(d!==1d){c={id:d,2g:V.6u.2g[d]}}}1c c},pR:1b(f,d){Z a=1d;if(V.6u){Z b=V.lq;Z m=1q.7m(d/b);Z c=1q.7m(f/b);6k{Z k=V.6u.av[m].vL(c)}6B(h){1c 1d}Z g=V.Ig(k);Z l=V.6u.oS;if(!2Y(g)&&(g in l)){a=l[g]}}1c a},Ig:1b(a){if(a>=93){a--}if(a>=35){a--}1c a-32},Ie:1b(a){if(!V.aZ){V.aZ=1n 1a.od.ks()}V.6u=V.aZ.hN(a)},3b:1b(){V.6u=1d},1T:"1a.6M.9P"});1a.2l.9P=1a.1U(1a.2l,{12a:1j,5R:1d,Ic:{mk:jz,129:4,126:1m,tb:1j,"Hf":1m,125:1m,121:1m},iD:"4k",11Z:1b(a){V.iD=a;V.w4()},w4:1b(){if(V.6I){V.6I.lj();V.6I.1Q();V.6I=1d}if(V.iD==="7j"){V.6I=1n 1a.9k.Id(V,{ka:V.ls,dv:V.3N},V.lu)}1f{if(V.iD==="4k"){V.6I=1n 1a.9k.11Y(V,{4k:V.ls},V.lu)}1f{if(V.iD==="dv"){V.6I=1n 1a.9k.Id(V,{ka:V.ls,dv:V.ls},V.lu)}}}if(V.6I){1c 1j}1f{1c 1m}},1B:1b(a){a=a||{};a.lu=a.lu||V.Ic;1a.2l.1u.1B.1x(V,[a]);V.w4()},ls:1b(c){if(c==1d){V.3N();1c}Z d=V.1v.D4(c.xy);if(!d){1c}Z h=V.Ib();if(h.1g>0){Z g={};Z f,b;1i(Z e=0,a=h.1g;e<a;e++){f=h[e];b=1a.1t.3k(V.1v.5R,f);g[b]=f.dV(d)}V.ak(g,d,c.xy)}},ak:1b(a){},3N:1b(a){V.ak(1d)},Ib:1b(){Z c=V.5R||V.1v.5R;Z d=[];Z b;1i(Z a=c.1g-1;a>=0;--a){b=c[a];if(b 2a 1a.1J.9P){d.1r(b)}}1c d},1T:"1a.2l.9P"});1a.1J.9P=1a.1U(1a.11X,{j5:1m,hU:1j,hS:jz,6c:1n 1a.DC("tF:11W"),Ia:1m,tp:1a.6M.9P,1w:1d,1B:1b(d,c,f,b){if(c&&c.3k("I9.6u")===-1){c+="/I9.6u?2t=${z}&x=${x}&y=${y}";if(!f.w2||f.w2==1z){c+="&11V=1m"}if(f.iF){V.hP=1n 1a.oq(f.iF,f.iF);c+="&1I="+f.iF+"&1L="+f.iF}if(f.iE){c+="&11U="+f.iE}Z a=f.6a;if(a){c+="&11T=[\'"+a+"\']"}Z e=f.4K;if(e){c+=\'&1N=["\'+e+\'"]\'}if(1a.bj.cD){c+="&"+1a.bj.cD.2h+"="+1a.bj.cD.cr()}b.bn=1m;1a.1J.bm.1u.1B.1x(V,[d,c,f,b])}V.tn=1a.1t.8J({lq:V.lq},V.tn)},2A:1b(a){if(a==1d){a=1n 1a.1J.9P(V.qy())}a=1a.1J.bm.1u.2A.1x(V,[a]);1c a},dV:1b(b){if(!V.11S()){1c 1d}Z c=1d;Z a=V.tg(b);if(a&&a.6K&&a.6K.dV){c=a.6K.dV(a.i,a.j)}1c c},pR:1b(a){Z c=1d;Z b=V.tg(a);if(b.6K){c=b.6K.pR(b.i,b.j)}1c c},oh:1b(d){Z a=V.dR(d);Z b=V.2S;if(1a.1t.5u(b)){Z c=""+a.x+a.y+a.z;b=V.Dc(c,b)}1c 1a.jQ.aZ(b,a)},dR:1b(d){Z c=V.11R();Z a=1q.39((d.2F-V.9u.2F)/(c*V.hP.w));Z g=1q.39((V.9u.2m-d.2m)/(c*V.hP.h));Z f=V.11Q();Z e;if(V.1w&&V.1w.4J){e=V.1w.4J[f]}if(!e&&V.1v.I8){e=V.1v.I8(f)}if(V.11P){Z b=1q.5K(2,f);a=((a%b)+b)%b}1c{x:a,y:g,z:e}},bl:1b(a){1a.1J.bm.1u.bl.1x(V,1G)},m3:1b(b,a){1a.1J.bm.1u.m3.1x(V,1G)},I7:1b(){1a.1J.bm.1u.I7.1x(V,1G)},3A:1b(d,a,e){1a.1J.tq.1u.3A.1x(V,1G);d=d||V.1v.7d();if(d!=1d){Z c=!V.av.1g||a;Z b=V.Dq();if(V.tB){if(c||(!e&&!b.om(d))){V.Dp(d)}}1f{if(c||!b.om(d,1j)){if(V.hU){V.hU=1m;V.bl(d)}1f{if(V.hS){2u.7Y(V.ft);V.ft=2u.8A(1a.3g.3p(1b(){V.bl(d)},V),V.hS)}1f{V.bl(d)}}}1f{V.Dj()}}}},1T:"1a.1J.9P"});1a.pM=1a.1U({2S:1d,lr:1d,1k:1d,4K:1d,ku:1j,3r:1d,4J:1d,5B:1d,5p:1d,6b:1d,aZ:1d,6c:1d,iE:8,5G:["HX","pQ","I2","HY","HZ"],1Y:1d,ax:1d,g9:1d,6y:1d,6P:1d,6z:1d,em:1d,1B:1b(a){Z b=V;if(a){1a.1t.8J(V,a)}V.1Y=1n 1a.nG(b,1d,b.5G);if(V.ax 2a 3U){V.1Y.on(V.ax)}V.I6()},I4:1b(c){Z b=V;if(b.4K){c.11O=b.4K}if(b.1k){1i(Z a in b.1k){c.1k[a]=b.1k[a]}}1c c},1Q:1b(){Z b=V;b.6z=1d;b.6P=1d;b.6y=1d;b.1k=1d;b.vZ=1d;b.pP=1d;b.1v=1d;if(b.1Y){b.1Y.1Q();b.1Y=1d}b.ax=1d;if(b.g9){b.g9.1Q();b.g9=1d}1i(Z a in V){V[a]=1d}},cu:1b(){Z a=V;if(a.6z){a.6z.dP(1m)}if(a.6P){a.6P.dP(1m)}if(a.6y){a.6y.dP(1m)}},fl:1b(){Z a=V;if(a.6z){a.6z.dP(1j)}if(a.6P){a.6P.dP(1j)}if(a.6y){a.6y.dP(1j)}},mF:1b(){1c[V.6y,V.6P,V.6z]},j1:1b(a){if(V.6y){V.6y.j1(a)}if(V.6z){V.6z.j1(a)}},I6:1b(){Z a=V;if(a.2S&&a.lr){a.g9=1n 1a.fj.11N(a.2S);a.g9.1Y.on({ov:a.I5,ou:1b(b){a.1Y.2z("pQ",{w3:"获取图层信息失败",aB:b})},6L:a});a.g9.ot()}1f{a.1Y.2z("pQ",{w3:"未设置url、d11M"})}},I5:1b(a){Z h=V;if(h.lr){Z i=a.hX;if(i){Z d=i.D6;if(d){Z c=d.5R;Z e=1d;1i(Z b=0;b<c.1g;b++){if(c[b].2h===h.lr){if(c[b].nY&&c[b].nY.1p){Z f=c[b].nY.1p;if(f){f=f.bU();if(f==="fn"||f==="fm"){h.em=1m}1f{h.em=1j}}}c[b].b2=1j;c[b].bd=0;c[b].bc=0;c[b]=h.I4(c[b]);e=c[b];1H}}if(e){d.5R=[e]}}Z g=1n 1a.fj.11L(h.2S,{ax:{ov:h.I3,ou:1b(j){h.1Y.2z("pQ",{w3:"设置图层信息失败",aB:j})},6L:h}});g.ot(a.hX)}}},I3:1b(c){Z b=V;Z e=c.hX.11K;Z d={i4:1j,ku:!!b.ku,11J:1j,bk:e};Z a={bf:"73",bn:1m};if(b.3r){a.3r=b.3r}if(b.4J){a.4J=b.4J}if(b.5B){a.5B=b.5B}if(b.5p){a.5p=b.5p}if(b.6b){a.6b=b.6b}if(b.aZ){a.aZ=b.aZ}if(b.6c){a.6c=b.6c}b.6y=1n 1a.1J.HV("11I",b.2S,d,a);b.1Y.2z("I2",b.6y);b.6y.1Y.on({cA:b.I1,6L:b})},I1:1b(){Z b=V;Z d={6a:b.lr,iF:b6,iE:b.iE,w2:!!b.ku};if(b.4K){d.4K=b.4K}Z a={lq:b.iE};if(b.6c){a.6c=b.6c}a.9u=b.6y.I0().2A();b.6P=1n 1a.1J.9P("11H",b.2S,d,a);b.6P.1w=b.6y;if(b.em!=1d){b.6P.em=b.em}b.1Y.2z("HZ",b.6P);b.6z=1n 1a.1J.w1("w1");b.1Y.2z("HY",b.6z);Z c=[b.6y,b.6P,b.6z];b.1Y.2z("HX",c)},1T:"1a.pM"});1a.2l.pM=1a.1U(1a.2l,{lk:1b(){},cZ:1b(){},lp:1b(){},lm:1b(){},ll:1b(){},lo:1b(){},ln:1b(){},5R:1d,6y:1d,6P:1d,6z:1d,9O:1d,7a:1d,g8:1d,8V:1d,HT:1m,vZ:1d,iB:1d,pP:1n 1a.11G(1a.1t.kA()+"11F.vR",1n 1a.oq(16,16),1n 1a.dh(-8,-8)),w0:1j,1B:1b(b,a){1a.2l.1u.1B.1x(V,[a]);V.5R=b;if(V.6L===1d){V.6L=V}V.HW()},HW:1b(){Z c=V,d=c.5R;if(d&&d.1g&&d.1g>0){1i(Z b=0;b<d.1g;b++){Z a=d[b];if(a 2a 1a.1J.HV){c.6y=c.6y||a}1f{if(a 2a 1a.1J.9P){c.6P=c.6P||a;if(a.em!=1z){c.w0=a.em}}1f{if(a 2a 1a.1J.w1){c.6z=c.6z||a}}}}}},HP:1b(){Z a=V;if(a.6P){a.9O=1n 1a.2l.9P({5R:[a.6P],ak:1b(c,d,b){if(a.w0){a.HU(c,d,b)}1f{a.HS(c,d,b)}},iD:"dv"})}},HU:1b(k,f,a){Z i=V;if(i.lp){i.lp({7v:f,vo:a})}if(k){1i(Z h in k){Z b=k[h];if(b&&b.2g){if(i.8V){if(i.8V===b.id){1c}1f{if(i.cZ){i.cZ({7v:f,2g:i.iB})}i.8V=b.id}}1f{i.8V=b.id}i.iA();if(i.HT){Z g=V.vZ.2A()}1f{Z g=V.pP.2A()}Z d={};1i(Z j in b.2g){d[j.bU()]=b.2g[j]}i.7a=1n 1a.HR(1n 1a.aO(40(d.11E),40(d.11D)),g);i.7a.1Y.11C=1j;i.6z.HQ(i.7a);i.7a.1Y.on({4k:1b(){if(V===i.g8){}1f{i.pN();i.g8=i.7a;i.7a=1d}Z l=V.iC();if(i.lo){i.lo({7v:l,2g:b.2g})}},9l:1b(){Z l=V.iC();if(i.ln){i.ln({7v:l,2g:b.2g})}},86:1b(){Z l=V.iC();if(i.lm){i.lm({7v:l,2g:b.2g})}},9m:1b(){Z l=V.iC();if(i.ll){i.ll({7v:l,2g:b.2g})}},6L:i.7a});Z e=i.7a.iC();if(i.lk){i.lk({7v:e,2g:b.2g})}i.iB=b.2g}1f{if(i.8V&&(i.7a||i.g8)){i.8V=1d;Z c=(i.7a||i.g8);Z e=c.iC();if(i.cZ){i.cZ({7v:e,2g:i.iB})}}i.iA()}}}},HS:1b(e,g,b){Z c=V;if(c.lp){c.lp({7v:g})}c.iA();if(e){1i(Z a in e){Z f=e[a];if(f&&f.2g){Z d=V.pP.2A();c.7a=1n 1a.HR(1n 1a.aO(40(g.bR),40(g.es)),d);c.6z.HQ(c.7a);c.7a.1Y.on({4k:1b(){if(c.lo){c.lo({7v:g,2g:f.2g})}},9l:1b(){if(c.ln){c.ln({7v:g,2g:f.2g})}},86:1b(){if(c.lm){c.lm({7v:g,2g:f.2g})}},9m:1b(){if(c.ll){c.ll({7v:g,2g:f.2g})}},6L:c.7a});if(c.8V){if(c.8V===f.id){1c}1f{if(c.cZ){c.cZ({7v:g,2g:f.2g})}c.8V=f.id}}1f{c.8V=f.id}if(c.lk){c.lk({7v:g,2g:f.2g})}c.iB=f.2g}1f{if(c.8V){c.8V=1d;if(c.cZ){c.cZ({7v:g,2g:c.iB})}}}}}},pN:1b(){Z a=V;a.pO(a.g8);a.g8=1d},iA:1b(){Z a=V;a.pO(a.7a);a.7a=1d},pO:1b(a){Z b=V;if(a){b.6z.pO(a);if(a.1Y){a.1Y.1Q()}a=1d}},bT:1b(b){Z a=V;a.1v=b;if(!a.9O){a.HP();a.1v.11B(a.9O)}},1Q:1b(){Z b=V;b.pN();b.iA();if(b.1v){if(b.9O){b.9O.lj();b.1v.11A(b.9O);b.9O=1d}b.6z=1d;b.6P=1d;b.6y=1d}1a.2l.1u.1Q.1x(V,1G);1i(Z a in V){V[a]=1d}},vY:1b(){Z a=V;if(!a.8m){if(a.9O){a.9O.vY()}}1c 1a.2l.1u.vY.1x(V,1G)},lj:1b(){Z a=V;if(V.8m){a.pN();a.iA();if(a.9O){a.9O.lj()}}1c 1a.2l.1u.lj.1x(V,1G)},1T:"1a.2l.pM"});1a.2B.cz=1a.1U({HK:1j,le:1d,7u:1d,pL:1d,pK:1d,cY:1d,g7:1d,vX:1d,iy:1d,g5:1d,g3:1d,g4:1d,ix:1d,bG:1d,iz:1d,lg:1d,lh:1m,hG:1d,1B:1b(){V.vX=[0,120,6t,0];V.iy=[10,110,11z,10];V.g5=[0,120,n4,0];V.g3=[p4,110,ed,10];V.g4=[n4,120,6t,0];V.ix=10;V.iz={x:10,y:10};V.lg={x:F8,y:10};V.bG=[1V,0,0,1V];if(!2n.hJ){Z a=V;V.g6(2n,"11y",1b(){a.vW()})}1f{V.vW()}V.hG=1b(b){}},1Q:1b(){if(V.7u){2n.HO("hJ")[0].a8(V.7u)}V.7u=1d;V.pL=1d;V.pK=1d;V.cY=1d;V.g7=1d;V.vX=1d;V.iy=1d;V.g5=1d;V.g3=1d;V.g4=1d;V.ix=1d;V.bG=1d;V.lh=1d;V.hG=1d},vW:1b(d,c,a){V.le=a?a:1d;V.7u=2n.2K("11x");Z f=V.7u;f.1k.2H="a5";f.1k.cP="ar";f.1k.vV="ar";f.1k.2m=(d?d:0)+"px";f.1k.2F=(c?c:0)+"px";f.1k.1I="11w";f.1k.1L="11v";f.1k.4H="3c";f.1k.DU=11u;V.pL=2n.2K("1W");Z e=V.pL;e.1k.2H="a5";e.1k.cP="ar";e.1k.vV="ar";e.1I=6t;e.1L=120;V.cY=e.4G("2d");V.pK=2n.2K("1W");Z b=V.pK;b.1k.2H="a5";b.1k.cP="ar";b.1k.vV="ar";b.1I=6t;b.1L=120;f.2r(b);V.g7=b.4G("2d");f.2r(e);f.2r(b);V.HN();V.pI();V.pJ();V.pH();V.HL();V.hF();2n.HO("hJ")[0].2r(f)},HN:1b(){if(V.cY){Z b=V.cY;Z a=V.g5;Z c=V.iy;b.7E(a[0],a[3],a[2]-a[0],a[1]-a[3]);b.4W="#HM";b.eP(a[0],a[3],a[2]-a[0],a[1]-a[3]);Z d=1n 6R();d.a1=1b(){b.7h(d,c[0],c[3],d.1I,d.1L)};d.2i=1a.2B.cz.HH}},pJ:1b(){if(V.g7){Z d=V.g7;Z b=V.g5;Z c=V.iz.x-7;Z a=V.iz.y-7;d.7E(b[0],b[3],b[2]-b[0],b[1]-b[3]);Z e=1n 6R();e.a1=1b(){d.7h(e,c,a,e.1I,e.1L)};e.2i=1a.2B.cz.HG}},pI:1b(){if(V.cY){Z b=V.cY;Z e=V.g3;Z d=V.g4;Z c="4f("+V.bG[0]+", "+V.bG[1]+", "+V.bG[2]+", "+V.bG[3]+")";b.7E(d[0],d[3],d[2]-d[0],d[1]-d[3]);b.4W="#HM";b.eP(d[0],d[3],d[2]-d[0],d[1]-d[3]);Z a=b.nd(e[0]+((e[2]-e[0])/2),e[3],e[0]+((e[2]-e[0])/2),e[1]+1);a.f8(0,c);a.f8(1,"#k3");b.4W=a;b.eP(e[0],e[3],e[2]-e[0],e[1]-e[3]+1);b.2k()}},pH:1b(){if(V.g7){Z b=V.g7;Z e=V.g3;Z c=V.g4;Z f=e[0]-7;Z d=V.lg.y-5;b.7E(c[0],c[3],c[2]-c[0],c[1]-c[3]);Z a=1n 6R();a.a1=1b(){b.7h(a,f,d,a.1I,a.1L)};a.2i=1a.2B.cz.HF}},HL:1b(){Z d=V.7u;Z a=V.g5;Z c=V.g4;Z b=V;V.g6(d,"86",1b(f){b.lh=1j});V.g6(d,"9m",1b(f){b.lh=1m});V.g6(d,"11t",1b(f){if(b.HK==1j){b.hF()}});V.g6(d,"7g",1b(h){Z f=b.vS(h);if(b.bH(f,a)){d.1k.eX="11s"}1f{d.1k.eX="1o"}if(b.lh===1j){if(b.bH(f,a)){Z i=b.vU(f);if(!i){1c}Z j=b.cY.ff(i.x,i.y,1,1);b.iz=i;b.bG=j.2g;b.pI();b.pJ();b.lf()}if(b.bH(f,c)){Z g=b.vT(f);if(!g){1c}b.ix=g.y;b.lg=g;b.pH();b.lf()}}});V.g6(d,"4k",1b(h){Z f=b.vS(h);if(b.bH(f,a)){Z i=b.vU(f);if(!i){1c}Z j=b.cY.ff(i.x,i.y,1,1);b.iz=i;b.bG=j.2g;b.pJ();b.pI();b.lf()}if(b.bH(f,c)){Z g=b.vT(f);if(!g){1c}b.ix=g.y;b.lg=g;b.pH();b.lf()}})},g6:1b(a,c,b){if(a.7l){a.7l(c,b,1m)}1f{if(a.c6){a.c6("on"+c,b)}}},vU:1b(b){Z d=V.iy;Z a=V.g5;Z c={};if(V.bH(b,d)){c.x=b.x;c.y=b.y}1f{if(V.bH(b,a)){if(b.x<d[0]){c.x=d[0]}if(b.x>d[2]){c.x=d[2]}if(1P(c.x)=="1z"){c.x=b.x}if(b.y>d[1]){c.y=d[1]}if(b.y<d[3]){c.y=d[3]}if(1P(c.y)=="1z"){c.y=b.y}}}if(1P(c.x)=="1z"||1P(c.y)=="1z"){1c 1m}1f{1c c}},vT:1b(a){Z d=V.g3;Z b=V.g4;Z e=V.iy;Z c={};if(V.bH(a,d)){c.x=ef;c.y=a.y}1f{if(V.bH(a,b)){c.x=ef;if(a.y>e[1]){c.y=e[1]}if(a.y<e[3]){c.y=e[3]}if(1P(c.y)=="1z"){c.y=a.y}}}if(1P(c.x)=="1z"||1P(c.y)=="1z"){1c 1m}1f{1c c}},vS:1b(b){Z a,c;if(1P(b.jq)!="1z"&&1P(b.jp)!="1z"){a=b.jq;c=b.jp}if(1P(b.7G)!="1z"&&1P(b.7F)!="1z"){a=b.7G;c=b.7F}1c{x:a,y:c}},bH:1b(a,b){Z c=a;if(c.x>=b[0]&&c.x<=b[2]&&c.y<=b[1]&&c.y>=b[3]){1c 1j}1c 1m},3N:1b(c,b,a){if(1P(a)!=="1z"){V.le=a}if(V.7u){if(1P(c)!=="1z"){V.7u.1k.2m=2P(c)+"px"}if(1P(b)!=="1z"){V.7u.1k.2F=2P(b)+"px"}V.HJ()}},hF:1b(){if(V.7u){V.7u.1k.4H="3c"}},HI:1b(){if(V.7u){V.7u.1k.4H="hM"}},HJ:1b(){if(V.7u){if(V.7u.1k.4H==="3c"){V.HI()}1f{V.hF()}}},lf:1b(){Z j=V.ix;Z i=V.g3;Z f=V.bG;Z c=[1V,0,0,1V];if(j===i[3]){c[0]=f[0];c[1]=f[1];c[2]=f[2]}1f{if(j===i[1]){c=[0,0,0,1V]}1f{Z h=i[1]-i[3];Z e=h-(j-i[3]);c[0]=2P(f[0]*e/h);c[1]=2P(f[1]*e/h);c[2]=2P(f[2]*e/h)}}Z g=a(c);if(V.le){Z d=V.le;d.1k.nM=g}V.hG(g);1c g;1b b(k){1c("0"+2P(k).2c(16)).4a(-2)}1b a(k){1c"#"+b(k[0])+b(k[1])+b(k[2])}},1T:"1a.2B.cz"});1a.2B.cz.HH="2g:3M/hY;vQ,11r/11q/AH/11p/11o/11n/11m+11l+11k+11j/11i+11h/11g/11f+11e+11d/11c/11b/11a+118/117/116/115/111+10Z+10Y/10X/10W/10V/10U/10T/10S/10R+10Q/10P/10O+10N/10M+10L+10K/10J+10I/10H/10G/10F+10E+10D/10C/10B/10A+10z/10y+10x/10w++10v/10u+10t/P/10s/10r+10q+10p/10o/10n/10m+10l+10k/10j/10i/10h/K/10g+10f/57/10e+10d+10c+/10b/10a/109+108/103/101/ZZ+ZY/ZX/ZW/ZV+ZU/ZT/ZS/ZR+ZQ+ZP/ZO/ZN+ZM+ZL+ZK/ZJ/ZI/ZG/ZF/+ZE/ZD+ZC+ZB/ZA+Zz/Zy/Zx/Zw+Zv/Zu+Zt+Zs/Zr/Zq+Zp+Zo//Zn/Zm+Zl+Zk+Zj+Zi/Zh/Zg/Zf/Ze/Zd+Zc/Zb+Z9/Z8+Z7+Z6+Z5+Z4+Z3+Z2+Z1/YZ+YY/YX/YW/YV/YU=";1a.2B.cz.HG="2g:3M/vR;vQ,YT///////////YS/YR/YQ=";1a.2B.cz.HF="2g:3M/vR;vQ,YP///YO";1a.2B.kg=1a.1U({dK:1j,cf:1d,g1:16,g2:Fi,2Q:0,2L:1,1l:0,dn:0.jO,aq:1d,iw:1d,cX:1d,vP:1b(a){},kh:1b(a){},iv:1d,h5:1d,86:1d,1B:1b(a){1a.1t.8J(V,a);V.iv=1a.3g.3p(V.Hz,V);V.h5=1a.3g.3p(V.Hy,V);V.86=1a.3g.3p(V.HA,V);V.HE();V.sT(V.cf);V.nS(V.1l);V.aq.kd=V},1Q:1b(){if(V.cf&&V.aq){V.cf.a8(V.aq)}V.dK=1d;V.cf=1d;V.g1=1d;V.g2=1d;V.2Q=1d;V.2L=1d;V.1l=1d;V.dn=1d;V.aq=1d;V.cX=1d;V.iw=1d;V.vP=1d;V.kh=1d;V.iv=1d;V.h5=1d;V.86=1d;V.kd=1d},cr:1b(){1c V.1l},nS:1b(b){b=b>V.2L?V.2L:b;b=b<V.2Q?V.2Q:b;b=40(b);b=1q.39(b/V.dn)*V.dn;b=1a.dj.Hw(b,10);V.1l=b;Z a=(b-V.2Q)*(V.g2-V.g1)/(V.2L-V.2Q);V.cX.1k.2F=a+"px";V.iw.1k.1I=a+"px"},HE:1b(){Z d=V;Z c=V.aq=2n.2K("2o");c.2q("4b","YN");Z a=V.iw=2n.2K("2o");a.2q("4b","YM");Z b=V.cX=2n.2K("2o");b.2q("4b","YL");c.2r(a);c.2r(b);V.HD(V.g2);V.HB(V.g1);V.HC();1a.3f.4s(b,"86",V.86);1a.3f.4s(c,"4k",1b(){if(d.dK){d.iv.1x(d,1G);d.kh.4q(d,d.1l)}})},HD:1b(a){V.g2=a;V.aq.1k.1I=a+"px"},HC:1b(){V.iw.1k.1I=V.cX.YK},HB:1b(a){V.g1=a;V.cX.1k.1I=a+"px"},sT:1b(a){if(a){a=V.cf=1a.1t.YJ(a);a.2r(V.aq)}},HA:1b(a){if(V.dK){a=a||2u.7k;1a.cd.6J(V.cX,"eO");1a.3f.4s(2n,"7g",V.iv);1a.3f.4s(2n,"9m",V.h5)}},Hz:1b(c){c=c||2u.7k;Z d=V.Hv(V.aq).2F;Z a=V.g2-V.g1-2;Z b=c.gW-d-9;b=b<0?0:b;b=b>a?a:b;b=V.Hx(b);V.cX.1k.2F=b+"px";V.iw.1k.1I=b+"px";c.jM();c.jL();V.vP(V.1l)},Hy:1b(a){1a.cd.al(V.cX,"eO");1a.3f.o4(2n,"7g",V.iv);1a.3f.o4(2n,"9m",V.h5);V.kh(V.1l)},Hx:1b(c){Z g=V.2L-V.2Q;if(g<0){1c 0}Z b=V.dn;b=b>g?g:b;b=b<0?0:b;Z f=V.g2-V.g1;Z e=(V.2L-V.2Q)/b;Z d=f/e;Z a=1q.39(c/d);V.1l=1a.dj.Hw(a*b+V.2Q,10);1c a*d},Hv:1b(b){Z a=0,c=0;4n(b!==1d){a+=b.mG;c+=b.jo;b=b.sP}1c{2F:a,2m:c}},1T:"1a.2B.kg"});1a.1A=1a.1U({7S:1d,pD:1d,l8:1d,vD:"",pC:1d,1B:1b(a){if(1P a==="3t"){V.vD=a;V.7S={cH:[],g0:[],3W:1b(b){V.g0.1r(b)}};V.pD=V.Hu(V.7S);V.pE(a);V.pC=V.Hm()}},Hu:1b(r){Z e,n,m,t,s,f,g,l,a;Z c=V;Z k=1b(){};1b q(){t=g[m];s=n;l=n}1b p(){g[m]=t;n=s;l=n}1b d(){if(n>l){g[m]=g[m].4a(n-l);l=n}}1b b(A){Z v,x,i,y,w,u,j;if(A 2a 3g){1c A.4q(a.vM)}1f{if(1P(A)==="3t"){v=e.6g(n)===A?A:1d;i=1;d()}1f{d();v=A.dS(g[m]);if(v){i=v[0].1g}1f{1c 1d}}}if(v){Z z=n+=i;u=n+g[m].1g-i;4n(n<u){y=e.vL(n);if(!(y===32||y===10||y===9)){1H}n++}g[m]=g[m].4a(i+(n-z));l=n;if(g[m].1g===0&&m<g.1g-1){m++}if(1P(v)==="3t"){1c v}1f{1c v.1g===1?v[0]:v}}}1b h(i){if(1P(i)==="3t"){1c e.6g(n)===i}1f{1c!!i.jP(g[m])}}1b o(u){Z i;Z j={2j:f,36:r.36,3S:"Ht 3W.",1Z:0,vO:-1};if(j){1i(Z w in j){if(u[w]===YI 0){u[w]=j[w]}}}if(u.36&&c.7S.iu&&c.7S.iu[u.36]){i=c.7S.iu[u.36]}1f{i=e}u.1Z=(i.4a(0,u.2j).3B(/\\n/g)||"").1g+1;1i(Z v=u.2j;v>=0&&i.6g(v)!=="\\n";v--){u.vO++}1c 1n d8([u.36,u.1Z,u.vO,u.3S].44(";"))}V.7S=r=r||{};V.7S.36=V.7S.36||1d;V.7S.iu=V.7S.iu||{};a={pE:1b(z){Z A,j,u,w,C,D,B=[],y,x=1d;n=m=l=f=0;g=[];e=z.3h(/\\r\\n/g,"\\n");if(r.36){c.7S.iu[r.36]=e}Z v=1m;g=(1b(J){Z G=0,P=/(?:@\\{[\\w-]+\\}|[^"\'`\\{\\}\\/\\(\\)\\\\])+/g,K=/\\/\\*(?:[^*]|\\*+[^\\/*])*\\*+\\/|\\/\\/.*/g,L=/"((?:[^"\\\\\\r\\n]|\\\\.)*)"|\'((?:[^\'\\\\\\r\\n]|\\\\.)*)\'|`((?:[^`]|\\\\.)*)`/g,E=0,I,O=J[0],M;1i(Z H=0,N,F;H<e.1g;){P.vN=H;if(I=P.dS(e)){if(I.2j===H){H+=I[0].1g;O.1r(I[0])}}N=e.6g(H);K.vN=L.vN=H;if(I=L.dS(e)){if(I.2j===H){H+=I[0].1g;O.1r(I[0]);3o}}if(!M&&N==="/"){F=e.6g(H+1);if(F==="/"||F==="*"){if(I=K.dS(e)){if(I.2j===H){H+=I[0].1g;O.1r(I[0]);3o}}}}4h(N){1E"{":if(!M){E++;O.1r(N);1H}1E"}":if(!M){E--;O.1r(N);J[++G]=O=[];1H}1E"(":if(!M){M=1j;O.1r(N);1H}1E")":if(M){M=1m;O.1r(N);1H}1o:O.1r(N);1H}H++}if(E!==0){x={2j:H-1,1p:"Ht",3S:(E>0)?"Hs vJ `}`":"Hs YH `{`"}}1c J.1v(1b(Q){1c Q.44("")})})([[]]);if(x){8y o(x)}Z i=1b(G,E){Z F=G.fB;Z H=E.fB;if(F[0]!=H[0]){1c H[0]-F[0]}if(F[1]!=H[1]){1c H[1]-F[1]}if(F[2]!=H[2]){1c H[2]-F[2]}1c H[3]-F[3]};A=1n 1a.1A.1D.e5([],b(V.vM.vH));A.4o=1j;A.Hl=(1b(){1c 1b(F){F.3W=1b(G){if(!F.g0){F.g0=1n d8("")}if(F.g0.3S){F.g0.3S+="\\n"+o(G).3S}1f{F.g0.3S=o(G).3S}};F.cH=F.cH||[];Z E=V.ue([],[],F);E.6n(i);1c E}})();1c A},vM:{vH:1b(){Z j,i=[];4n((j=b(V.e7)||b(V.ui)||b(V.lc))||b(/^[\\s\\n]+/)||(j=b(V.oY))){if(j){i.1r(j)}}1c i},oY:1b(){Z i=b(/^[^;\\n]*[;\\n]/);if(i){1c 1n 1a.1A.1D.e4(i,s)}},lc:1b(){Z i;if(e.6g(n)!=="/"){1c}if(e.6g(n+1)==="/"){1c 1n 1a.1A.1D.uz(b(/^\\/\\/.*/),1j)}1f{if(i=b(/^\\/\\*(?:[^*]|\\*+[^\\/*])*\\*+\\/\\n?/)){1c 1n 1a.1A.1D.uz(i)}}},4L:{ld:1b(){if(e.6g(n)!==\'"\'&&e.6g(n)!=="\'"){1c}Z i=b(/^"((?:[^"\\\\\\r\\n]|\\\\.)*)"|\'((?:[^\'\\\\\\r\\n]|\\\\.)*)\'/);if(i){1c 1n 1a.1A.1D.e8(i[1]||i[2])}},cI:1b(){Z i="[",u="]";if(!b(i)){1c}Z j=b(/(^[^\\]]+)/);if(!b(u)){1c}if(j){1c 1n 1a.1A.1D.i7(j[1])}},vI:1b(){Z i=b(/^=~|=|!=|<=|>=|<|>/);if(i){1c i}},9K:1b(){Z i=b(/^[A-Za-z\\vK-\\Hp-]+[A-Za-z-0-9\\vK-\\YG]*/);if(i){1c 1n 1a.1A.1D.EK(i)}},4q:1b(){Z u,j;if(!(u=/^([\\w\\-]+|%)\\(/.dS(g[m]))){1c}u=u[1];if(u==="2S"){1c 1d}1f{n+=u.1g}Z i="(",v=")";b(i);j=b(V.4L["1G"]);if(!b(v)){1c}if(u){1c 1n 1a.1A.1D.EZ(u,j,n)}},"1G":1b(){Z j=[],i;4n(i=b(V.7P)){j.1r(i);Z u=",";if(!b(u)){1H}}1c j},pv:1b(){1c b(V.4L.pG)||b(V.4L.Hq)||b(V.4L.Hr)||b(V.4L.ld)},2S:1b(){Z j;if(e.6g(n)!=="u"||!b(/^2S\\(/)){1c}j=b(V.4L.ld)||b(V.4L.7r)||b(/^[\\-\\w%@$\\/.&=:;#+?~]+/)||"";Z i=")";if(!b(i)){1c 1n 1a.1A.1D.e4(j,s,"Ho vJ ) in oP.")}1f{1c 1n 1a.1A.1D.oP((1P j.1l!=="1z"||j 2a 1a.1A.1D.uc)?j:1n 1a.1A.1D.e8(j))}},7r:1b(){Z j,i=n;if(e.6g(n)==="@"&&(j=b(/^@[\\w-]+/))){1c 1n 1a.1A.1D.uc(j,i,r.36)}},Hr:1b(){Z i;if(e.6g(n)==="#"&&(i=b(/^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})/))){1c 1n 1a.1A.1D.7I(i[1])}},Hq:1b(){Z i=g[m].3B(/^[a-z]+/);if(i&&i[0]in 1a.1A.1D.52.2g.8p){1c 1n 1a.1A.1D.7I(1a.1A.1D.52.2g.8p[b(/^[a-z]+/)])}},pG:1b(){Z j=e.vL(n);if((j>57||j<45)||j===47){1c}Z i=b(/^(-?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?)(\\%|\\w+)?/);if(i){1c 1n 1a.1A.1D.aC(i[1],i[2],s)}}},7r:1b(){Z i;if(e.6g(n)==="@"&&(i=b(/^(@[\\w-]+)\\s*:/))){1c i[1]}},pF:1b(){1c b(V.4L.4q)||b(V.4L.pv)||b(V.4L.cI)||b(V.4L.7r)||b(V.4L.2S)||b(V.4L.9K)},4E:1b(){Z i=";";1c b(i)||h("}")},ag:1b(){Z i=b(/^(?:[.#][\\w\\vK-\\Hp\\-]+|\\*|8q)/);if(i){1c 1n 1a.1A.1D.cd(i)}},4D:1b(){Z i=b(/^::([\\w\\-]+(?:\\/[\\w\\-]+)*)/);if(i){1c i[1]}},56:1b(){Z E,w,y,i=[],x,j=1n 1a.1A.1D.kM(),C,A=[],v=0,D=0;4n((y=b(V.ag))||(C=b(V.33))||(x=b(V.4K))||(E=b(V.4D))){v++;if(y){i.1r(y)}1f{if(C){A.1r(C);D++}1f{if(x){Z u=j.5y(x);if(u){8y o({3S:u,2j:n-1})}D++}1f{if(w){8y o({3S:"YF YE 4D 2h.",2j:n-1})}1f{w=E}}}}Z B=e.6g(n);if(B==="{"||B==="}"||B===";"||B===","){1H}}if(v){1c 1n 1a.1A.1D.oQ(j,A,i,w,D,s)}},4K:1b(){q();Z j,w,v,i="[",u="]";if(!b(i)){1c}if(j=b(/^[a-zA-Z0-9\\-3z]+/)||b(V.4L.ld)||b(V.4L.7r)||b(V.4L.9K)||b(V.4L.cI)){if(j 2a 1a.1A.1D.e8){j=1n 1a.1A.1D.i7(j.2c())}if((w=b(V.4L.vI))&&(v=b(V.4L.ld)||b(V.4L.7r)||b(V.4L.pG)||b(V.4L.9K)||b(V.4L.cI))){if(!b(u)){8y o({3S:"Ho vJ ] of 4K.",2j:s-1})}if(!j.is){j=1n 1a.1A.1D.i7(j)}1c 1n 1a.1A.1D.oZ(j,w,v,s,r.36)}}},33:1b(){q();Z u,j,i="]";if(b(/^\\[\\s*33/g)&&(u=b(V.4L.vI))&&(j=b(V.4L.7r)||b(V.4L.pG))&&b(i)){1c 1n 1a.1A.1D.6f(u,j,s)}1f{p()}},hM:1b(){Z u,i="{",j="}";if(b(i)&&(u=b(V.vH))&&b(j)){1c u}},ui:1b(){Z u=[],v,y,i,z,w=[],x=",";q();4n(v=b(V.56)){u.1r(v);4n(b(V.lc)){}if(!b(x)){1H}4n(b(V.lc)){}}if(v){4n(b(V.lc)){}}if(u.1g>0&&(z=b(V.hM))){if(u.1g===1&&u[0].5q.1g&&u[0].5q[0].1l==="8q"){Z j=1n 1a.1A.1D.e5(u,z);j.YD=1j;1c j}1c 1n 1a.1A.1D.e5(u,z)}1f{p()}},e7:1b(){Z i,j,u=e.6g(n);q();if(u==="."||u==="#"){1c}if(i=b(V.7r)||b(V.7f)){j=b(V.1l);if(j&&b(V.4E)){1c 1n 1a.1A.1D.bs(i,j,s,r.36)}1f{f=n;p()}}},81:1b(){Z v=[],x=[],u,i,w,j=",";4n(w=b(V.pF)){x.1r(w)}v.1r(1n 1a.1A.1D.p0(x));if(b(j)){4n(w=b(V.7P)){v.1r(w);if(!b(j)){1H}}}1c 1n 1a.1A.1D.az(v)},1l:1b(){Z u,i=[],j=",";4n(u=b(V.7P)){i.1r(u);if(!b(j)){1H}}if(i.1g>1){1c 1n 1a.1A.1D.az(i.1v(1b(v){1c v.1l[0]}))}1f{if(i.1g===1){1c 1n 1a.1A.1D.az(i)}}},jI:1b(){Z u,i="(",j=")";if(b(i)&&(u=b(V.7P))&&b(j)){1c u}},vG:1b(){Z i,j,w,u,v="/";if(i=b(V.vF)){4n((w=(b(v)||b("*")||b("%")))&&(j=b(V.vF))){u=1n 1a.1A.1D.us(w,[u||i,j],s)}1c u||i}},vq:1b(){Z i,j,w,u,v="+";if(i=b(V.vG)){4n((w=b(/^[-+]\\s+/)||(e.6g(n-1)!=" "&&(b(v)||b("-"))))&&(j=b(V.vG))){u=1n 1a.1A.1D.us(w,[u||i,j],s)}1c u||i}},vF:1b(){1c b(V.jI)||b(V.pF)},7P:1b(){Z i,v,u=[],j;4n(i=b(V.vq)||b(V.pF)){u.1r(i)}if(u.1g>0){1c 1n 1a.1A.1D.p0(u)}},7f:1b(){Z i=b(/^(([a-z][-a-Hn-9]*\\/)?\\*?-?[-a-Hn-9]+)\\s*:/);if(i){1c i[1]}}}};1c a},pE:1b(b){Z c=V.pD;Z a=V.l8=c.pE(b);1c a},Hm:1b(){if(V.l8){Z w=V.l8;if(w){Z c=w.Hl(V.7S);c.7K();Z A={};Z p=[];1i(Z y=0,l=c.1g;y<l;++y){Z o=c[y];Z b=[];1i(Z x=0,h=o.5q.1g;x<h;x++){b.1r(o.5q[x])}Z m=o.1N.1N;Z q=[];1i(Z t in m){q.1r(m[t].id)}Z B=b.44("/")+"::"+o.4D+"3z"+q.44("3z");p.1r(B);Z a=A[B]=(A[B]||{});a.33=1a.1A.1D.6f.5T;Z e=o.e2(V.7S);1i(Z n in e){(a[n]=(a[n]||[])).1r(e[n].44("\\n"))}}Z z=[];Z s={};1i(Z y=0,l=c.1g;y<l;++y){Z o=c[y];Z u=o.4D;Z a=A[p[y]];Z f=[];if(!s[u]){Z x=0;1i(Z d in a){if(d!=="33"&&d!=="cH"&&d!=="4D"&&d!="5q"){if(d==="1w-2j"){Z r=3g("2Z","33","Z fz = 1d;"+a[d].44("\\n")+"; 1c fz; ");Z g=r();3U.lb(f,"bh",{la:1j,l9:1m,1l:g})}1f{f[x++]=1b(k,F){if(!4d.5u(k)){1c k}Z C=k.44("\\n");Z E=\'2Z["nt"]&&2Z["nt"]\';Z D=C.3k(E);if(D>=0){if(!F.o9){Z j=D+E.1g;Z G=C.3k(")",j+1);Z v="hz&&(hz"+C.k4(j,G)+")";Z i=3g("hz","if("+v+"){1c 1j;}1c 1m;");3U.lb(F,"o9",{la:1j,l9:1m,1l:i})}1c{7f:d,cr:3g("2Z","33","vE","Z fz = 1d; Z Hk=1P vE==\'1b\'?YC():vE;if(Hk){"+C+";} 1c fz; ")}}1f{1c{7f:d,cr:3g("2Z","33","Z fz = 1d;"+C+"; 1c fz; ")}}}(a[d],f)}}}3U.lb(f,"4D",{la:1j,l9:1m,1l:u});3U.lb(f,"5q",{la:1j,l9:1m,1l:o.5q});z.1r(f);s[p[y]]=1j}3U.lb(f,"33",{la:1j,l9:1m,1l:o.33})}1c z}}1c 1d},hZ:1b(){1c V.pC},1Q:1b(){V.vD=1d;V.7S=1d;V.l8=1d;V.pD=1d;V.pC=1d},1T:"1a.1A"});1a.uB={4Z:"2.1.1",1k:{"4K-uA":{1p:["5T","kO"],1C:"2l 1s pB ve of bs 1N l1 a vB. If \'5T\' is 3T fX 5T vC 59 l7 YB YA of 8U pr Yz 1N Yy. If \'kO\' is 3T fX it dE pB Yx vy 1s kO 3B (a fO 4K Yw) 3y no Yv vC in 1s vB 59 l7 (\'kO\' is nn 1s 1o 1i Hj Yu on 2m of fY to Yt Ys 6h Hj to fY l5)","1o-1l":"5T","1o-28":"Yr vC in a vB 59 l7 8U GT Yq 1N or 3n 3y 8U or 3n 1s 4K i5 Yp to 1j."},"3M-1N":{1F:"3M-1N","1o-1l":"3c","1o-28":"no 1N",1p:"3Z",3Z:[["pn-H8-pA",2],["H7",0],["pA",0],["jS",0],["H6",0],["H5-H4",0],["x-pz",0],["y-pz",0],["4j",0],["H3",0]],1C:"A H2 of 3M 1N."},"4r-op":{1F:"4r-op","1o-1l":"2i-2G","1o-28":"5y 1s 6N 1w on 2m of 58 5R",1C:"aF 9L. 5z aE 8r V 1w 7s aD 4I to 5R 3E or 9M it.",1p:["3b","2i","2x","2i-2G","2x-2G","2i-in","2x-in","2i-3u","2x-3u","2i-3E","2x-3E","8l","8N","9H","7q","8i","9G","8T","8k","1X-9F","1X-9E","9D-5h","9C-5h","8S","9B","9A","4j","4j-3X","5g-6s","5g-9z","8R","8Q","1X","1l"]},2s:{1F:"2s",1p:"2U",1C:"An 6H 1l 1i 1s 1k (9q dE an 6H cW to 5T 1M in py aH 3y fX H1 rc to H0 aH)","1o-1l":1,"1o-28":"no py aH 2p be 3T 3y no 6H 2p be cW to 1s 1k vy 4g"}},1w:{2h:{"1o-1l":"",1p:"3t",bu:1j,"1o-28":"No 1w 2h Yo Yn vs",1C:"3a 2h of a 1w. kL be Ym jZ eh 3y is 3n Yl Yk, hu Yj Yi  in 1s 1v"},fZ:{"1o-1l":"",1p:"3t","1o-28":"No fZ 1l is vs 3y 1s 1l 2p be Yh 6h 1s 8q\'s fZ",1C:"3a vw ps vx 8t 1i 1s 1w, FI 1s 6c. kL p9 be a pu pv 3t kS \'+GZ=GY +GX=pw +GW=pw +GV\' or, if 1s Yg pu Hi/Yf/Ye Yd vt 59 Yc, a 3t 5V Gd an id kS: \'+qz=Hi:GU\'"},f5:{"1o-1l":1j,1p:"5i","1o-28":"5z 1w 2p be Yb as 8m 3y p1 1i pB",1C:"A 7f 5V bv be c8 to 1m to bz V 1w 6h Ya l7"},vA:{"1o-1l":"0",1p:"2U","1o-28":"3a 1w 2p be b2 at 1s bB Hh 2t",1C:"3a bB 2t Hg 5V V 1w 2p be b2 at. A 1w\'s ce is Hc by 8U fL f5 is 1j 3y if 1s 8q 2t >= vA - 1e-6 3y 2t < vz + 1e-6"},vz:{"1o-1l":"1.He+Hd",1p:"2U","1o-28":"3a 1w 2p be b2 at 1s ij Hh 2t",1C:"3a ij 2t Hg 5V V 1w 2p be b2 at. 3a 1o is 1s i8 pm of 1s C++ Hf 1p, 9q bA Y9 vn by vx, hu is Y8 a Y7 3s kS 1.He+Hd 3y Y6 5V V 1w 2p FX be b2 Ha 1s 1l is G3. A 1w\'s ce is Hc by 8U fL f5 is 1j 3y if 1s 8q 2t >= vA - 1e-6 3y 2t < vz + 1e-6"},Y5:{"1o-1l":1m,1p:"5i","1o-28":"3a 1w 2p 3n be p1 1i 1s Y4 H9 of 2g e9",1C:"5z 7f uj uv 1i Y3/Hb GH 3y is Y2 3T. It is uW by 1o 28 5V in a Hb 3L 1s 1w 2p 3n be Y1 to be Y0 Ha 1s 7f is XZ c8 to 1j"},"3b-4R-7z":{"1o-1l":1m,1p:"5i","1o-28":"3a 2f\'s ph pg 7z (3T 1i XY XX cO 3y ej aG) 2p 3n be XW XV 78 pB V 1w",1C:"5z 7f, by 1o uW, bv be Gr to 7Q a ds to 3b 1s ph pg 7z 78 a e6 1w is l7. 5z bA be XU to vf 5V a e6 5R 2g Gn up on 1s 1v XT if it XS XR 3n XQ of XP 8d XO l0 cO or aG"},"gQ-by":{"1o-1l":"",1p:"3t","1o-28":"No Gl 1w XN 2p be 3T jE 4g",1C:"vk://vj.vi/iq/iq/XM/XL-4g"},"aH-5M":{"1o-1l":"0",1p:"2U","1o-28":"No aH 2p be 3T",1C:"GQ fQ ek 1s 1J ci (in 5U) 3T to dw H9 3y (XK) vv 1s 1w 2g jE 4g"},"ij-ci":{"1o-1l":"3c",1p:"pj","1o-28":"No vv ci 2p be 3T",1C:"An ci to be 3T to pm 1s 3Q 3T to GP V jb 1w 2g jE 4g. GO be GN, GM, GL, GK in 1s GJ of 1s 1J."}},3R:{"*":{"3M-1N":{1F:"3M-1N","1o-1l":"3c","1o-28":"no 1N",1p:"3Z",3Z:[["pn-H8-pA",2],["H7",0],["pA",0],["jS",0],["H6",0],["H5-H4",0],["x-pz",0],["y-pz",0],["4j",0],["H3",0]],1C:"A H2 of 3M 1N."},"4r-op":{1F:"4r-op","1o-1l":"2i-2G","1o-28":"5y 1s 6N 1w on 2m of 58 5R",1C:"aF 9L. 5z aE 8r V 1w 7s aD 4I to 5R 3E or 9M it.",1p:["3b","2i","2x","2i-2G","2x-2G","2i-in","2x-in","2i-3u","2x-3u","2i-3E","2x-3E","8l","8N","9H","7q","8i","9G","8T","8k","1X-9F","1X-9E","9D-5h","9C-5h","8S","9B","9A","4j","4j-3X","5g-6s","5g-9z","8R","8Q","1X","1l"]},2s:{1F:"2s",1p:"2U",1C:"An 6H 1l 1i 1s 1k (9q dE an 6H cW to 5T 1M in py aH 3y fX H1 rc to H0 aH)","1o-1l":1,"1o-28":"no py aH 2p be 3T 3y no 6H 2p be cW to 1s 1k vy 4g"}},1v:{"l6-1X":{1F:"l6-1X","1o-1l":"3c","1o-28":"i4",1p:"1X",1C:"8q qj 1X"},"l6-3M":{1F:"l6-3M",1p:"cJ","1o-1l":"","1o-28":"i4",1C:"An 3M 5V is il 9M 5T 1M on a 1v as a l6.",nW:"8q qj 3M"},fZ:{1F:"fZ",1p:"3t","1o-1l":"+GZ=GY +GX=pw +GW=pw +GV","1o-28":"3a pu pv of tF:GU is GS to be 1s 8q\'s vw ps 3y 5T 2g 6h 5R l1 V 1v 2p be XJ ei V GR vx. If pr 5R do 3n XI an fZ 1l fX GT 2p be GS to be in 1s l2 fZ as 1s 8q 3y 3n XH 2p be GG to XG XF in 1s 8q\'s GR v4",1C:"8q vw ps (pu 3t)"},"aH-5M":{1F:"aH-5M","1o-1l":"0",1p:"2U","1o-28":"No aH 2p be 3T",1C:\'GQ fQ ek 1s 1v (in 5U) 3T to vf cO XE 6K XD 59 XC l0 in cU 6K (e.g. XB in cU 6K). XA Xz to be 3T in vm 8d "76-cR".\'},"ij-ci":{1F:"","1o-1l":"3c",1p:"pj","1o-28":"No vv ci 2p be 3T",1C:"An ci to be 3T to pm 1s 3Q 3T to GP 5T 5R jE 4g. GO be GN, GM, GL, GK in 1s GJ of 1s 8q."},vu:{1F:"vu","1o-1l":"","1o-28":"5z vu fb vl to an Xy 3t 28 5V pr 4I e3 to vt Xx in ED or 5R 2p be vr 4I to 1s Xw Xv.",1p:"3t",1C:"Xu 4I e3 3T to ps vt 2p be Xt as 4I to V ir fb if 1s 1v is ow 6h an in Xs 7J Ge 7R 6h 1s GI. If 1s 1v is ow 6h 1s GI 3y V Cu is 3n vs it 2p be c8 to 1s ir of 1s GF."},"e3-6h-Xr":{1F:"","1o-1l":1j,"1o-28":"Xq hN 6h l5 2p be vr 6h 1s 5F of 1s l5",1p:"5i",1C:"1l to fU 8U e3 in 1s l5 2p be vr 6h 1s 5F of 1s l5 or 6h 1s Xp ir of 1s Xo 5V Xn Xm()"},"bB-4Z":{1F:"","1o-1l":"3c","1o-28":"fY 4Z 2p 3n be Xl 3y no 3W 2p be Xk Xj GH",1p:"3t",1C:"3a Xi fY 4Z (e.g. 0.7.2) GG to fF Xh Xg in 1s GF"},"81-ir":{1F:"81-ir",1p:"cJ","1o-1l":"3c","1o-28":"No 1v-jb fD 2p be vp",1C:"Xf to a ir 9q Xe fD 9q 7s be vp dw 1s 8q is ow (in vq to pr fD 5V bA be uQ vp)."}},3x:{26:{1F:"3x-26",1p:"1X","1o-1l":"4f(128,128,128,1)","1o-28":"jS 3y bE cS (6H = 1), l2 as 3X(128,128,128)",1C:"Xd 1X to Xc to a 3x"},"26-2s":{1F:"3x-2s",1p:"2U",1C:"3a 2s of 1s 3x","1o-1l":1,"1o-28":"cS"},7t:{1F:"3x-7t",1p:"2U","1o-1l":1,"1o-28":"bE v9",3P:"0-1",1C:"v8 of fW of 3x cR"},"7t-9w":{1F:"3x-7t-9w",1p:["pq","pp","3c","GE","7q"],"1o-1l":"pq","1o-28":"5K(x,7t) is 3T to GD vo 7t, 9q uu vn GC 1Z 3y 3x fW 7R 1s \'pp\' 9w, 4n 58 po 59 nn ea 3T to bz AA",1C:"An GB 1R jb 4g GA to fU 1s pk of fW. Gz 1s Gy in fY V 9w is 3T in vm 8d 1s \'7t\' 1l (9q vl to 1). 3a po 59 in 1s vg 5H at vk://vj.vi/iq/iq/Gx/Gw/Gv/pn/Gu/Gt.h"},7i:{1F:"3x-7i",1p:"5i","1o-1l":1j,"1o-28":"27 2p be 8s to 1v 3Q 78 4g",1C:"77 59 8s to 1v 3Q by 1o 1i fK 4g fJ. In ah fI fH bA eh to bz V to 76 4g eg."},2D:{1F:"3x-2D",1p:"2U","1o-1l":0,"1o-28":"no bF",3P:"0-1",1C:"kZ 3u 27 ip. 0 is no bF, 1 is bE kY. io kX 7R 1 2p kW kV, kU 77."},"27-2J":{1F:"3x-27-2J",1p:"3Z","1o-1l":"3c","1o-28":"27 2p 3n be kT",1C:"ik cT 3Z to be cW to 1s 27.",3Z:[["fT",6],["4V",2],["2t",2],["6F",3],["fS",1],["fR",1]]},"4r-op":{1F:"3x-4r-op","1o-1l":"2i-2G","1o-28":"5y 1s 6N 3F on 2m of 58 3F",1C:"aF 9L. 5z aE 8r V 3F 7s aD 4I to 3R 3E or 9M it.",1p:["3b","2i","2x","2i-2G","2x-2G","2i-in","2x-in","2i-3u","2x-3u","2i-3E","2x-3E","8l","8N","9H","7q","8i","9G","8T","8k","1X-9F","1X-9E","9D-5h","9C-5h","8S","9B","9A","4j","4j-3X","5g-6s","5g-9z","8R","8Q","1X","1l"]}},1Z:{2k:{1F:"1Z-1X","1o-1l":"4f(0,0,0,1)",1p:"1X","1o-28":"nf 3y bE cS (6H = 1), l2 as 3X(0,0,0)",1C:"3a 1X of a Xb 1Z"},"2k-1I":{1F:"1Z-1I","1o-1l":1,1p:"2U",1C:"3a 1I of a 1Z in 5U"},"2k-2s":{1F:"1Z-2s","1o-1l":1,1p:"2U","1o-28":"cS",1C:"3a 2s of a 1Z"},"2k-Xa":{1F:"1Z-44","1o-1l":"hD",1p:["hD","39","nL"],1C:"3a ve of el dw X9"},"2k-X8":{1F:"1Z-nI","1o-1l":"5C",1p:["5C","39","Cs"],1C:"3a 4H of 1Z X7"},"2k-7t":{1F:"1Z-7t",1p:"2U","1o-1l":1,"1o-28":"bE v9",3P:"0-1",1C:"v8 of fW of 2k 1Z"},"2k-7t-9w":{1F:"1Z-7t-9w",1p:["pq","pp","3c","GE","7q"],"1o-1l":"pq","1o-28":"5K(x,7t) is 3T to GD vo 7t, 9q uu vn GC 1Z 3y 3x fW 7R 1s \'pp\' 9w, 4n 58 po 59 nn ea 3T to bz AA",1C:"An GB 1R jb 4g GA to fU 1s pk of fW. Gz 1s Gy in fY V 9w is 3T in vm 8d 1s \'7t\' 1l (9q vl to 1). 3a po 59 in 1s vg 5H at vk://vj.vi/iq/iq/Gx/Gw/Gv/pn/Gu/Gt.h"},"2k-hB":{1F:"1Z-hB",1p:"oU",1C:"A X6 of 1g e9 [a,b], Fl (a) is 1s 8C 1g 3y (b) is 1s mh 1g X5. X4 7R EQ e9 59 cn 1i X3 X2 X1.","1o-1l":"3c","1o-28":"dl 1Z"},"2k-X0":{1F:"1Z-8C-5P",1p:"oU",1C:"uw kR hu 3n WZ 3T in Gs (ea WY 1i WX WW WV in fY 9q is 3n WU Gr)","1o-1l":"3c","1o-28":"dl 1Z"},"2k-hC":{1F:"1Z-hC",1p:"2U",1C:"3a pm on 1s ai of 1s hD 1g to 1s 2k-1I. WT to uQ 9p hD vh to nL vh 1i FA ip to 76 1s hD WS WR 1s WQ of 1s WP fb. WO 2p 3n WN to be c8, hu a G2 1l bv G7 WM 76 WL eg.","1o-1l":4,"1o-28":"WK 73-9p WJ to nL 1Z vh dw Gq is WI 7R 29 FB as Gb 1s im WH: \'WG / 2k-1I = 1 / 5w ( Gq / 2 )\'"},7i:{1F:"1Z-7i",1p:"5i","1o-1l":1j,"1o-28":"27 2p be 8s to 1v 3Q 78 4g",1C:"77 59 8s to 1v 3Q by 1o 1i fK 4g fJ. In ah fI fH bA eh to bz V to 76 4g eg."},2D:{1F:"1Z-2D",1p:"2U","1o-1l":0,"1o-28":"no bF",3P:"0-1",1C:"kZ 3u 27 ip. 0 is no bF, 1 is bE kY. io kX 7R 1 2p kW kV, kU 77."},5P:{1F:"1Z-5P",1p:"2U","1o-1l":0,"1o-28":"no 5P",1C:"WF a 1Z a 3s of 5U WE to fL Gh fb. WD e9 dv 1s 1Z 2F, WC e9 dv it 4y (4I to 1s WB of 1s 1Z)."},Gp:{1F:"1Z-Gp",1p:["Go","G6"],"1o-1l":"Go",1C:"WA an Wz vg 4g 9w 5V Wy ah G5 1i 7o."},"27-2J":{1F:"1Z-27-2J",1p:"3Z","1o-1l":"3c","1o-28":"27 2p 3n be kT",1C:"ik cT 3Z to be cW to 1s 27.",3Z:[["fT",6],["4V",2],["2t",2],["6F",3],["fS",1],["fR",1]]},"4r-op":{1F:"1Z-4r-op","1o-1l":"2i-2G","1o-28":"5y 1s 6N 3F on 2m of 58 3F",1C:"aF 9L. 5z aE 8r V 3F 7s aD 4I to 3R 3E or 9M it.",1p:["3b","2i","2x","2i-2G","2x-2G","2i-in","2x-in","2i-3u","2x-3u","2i-3E","2x-3E","8l","8N","9H","7q","8i","9G","8T","8k","1X-9F","1X-9E","9D-5h","9C-5h","8S","9B","9A","4j","4j-3X","5g-6s","5g-9z","8R","8Q","1X","1l"]}},aG:{5Q:{1F:"3G-5Q",1C:"An im 5Q 5V V 3G Gn at cU 4l. If no 5Q is e6, 1s 3G 2p fl an ho.","1o-1l":"","1o-28":"An ho or jX, if 1I k1 1L",1p:"cJ"},2s:{1F:"3G-2s",1C:"3a Wx 2s of 1s 3G, if c8, Ww 7T 1s 2s of 7T 1s 26 3y 2k","1o-1l":1,"1o-28":"3a 2k-2s 3y 26-2s 2p be 3T",1p:"2U"},"26-2s":{1F:"3G-26-2s",1C:"3a 26 2s of 1s 3G","1o-1l":1,"1o-28":"cS",1p:"2U"},2k:{1F:"3G-1Z-1X",1C:"3a 1X of 1s 2k ek a 3G Gm.","1o-1l":"nf",1p:"1X"},"2k-1I":{1F:"3G-1Z-1I",1C:"3a 1I of 1s 2k ek a 3G Gm, in 5U. 5z is Wv on 1s Wu, so Gg e9 bv Wt 1s Gi Ws.",1p:"2U"},"2k-2s":{1F:"3G-1Z-2s","1o-1l":1,"1o-28":"cS",1C:"3a 2s of a 1Z",1p:"2U"},4l:{1F:"3G-4l",1p:["3j","1Z","cN"],"1o-1l":"3j","1o-28":"Fs aG at 1s 5Z 3j (pf) of 1s 27",1C:"Wr to pb aG on a 3j, in 1s 5Z of a 3x, or if aG-4l:1Z, fX pl Gc bC a 1Z. \'cN\' 4l bv be 3T to vf 5V b0 fP on vb 59 Wq to be jc 1s 3x cN"},"vd-l4":{1F:"3G-vd-l4",1p:["cU","kp","vc"],"1o-1l":"cU","1o-28":"If a 6v dI pl 77 3y 1s 4l 1p is p9 3j or cN fX a 3G 2p be l0 1i cU",1C:"A Gl 8x to 7Q 1s ds to fU 4g ve 1i \'vd-77\' (dw a 6v dI pl 77). 5z 8x Wp 3n 1x to aG fP bC el. 3a \'cU\' l4 is 1o 3y dE 5T 77 2p gO a 3G. 3a \'kp\' l4 dE 5V 1s Wo pf 9J 5T 77 2p be 3T. 3a \'vc\' l4 dE 5V ea 1s vc (by Wn l3 Wm) 6v 2p gO a l0 3G (V is 8r 1K uZ Wl by 1o)."},"3G-1p":{1F:"3G-1p",1p:["Gk","ho"],"1o-1l":"ho",1C:"3a 1o 3G-1p. If a im 5Q is 3n e6 as 1s 3G-5Q kR, 1s 2f Wk p9 an Gk or an ho (a jX if 1L is Wj to 1I)"},1I:{1F:"3G-1I","1o-1l":10,1C:"3a 1I of 1s 3G, if ei f0 of 1s 1o Gj.",1p:"7P"},1L:{1F:"3G-1L","1o-1l":10,1C:"3a 1L of 1s 3G, if ei f0 of 1s 1o Gj.",1p:"7P"},26:{1F:"3G-26","1o-1l":"7n",1C:"3a 1X of 1s Gi of 1s 3G.",1p:"1X"},"7Q-9N":{1F:"3G-7Q-9N",1p:"5i","1o-1l":1m,1C:"2l 8U ej aG 59 fN or dt.","1o-28":"Do 3n 7Q Wi to 9N 8d cU 58 - ej aG 2p 3n be fN."},"bY-4l":{1F:"3G-bY-4l",1p:"5i","1o-1l":1m,"1o-28":"do 3n G0 1s pj of V 27 in 1s ph pg 7z",1C:"1l to fU 8U 1s 4l of 1s 6v 2p FZ 1s 4l of 58 1M"},5W:{1F:"3G-5W",1C:"Wh 9J il cO","1o-1l":100,1p:"2U"},"2L-3W":{1F:"3G-2L-3W",1p:"2U","1o-1l":0.2,1C:"3a ij 8S 9J Gh 3G 4l 3y 1s 3G-5W kR. Wg a Gg 1l bv 7Q 1s 2f to 6k to Wf 4l We 8d 58 3R."},2J:{1F:"3G-2J",1p:"3Z",3Z:[["fT",6],["4V",2],["2t",2],["6F",3],["fS",1],["fR",1]],"1o-1l":"","1o-28":"No cT",1C:"im cT 8t"},7i:{1F:"3G-7i",1p:"5i","1o-1l":1j,"1o-28":"27 2p be 8s to 1v 3Q 78 4g",1C:"77 59 8s to 1v 3Q by 1o 1i fK 4g fJ. In ah fI fH bA eh to bz V to 76 4g eg."},2D:{1F:"3G-2D",1p:"2U","1o-1l":0,"1o-28":"no bF",3P:"0-1",1C:"kZ 3u 27 ip. 0 is no bF, 1 is bE kY. io kX 7R 1 2p kW kV, kU 77."},"27-2J":{1F:"3G-27-2J",1p:"3Z","1o-1l":"3c","1o-28":"27 2p 3n be kT",1C:"ik cT 3Z to be cW to 1s 27.",3Z:[["fT",6],["4V",2],["2t",2],["6F",3],["fS",1],["fR",1]]},"4r-op":{1F:"3G-4r-op","1o-1l":"2i-2G","1o-28":"5y 1s 6N 3F on 2m of 58 3F",1C:"aF 9L. 5z aE 8r V 3F 7s aD 4I to 3R 3E or 9M it.",1p:["3b","2i","2x","2i-2G","2x-2G","2i-in","2x-in","2i-3u","2x-3u","2i-3E","2x-3E","8l","8N","9H","7q","8i","9G","8T","8k","1X-9F","1X-9E","9D-5h","9C-5h","8S","9B","9A","4j","4j-3X","5g-6s","5g-9z","8R","8Q","1X","1l"]}},2M:{2h:{1F:"2M-2h",1p:"7P",i9:"uy",1C:\'az to fF 1i a 2M"s 1K 4R. FW FV 59 FU ei FT kS [FS]\'},5Q:{1F:"2M-5Q",bu:1j,1p:"cJ","1o-1l":"3c",1C:"6R 5Q to aP Wd 1s 2M 1K"},"fk-2h":{1F:"2M-fk-2h",1p:"3t",fC:"81",1C:"ut 2h 3y 1k to fF 1i 1s 2M 1K","1o-1l":"",bu:1j},"Gf-3M":{1F:"2M-Gf-3M",1p:"5i",1C:"5z kR 7s be c8 to 1j if jZ 59 Cn to 2H 1K Wc Ge 7R on 2m of 1s 2M 3M","1o-1l":1m,"1o-28":"1K 5O 4I to 1s 2M 3M Gd 1s 5Z of 1s 3M as 1s Wb 1i 1K v0."},5M:{1F:"2M-5M",1p:"2U",1C:"3a 5M of 1s 2M 1K in 5U"},26:{1F:"2M-26",1p:"1X",1C:"3a 1X of 1s 2M 1K"},4l:{1F:"2M-4l",1p:["3j","1Z","uX","cN"],"1o-1l":"3j",1C:"FY V 2M 7s be fP. 2N 4l Ga to pb it on 2m of b0, 1Z v6 bC el pl Gc Gb 6v, uX v6 on 1s Wa of vb, 3y cN Ga to pb jc of vb."},"76-cR":{1F:"2M-76-cR",1C:"Fy v0 pa to 76 uZ pd Fx cR.",1p:"5i","1o-1l":1m},"7Q-9N":{1F:"2M-7Q-9N",1p:"5i","1o-1l":1m,1C:"2l 8U ej va 59 fN or dt.","1o-28":"Do 3n 7Q va to 9N 8d 58 1v 5q W9 fP."},"bB-af":{1F:"2M-2Q-af",1p:"2U","1o-1l":0,1C:"Fw af to 1s Fv 2M Eg, 3n W8 1s l2 2M."},5W:{1F:"2M-5W",1p:"2U","1o-1l":0,1C:"3a 5W 9J il W7 of 1s l2 2M on a 1Z"},"bB-cP":{1F:"2M-2Q-cP","1o-1l":0,1C:"Fu 1s bB cQ of cP 5V a 2M Ft 4I to 58 va",1p:"2U"},"6O-1I":{1F:"2M-6O-1I",1p:"bt","1o-1l":0,1C:"FQ of a fE of 1K in fM 78 v5 1K"},"6O-78":{1F:"2M-6O-78",1p:"5i","1o-1l":1m,1C:"FP 1K 78 6O-1I is FO. If 1m, FN el 2p be a FM uY 7R 6O-1I."},"6O-bD":{1F:"2M-6O-bD",1p:"3t","1o-1l":" ",1C:"FL V bD FK of a v4 to 6O FJ W6."},"5A-26":{1F:"2M-5A-26",1p:"1X","1o-1l":"#uP","1o-28":"ne",1C:"v2 1s 1X of 1s 5A ek 1s 1K."},"5A-5D":{1F:"2M-5A-5D",1C:"v1 1s 5D of 1s 5A in 5U","1o-1l":0,"1o-28":"no 5A",1p:"2U"},"bD-5W":{1F:"2M-bD-5W",1p:"bt","1o-1l":0,1C:"FH 5W 9J fM (in 5U). W5 FE 1i 3j 4l ea, 3n 1Z 4l."},"1Z-5W":{1F:"2M-1Z-5W",1C:"FG 5W 9J el of W4 cO (in 5U)",1p:"bt"},dx:{1F:"2M-1K-dx",1p:"2U",1C:"ii 1K l1 2M by ih cQ, in 5U, +/- bC 1s X ig.  A fO 1l 2p 89 1s 1K 4y","1o-1l":0},dy:{1F:"2M-1K-dy",1p:"2U",1C:"ii 1K l1 2M by ih cQ, in 5U, +/- bC 1s Y ig.  A fO 1l 2p 89 1s 1K eO","1o-1l":0},"2M-dx":{1F:"2M-dx",1p:"2U",1C:"ii 2M by ih cQ, in 5U, +/- bC 1s X ig.  A fO 1l 2p 89 1s 1K 4y","1o-1l":0},"2M-dy":{1F:"2M-dy",1p:"2U",1C:"ii 2M by ih cQ, in 5U, +/- bC 1s Y ig.  A fO 1l 2p 89 1s 1K eO","1o-1l":0},2s:{1F:"2M-2s",1p:"2U",1C:"(pe 1.0) - 2s of 1s 3M 3T 1i 1s 2M","1o-1l":1},"1K-2s":{1F:"2M-1K-2s",1p:"2U",1C:"(pe 1.0) - 2s of 1s 1K fP on 2m of 1s 2M","1o-1l":1},"dq-5O":{1F:"2M-dq-5O",1p:["2F","7Z","4y","73"],1C:"3a 2M\'s dq 5O 6h fL uT","1o-1l":"73"},"dp-5O":{1F:"2M-dp-5O",1p:["2m","7Z","4F","73"],1C:"3a 2M\'s dp 5O 6h fL uT","1o-1l":"7Z"},"1K-2J":{1F:"2M-1K-2J",1p:["3c","Fq","Fp","Fo"],1C:"Fn 1s 1E of 1s fM","1o-1l":"3c"},"uS-5O":{1F:"2M-uS-5O",1p:["2F","5Z","4y","73"],1C:"uR 8r 1K in a 2M\'s 4R is Fm","1o-1l":"73"},7i:{1F:"2M-7i",1p:"5i","1o-1l":1j,"1o-28":"27 2p be 8s to 1v 3Q 78 4g",1C:"77 59 8s to 1v 3Q by 1o 1i fK 4g fJ. In ah fI fH bA eh to bz V to 76 4g eg."},"4r-op":{1F:"2M-4r-op","1o-1l":"2i-2G","1o-28":"5y 1s 6N 3F on 2m of 58 3F",1C:"aF 9L. 5z aE 8r V 3F 7s aD 4I to 3R 3E or 9M it.",1p:["3b","2i","2x","2i-2G","2x-2G","2i-in","2x-in","2i-3u","2x-3u","2i-3E","2x-3E","8l","8N","9H","7q","8i","9G","8T","8k","1X-9F","1X-9E","9D-5h","9C-5h","8S","9B","9A","4j","4j-3X","5g-6s","5g-9z","8R","8Q","1X","1l"]}},"1Z-6x":{5Q:{1F:"1Z-6x-5Q",1p:"cJ","1o-1l":"3c",bu:1j,1C:"An 3M 5Q to be il 3y W3 bC a 1Z"},7i:{1F:"1Z-6x-7i",1p:"5i","1o-1l":1j,"1o-28":"27 2p be 8s to 1v 3Q 78 4g",1C:"77 59 8s to 1v 3Q by 1o 1i fK 4g fJ. In ah fI fH bA eh to bz V to 76 4g eg."},2D:{1F:"1Z-6x-2D",1p:"2U","1o-1l":0,"1o-28":"no bF",3P:"0-1",1C:"kZ 3u 27 ip. 0 is no bF, 1 is bE kY. io kX 7R 1 2p kW kV, kU 77."},"27-2J":{1F:"1Z-6x-27-2J",1p:"3Z","1o-1l":"3c","1o-28":"27 2p 3n be kT",1C:"ik cT 3Z to be cW to 1s 27.",3Z:[["fT",6],["4V",2],["2t",2],["6F",3],["fS",1],["fR",1]]},"4r-op":{1F:"1Z-6x-4r-op","1o-1l":"2i-2G","1o-28":"5y 1s 6N 3F on 2m of 58 3F",1C:"aF 9L. 5z aE 8r V 3F 7s aD 4I to 3R 3E or 9M it.",1p:["3b","2i","2x","2i-2G","2x-2G","2i-in","2x-in","2i-3u","2x-3u","2i-3E","2x-3E","8l","8N","9H","7q","8i","9G","8T","8k","1X-9F","1X-9E","9D-5h","9C-5h","8S","9B","9A","4j","4j-3X","5g-6s","5g-9z","8R","8Q","1X","1l"]}},"3x-6x":{5Q:{1F:"3x-6x-5Q",1p:"cJ","1o-1l":"3c",bu:1j,1C:"6R to fF as a il 6x 26 l1 a 3x"},5O:{1F:"3x-6x-5O",1p:["G9","W2"],"1o-1l":"G9",1C:"v1 8U to hA 6x W1 to 1s 1w or to 1s 1v."},7t:{1F:"3x-6x-7t",1p:"2U","1o-1l":1,"1o-28":"bE v9",3P:"0-1",1C:"v8 of fW of 3x 6x cR"},2s:{1F:"3x-6x-2s",1p:"2U",1C:"(pe 1.0) - W0 an 2s VZ to 1s 3M 3T 1i 1s 6x","1o-1l":1,"1o-28":"3a 3M is l0 VY VX"},7i:{1F:"3x-6x-7i",1p:"5i","1o-1l":1j,"1o-28":"27 2p be 8s to 1v 3Q 78 4g",1C:"77 59 8s to 1v 3Q by 1o 1i fK 4g fJ. In ah fI fH bA eh to bz V to 76 4g eg."},2D:{1F:"3x-6x-2D",1p:"2U","1o-1l":0,"1o-28":"no bF",3P:"0-1",1C:"kZ 3u 27 ip. 0 is no bF, 1 is bE kY. io kX 7R 1 2p kW kV, kU 77."},"27-2J":{1F:"3x-6x-27-2J",1p:"3Z","1o-1l":"3c","1o-28":"27 2p 3n be kT",1C:"ik cT 3Z to be cW to 1s 27.",3Z:[["fT",6],["4V",2],["2t",2],["6F",3],["fS",1],["fR",1]]},"4r-op":{1F:"3x-6x-4r-op","1o-1l":"2i-2G","1o-28":"5y 1s 6N 3F on 2m of 58 3F",1C:"aF 9L. 5z aE 8r V 3F 7s aD 4I to 3R 3E or 9M it.",1p:["3b","2i","2x","2i-2G","2x-2G","2i-in","2x-in","2i-3u","2x-3u","2i-3E","2x-3E","8l","8N","9H","7q","8i","9G","8T","8k","1X-9F","1X-9E","9D-5h","9C-5h","8S","9B","9A","4j","4j-3X","5g-6s","5g-9z","8R","8Q","1X","1l"]}},cV:{2s:{1F:"cV-2s","1o-1l":1,"1o-28":"cS",1p:"2U",1C:"3a 2s of 1s cV 3F on 2m of 58 3R."},"4K-G8":{1F:"cV-4K-G8","1o-1l":-1,"1o-28":"VW 1s VV to VU VT VS.",1p:"2U",1C:"5z is 3T by 1s VR or VQ VP to VO-VN VM ei VL. VK oU bv G7 VJ VI VH VG 3M VF, at 1s VE of 7o."},v7:{1F:"cV-v7",1p:["pd","G6","VD","VC","VB","VA","Vz","Vy","Vx","Vw","Vv","Vu","Vt","Vs","Vr","Vq","Vp","G4","Vo"],"1o-1l":"pd",1C:"3a v7 pa 3T to Vn Vm nE Vl of V cV 1w. Vk is a Vj Vi 9J 7o 3y G5, 4n G4 Vh 1s Vg pk."},"fV-5M":{1F:"cV-fV-5M","1o-1l":16,"1o-28":"Vf fV 2p be 1/16 of 1s nE of 1s 5H 3M",1p:"bt",1C:"A G3 nE fV is 3T 1i cV G1, 3y 1s FR 3M 5M is Ve by 1s fV-5M to Vd 1s pk of 5V fV. io 1i fV-5M G2 7R 1s 1o 2p hX in Vc G1 hu Vb Va to V9."},"4r-op":{1F:"cV-4r-op","1o-1l":"2i-2G","1o-28":"5y 1s 6N 3F on 2m of 58 3F",1C:"aF 9L. 5z aE 8r V 3F 7s aD 4I to 3R 3E or 9M it.",1p:["3b","2i","2x","2i-2G","2x-2G","2i-in","2x-in","2i-3u","2x-3u","2i-3E","2x-3E","8l","8N","9H","7q","8i","9G","8T","8k","1X-9F","1X-9E","9D-5h","9C-5h","8S","9B","9A","4j","4j-3X","5g-6s","5g-9z","8R","8Q","1X","1l"]}},3j:{5Q:{1F:"3j-5Q",1p:"cJ",bu:1m,"1o-1l":"3c",1C:"6R 5Q to V8 a 3j"},"7Q-9N":{1F:"3j-7Q-9N",1p:"5i","1o-1l":1m,1C:"2l 8U ej b0 59 fN or dt.","1o-28":"Do 3n 7Q b0 to 9N 8d cU 58 - ej aG 2p 3n be fN."},"bY-4l":{1F:"3j-bY-4l",1p:"5i","1o-1l":1m,"1o-28":"do 3n G0 1s pj of V 27 in 1s ph pg 7z",1C:"1l to fU 8U 1s 4l of 1s 6v 2p FZ 1s 4l of 58 1M"},2s:{1F:"3j-2s",1p:"2U","1o-1l":1,"1o-28":"Fz cS",1C:"A 1l 6h 0 to 1 to fU 1s 2s of 1s 3j"},4l:{1F:"3j-4l",1p:["pf","cN"],1C:"FY V 3j 7s be fP. V7 V6 1s V5 5Z of a 3x, 9q bv be V4 of it, 4n cN FX v6 jc of a 3x.","1o-1l":"pf"},2J:{1F:"3j-2J",1p:"3Z",3Z:[["fT",6],["4V",2],["2t",2],["6F",3],["fS",1],["fR",1]],"1o-1l":"","1o-28":"No cT",1C:"im cT 8t"},"4r-op":{1F:"3j-4r-op","1o-1l":"2i-2G","1o-28":"5y 1s 6N 3F on 2m of 58 3F",1C:"aF 9L. 5z aE 8r V 3F 7s aD 4I to 3R 3E or 9M it.",1p:["3b","2i","2x","2i-2G","2x-2G","2i-in","2x-in","2i-3u","2x-3u","2i-3E","2x-3E","8l","8N","9H","7q","8i","9G","8T","8k","1X-9F","1X-9E","9D-5h","9C-5h","8S","9B","9A","4j","4j-3X","5g-6s","5g-9z","8R","8Q","1X","1l"]}},1K:{2h:{1F:"1K-2h",1p:"7P",bu:1j,"1o-1l":"",i9:"uy",1C:"az to fF 1i a 1K 4R. FW FV 59 FU ei FT kS [FS]"},"fk-2h":{1F:"1K-fk-2h",1p:"3t",fC:"81",1C:"ut 2h 3y 1k to aP a 4R in",bu:1j},5M:{1F:"1K-5M",1p:"2U","1o-1l":10,1C:"V3 5M in 5U"},"1K-ai":{1F:"1K-ai",1C:"uR 1s cQ of 1K (of 1s FR) V2 on V1 el dw v5 V0","1o-1l":0,1p:"bt"},"6O-1I":{1F:"1K-6O-1I",1C:"FQ of a fE of 1K in fM 78 v5 1K","1o-1l":0,1p:"bt"},"6O-78":{1F:"1K-6O-78",1p:"5i","1o-1l":1m,1C:"FP 1K 78 6O-1I is FO. If 1m, FN el 2p be a FM uY 7R 6O-1I."},"6O-bD":{1F:"1K-6O-bD",1p:"3t","1o-1l":" ",1C:"FL V bD FK of a v4 to 6O FJ 1K."},5W:{1F:"1K-5W",1p:"bt",1C:"UZ 9J il 1K cO on a 1Z (FI. 4R-5W)"},"bD-5W":{1F:"1K-bD-5W",1p:"2U","1o-1l":0,1C:"FH 5W FF 9J fM in 5U"},"1Z-5W":{1F:"1K-1Z-5W","1o-1l":0,1p:"bt",1C:"FG 5W FF 9J el in 5U"},"4R-2H-fQ":{1F:"1K-4R-2H-fQ","1o-1l":0,1p:"bt",1C:"ik 1s 4R to be UY 6h fL UX 2H by a 3s of 5U (ea FE 8d 4l:1Z)"},"2L-FD-v3-FC":{1F:"1K-2L-FD-v3-FC",1p:"2U","1o-1l":"22.5",1C:"3a ij v3 b9, in FB, UW 9J UV fM in a 4R. 5z 1l UU is UT to US to 1s 1o is 22.5*EH.pi/62.0. 3a UR 1s 1l 1s UQ cO 2p be fP ek ek FA UP."},26:{1F:"1K-26",1C:"v2 1s 1X 1i 1s 1K","1o-1l":"#k3",1p:"1X"},2s:{1F:"1K-2s",1C:"A 3s 6h 0 to 1 UO 1s 2s 1i 1s 1K","1o-1l":1,"1o-28":"Fz cS",1p:"2U"},"5A-26":{1F:"1K-5A-26",1p:"1X","1o-1l":"#uP","1o-28":"ne",1C:"v2 1s 1X of 1s 5A ek 1s 1K."},"5A-5D":{1F:"1K-5A-5D",1C:"v1 1s 5D of 1s 5A in 5U","1o-1l":0,"1o-28":"no 5A",1p:"2U"},dx:{1F:"1K-dx",1p:"2U",1C:"ii 1K by ih cQ, in 5U, +/- bC 1s X ig.  A fO 1l 2p 89 1s 1K 4y","1o-1l":0},dy:{1F:"1K-dy",1p:"2U",1C:"ii 1K by ih cQ, in 5U, +/- bC 1s Y ig.  A fO 1l 2p 89 1s 1K eO","1o-1l":0},"dp-5O":{1F:"1K-dp-5O",1p:["2m","7Z","4F","73"],1C:"UN of 4R 4I to 3j 2H.","1o-1l":"73","1o-28":\'pe UM by 1l of dy; "4F" 1i dy>0, "2m" 1i dy<0.\'},"76-cR":{1F:"1K-76-cR",1C:"Fy v0 pa to 76 uZ pd Fx cR.","1o-1l":1m,1p:"5i"},"bB-af":{1F:"1K-2Q-af",1C:"Fw EW af to 1s Fv 1K 3F.",1p:"2U"},"bB-cP":{1F:"1K-2Q-cP",1C:"Fu 1s bB cQ of cP 5V a 1K 3F Ft 4I to 58 1K",1p:"2U"},"bB-fb-1g":{1F:"1K-2Q-fb-1g",1p:"2U","1o-1l":0,"1o-28":"pb cO on 5T e3",1C:"Fs cO ea on e3 uY 7R V 1l."},"7Q-9N":{1F:"1K-7Q-9N",1p:"5i","1o-1l":1m,1C:"2l 8U ej 1K is fN or dt.","1o-28":"Do 3n 7Q 1K to 9N 8d 58 1K - ej aG 2p 3n be fN."},Fr:{1F:"1K-Fr",1p:"7P",1C:"UL 1s 1K."},4l:{1F:"1K-4l",1p:["3j","1Z","uX","cN"],"1o-1l":"3j",1C:"2l 1s 1k of 4l of a 3j UK 1s 27 it is UJ to."},"4l-1p":{1F:"1K-4l-1p",1C:\'Re-2H 3y/or re-5M 1K to 76 UI. "uU" 1i UH pa (ei 1K-kQ 3t,) "uV" to UG V 6v uW.\',1p:["uV","uU"],"1o-1l":"uV"},kQ:{1F:"1K-kQ",1p:"3t","1o-1l":"",1C:\'If "4l-1p" is c8 to "uU", fF V "UF,[UE]" 3t. An UD is `1K-kQ: "E,NE,SE,W,NW,SW";` \'},"1K-2J":{1F:"1K-2J",1p:["3c","Fq","Fp","Fo"],1C:"Fn 1s 1E of 1s fM","1o-1l":"3c"},"dq-5O":{1F:"1K-dq-5O",1p:["2F","7Z","4y","73"],1C:"3a 1K\'s dq 5O 6h fL uT","1o-1l":"73"},"uS-5O":{1F:"1K-hA",1p:["2F","4y","5Z","73"],1C:"uR 8r 1K is Fm","1o-1l":"73","1o-28":"UC 5O dE 5V 1K 2p be UB by 1o UA dw ei 1s `4l-1p` kR - in 5V 1E p9 4y or 2F Uz 2p be 3T uQ Uy on Fl 1s 1K Ux be Uw e6 1s `1K-kQ` Uv"},7i:{1F:"1K-7i",1p:"5i","1o-1l":1j,"1o-28":"27 2p be 8s to 1v 3Q 78 4g",1C:"77 59 8s to 1v 3Q by 1o 1i fK 4g fJ. In ah fI fH bA eh to bz V to 76 4g eg."},"4r-op":{1F:"1K-4r-op","1o-1l":"2i-2G","1o-28":"5y 1s 6N 3F on 2m of 58 3F",1C:"aF 9L. 5z aE 8r V 3F 7s aD 4I to 3R 3E or 9M it.",1p:["3b","2i","2x","2i-2G","2x-2G","2i-in","2x-in","2i-3u","2x-3u","2i-3E","2x-3E","8l","8N","9H","7q","8i","9G","8T","8k","1X-9F","1X-9E","9D-5h","9C-5h","8S","9B","9A","4j","4j-3X","5g-6s","5g-9z","8R","8Q","1X","1l"]}},ic:{26:{1F:"ic-26","1o-1l":"#uP",1C:"3a 1X of 1s Uu Fk.",1p:"1X"},"26-2s":{1F:"ic-26-2s",1p:"2U",1C:"3a 2s of 1s ic as a kp, Ut 5T Fk.","1o-1l":1},1L:{1F:"ic-1L",1C:"3a 1L of 1s ic in 5U.",1p:"7P","1o-1l":"0"}}},8p:{Bv:[6t,p8,1V],Bu:[8o,uF,Fh],Bt:[0,1V,1V],Bs:[127,1V,Us],Br:[6t,1V,1V],Bq:[bw,bw,ef],Bp:[1V,uN,Fe],nf:[0,0,0],Bo:[1V,uF,cM],7n:[0,0,1V],Bm:[Ur,43,Uq],Bl:[uL,42,42],Bk:[p2,Fj,uH],Bj:[95,Up,p6],Bi:[127,1V,0],Bh:[p4,105,30],Bg:[1V,127,80],Bf:[100,Uo,Un],Be:[1V,p8,ef],Bd:[ef,20,60],sd:[0,1V,1V],Bb:[0,0,bx],Ba:[0,bx,bx],B9:[Fj,Um,11],B8:[ib,ib,ib],B5:[0,100,0],B7:[ib,ib,ib],B4:[Ul,Uk,107],B3:[bx,0,bx],B2:[85,107,47],B1:[1V,uE,0],B0:[uO,50,Fc],AZ:[bx,0,0],AY:[Uj,Fi,122],AX:[p7,F5,p7],AW:[72,61,bx],AV:[47,79,79],AT:[0,uG,Fd],AS:[Ui,0,ee],AR:[1V,20,uJ],AQ:[0,F4,1V],AP:[105,105,105],AO:[105,105,105],AM:[30,kP,1V],AL:[Fg,34,34],AK:[1V,8o,6t],AJ:[34,bx,34],AI:[1V,0,1V],AG:[ef,ef,ef],AF:[p8,p8,1V],AE:[1V,Fh,0],AD:[uI,uL,32],jS:[128,128,128],AC:[128,128,128],8c:[0,128,0],Az:[uM,1V,47],Ay:[6t,1V,6t],Ax:[1V,105,62],Aw:[cM,92,92],Av:[75,0,uC],Au:[1V,1V,6t],At:[6t,ed,uE],As:[ed,ed,8o],Ar:[1V,6t,bw],Aq:[124,Uh,0],Ap:[1V,8o,cM],Ao:[uM,uD,ed],Am:[6t,128,128],Al:[p3,1V,1V],Ak:[8o,8o,p4],Aj:[ee,ee,ee],Ag:[kP,ec,kP],Ai:[ee,ee,ee],Af:[1V,Ug,Uf],Ae:[1V,p6,122],Ad:[32,Fg,uK],Ac:[uH,uG,8o],Ab:[119,Ff,uO],Aa:[119,Ff,uO],A8:[F6,Fe,p2],A7:[1V,1V,p3],sc:[0,1V,0],A6:[50,cM,50],A5:[8o,6t,ed],A4:[1V,0,1V],A2:[128,0,0],A1:[102,cM,uK],A0:[0,0,cM],zZ:[Ue,85,ee],zY:[uJ,112,Fa],zX:[60,F3,113],zW:[123,104,ec],zV:[0,8o,F2],zU:[72,Fd,Fc],zT:[Ud,21,F9],zS:[25,25,112],zR:[bw,1V,8o],zQ:[1V,uN,kH],zP:[1V,uN,Uc],zO:[1V,p2,uM],zN:[0,0,128],zM:[Ub,bw,ed],zL:[128,128,0],zK:[107,Ua,35],zJ:[1V,uL,0],zI:[1V,69,0],zH:[uI,112,U9],zG:[ec,U8,uK],zF:[Fb,U7,Fb],zE:[U6,ec,ec],zD:[Fa,112,uJ],zC:[1V,U5,U4],zB:[1V,uI,U3],zz:[cM,F9,63],zy:[1V,p5,F8],zx:[F7,p6,F7],zw:[F6,p3,ed],zv:[128,0,128],7L:[1V,0,0],zu:[F5,p7,p7],zt:[65,105,kH],zs:[bx,69,19],zr:[8o,128,114],zq:[U2,U1,96],zp:[46,bx,87],zo:[1V,bw,ec],zn:[p6,82,45],zm:[p5,p5,p5],zl:[uH,uG,uF],zk:[106,90,cM],zj:[112,128,kP],zi:[112,128,kP],zg:[1V,8o,8o],zf:[0,1V,127],ze:[70,uC,62],zd:[p4,62,uE],zc:[0,128,128],zb:[uD,F4,uD],za:[1V,99,71],z9:[64,p3,U0],z8:[ec,uC,ec],z7:[bw,p2,F3],ne:[1V,1V,1V],z6:[bw,bw,bw],sb:[1V,1V,0],z5:[F2,cM,50],i4:[0,0,0,0]},4K:{1l:["1j","1m","1d","3j","TZ","3x","TY"]}};1a.1A.um={4Z:{EA:1a.uB,"2.1.1":1a.uB}};1a.1A.1D={};1a.1A.1D.3Z={3X:1b(d,c,a){1c V.4f(d,c,a,1)},4f:1b(i,h,c,d){Z f=V;Z e=[i,h,c].1v(1b(a){1c f.3s(a)});d=f.3s(d);if(e.ah(2Y)||2Y(d)){1c 1d}1c 1n 1a.1A.1D.7I(e,d)},8I:1b(c){Z a,b;if(1G.1g>1){a=1G[1]}if(1G.1g>2){b=1G[2]}1c{is:"oT",2y:c,1X:a,uA:b,2c:1b(d){1c\'\\n\\t<8I 1l="\'+c.ev(d)+\'"\'+(a?\' 1X="\'+a.ev(d)+\'" \':"")+(b?\' uA="\'+b.ev(d)+\'" \':"")+"/>"}}},nc:1b(c,b,a){1c V.jR(c,b,a,1)},jR:1b(i,g,c,b){i=(V.3s(i)%dC)/dC;g=V.3s(g);c=V.3s(c);b=V.3s(b);if([i,g,c,b].ah(2Y)){1c 1d}Z e=c<=0.5?c*(g+1):c+g-c*g,f=c*2-e;1c V.4f(d(i+1/3)*1V,d(i)*1V,d(i-1/3)*1V,b);1b d(a){a=a<0?a+1:(a>1?a-1:a);if(a*6<1){1c f+(e-f)*a*6}1f{if(a*2<1){1c e}1f{if(a*3<2){1c f+(e-f)*(2/3-a)*6}1f{1c f}}}}},8R:1b(a){if(!("4Q"in a)){1c 1d}1c 1n 1a.1A.1D.aC(1q.39(a.4Q().h))},8Q:1b(a){if(!("4Q"in a)){1c 1d}1c 1n 1a.1A.1D.aC(1q.39(a.4Q().s*100),"%")},TX:1b(a){if(!("4Q"in a)){1c 1d}1c 1n 1a.1A.1D.aC(1q.39(a.4Q().l*100),"%")},6H:1b(a){if(!("4Q"in a)){1c 1d}1c 1n 1a.1A.1D.aC(a.4Q().a)},TW:1b(b,c){if(!("4Q"in b)){1c 1d}Z a=b.4Q();a.s+=c.1l/100;a.s=V.fG(a.s);1c V.eb(a)},F1:1b(b,c){if(!("4Q"in b)){1c 1d}Z a=b.4Q();a.s-=c.1l/100;a.s=V.fG(a.s);1c V.eb(a)},8k:1b(b,c){if(!("4Q"in b)){1c 1d}Z a=b.4Q();a.l+=c.1l/100;a.l=V.fG(a.l);1c V.eb(a)},8T:1b(b,c){if(!("4Q"in b)){1c 1d}Z a=b.4Q();a.l-=c.1l/100;a.l=V.fG(a.l);1c V.eb(a)},TV:1b(b,c){if(!("4Q"in b)){1c 1d}Z a=b.4Q();a.a+=c.1l/100;a.a=V.fG(a.a);1c V.eb(a)},TU:1b(b,c){if(!("4Q"in b)){1c 1d}Z a=b.4Q();a.a-=c.1l/100;a.a=V.fG(a.a);1c V.eb(a)},TT:1b(c,d){if(!("4Q"in c)){1c 1d}Z b=c.4Q();Z a=(b.h+d.1l)%dC;b.h=a<0?dC+a:a;1c V.eb(b)},3h:1b(e,d,c){if(e.is==="cI"){1c e.2c+".3h("+d.2c()+", "+c.2c()+")"}1f{1c e.3h(d,c)}},qS:1b(k,j,e){Z b=e.1l/100;Z i=b*2-1;Z h=k.4Q().a-j.4Q().a;Z f=(((i*h==-1)?i:(i+h)/(1+i*h))+1)/2;Z d=1-f;Z g=[k.3X[0]*f+j.3X[0]*d,k.3X[1]*f+j.3X[1]*d,k.3X[2]*f+j.3X[2]*d];Z c=k.6H*b+j.6H*(1-b);1c 1n 1a.1A.1D.7I(g,c)},TS:1b(a){1c V.F1(a,1n 1a.1A.1D.aC(100))},"%":1b(c){Z a=4d.1u.4a.4q(1G,1),d=c.1l;1i(Z b=0;b<a.1g;b++){d=d.3h(/%s/,a[b].1l).3h(/%[da]/,a[b].2c())}d=d.3h(/%%/g,"%");1c 1n 1a.1A.1D.e8(d)},eb:1b(a){1c V.jR(a.h,a.s,a.l,a.a)},3s:1b(a){if(a 2a 1a.1A.1D.aC){1c 40(a.3m==="%"?a.1l/100:a.1l)}1f{if(1P(a)==="3s"){1c a}1f{1c TR}}},fG:1b(a){1c 1q.2Q(1,1q.2L(0,a))}};1a.1A.1D.EZ=1a.1U({is:"4q",1B:1b(c,b,a){V.2h=c;V.aB=b;V.2j=a},ev:1b(f){Z c=V.aB.1v(1b(i){1c i.ev(f)});1i(Z d=0;d<c.1g;d++){if(c[d].is==="1z"){1c{is:"1z",1l:"1z"}}}if(V.2h in 1a.1A.1D.3Z){if(1a.1A.1D.3Z[V.2h].1g<=c.1g){Z h=1a.1A.1D.3Z[V.2h].1x(1a.1A.1D.3Z,c);if(h===1d){f.3W({3S:"EY 1G e6 to "+V.2h+"()",2j:V.2j,1p:"e1",36:V.36});1c{is:"1z",1l:"1z"}}1c h}1f{f.3W({3S:"EY 3s of 1G 1i "+V.2h+"(). "+1a.1A.1D.3Z[V.2h].1g+" Ev.",2j:V.2j,1p:"e1",36:V.36});1c{is:"1z",1l:"1z"}}}1f{Z e=1a.1A.1D.52.uo[V.2h];if(e===1z){Z g=3z.TQ(1a.1A.1D.52.uo);Z b=V.2h;Z a=g.1v(1b(i){1c[i[0],1a.1A.1D.52.uk(b,i[0]),i[1]]}).6n(1b(j,i){1c j[1]-i[1]});f.3W({3S:"TP 1b "+V.2h+"(), TO jZ cK "+a[0][0]+"("+a[0][2]+")",2j:V.2j,1p:"e1",36:V.36});1c{is:"1z",1l:"1z"}}if(e!==c.1g&&e!==-1){f.3W({3S:"1b "+V.2h+"() TN "+e+" 1G 3y uj e6 "+c.1g,2j:V.2j,1p:"e1",36:V.36});1c{is:"1z",1l:"1z"}}1f{V.aB=c;1c V}}},2c:1b(a,b){if(V.aB.1g){1c V.2h+"("+V.aB.44(",")+")"}1f{1c V.2h}}});1a.1A.1D.7I=1a.1U({is:"1X",1B:1b(c,b){if(4d.5u(c)){V.3X=c.4a(0,3)}1f{if(c.1g==6){V.3X=c.3B(/.{2}/g).1v(1b(a){1c 2P(a,16)})}1f{V.3X=c.6q("").1v(1b(a){1c 2P(a+a,16)})}}if(1P(b)==="3s"){V.6H=b}1f{if(c.1g===4){V.6H=c[3]}1f{V.6H=1}}},ev:1b(){1c V},2c:1b(){1c"4f("+V.3X.1v(1b(a){1c 1q.39(a)}).5k(V.6H).44(", ")+")"},cL:1b(d,f,b){Z a=[];if(!(b 2a 1a.1A.1D.7I)){b=b.aY()}1i(Z e=0;e<3;e++){a[e]=1a.1A.1D.cL(f,V.3X[e],b.3X[e])}1c 1n 1a.1A.1D.7I(a)},4Q:1b(){Z c=V.3X[0]/1V,j=V.3X[1]/1V,m=V.3X[2]/1V,o=V.6H;Z n=1q.2L(c,j,m),f=1q.2Q(c,j,m);Z i,p,e=(n+f)/2,k=n-f;if(n===f){i=p=0}1f{p=e>0.5?k/(2-n-f):k/(n+f);4h(n){1E c:i=(j-m)/k+(j<m?6:0);1H;1E j:i=(m-c)/k+2;1H;1E m:i=(c-j)/k+4;1H}i/=6}1c{h:i*dC,s:p,l:e,a:o}}});1a.1A.1D.uz=1a.1U({1B:1b(b,a){V.1l=b;V.EX=!!a},2c:1b(a){1c"<!--"+V.1l+"-->"},ev:1b(){1c V}});1a.1A.1D.ud=1a.1U({1B:1b(a,c){V.5q=a.5q;V.4x=c;V.ia={};1i(Z b=0;b<V.4x.1g;b++){if("33"in V.4x[b]){V.4x[b]=V.4x[b].2A()}V.4x[b].33=a.33;V.ia[V.4x[b].Ez()]=1j}V.1N=a.1N;V.33=a.33;V.4D=a.4D||"u7";V.fB=a.fB()},2c:1b(){Z b=V.1N.2c();1i(Z a=0;a<V.4x.1g;a++){b+="\\n    "+V.4x[a]}1c b},e2:1b(b){Z e={};Z d=V.33;Z g=V.TM;Z a=V.1N.e2(b);Z c=[d];if(a){c.1r(a)}a=c.44(" && ");1b f(l){if(l 2a 1a.1A.1D.bs){e[l.2h]=e[l.2h]||[];if(a){e[l.2h].1r("if("+a+"){"+l.1l.e2(b)+"}")}1f{e[l.2h].1r(l.1l.e2(b))}}1f{if(l 2a 1a.1A.1D.e5){Z k=l.e2(b);1i(Z j in k){e[j]=e[j]||[];1i(Z i in k[j]){e[j].1r(k[j][i])}}}}}1i(Z h in V.4x){f(V.4x[h])}1c e},2A:1b(a){if(a){TL.ok(a 2a 1a.1A.1D.kM)}Z b=3U.5b(1a.1A.1D.ud.1u);b.4x=V.4x.4a();b.ia=3z.2A(V.ia);b.1N=a?a:V.1N.2A();b.4D=V.4D;1c b},TK:1b(c){Z b=0;1i(Z a=0;a<c.1g;a++){if(!V.ia[c[a].id]){V.4x.1r(c[a]);V.ia[c[a].id]=1j;b++}}1c b},TJ:1b(e,c){1i(Z b=0,a=V.5q.1g;b<a;b++){Z d=V.5q[b];if(!(d.o7||(d.1p==="4b"&&c[d.fr])||(d.1p==="id"&&e===d.fr))){1c 1m}}1c 1j},EU:1b(u,g,c){Z k=c.9I(u).44("")+V.1N.9I(u);Z d=[],l=[];1i(Z y in g){l=[];1i(Z e in g[y]){l.1r(g[y][e].2j)}Z v=1q.2Q.1x(1q,l);d.1r([y,v])}1b a(i){1c i.6n(1b(x,j){1c x[1]-j[1]}).1v(1b(j){1c j[0]})}d=a(d);Z q=0;1i(Z s=0;s<d.1g;s++){Z o=g[d[s]];Z f=d[s].6q("/").jH();if(f==="*"){3o}q++;Z m=1a.1A.1D.52.EF(f,o);if(m){Z n=o[3U.oS(o).89()];u.3W({3S:m,2j:n.2j,36:n.36})}1b h(j){1b i(x){1c x[1].bU()}1c j.6g(0).bU()+j.4a(1).3h(/\\-./,i)+"TI"}Z w=h(f);Z b=1j,t;k+="    <"+w+" ";1i(Z r in o){if(f==="1v"){u.3W({3S:"8q TH 59 3n EW in 58 4x",2j:o[r].2j,36:o[r].36})}Z p=1a.1A.1D.52.56(o[r].2h);if(p&&p.i9&&p.i9==="uy"){b=1m;t=o[r].ev(u).9I(u,1j)}1f{if(p&&p.i9&&p.i9==="oT"){b=1m;t=o[r].ev(u).9I(u,1j)}1f{k+=o[r].ev(u).9I(u)+" "}}}if(b){k+="/>\\n"}1f{if(1P t!=="1z"){if(t.3k("<")!=-1){k+=">"+t+"</"+w+">\\n"}1f{k+="><![TG["+t+"]]></"+w+">\\n"}}}}if(!q||!k){1c""}1c"  <bs>\\n"+k+"  </bs>\\n"},EV:1b(a,d){Z f={},e;1i(Z b=d;b<V.4x.1g;b++){e=V.4x[b];Z c=e.kJ+"/"+e.3F;if(a.6N&e.33&&(!(c in f)||(!(e.2h in f[c])))){a.6N&=e.33;if(!(c in f)){f[c]={}}f[c][e.2h]=e}}if(3U.oS(f).1g){a.e7&=(a.p1&=~a.6N);1c f}},9I:1b(f,a){Z b=V.1N.2c();if(!(b in a)){a[b]=1a.1A.1D.6f.5T}Z c=1a.1A.1D.6f.5T,e="",j,h,g={p1:1a.1A.1D.6f.5T};1i(Z d=0;d<V.4x.1g&&c;d++){g.e7=V.4x[d].33;if(!(a[b]&g.e7)){3o}4n(g.6N=g.e7&c){if(h=V.EV(g,d)){if(!(a[b]&g.6N)){3o}e+=V.EU(f,h,(1n 1a.1A.1D.6f()).El(a[b]&g.6N));a[b]&=~g.6N}}}1c e}});1a.1A.1D.aC=1a.1U({is:"2U",ES:["m","cm","in","mm","pt","pc"],TF:["px","%"],ET:["m","cm","in","mm","pt","pc","px","%"],ER:{m:0.TE,mm:25.4,cm:2.54,pt:72,pc:6},1B:1b(c,b,a){V.1l=40(c);V.3m=b||1d;V.2j=a},ev:1b(a){if(V.3m&&!3z.dI(V.ET,V.3m)){a.3W({3S:"e4 3m: \'"+V.3m+"\'",2j:V.2j});1c{is:"1z",1l:"1z"}}if(V.3m&&3z.dI(V.ES,V.3m)){if(!a.ux){a.3W({3S:"ux is 3n c8, so TD 5p bv\'t be 3T",2j:V.2j});1c{is:"1z",1l:"1z"}}V.1l=(V.1l/V.ER[V.3m])*a.ux;V.3m="px"}1c V},aY:1b(){1c 1n 1a.1A.1D.7I([V.1l,V.1l,V.1l])},39:1b(){V.1l=1q.39(V.1l);1c V},2c:1b(){1c V.1l.2c()},cL:1b(b,c,a){if(V.3m==="%"&&a.3m!=="%"){b.3W({3S:"If EQ oX TC, 1s kO TB 3n be %",2j:V.2j});1c{is:"1z",1l:"1z"}}if(V.3m!=="%"&&a.3m==="%"){if(c==="*"||c==="/"||c==="%"){b.3W({3S:"TA e9 bv ea be uv or Tz 6h 58 e9",2j:V.2j});1c{is:"1z",1l:"1z"}}1c 1n 1a.1A.1D.aC(1a.1A.1D.cL(c,V.1l,V.1l*a.1l*0.Ty),V.3m)}1c 1n 1a.1A.1D.aC(1a.1A.1D.cL(c,V.1l,a.1l),V.3m||a.3m)}});1a.1A.1D.cd=1a.1U({1B:1b(a){V.1l=a.f7();if(V.1l[0]==="#"){V.1p="id";V.fr=V.1l.3h(/^#/,"")}if(V.1l[0]==="."){V.1p="4b";V.fr=V.1l.3h(/^\\./,"")}if(V.1l.3k("*")!==-1){V.1p="o7"}},fB:1b(){1c[(V.1p==="id")?1:0,(V.1p==="4b")?1:0]},2c:1b(){1c V.1l}});1a.1A.1D.p0=1a.1U({is:"7P",1B:1b(a){V.1l=a},ev:1b(a){if(V.1l.1g>1){1c 1n 1a.1A.1D.p0(V.1l.1v(1b(b){1c b.ev(a)}))}1f{1c V.1l[0].ev(a)}},2c:1b(a){1c V.1l.1v(1b(b){1c b.2c(a)}).44(" ")}});1a.1A.1D.i7=1a.1U({is:"cI",1B:1b(a){V.1l=a||""},2c:1b(){1c\'["\'+V.1l.bU()+\'"]\'},ev:1b(){1c V}});1a.1A.1D.oZ=1a.1U({1B:1b(c,e,d,b,a){V.6i=c;V.op=e;V.2y=d;V.2j=b;V.36=a;V.id=V.6i+V.op+V.2y},kN:{"<":[" &lt; ","i8"],">":[" &gt; ","i8"],"=":[" = ","7T"],"!=":[" != ","7T"],"<=":[" &lt;= ","i8"],">=":[" &gt;= ","i8"],"=~":[".3B(","3t",")"]},ev:1b(a){V.6i=V.6i.ev(a);V.2y=V.2y.ev(a);1c V},9I:1b(b){if(1a.1A.1D.52.2g.4K){if(V.6i.is==="9K"&&-1===1a.1A.1D.52.2g.4K.1l.3k(V.6i.2c())){b.3W({3S:V.6i.2c()+" is 3n a uw 9K in a 4K 7P",2j:V.2j,36:V.36})}if(V.2y.is==="9K"&&-1===1a.1A.1D.52.2g.4K.1l.3k(V.2y.2c())){b.3W({3S:V.2y.2c()+" is 3n a uw 9K in a 4K 7P",2j:V.2j,36:V.36})}}Z a=V.6i.2c(1m);Z c=V.2y.2c(V.2y.is=="3t");if((V.kN[V.op][1]==="i8"&&2Y(c)&&V.2y.is!=="cI")||(V.kN[V.op][1]==="3t"&&(c)[0]!="\'")){b.3W({3S:\'EI fF Tx "\'+V.op+\'" 8d 1l \'+V.2y,2j:V.2j,36:V.36})}1c a+V.kN[V.op][0]+c+(V.kN[V.op][2]||"")},2c:1b(){1c"["+V.id+"]"}});1a.1A.1D.kM=1a.1U({1B:1b(){V.1N={}},9I:1b(a){Z b=[];1i(Z c in V.1N){b.1r("("+V.1N[c].9I(a).f7()+")")}if(b.1g){1c"    <oZ>"+b.44(" 3y ")+"</oZ>\\n"}1f{1c""}},e2:1b(c){1b a(f){Z h=f.op;if(h==="="){h="=="}Z g=f.2y;if(f.EP!==1z){g=f.EP.2c(1j)}if(f.6i&&f.6i.1l==="2t"){g=+g}1f{if(1P g==="3t"||1P g==="7J"){g="\'"+g+"\'"}}Z e="2Z";1c e+"&&"+e+f.6i+"&&"+e+f.6i+" "+h+g}Z b=[];1i(Z d in V.1N){b.1r(a(V.1N[d]))}1c b.44(" && ")},2c:1b(){Z a=[];1i(Z b in V.1N){a.1r(V.1N[b].id)}1c a.6n().44("\\t")},ev:1b(b){1i(Z a in V.1N){V.1N[a].ev(b)}1c V},2A:1b(){Z b=1n 1a.1A.1D.kM();1i(Z a in V.1N){b.1N[a]=V.1N[a]}1c b},Eo:1b(a){Z c=[];1i(Z e in a.1N){Z b=V.EO(a.1N[e]);if(b===1m){1c 1m}if(b===1j){c.1r(a.1N[e])}}if(!c.1g){1c 1d}Z d=1n 1a.1A.1D.kM();1i(e in V.1N){d.1N[e]=V.1N[e]}4n(e=c.89()){d.5y(e)}1c d},EO:1b(b){Z a=b.6i.2c(),c=b.2y.2c();if(c.3B(/^[0-9]+(\\.[0-9]*)?$/)){c=40(c)}4h(b.op){1E"=":if(V.1N[a+"="]!==1z){if(V.1N[a+"="].2y.2c()!=c){1c 1m}1f{1c 1d}}if(V.1N[a+"!="+c]!==1z){1c 1m}if(V.1N[a+">"]!==1z&&V.1N[a+">"].2y>=c){1c 1m}if(V.1N[a+"<"]!==1z&&V.1N[a+"<"].2y<=c){1c 1m}if(V.1N[a+">="]!==1z&&V.1N[a+">="].2y>c){1c 1m}if(V.1N[a+"<="]!==1z&&V.1N[a+"<="].2y<c){1c 1m}1c 1j;1E"=~":1c 1j;1E"!=":if(V.1N[a+"="]!==1z){1c(V.1N[a+"="].2y===c)?1m:1d}if(V.1N[a+"!="+c]!==1z){1c 1d}if(V.1N[a+">"]!==1z&&V.1N[a+">"].2y>=c){1c 1d}if(V.1N[a+"<"]!==1z&&V.1N[a+"<"].2y<=c){1c 1d}if(V.1N[a+">="]!==1z&&V.1N[a+">="].2y>c){1c 1d}if(V.1N[a+"<="]!==1z&&V.1N[a+"<="].2y<c){1c 1d}1c 1j;1E">":if(a+"="in V.1N){if(V.1N[a+"="].2y<=c){1c 1m}1f{1c 1d}}if(V.1N[a+"<"]!==1z&&V.1N[a+"<"].2y<=c){1c 1m}if(V.1N[a+"<="]!==1z&&V.1N[a+"<="].2y<=c){1c 1m}if(V.1N[a+">"]!==1z&&V.1N[a+">"].2y>=c){1c 1d}if(V.1N[a+">="]!==1z&&V.1N[a+">="].2y>c){1c 1d}1c 1j;1E">=":if(V.1N[a+"="]!==1z){1c(V.1N[a+"="].2y<c)?1m:1d}if(V.1N[a+"<"]!==1z&&V.1N[a+"<"].2y<=c){1c 1m}if(V.1N[a+"<="]!==1z&&V.1N[a+"<="].2y<c){1c 1m}if(V.1N[a+">"]!==1z&&V.1N[a+">"].2y>=c){1c 1d}if(V.1N[a+">="]!==1z&&V.1N[a+">="].2y>=c){1c 1d}1c 1j;1E"<":if(V.1N[a+"="]!==1z){1c(V.1N[a+"="].2y>=c)?1m:1d}if(V.1N[a+">"]!==1z&&V.1N[a+">"].2y>=c){1c 1m}if(V.1N[a+">="]!==1z&&V.1N[a+">="].2y>=c){1c 1m}if(V.1N[a+"<"]!==1z&&V.1N[a+"<"].2y<=c){1c 1d}if(V.1N[a+"<="]!==1z&&V.1N[a+"<="].2y<c){1c 1d}1c 1j;1E"<=":if(V.1N[a+"="]!==1z){1c(V.1N[a+"="].2y>c)?1m:1d}if(V.1N[a+">"]!==1z&&V.1N[a+">"].2y>=c){1c 1m}if(V.1N[a+">="]!==1z&&V.1N[a+">="].2y>c){1c 1m}if(V.1N[a+"<"]!==1z&&V.1N[a+"<"].2y<=c){1c 1d}if(V.1N[a+"<="]!==1z&&V.1N[a+"<="].2y<=c){1c 1d}1c 1j}},EN:1b(b){Z a=b.6i.2c(),c=b.2y.2c();if(!2Y(40(c))){c=40(c)}if((b.op==="="&&V.1N[a+"="]!==1z&&c!=V.1N[a+"="].2y.2c())||(b.op==="!="&&V.1N[a+"="]!==1z&&c==V.1N[a+"="].2y.2c())||(b.op==="="&&V.1N[a+"!="]!==1z&&c===V.1N[a+"!="].2y.2c())){1c b.2c()+" uv to "+V.2c()+" uu an oY 4K"}1c 1m},5y:1b(b,p){Z q=b.6i.2c(),a,o=b.op,h=V.EN(b),f;if(h){1c h}if(o==="="){1i(Z n in V.1N){if(V.1N[n].6i===q){4S V.1N[n]}}V.1N[q+"="]=b}1f{if(o==="!="){V.1N[q+"!="+b.2y]=b}1f{if(o==="=~"){V.1N[q+"=~"+b.2y]=b}1f{if(o===">"){1i(Z g in V.1N){if(V.1N[g].6i===q&&V.1N[g].2y<=b.2y){4S V.1N[g]}}V.1N[q+">"]=b}1f{if(o===">="){1i(Z e in V.1N){f=(+V.1N[e].2y.2c());if(V.1N[e].6i===q&&f<b.2y){4S V.1N[e]}}if(V.1N[q+"!="+b.2y]!==1z){4S V.1N[q+"!="+b.2y];b.op=">";V.1N[q+">"]=b}1f{V.1N[q+">="]=b}}1f{if(o==="<"){1i(Z d in V.1N){f=(+V.1N[d].2y.2c());if(V.1N[d].6i===q&&f>=b.2y){4S V.1N[d]}}V.1N[q+"<"]=b}1f{if(o==="<="){1i(Z c in V.1N){f=(+V.1N[c].2y.2c());if(V.1N[c].6i===q&&f>b.2y){4S V.1N[c]}}if(V.1N[q+"!="+b.2y]!==1z){4S V.1N[q+"!="+b.2y];b.op="<";V.1N[q+"<"]=b}1f{V.1N[q+"<="]=b}}}}}}}}}});1a.1A.1D.Tw=1a.1U({1B:1b(a,b){V.fD=b;V.2h="Et-"+a.Tv.1g},9I:1b(a){1c\'<EM 2h="\'+V.2h+\'">\\n\'+V.fD.1v(1b(b){1c\'  <ut fk-2h="\'+b+\'"/>\'}).44("\\n")+"\\n</EM>"}});1a.1A.1D.Tu=1a.1U({is:"Tt",1B:1b(b,a){V.4K=b;V.aB=a||1d},ev:1b(){1c V},2c:1b(){if(V.aB){1c V.4K+"("+V.aB.44(",")+")"}1f{1c V.4K}}});1a.1A.1D.e4=1a.1U({is:"oY",1B:1b(b,a,c){V.fE=b;V.2j=a;V.1p="kI";V.3S=c||"e4 EL: "+V.fE},ev:1b(a){a.3W({fE:V.fE,2j:V.2j,1p:"kI",3S:V.3S||"e4 EL: "+V.fE});1c{is:"1z"}}});1a.1A.1D.EK=1a.1U({ev:1b(){1c V},1B:1b(b){V.1l=b;Z a={i4:"1X","1j":"5i","1m":"5i"};V.is=a[b]?a[b]:"9K"},2c:1b(){1c V.1l}});1a.1A.1D.oW=1a.1U({1B:1b(a){V.1l=a||"";V.is="cI"},2c:1b(){1c V.1l},ev:1b(){1c V}});1a.1A.1D.us=1a.1U({is:"9L",1B:1b(c,b,a){V.op=c.f7();V.oX=b;V.2j=a},ev:1b(f){Z d=V.oX[0].ev(f),c=V.oX[1].ev(f),e;if(d.is==="1z"||c.is==="1z"){1c{is:"1z",1l:"1z"}}if(d 2a 1a.1A.1D.aC&&c 2a 1a.1A.1D.7I){if(V.op==="*"||V.op==="+"){e=c,c=d,d=e}1f{f.3W({2h:"Ts",3S:"kL\'t Tr or ur a 1X 6h a 3s",2j:V.2j})}}if(d 2a 1a.1A.1D.e8&&c 2a 1a.1A.1D.e8&&V.op!=="+"){f.3W({3S:"kL\'t EJ, ur, or 7q Tq.",2j:V.2j,1p:"e1",36:V.36});1c{is:"1z",1l:"1z"}}if(d 2a 1a.1A.1D.i7||c 2a 1a.1A.1D.i7||d 2a 1a.1A.1D.oW||c 2a 1a.1A.1D.oW){if(d.is==="1X"||c.is==="1X"){f.3W({3S:"kL\'t EJ, ur, or 7q 8p in Tp.",2j:V.2j,1p:"e1",36:V.36});1c{is:"1z",1l:"1z"}}1f{1c 1n 1a.1A.1D.oW(d.ev(f).2c(1j)+V.op+c.ev(f).2c(1j))}}if(d.cL===1z){f.3W({3S:"EI do EH 8d 1p "+d.is+".",2j:V.2j,1p:"e1",36:V.36});1c{is:"1z",1l:"1z"}}1c d.cL(f,V.op,c)}});1a.1A.1D.e8=1a.1U({is:"3t",1B:1b(a){V.1l=a||""},2c:1b(a){Z b=V.1l.3h(/&/g,"&To;");Z c=b.3h(/\\\'/g,"\\\\\'").3h(/\\"/g,"&Tn;").3h(/</g,"&lt;").3h(/\\>/g,"&gt;");1c(a===1j)?"\'"+c+"\'":b},ev:1b(){1c V},cL:1b(b,c,a){1c 1n 1a.1A.1D.e8(1a.1A.1D.cL(c,V.2c(),a.2c(V.Tm)))}});1a.1A.1D.52={EC:{81:1b(a,b){if(a.uq&&a.uq.fD){1c a.uq.fD.3k(b)!=-1}1f{1c 1j}}},EG:1b(d){V.2g=d;V.i6=c(d);V.uo=b(d);V.EE=a(d);1b c(h){Z f={};1i(Z g in h.3R){1i(Z e in h.3R[g]){if(h.3R[g][e].eL("1F")){f[h.3R[g][e].1F]=[h.3R[g][e],g,e]}}}1c f}1b b(l){Z m={};1i(Z g in l.3R){1i(Z f in l.3R[g]){if(l.3R[g][f].1p==="3Z"){1i(Z e=0;e<l.3R[g][f].3Z.1g;e++){Z h=l.3R[g][f].3Z[e];m[h[0]]=h[1]}}}}1c m}1b a(h){Z e={};1i(Z g in h.3R){e[g]=[];1i(Z f in h.3R[g]){if(h.3R[g][f].bu){e[g].1r(h.3R[g][f].1F)}}}1c e}},EB:1b(a){if(1a.1A.um.4Z.eL(a)){V.EG(1a.1A.um.4Z[a]);1c 1j}1f{1c 1m}1c 1m},oV:1b(a,b){if(V.i6&&V.i6[a]){1c V.i6[a][b]}},Ey:1b(a){1c!!V.i6[a]},Es:1b(a){1c V.oV(a,2)},56:1b(a){1c V.oV(a,0)},3F:1b(a){1c V.oV(a,1)},EF:1b(b,d){Z c=V.EE[b];1i(Z a in c){if(!(c[a]in d)){1c"BN "+c[a]+" bu 1i Tl "+b+" ED."}}},Eu:1b(a){1c V.56(a).fC==="81"},uk:1b(d,c){if(d.1g===0){1c c.1g}if(c.1g===0){1c d.1g}Z e=[];1i(Z g=0;g<=c.1g;g++){e[g]=[g]}1i(Z f=0;f<=d.1g;f++){e[0][f]=f}1i(g=1;g<=c.1g;g++){1i(f=1;f<=d.1g;f++){if(c.6g(g-1)===d.6g(f-1)){e[g][f]=e[g-1][f-1]}1f{e[g][f]=1q.2Q(e[g-1][f-1]+1,1q.2Q(e[g][f-1]+1,e[g-1][f]+1))}}}1c e[c.1g][d.1g]},Ex:1b(f,a,h){1b e(o,k){if(o.1l[0].is==="3t"){1c 1j}1i(Z m in o.1l){1i(Z l in o.1l[m].1l){if(o.1l[m].1l[l].is!=="4q"){1c 1m}Z n=3z.uf(V.56(k).3Z,1b(i){1c i[0]===o.1l[m].1l[l].2h});if(!(n&&n[1]===-1)){if(!n||n[1]!==o.1l[m].1l[l].aB.1g){1c 1m}}}}1c 1j}1b d(j,i){if(1P V.56(i).1p==="7J"){1c V.56(i).1p.3k(j.1l[0].1l)!==-1}1f{1c V.56(i).1p==="3t"}}Z c,b;if(!V.56(a)){1c 1m}1f{if(h.1l[0].is==="9K"){1c d(h,a)}1f{if(h.1l[0].is==="1z"){1c 1j}1f{if(V.56(a).1p==="oU"){1i(c in h.1l){if(h.1l[c].is!=="2U"){1c 1m}}1c 1j}1f{if(V.56(a).1p==="Tk"){if(!h.1l){1c 1m}if(!h.1l[0].1l){1c h.1l[0].is==="oT"}1i(c=0;c<h.1l[0].1l.1g;c++){if(h.1l[0].1l[c].is!=="oT"){1c 1m}}1c 1j}1f{if(V.56(a).1p=="3Z"){1c e(h,a)}1f{if(V.56(a).1p==="7P"){1c 1j}1f{if(V.56(a).1p==="bt"){if(h.1l[0].is==="2U"){h.1l[0].39();1c 1j}1f{1c 1m}}1f{if(V.56(a).fC){Z g=1m;1i(c=0;c<h.1l.1g;c++){if(V.56(a).1p===h.1l[c].is&&V.EC[V.56(a).fC](f,h.1l[c].1l)){1c 1j}}1c g}1f{1c V.56(a).1p===h.1l[0].is}}}}}}}}}}};1a.1A.1D.52.EB("EA");1a.1A.1D.bs=1a.1U({is:"e7",1B:1b(c,d,b,a){Z e=c.6q("/");V.2h=e.jH();V.kJ=e.1g?e[0]:"u7";V.1l=(d 2a 1a.1A.1D.az)?d:1n 1a.1A.1D.az([d]);V.2j=b;V.3F=1a.1A.1D.52.3F(V.2h);V.36=a;V.7r=(c.6g(0)==="@")},2A:1b(){Z a=3U.5b(1a.1A.1D.bs.1u);a.2h=V.2h;a.1l=V.1l;a.2j=V.2j;a.kJ=V.kJ;a.3F=V.3F;a.36=V.36;a.7r=V.7r;1c a},Ez:1b(){1c V.id=V.33+"#"+V.kJ+"#"+V.2h},2c:1b(){1c"["+1a.1A.1D.6f.2c(V.33)+"] "+V.2h+": "+V.1l},9I:1b(d,e,i,g){if(!1a.1A.1D.52.Ey(V.2h)){1b h(f){1c 3U.oS(1a.1A.1D.52.i6).1v(1b(k){1c[k,1a.1A.1D.52.uk(f,k)]}).6n(1b(l,k){1c l[1]-k[1]})}Z j=h(V.2h);Z b="";if(j[0][1]<3){b=". Tj jZ cK "+j[0][0]+"?"}1c d.3W({3S:"Ew e7: "+V.2h+b,2j:V.2j,1p:"kI",36:V.36})}if((V.1l 2a 1a.1A.1D.az)&&!1a.1A.1D.52.Ex(d,V.2h,V.1l)){if(!1a.1A.1D.52.56(V.2h)){1c d.3W({3S:"Ew 7f: "+V.2h,2j:V.2j,1p:"kI",36:V.36})}1f{Z a;if(1a.1A.1D.52.56(V.2h).fC){a=1a.1A.1D.52.56(V.2h).fC}1f{if(1P 1a.1A.1D.52.56(V.2h).1p==="7J"){a="9K (74: "+1a.1A.1D.52.56(V.2h).1p.44(", ")+")"}1f{a=1a.1A.1D.52.56(V.2h).1p}}1c d.3W({3S:"e4 1l 1i "+V.2h+", 1s 1p "+a+" is Ev. "+V.1l+" (of 1p "+V.1l.1l[0].is+")  uj e6.",2j:V.2j,1p:"kI",36:V.36})}}if(V.7r){1c""}1f{if(1a.1A.1D.52.Eu(V.2h)&&V.1l.1l.1g>1){Z c=1a.1A.1D.Ti(d,V.1l.1l);1c\'Et-2h="\'+c.2h+\'"\'}1f{if(e){1c V.1l.2c(d,V.2h,i)}1f{1c 1a.1A.1D.52.Es(V.2h)+\'="\'+V.1l.2c(d,V.2h)+\'"\'}}}},ev:1b(a){1c 1n 1a.1A.1D.bs(V.2h,V.1l.ev(a),V.2j,V.36)}});1a.1A.1D.e5=1a.1U({is:"ui",1B:1b(a,b){V.aA=a;V.4x=b;V.oR={}},ev:1b(c){Z b,d,a=1n 1a.1A.1D.e5(V.aA,V.4x.4a(0));a.4o=V.4o;c.cH.na(a);1i(b=0,d;b<a.4x.1g;b++){d=a.4x[b];a.4x[b]=d.ev?d.ev(c):d}c.cH.89();1c a},3B:1b(a){1c!a||a.1g===0},Er:1b(){if(V.uh){1c V.uh}1f{1c V.uh=V.4x.En(1b(b,a){if(a 2a 1a.1A.1D.bs&&a.7r===1j){b[a.2h]=a}1c b},{})}},7r:1b(a){1c V.Er()[a]},Eq:1b(){if(V.ug){1c V.ug}1f{1c V.ug=V.4x.4K(1b(a){1c(a 2a 1a.1A.1D.e5)})}},uf:1b(a,b){b=b||V;Z f=[],e,c,d=a.2c();if(d in V.oR){1c V.oR[d]}V.Eq().Th(1b(h){if(h!==b){1i(Z g=0;g<h.aA.1g;g++){c=a.3B(h.aA[g]);if(c){if(a.5q.1g>1){4d.1u.1r.1x(f,h.uf(1n 1a.1A.1D.oQ(1d,1d,a.5q.4a(1)),b))}1f{f.1r(h)}1H}}}});1c V.oR[d]=f},Ep:1b(b){1i(Z a=0;a<V.aA.1g;a++){Z c=1a.1A.1D.6f.5T;1i(Z d=0;d<V.aA[a].33.1g;d++){c=V.aA[a].33[d].ev(b).33}V.aA[a].33=c}},ue:1b(o,k,e){Z m=[],c,b;if(V.aA.1g===0){e.cH=e.cH.5k(V.4x)}V.Ep(e);1i(c=0;c<V.aA.1g;c++){Z a=V.aA[c];if(!a.1N){3o}if(k.1g){1i(b=0;b<k.1g;b++){Z l=k[b];Z f=l.1N.Eo(a.1N);if(f===1d){if(l.33===a.33&&l.4D===a.4D&&l.5q.44()===a.5q.44()){m.1r(l);3o}1f{f=l.1N}}1f{if(!f){3o}}Z g=3U.5b(1a.1A.1D.oQ.1u);g.1N=f;g.33=a.33;g.5q=l.5q.5k(a.5q);if(l.4D&&a.4D){g.4D=l.4D+"/"+a.4D}1f{g.4D=a.4D||l.4D}g.i5=l.i5+a.i5;g.2j=a.2j;m.1r(g)}}1f{m.1r(a)}}Z n=[];1i(c=0;c<V.4x.1g;c++){Z h=V.4x[c];if(h 2a 1a.1A.1D.e5){h.ue(o,m,e)}1f{if(h 2a 1a.1A.1D.bs){n.1r(h)}1f{if(h 2a 1a.1A.1D.e4){e.3W(h)}}}}Z d=n.1g?n[0].2j:1m;1i(c=0;c<m.1g;c++){if(d!==1m){m[c].2j=d}o.1r(1n 1a.1A.1D.ud(m[c],n.4a()))}1c o}});1a.1A.1D.oQ=1a.1U({1B:1b(c,b,d,f,e,a){V.5q=d||[];V.4D=f;V.1N=c||{};V.33=1P b!=="1z"?b:1a.1A.1D.6f.5T;V.i5=e;V.2j=a},fB:1b(){1c V.5q.En(1b(b,c){Z a=c.fB();b[0]+=a[0];b[1]+=a[1];1c b},[0,0,V.i5,V.2j])}});1a.1A.1D.oP=1a.1U({is:"cJ",1B:1b(b,a){V.1l=b;V.e3=a},2c:1b(){1c V.1l.2c()},ev:1b(a){1c 1n 1a.1A.1D.oP(V.1l.ev(a),V.e3)}});1a.1A.1D.az=1a.1U({is:"1l",1B:1b(a){V.1l=a},ev:1b(a){if(V.1l.1g===1){1c V.1l[0].ev(a)}1f{1c 1n 1a.1A.1D.az(V.1l.1v(1b(b){1c b.ev(a)}))}},e2:1b(b){Z c=V.ev(b);Z a=c.2c();if(c.is==="1X"||c.is==="cJ"||c.is==="3t"||c.is==="9K"){a="\'"+a+"\'"}1f{if(c.is==="cI"){a=a.3h(/\\[(.*)\\]/g,"2Z[\'$1\']")}1f{if(c.1l&&1P c.1l==="7J"){a="["+a+"]"}}}1c"fz = "+a+";"},2c:1b(c,a,b,d){1c V.1l.1v(1b(f){1c f.2c(c,d)}).44(b||", ")},2A:1b(){Z a=3U.5b(1a.1A.1D.az.1u);if(4d.5u(a)){a.1l=V.1l.4a()}1f{a.1l=V.1l}a.is=V.is;1c a}});1a.1A.1D.uc=1a.1U({is:"7r",1B:1b(c,b,a){V.2h=c;V.2j=b;V.36=a},2c:1b(){1c V.2h},ev:1b(d){Z c,a,b=V.2h;if(V.Em){1c V.Em}Z e=d.cH.4K(1b(g){1c g.2h===V.2h}.3p(V));if(e.1g){1c e[0].1l.ev(d)}1f{d.3W({3S:"7r "+V.2h+" is 1z",2j:V.2j,1p:"e1",36:V.36});1c{is:"1z",1l:"1z"}}}});1a.1A.1D.6f=1a.1U({1B:1b(c,b,a){V.op=c;V.1l=b;V.2j=a},El:1b(a){V.33=a;1c V},ev:1b(b){Z e=0,a=a7,d=2P(V.1l.ev(b).2c(),10),c=0;if(d>1a.1A.1D.6f.c0||d<0){b.3W({3S:"Tg 33 Tf 9J 0 3y "+1a.1A.1D.6f.c0+" cn.",2j:V.2j})}4h(V.op){1E"=":V.33="33 && 33 === "+d;1c V;1E">":V.33="33 && 33 > "+d;1H;1E">=":V.33="33 && 33 >= "+d;1H;1E"<":V.33="33 && 33 < "+d;1H;1E"<=":V.33="33 && 33 <= "+d;1H}1c V},2c:1b(){Z b="";1i(Z a=0;a<=1a.1A.1D.6f.c0;a++){b+=(V.33&(1<<a))?"X":"."}1c b},9I:1b(){Z c=[];if(V.33!=1a.1A.1D.6f.5T){Z d=1d,a=1d;1i(Z b=0;b<=1a.1A.1D.6f.c0;b++){if(V.33&(1<<b)){if(d===1d){d=b}a=b}}if(d>0){c.1r("    <Ek>"+1a.1A.1D.6f.ub[d]+"</Ek>\\n")}if(a<22){c.1r("    <Ej>"+1a.1A.1D.6f.ub[a+1]+"</Ej>\\n")}}1c c}});1a.1A.1D.6f.5T=23;1a.1A.1D.6f.c0=22;1a.1A.1D.6f.ub={0:Te,1:Td,2:Tc,3:Tb,4:Ta,5:T9,6:T8,7:T7,8:T6,9:T5,10:T4,11:T3,12:T2,13:T1,14:T0,15:SZ,16:SY,17:BJ,18:SX,19:SV,20:SU,21:tM,22:8o,23:100};1a.kD=1a.1U({3L:1d,2T:1d,5S:1d,6K:1d,6a:1d,id:1d,i0:1d,dU:1d,2j:0,tU:ST,1M:1d,3R:1d,E6:1d,b2:1j,1B:1b(c,d,b){if(d){V.6K=d}if(1P c=="3t"){V.6a=c;Z a=c.3h(/[@#\\s]/gi,"nQ");V.id=a;V.i0=a;V.2j=0}V.1M=[];V.3R={};1a.1t.8J(V,b)},k1:1b(a){if(!a 2a 1a.kD){1c 1m}1c a.6a===V.6a&&a.id===V.id&&a.i0===V.i0},DL:1b(a){if(!2Y(a)){V.2j=a}},dV:1b(a,d){if(V.2T){a=a|0;d=d|0;Z b=V.2T.ff(a,d,1,1).2g;if(b[3]===1V){Z c=b6*b[1]+b[2]-1;if(c!=1d){1c{6v:V.j3(c),bg:V}}}}},6E:1b(a){if(a&&a.1g>0){V.1M=V.1M.5k(a)}},SS:1b(a){if(a){V.1M.1r(a)}},j3:1b(d){1i(Z c=0,a=V.1M.1g;c<a;c++){Z b=V.1M[c];if(b.id===d){1c b}}1c 1d},tR:1b(a,b){if(a 2a 1a.bq){if(V.3R[b||"1o"]){V.3R[b||"1o"].1r(a)}1f{V.3R[b||"1o"]=[a]}}},Ee:1b(e,o){Z u,g,a=V.1w.1v.7W(),C=V.1w.tu(a),B=V.1w,A=V.6a,b=V.1w.kq,h=V.1w.tf,q=B.ay&&B.ay[A];1i(Z w=0,z=V.1M.1g;w<z;w++){Z k=V.1M[w];Z n;Z l=k.2Z,c=(h&&h.bg.6a===V.6a&&h.6v&&k.id===h.6v.id),t=(b&&b.bg.6a===V.6a&&b.6v&&k.id===b.6v.id);if((!t)&&(!c)&&(B.oO===a)&&q&&q[k.id]&&q[k.id][o]&&q[k.id][o].1k){k.1k=q[k.id][o].1k;k[o]=1a.1t.eF(k.1k);B.oO=a}1f{if(q&&q[k.id]&&q[k.id].ua){n=q[k.id].ua}1f{Z y={};1i(Z s in l){y[s.bU()]=l[s]}n=y}if(k[o]&&(B.oO===a)&&!V.1w.tK&&!V.1w.ob&&!V.1w.te){k.1k=k[o]}1f{Z f=k.27.1p,m=k.SR,p=f==="cx";if(m&&V.dU==="tO"&&f==="dM"){f="cx"}k.1k=V.Ei(k.1k,f);if(V.1w.ob&&t){g=V.1w.kB&&V.u9(a,C,k.1k,{dW:V.1w.kB[0]},n,k,f)}1f{1i(Z v=0,x=e.1g;v<x;v++){Z d=e[v];if(d.tS||(d.dW.oA&&p)){V.Eh(k.1k,d,k,f)}1f{V.u9(a,C,k.1k,d,n,k,f)}}}k[o]=1a.1t.eF(k.1k);B.oO=a}if(!V.1w.ay){V.1w.ay={}}if(!V.1w.ay[A]){V.1w.ay[A]={}}if(!V.1w.ay[A][k.id]){V.1w.ay[A][k.id]={}}V.1w.ay[A][k.id][o]={1k:k[o],ua:n}}Z r=1n 1a.bq(V,k,k.1k,{am:V.dU,3L:V.3L,2T:V.2T,5S:V.5S});if(g){u=r;g=1m}1f{r.aP()}}u&&u.aP()},Ei:1b(c,b){c=c||{};Z a=1a.fu.u1[b];1i(Z e in a){Z d=a[e];c[e]=d}1c c},u9:1b(b,s,r,e,l,h,f){Z a=e.dW,n=e.oA,j=l;j.nt=h.id;j.SQ=s;Z g=1a.bq.E5[f];Z c,m;1i(Z p=0,q=a.1g;p<q;p++){Z k=a[p];Z d=g[k.7f];Z o=k.cr(j,b,1j);if((o!==1d)&&d){if(d==="bQ"){if(n){o*=0.8}c=o+"px";r.bQ=c}1f{if(d==="oN"){m=o}1f{if(d==="4O"){o=1a.bq.E1[o];if(!o||o===""){3o}}1f{if(a.oA&&d==="fw"){o=V.1w.2S+"/oe/SP/"+o.3h(/(nQ)/gi,"@")}}if(d==="2I"&&o<1){o=1q.f4(o)}r[d]=o}}}}1c 1j},Eh:1b(C,d,m,h){Z a=d.dW;if(a===1d){1c}if(h==="dM"){Z o={i4:1j,SO:"SN",SM:1q.f4(a.oF*1a.oM*1a.oL.mm),SL:1q.f4(a.oF*1a.oM*1a.oL.mm),1k:ks.SK(a)};Z G=1a.1t.Db(V.1w.2S+"/Eg.hY",1a.1t.tt(o));C.fw=G}1f{if(h==="cx"){a=m.27.SJ;Z f="";C.gh=!!a.qG?"qG":"7U";C.aM=a.kG?a.aM:"7U";Z y=a.SI*1a.oM*1a.oL.mm*0.85;C.bQ=y+"px";if(a.oN.3k("@")){f=a.oN.3h(/@/g,"")}1f{f=a.oN}C.eo=f;C.u0=y;Z k=a.hA.3h(/SH|SG|Ef|SF/,"");C.6S=k.9f();Z u=a.hA.3h(/SD|SC|SB/,"");if(u==="Ef"){u="SA"}C.5E=u.9f();C.kF=a.Sz?a.Sy:0;C.fx="4f("+a.fx.7L+","+a.fx.8c+","+a.fx.7n+",1)";C.dY="4f("+a.dY.7L+","+a.dY.8c+","+a.dY.7n+",1)";C.4A=a.4A}1f{Z J=a.tX>7?0:a.tX;Z I=a.tW>5?0:a.tW;1i(Z w in a){Z p=1a.E4[w];Z K=p.6w;if(K&&K!=""){Z h=p.1p;4h(h){1E"3s":Z v=a[w];if(p.3m){v=v*1a.oM*1a.oL[p.3m]*2.5}C[K]=v;1H;1E"1X":Z x=a[w];Z l=a.E3;Z v,j=1;if(K==="4W"){if(J===0||J===1){j=1-J;v="4f("+x.7L+","+x.8c+","+x.7n+","+j+")"}1f{6k{Z s=2n.2K("1W");s.1L=8;s.1I=8;Z B=s.4G("2d");Z t=1n 6R();B.7h(V.1w.bo["Dz "+J],0,0);Z E=B.ff(0,0,s.1I,s.1L);Z c=E.2g;1i(Z z=0,A=c.1g;z<A;z+=4){Z q=c[z],D=c[z+1],H=c[z+2];if(q<kH&&D<kH&&H<kH){c[z]=x.7L;c[z+1]=x.8c;c[z+2]=x.7n}1f{if(l){c[z]=l.7L;c[z+1]=l.8c;c[z+2]=l.7n}}}B.u8(E,0,0);t.2i=s.jj();v=V.3L.Sx(t,"8L")}6B(F){8y d8("Sw-hQ")}}}1f{if(K==="6X"){if(I===0||I===5){j=I===0?1:0}1f{Z n=[1,0];4h(I){1E 1:n=[9.7,3.7];1H;1E 2:n=[3.7,3.7];1H;1E 3:n=[9.7,3.7,2.3,3.7];1H;1E 4:n=[9.7,3.7,2.3,3.7,2.3,3.7];1H;1o:1H}C.cG=n}v="4f("+x.7L+","+x.8c+","+x.7n+","+j+")"}}C[K]=v;1H;1o:1H}}}}}if(!C.3D){C.3D=1}1c C},6D:1b(){V.3b();if(V.b2){1i(Z a in V.3R){if(a==="1o"&&V.3R.u7){3o}Z b=V.3R[a];V.Ee(b,a)}}},3b:1b(){Z a=V.3L.1W.1I,b=V.3L.1W.1L;V.3L.3D=0;V.3L.7E(0,0,a,b);if(V.2T){V.2T.3D=0;V.2T.7E(0,0,a,b)}},1Q:1b(){if(V.6K&&V.6K.3J&&V.3L&&V.3L.1W){V.6K.3J.a8(V.3L.1W)}V.6K=1d;V.6a=1d;V.id=1d;V.i0=1d;V.2j=1d;V.b2=1m;V.3R=1d;V.1M=1d;V.3L=1d;V.2T=1d},1T:"1a.Sv"});1a.fu=1a.1U({3L:1d,2T:1d,dT:1m,3F:1d,1w:1d,i3:1d,dZ:1d,Eb:1d,1B:1b(c,b,a){V.3L=c;V.2T=b;V.i3={};V.dZ=[];1a.1t.8J(V,a)},1Q:1b(){V.3L=1d;V.3F=1d;1i(Z a=V.dZ.1g-1;a>=0;a--){if(!V.dZ[a].qD){V.dZ[a].a1=1d}}V.i3=1d;V.dZ=1d},cn:1b(){Z a=2n.2K("1W");1c!!a.4G},Ed:1b(a,c){1i(Z b in c){if((b in a)&&(a[b]!==c[b])){a[b]=c[b]}}},dF:1b(i,b,c){if(!V.3L){1c}if(i.27){Z g;Z f=i.27.1p;g=i.1k?i.1k:b;Z h=V.3L;if(V.2T){Z e=V.2T}Z a=1d;if(e){a=V.nw(i.id,i.bh)}Z d=V.k7(h,e,i.27,g,a,i.2Z,c);1c d}},k7:1b(i,e,g,b,a,d,c){Z f=g.1p;if(!b){b=1a.fu.u1[f]}i&&i.4N();e&&e.4N();V.Ed(i,b);if(a){e.4W=a;e.6X=a;e.2I=i.2I+3;e.3D=1}Z h;4h(f){1E"cx":h=V.di(i,e,g,b);1H;1E"dM":if(d&&c==="tO"){h=V.di(i,e,g,b,d)}1f{h=V.hx(i,e,g,b)}1H;1E"fn":if(1q.39(40(b.2I))===0){h=1j;1H}h=V.u2(i,e,g,b);1H;1E"fm":h=V.E8(i,e,g,b);1H;1o:1H}i&&i.4U();e&&e.4U();1c h},di:1b(q,j,l,a,f){if(!l.u6&&!f){1c}Z b;if(a.oG){b=a.oG.k4(1,a.oG.1g-1)}if(a.kG&&!a.aM){a.aM=Su}Z e=[a.gh?a.gh:"7U","7U",a.aM?a.aM:"7U",a.bQ?a.bQ:"Ce",a.eo?a.eo:"iQ-iP"].44(" ");q.81=e;Z o=0;1i(Z g=0;g<l.oK.1g;g++){Z c=l.oK[g];Z p=(b&&f&&f[b])||(l.u6&&l.u6[g]);if(!p){3o}Z m=l.b0[o*2];Z k=l.b0[o*2+1];m+=a.7G||0;k+=a.7F||0;q.4N();if(a.4A){q.6F(a.4A*1q.PI/62)}if(a.kF){Z d=(a.kF+1)||0;q.4N();q.2I=d;q.6X=a.fx;q.6W(p,m,k);q.4U()}q.4W=a.dY;q.4u(p,m,k);q.4U();if(j){Z r=q.jT(p);Z n=r.1I/2,h=a.u0/2||6;V.e0(j,n,h,m,k)}o+=c}1c 1j},hx:1b(d,c,f,e){Z b=f.b0[0],g=f.b0[1];b+=e.7G||0;g+=e.7F||0;if(e.fw&&e.fw!==""){V.Ec(d,c,e,b,g)}1f{Z a=e.7x||3;d.2I=e.tZ||1;d.6X=e.tY||"#nJ";d.4W=e.4W||"#nK";V.e0(d,a,a,b,g);if(c){V.e0(c,a,a,b,g)}}1c 1j},Ec:1b(j,f,b,i,h){Z c=b.fw;Z g=V;Z d,e=V.Eb||1n 6R();e.2i=c;if(g.i3[e.2i]){d=g.i3[e.2i];j.7h(d,i-d.1I/2,h-d.1L/2);if(f){g.e0(f,d.1I/2,d.1L/2,i,h)}1c}d=1n 6R();d.2i=c;g.dZ.1r(d);Z a=g.1w&&g.1w.1v&&g.1w.1v.7W();d.a1=1b(m,l,k,o,n){1c 1b(){Z p=g.1w&&g.1w.1v&&g.1w.1v.7W();if(p===n){g.i3[V.2i]=V;m&&m.4N();m.3D=b.3D||1;m.4O=b.4O||"5H-2G";m.fy=b.fy||1j;m.7h(V,k-V.1I/2,o-V.1L/2);if(l){g.e0(l,V.1I/2,V.1L/2,k,o)}m&&m.4U()}}}(j,f,i,h,a);d.yB=1b(n,m,l,k,p,o){1c 1b(){Z r=n.1w&&n.1w.1v&&n.1w.1v.7W();if(r===o){Z q=3;m.2I=q;m.6X="#nJ";m.4W="#nK";n.e0(m,q,q,k,p);if(l){n.e0(l,q,q,k,p)}}}}(g,j,f,i,h,a)},e0:1b(c,b,e,a,f){Z d=1q.PI*2;c.4P();c.5v(a,f,b,0,d,1j);c.2k();c.26()},u2:1b(n,h,k,b,e){Z m=k.b0;Z l=0;b.5P=b.5P||{};if(e){b.5P.x=b.7G||0;b.5P.y=b.7F||0}1f{b.5P.x=-b.5P||0;b.5P.y=0}1i(Z g=0,j=k.oK.1g;g<j;g++){Z c=k.oK[g];if(c<2){l+=c;3o}Z a=b.E7===0;if(b.cG&&b.cG.1g>0){if(n.88){n.88(b.cG);n.br=b.br||0;V.oJ(n,h,m,l,c,b,e,a);n.88([])}1f{if(!a){Z d=b.cG,f=b.br||0;if(b.8D){n.3D=b.8D}V.Ea(n,h,m,l,c,b,d,f)}if(e){if(b.6r){n.3D=b.6r}V.oJ(n,h,m,l,c,b,1j,1j)}}}1f{V.oJ(n,h,m,l,c,b,e,a)}l+=c}1c 1j},oJ:1b(l,q,o,c,b,r,i,k){Z d=r.5P;l.4P();Z f=o[c*2],e=o[c*2+1];if((f===0&&e===0)||(f===oI&&e===0)||(f===oI&&e===oI)||(f===0&&e===oI)&&b===4){}f+=d.x||0;e+=d.y||0;l.3A(f,e);if(q){q.4P();q.3A(f,e)}Z g=e*(o[(b+c-1)*2]-o[(c+1)*2]);Z u=1j;1i(Z n=1;n<b;n++){Z h=c+n;Z m=h*2,v=h*2+1;Z t=o[m];Z a=o[v];t+=d.x||0;a+=d.y||0;l.4T(t,a);if(q){q.4T(t,a)}Z p;if(n===b-1){p=f}1f{p=o[(h+1)*2]}g+=a*(o[(h-1)*2]-p)}if(b<3){u=1j}1f{g*=0.5;u=!!(g>0)}if(!k){if(r.8D!==1d||r.8D!==1z){l.3D=r.8D}1f{l.3D=1}l.4O="5H-2G";if(q){q.4O="5H-2G"}l.2k()}if(i){if(r.6r!==1d||r.6r!==1z){l.3D=r.6r}if(V.dT){if(u){l.4O="5H-2G";if(q){q.4O="5H-2G"}}1f{l.4O="bX-3u";if(q){q.4O="bX-3u"}l.3D=1}}if(l.3D!==0){l.a0();l.26()}}if(q){if(!k){q.2k()}if(i){q.a0();q.26()}}},Ea:1b(l,q,o,d,c,r,t,h){Z g=r.5P,n=r.6X;Z s={br:h,u4:1j,u5:0,u3:1j};1i(Z p=0;p<c-1;p++){Z j=d+p;Z m=o[j*2],f=o[j*2+1],k=o[j*2+2],e=o[j*2+3];m+=g.x||0;f+=g.y||0;k+=g.x||0;e+=g.y||0;Z a=[m,f];Z b=[k,e];V.E9(l,t,a,b,s,n);if(q){if(p===0){q.4P();q.3A(m,f);q.4T(k,e)}1f{q.4T(k,e)}}}if(q){q.2k()}},E9:1b(m,g,l,k,b,i){Z f=k[0]-l[0];Z e=k[1]-l[1];Z a=1q.5x(f*f+e*e);f=f/a;e=e/a;Z n=b.br;Z d=b.u5;Z h=b.u4;Z c=b.u3;Z j=l;4n(n<a){if(!b.oH){m.4P();m.3A(j[0],j[1])}n+=g[d];if(n>=a){b.br=n-a-g[d];b.u5=d;b.u4=h;b.u3=c;b.oH=1j;n=a}1f{b.oH=1m}if(h){m.6X=i}1f{m.6X="4f(0,0,0,0)"}j=[l[0]+n*f,l[1]+n*e];m.4T(j[0],j[1]);if(!b.oH){m.2k()}h=!h;d=(d+1)%g.1g}},E8:1b(b,a,d,c){1c V.u2(b,a,d,c,1j)},3b:1b(){Z c=V.dZ;1i(Z d=0,a=c.1g;d<a;d++){Z b=c[d];b&&(b.a1=1d)}c.1g=0},nw:1b(f,c){Z g=f+1;Z b=c+1;if(g>=nx){g=g%nx+1}Z e="St"+g.2c(16);Z a=e.1g;e=e.k4(a-4,a);Z d="Ss"+b.2c(16);a=d.1g;d="#"+d.k4(a-2,a)+e;1c d},1T:"1a.fu"});1a.fu.u1={cx:{81:"Sr iQ-iP",6S:"7Z",5E:"5Z",Sq:"Sp",kG:1m,kF:0,fx:"4f(1V,1V,1V,1)",dY:"4f(0,0,0,0)",7G:0,7F:0,u0:0,3D:1,4O:"5H-2G",fy:1j},dM:{fw:"",7x:3,tZ:1,tY:"#nJ",7G:0,7F:0,4W:"#nK",3D:1,4O:"5H-2G",fy:1j},fn:{6X:"4f(0,0,0,0)",2I:1,3I:"5C",ep:"39",gI:10,br:0,cG:[],8D:1,5P:0,3D:1,4O:"5H-2G",fy:1j},fm:{6X:"4f(0,0,0,0)",2I:1,3I:"5C",ep:"39",gI:10,br:0,E7:1,6r:1,cG:[],4W:"4f(0,0,0,0)",So:1,7G:0,7F:0,3D:1,4O:"5H-2G",fy:1j},Sn:{gF:0,gE:"4f(0,0,0,0)",gD:0,gC:0},Sm:{3D:1,4O:"5H-2G",fy:1j}};1a.bq=1a.1U({3L:1d,2T:1d,6v:1d,4D:1d,dW:1d,1k:1d,E6:1d,1w:1d,bg:1d,5S:1d,Sl:1m,1B:1b(b,c,d,a){V.bg=b;V.6v=c;V.1k=d;1a.1t.8J(V,a);if(!V.5S){V.5S=1n 1a.fu(V.3L,V.2T,a)}},1Q:1b(){V.3L=1d;V.1k=1d;V.dW=1d;V.bg=1d;V.5S=1d;V.6v=1d},aP:1b(){V.5S.3L=V.3L;V.5S.2T=V.2T;Z a=V.6v,b=V.1k||{};a.bh=V.bg.tU;V.5S.dF(a,b,V.am)},1T:"1a.bq"});1a.bq.E5={cx:{"1K-5M":"bQ","1K-fk-2h":"eo","1K-hA":"6S","1K-dp-5O":"5E","1K-dq-5O":"6S","1K-kG":"kG","1K-7O":"aM","1K-2h":"oG","1K-5A-5D":"kF","1K-5A-1X":"fx","1K-26":"dY","1K-2s":"3D","1K-dx":"7G","1K-dy":"7F","1K-4r-op":"4O"},dM:{"3j-5Q":"fw","3j-26":"4W","3j-5D":"7x","3j-5A-5D":"tZ","3j-5A-1X":"tY","3j-dx":"7G","3j-dy":"7F","3j-2s":"3D","3j-4r-op":"4O"},fn:{"1Z-1X":"6X","1Z-1I":"2I","1Z-nI":"3I","1Z-44":"ep","1Z-hC":"gI","1Z-8C-5P":"br","1Z-2s":"8D","1Z-hB":"cG","1Z-5P":"5P","1Z-4r-op":"4O"},fm:{"1Z-1X":"6X","1Z-1I":"2I","1Z-nI":"3I","1Z-44":"ep","1Z-hC":"gI","1Z-8C-5P":"br","1Z-2s":"8D","1Z-hB":"cG","3x-26":"4W","3x-dx":"7G","3x-dy":"7F","3x-2s":"6r","3x-4r-op":"4O"}};1a.E4={Sk:{6w:"",1p:"Sj",2C:1j},2I:{6w:"2I",1p:"3s",3m:"mm",2C:0.1},E3:{6w:"",1p:"1X",2C:"4f(0,0,0,0)"},Si:{6w:"",1p:"3s",3m:"mm",2C:""},Sh:{6w:"",1p:"3s",3m:"E2",2C:""},Sg:{6w:"4W",1p:"1X",2C:"4f(0,0,0,0)"},dY:{6w:"4W",1p:"1X",2C:"4f(0,0,0,0)"},oF:{6w:"oF",1p:"3s",3m:"mm",2C:2.4},Sf:{6w:"",1p:"3s",2C:0},Se:{6w:"",1p:"3s",2C:0},Sd:{6w:"6X",1p:"1X",2C:"4f(0,0,0,0)"},Sc:{6w:"",1p:"3s",2C:100},Sb:{6w:"",1p:"3s",3m:"mm",2C:0},Sa:{6w:"",1p:"3t",2C:"S9"},tX:{6w:"",1p:"3s",2C:0},S8:{6w:"",1p:"3s",3m:"E2",2C:0},S7:{6w:"",1p:"3s",2C:0},tW:{6w:"",1p:"3s",2C:0}};1a.bq.E1={3b:"",2i:"",2x:"","2i-2G":"5H-2G","2x-2G":"bX-2G","2i-in":"5H-in","2x-in":"bX-in","2i-3u":"5H-3u","2x-3u":"bX-3u","2i-3E":"5H-3E","2x-3E":"bX-3E",8l:"8l",8N:"E0",9H:"",7q:"",8i:"",9G:"",8T:"",8k:"E0","1X-9F":"","1X-9E":"","9D-5h":"","9C-5h":"",8S:"",9B:"",9A:"",4j:"","4j-3X":"","5g-6s":"","5g-9z":"",8R:"",8Q:"",1X:"",1l:""};1a.6M.kC=1a.1U(1a.6M,{6Z:1j,2S:1d,i2:1d,i1:1d,3J:1d,DY:1d,ht:1j,DZ:1d,7M:1d,S6:1d,6d:1d,bp:1d,oC:1d,kE:1j,1B:1b(e,a,f,c,d,b){1a.6M.1u.1B.1x(V,1G);if(V.DZ!=1d){1a.1t.8J(V,1a.6M.6R.S5)}V.2S=c;V.3J=2n.2K("2o");V.3J.1k.xT="dt";V.3J.1k.2H="a5";V.i2=[];V.i1=[];V.6d=[];V.bp=[];V.DY=V.1w.6H&&1a.1t.S4();V.7M=e.7M;V.1w=e},1Q:1b(){if(V.1W!=1d){V.DJ()}if((V.3J!=1d)&&(V.3J.6Y===V.1w.2o)){V.1w.2o.a8(V.3J)}1i(Z c=0,a=V.6d.1g;c<a;c++){Z b=V.6d[c];V.6d[c].1Q()}V.3J=1d;V.1w.1Y.S3("dX",V,V.oD);1a.6M.1u.1Q.1x(V,1G);V.kE=1j;V.oC=1d;V.6d=1d;V.bp=1d;V.S2=1d},2A:1b(a){if(a==1d){a=1n 1a.6M.kC(V.1w,V.2H,V.3Q,V.2S,V.5M)}a=1a.6M.1u.2A.1x(V,[a]);a.1W=1d;1c a},DM:1b(a){if(a 2a 1a.kD){V.6d.1r(a)}},S1:1b(b){if(b 2a 1a.kD){1i(Z c=0,a=V.6d.1g;c<a;c++){if(b.k1(V.6d[c])){V.6d.6o(c,1)}}}},DK:1b(){if(!V.6d||V.6d.1g<1){1c[]}1b e(j,i){Z h=j.2j,k=i.2j;1c h-k}Z d=[];Z b=[];Z g=[];1i(Z c=0,a=V.6d.1g;c<a;c++){Z f=V.6d[c];if(f.2j===0){b.1r(f)}1f{if(f.2j<0){d.1r(f)}1f{g.1r(f)}}}d.1g>0&&d.6n(e);g.1g>0&&g.6n(e);1c d.5k(b).5k(g)},cB:1b(){if(V.1w!==V.1w.1v.9v&&V.1w.S0){V.3Q=V.RZ(V.2H)}Z a=1a.6M.1u.cB.1x(V,1G);V.3b();if((1a.1t.3k(V.1w.DI,V.1w.ky)!==-1)||V.1w.tB){if(a){V.1Y.oE("dX",V,V.oD);V.1w.1Y.oE("dX",V,V.oD)}}1f{if(a&&V.ht){V.1Y.oE("dX",V,V.oD);V.ht=1m}}if(!a){1c 1m}if(V.9y){V.1Y.2z("DX")}1f{V.9y=1j;V.1Y.2z("DW")}1c V.DV()},DV:1b(){V.kE=1m;Z a=V.1w.oh(V.3Q);V.2S=a.2S;V.3J.1k.DU=V.RY?0:1;V.1w.2o.2r(V.3J);V.DT(a.tw);1c 1j},DT:1b(a){if(V.1w===1d){1c}1a.1t.gv(V.3J,1d,V.2H,V.5M);V.3J.2q("2g-tw",a.x+"-"+a.y+"-"+a.z);V.DS()},3b:1b(){V.oC=1b(){};V.kE=1j;if(V.6d){1i(Z c=0,a=V.6d.1g;c<a;c++){Z d=V.6d[c];Z b=d.3L&&d.3L.1W;Z e=d.2T&&d.2T.1W;if(b){V.i2.1r(b)}if(e){V.i1.1r(e)}d.3b();d.3L&&V.3J.a8(d.3L.1W)}}V.6d=[]},DN:1b(){Z a,d,f,c;Z e=V.1w.RX||{x:0,y:0};Z b=V.1w.RW(V.3Q);if(V.i2&&V.i2.1g>0){a=V.i2.89()}1f{a=V.tV(1d,e,b,1d,"a5",1d,1d,1j)}d=a.4G("2d");if(V.6Z){if(V.i1&&V.i1.1g>0){f=V.i1.89()}1f{f=V.tV(1d,e,b,1d,"a5",1d,1d,1j)}c=f.4G("2d")}if(V.1w.2s!=1d){1a.1t.gv(a,1d,1d,1d,1d,1d,1d,V.1w.2s)}1c{1W:a,3L:d,nD:f,2T:c}},tV:1b(h,f,g,b,a,e,d){Z c=2n.2K("1W");if(!h){h=1a.1t.5s("RV")}if(!a){a="a5"}1a.1t.gv(c,h,f,g,a,e,1d,d);c.1I=b6;c.1L=b6;1c c},DS:1b(){Z e=V;e.9y=1j;Z i=e.1w.Dg(e.3Q);if(i){e.oB(i);e.9y=1m;e.4i()}1f{Z k=1n 1a.od.ks();Z b=e.DQ=e.2S.3h(/&t=\\d+/,"");if(e.1w.tN&&2u.fv&&2u.fv.DR(b)){e.1Y.2z("dX");Z j=2u.fv.DR(b);Z m=k.hN(j);i=m.DP;e.oB(i);e.9y=1m;e.4i();e.1w.tv(e.3Q,i)}1f{Z c=1a.1t.hO(e.2S);Z l="";if(!c){l=e.2S.3h(/.6u/,".tm")}1f{l=e.2S}Z h=e.1w.dR(e.3Q);Z g=h.x,f=h.y,d=h.z;l=2u.RU(l);Z a=V.oC=1b(p,o,n){1c 1b(q){if(!p.3Q){1c}Z u=p.1w.dR(p.3Q);if(V.DQ!==o||p.kE||u.x!==g||u.y!==f||u.z!==d){1c}p.1Y.2z("dX");if(!q&&!q.hd){1c}Z r=n?1a.1t.RT(q):q;i=r.DP;if(!i){1c}p.1w.tv(p.3Q,i,h);if(p.1w.tN&&2u.fv&&r){Z s=n?q.hd:k.RS(q);6k{2u.fv.DO(o,s)}6B(t){2u.fv.3b();2u.fv.DO(o,s)}}p.oB(i);p.9y=1m;p.4i()}}(e,b,c);1a.1t.tk({2S:l,9w:"jK",hO:c,tj:a,th:1b(){8y 3W("RR oe RQ!")},6L:e})}}},oB:1b(a){Z j=V.1w&&V.1w.5S;1i(Z d=0,g=a.1g;d<g;d++){Z k=a[d];Z b=k.1M;Z f=k.6a;Z h=V.tP(f);Z c=V.DN();Z e=1n 1a.kD(f,V,{1w:V.1w,tU:d,2j:d,dU:h&&h.dU,3L:c.3L,2T:c.2T,5S:j});e.6E(b);V.tQ(e,h&&h.oz);V.DM(e)}},tQ:1b(a,b){if(!b){Z e=V.tP(a.6a);b=e&&e.oz}Z d=V.1w&&V.1w.5S;Z c=1n 1a.bq(a,1d,1d,{dW:b,tS:1j,1w:V.1w,3L:V.3L,2T:V.2T,5S:d});a.tR(c);V.1w&&V.1w.tL&&V.tT(a,V.1w.tL,1j);V.1w&&V.1w.oy&&V.tT(a,V.1w.oy,1m)},tT:1b(e,m,j){Z h=V.1w&&V.1w.5S;Z b=1m;Z l=1a.dO.ol==="pc";1i(Z d=0,g=m.1g;d<g;d++){Z f=m[d];f.oA=j;if(f.1g<1&&!f.bh){3o}Z k=a(e,f.5q);if(k){if(f.4D.3k("4k")>=0){l?V.1w.oa("4k"):V.1w.oa("eV");3o}if(f.4D.3k("7j")>=0){V.1w.oa("7g");3o}if(f.1g>=1){Z c=1n 1a.bq(e,1d,1d,{dW:f,tS:1m,1w:V.1w,3L:V.3L,2T:V.2T,5S:h});e.tR(c,f.4D)}if(f.bh||f.bh==0){e.DL(f.bh)}b=1j}}1b a(o,r){if(r.1g<1){1c 1m}1i(Z n=0,i=r.1g;n<i;n++){Z p=r[n];Z q=p.1p;if(q==="o7"){1c q}q=q==="4b"?"i0":q;if(o[q]!==p.fr){1c 1m}}1c 1j}1c b},D3:1b(b,g){Z f=[];if(V.bp){1i(Z c=0,a=V.bp.1g;c<a;c++){Z e=V.bp[c];Z d=e.dV(b,g);if(d&&d.6v){f.1r(d)}}}1c f.7K()},RP:1b(b,c){if(V.bp){Z a=V.bp.1g;if(a>0){1c V.bp[a-1].dV(b,c)}}},4i:1b(g,h){1a.1t.gv(V.3J,1d,V.2H,V.5M);if(g){1i(Z e=0,a=V.6d.1g;e<a;e++){Z d=V.6d[e];d.3R=[];d.2j=0;V.tQ(d)}}if(h){h.6D()}1f{4n(V.3J.kf){V.3J.a8(V.3J.kf)}Z f=V.bp=V.DK();1i(Z c=0,b=f.1g;c<b;c++){d=f[c];d.3L&&d.3L.1W&&V.3J.2r(d.3L.1W);d.6D()}V.3J.1k.4H="hM"}},RO:1b(a){a.3D=0;a.7E(0,0,V.1W.1I,V.1W.1L)},tP:1b(a){if(V.7M==1z){1c 1d}Z c=V.7M[a];if(!c){1c 1d}Z b={bh:c.bh,dU:c.dU};4h(c.dU){1E"RN":1E"tO":b.oz=c.1k;1H;1o:if(c.1k){b.oz=c.1k}1H}1c b},DJ:1b(){1a.3f.RM(V.1W);if(V.1W.6Y===V.3J){V.3J.a8(V.1W)}},fl:1b(){V.3J.1k.4H="";if(1a.1t.3k(V.1w.DI,V.1w.ky)!==-1){if(1a.C0===1j){V.3J.k0=V.3J.k0}}},cu:1b(){V.3J.1k.4H="3c"},rb:1b(){if(!V.1W||V.9y){1c}Z b;if(V.3J){Z a=V.3J.RL(1m);b=V.1W;b.1k.2H="a5";b.1k.2F=a.1k.2F.3h(/px/,"%");b.1k.4y=a.1k.4y.3h(/px/,"%");b.1k.1I=a.1k.1I.3h(/px/,"%");b.1k.1L=a.1k.1L.3h(/px/,"%")}1f{b=V.1W}V.1W=1d;1c b},1T:"1a.6M.kC"});1a.6M.kC.RK={fn:"fn",DH:"DH",dM:"dM",fm:"fm",DG:"DG",DF:"DF",cx:"cx",DE:"DE"};jQ.1u.RJ=1b(c,a){Z d=V;1i(Z b=V.1g;b<c;b++){d=a+d}1c d};1a.6M.6R.RI=(1a.dO.2h==="yI"||1a.dO.2h==="RH");1a.1J.fq=1a.1U(1a.1J.bm,{fp:1d,dT:1d,5G:["cA","DB"],og:1d,hV:1d,7N:1d,8O:1d,2t:1d,5B:1d,fs:1j,cE:1d,7M:1d,Du:1d,tc:1d,j5:1j,RG:"tl",Dt:1d,oc:1m,9t:1d,tJ:1d,ox:1d,kB:1d,cF:1d,bo:1d,5S:1d,tN:1m,hS:62,tA:120,dQ:1d,ay:1d,hR:[],kv:mj,1B:1b(b,c,f,k){Z h=V,i;h.bn=1m;h.ti=1m;h.kr=1m;h.tp=1a.6M.kC;h.dQ={};if(!!1a.kz){h.kv=tM}if(k&&k.9t){V.ox=V.9t=k.9t;V.oc=k.oc;i=1n 1a.1A(k.9t);h.oy=i.hZ()}if(k&&k.cF){V.cF=k.cF;i=1n 1a.1A(k.cF);h.kB=i.hZ()}if(k&&k.dT){V.dT=k.dT}if(k&&k.9x&&k.9x 2a 1a.bj){h.9x=k.9x}Z d=1a.dO;if(!!1a.kz){h.RF=tM}1a.1J.bm.1u.1B.1x(h,1G);h.DA();if(!V.5S){V.5S=1n 1a.fu(1d,1d,{1w:V,dT:V.dT})}if(h.bn){h.bn=1a.1t.RE()}if(d.ol==="jN"){h.bn=1m}if(1a.kz){tE.dS(1b(l){h.RD="5Q://"+l.RC+"/"},1b(l){},"tD","RB",[]);h.bn=1j}if(h.bn){h.1W=2n.2K("1W");h.1W.id="DD"+h.id;h.1W.1k.2H="a5";h.2o.2r(h.1W);h.8P=h.1W.4G("2d");h.RA=1n 1a.Rz(h);h.Ry={}}h.Rx=h.bn?1j:1m;h.hU=1j;1a.1t.nv(h.aw,h.Ds);h.1Y.b4("cA");if(1P h.aw.bk!=="1z"){if(!h.aw.bk){4S h.aw.bk}}if(h.5p){h.5p=h.5p.9f()}h.1Y.on({tI:1b(){h.D8()}});if(h.5B&&h.9u&&(h.3r||h.4J)){}1f{if(!h.5B&&(!h.7N||!h.8O||!h.2t)){if(!!1a.kz){Z j={6K:h};tE.dS(1b(l){1c 1b(m){l.6K.Dx(l,m)}}(j),1b(l){},"tD","Rw",[V.2h,V.Rv])}1f{Z e=h.2S;if(1a.1t.5u(c)){e=c[0]}Z a=1n 1a.fj.Dw(e,{ax:{ov:h.tG,6L:h,ou:h.tC},6c:h.6c,bi:V.bi});a.ot(h.9x)}}}if(h.6c){if(1P h.6c==="3t"){h.6c=1n 1a.DC(h.6c)}Z g=h.6c.Ru().6q(":");if(g 2a 4d&&g.1g===2){h.og=\'{"Rt":\'+g[1]+"}"}}},t6:1b(g,l){if(1P g==="3t"){Z h,b,k;if(l){h=V.tJ=g;k=1n 1a.1A(h);V.tL=k.hZ()}1f{b=V.ox=g;k=1n 1a.1A(b);V.oy=k.hZ()}V.tc=1d;V.tK=1j;V.ay=1d;1i(Z f=0,e=V.av.1g;f<e;f++){Z a=V.av[f];1i(Z d=0,c=a.1g;d<c;d++){a[d].4i(1j)}}V.tK=1m;V.1Y.2z("DB",{D9:V.9t})}},Rs:1b(b){if(1P b==="3t"){V.cF=b;Z a=V.cF=1n 1a.1A(b);V.kB=Rr.hZ();V.1Y.2z("Rq",{cF:V.cF})}},Rp:1b(){1c V.ox},Ro:1b(){1c V.tJ},Rn:1b(b){V.cC={};1i(Z c=0,a=b.1g;c<a;c++){Z d=b[c];if(d.4D.3k("4k")>=0){V.cC.4k=V.cC.4k||[];V.cC.4k.1r(d)}if(d.4D.3k("7j")>=0){V.cC.7g=V.cC.7g||[];V.cC.7g.1r(d)}}},DA:1b(){V.bo={1g:0,nr:"Dy"};V.1Y.b4("tI");Z e=V;Z a=1a.1t.kA()+"4W/";Z d=6;1i(Z b=0;b<d;b++){Z f=1n 6R();Z c="Dz "+(b+2);f.2i=a+c+".hY";f.a1=1b(h,g,i){1c 1b(){if(!i.bo){1c}i.bo[h]=V;i.bo.1g++;i.bo.nr="Dy";if(i.bo.1g===g){i.bo.nr="ow";i.1Y.2z("tI")}}}(c,d,e)}},CY:1b(b){Z e=V,d,a,c,f;f=e.1v.9v.3r;a=f.1g;c=b[0];1i(d=0;d<a;d++){if(c===f[d]){1c d}}1c 0},Dx:1b(Rm,r){Z 8n=r.6u;Z me=V;if(8n!=="1m"){8n=Rl("("+8n+")");Z 3Q=8n.3Q;3Q=1n 1a.d9(3Q.2F,3Q.4F,3Q.4y,3Q.2m);me.9u=3Q;if(8n.5B){me.5B=8n.5B;me.74.4J=8n.4J;me.5p=8n.3m;me.6b=Rk}1f{Z 7N=8n.7N,hW=8n.hW,8O=8n.8O,2t=8n.2t,6b=8n.6b;7N=1n 1a.d9(7N.2F,7N.4F,7N.4y,7N.2m);me.7N=7N;8O=1n 1a.oq(8O.oo.x,8O.oo.y);me.8O=8O;me.2t=2t;hW=hW.9f();me.5p=me.5p||hW;me.6b=6b;me.5B=1a.1t.Dv(7N,8O,2t,me.5p,6b)}me.1Y.2z("cA",me)}1f{Z tH=me.2S;if(1a.1t.5u(me.2S)){tH=me.2S[0]}Z hV=1n 1a.fj.Dw(tH,{ax:{ov:me.tG,6L:me,ou:me.tC},6c:me.6c,bi:me.bi});hV.ot(me.9x)}},tG:1b(c){Z j=V;if(c.hX){Z g=1d;Z d=c.Rj;if(d){g=d.Ri;if(!j.4J&&d.Rh&&(g&&g.1g&&g.1g>0)){V.74.4J=g}}c=c.hX;Z b=c.3Q,f=c.7N,i=c.hW,h=c.8O,e=c.2t,k=c.6b,a=c.Rg;f=1n 1a.d9(f.2F,f.4F,f.4y,f.2m);j.7N=f;h=1n 1a.oq(h.oo.x,h.oo.y);j.8O=h;j.2t=e;b=1n 1a.d9(b.2F,b.4F,b.4y,b.2m);j.9u=b;i=i.9f();j.5p=j.5p||i;j.6b=k;j.5B=1a.1t.Dv(f,h,e,j.5p,k);if(!j.6c&&a){j.6c="tF:"+a}if(!!1a.kz){tE.dS(1b(){},1b(l){},"tD","Rf",[V.2h,c])}j.kr=1j;if(j.ti){j.1Y.2z("cA",j)}}},tC:1b(a){},1Q:1b(){Z a=V;if(a.hV){a.hV.1Y.Rd=1d;a.hV.1Q()}a.7N=1d;a.8O=1d;a.2t=1d;a.Du=1d;a.Dt=1d;a.7M=1d;a.9t=1d;a.bo=1d;a.5S&&a.5S.1Q();a.fp=1d;1a.1J.bm.1u.1Q.1x(a,1G);a.Ds=1d;a.dQ=1d;a.hR=1d;a.kv=1d},2A:1b(b){Z a=V;if(b==1d){b=1n 1a.1J.fq(a.2h,a.2S,a.aw,a.qy())}b=1a.1J.bm.1u.2A.1x(a,[b]);b.ft=1d;1c b},fr:1b(){V.3r=1d;V.4J=1d;V.dQ={};V.hR=[]},3A:1b(c,g,l){Z s=V,r=V.1v.7A.1k,a=2P(r.2F),k=2P(r.2m);V.Dm=g?1j:1m;V.Rc=-a;V.Rb=-k;if(!g&&!s.tx&&s.bn){V.Ra()}1a.1J.tq.1u.3A.1x(s,1G);c=c||s.1v.7d();Z m=V.1v.6U();s.Dn=g;s.Ca=l;Z d=V.kx/m;if(d&&d!==1&&!V.1v.Dk&&1a.dO.ol==="pc"){Z h="4V("+(V.oj||0)+"px,"+(V.oi||0)+"px)";V.2o.1k.2J=h;V.2o.1k["-ms-2J"]=h;V.2o.1k["-ty-2J"]=h;V.2o.1k["-aX-2J"]=h;V.2o.1k["-o-2J"]=h;2u.7Y(V.Dr);V.Dr=2u.8A(1a.3g.3p(1b(){V.hT&&V.hT.8I();V.Di(1,d)},V),V.tA)}if(c!=1d){Z q=!s.av.1g||g;Z f=s.Dq();if(V.tB){if(q||(!l&&!f.om(c))){if(g&&V.ky!=="7X"){V.R9()}if(!g||V.ky==="7X"){V.Dl(m)}V.Dp(c)}}1f{if(q||!f.om(c,1j)){if(V.hU){V.Dn=1j;V.Dm=1j;V.hU=1m;if(g&&V.ky==="7X"){V.Dl(m)}V.bl(c);V.kw=V.1v.tz(1n 1a.dh(0,0));V.kx=m}1f{if(V.kw&&V.kx&&!V.1v.Dk&&1a.dO.ol==="pc"){2u.7Y(V.ft);V.ft=2u.8A(1a.3g.3p(1b(){V.hT&&V.hT.8I();h="";V.2o.1k.2J=h;V.2o.1k["-ms-2J"]=h;V.2o.1k["-ty-2J"]=h;V.2o.1k["-aX-2J"]=h;V.2o.1k["-o-2J"]=h;V.bl(c);V.kw=V.1v.tz(1n 1a.dh(0,0));V.kx=V.1v.6U()},V),V.hS+V.tA)}1f{V.ft&&2u.7Y(V.ft);1i(Z o=0,p=V.av.1g;o<p;o++){Z b=V.av[o];1i(Z n=0,e=b.1g;n<e;n++){Z t=b[n];t&&t.3b()}}V.bl(c);V.kw=V.1v.tz(1n 1a.dh(0,0));V.kx=V.1v.6U()}}}1f{V.oj=a;V.oi=k;V.Dj()}}}},Di:1b(b,h){Z g=V,a=6;Z c=g.1v.nl(g.kw).2A(),i=g.hT=g.hT||1n 1a.R8(),e=g.oj||0,d=g.oi||0;Z f=h-b;i.R7=g.hS/a;i.aS=1a.R6.qW.R5;g.tx=1j;i.4m([b],[h],a,{4w:{R4:1b(n){Z o=n[0],m=(o-b)/f,k=(c.x-e)*m||0,j=(c.y-d)*m||0;k+=e;j+=d;Z l="4V("+k+"px,"+j+"px) 2t("+o+")";g.2o.1k.2J=l;g.2o.1k["-ms-2J"]=l;g.2o.1k["-ty-2J"]=l;g.2o.1k["-aX-2J"]=l;g.2o.1k["-o-2J"]=l}}})},bl:1b(a){V.tx=1m;V.oj=0;V.oi=0;V.2o.1k.2F="ar";V.2o.1k.2m="ar";1a.1J.bm.1u.bl.1x(V,1G);V.R3=V.av.1g;V.R2=V.av[0].1g},oh:1b(d){Z c=V,a;d=c.R1(d);a=c.dR(d);Z b=c.Df(a);if(V.bi){b=V.bi+Dh(b)}1c{2S:b,tw:a}},dR:1b(b){Z f=V,h,g,e,c=f.1v,d=c.6U(),a=f.R0(),i=f.hP;h=1q.39((b.2F-a.bR)/(d*i.w));g=1q.39((a.es-b.2m)/(d*i.h));e=c.7W();1c{x:h,y:g,z:e}},Dg:1b(c){Z b=V,a=b.dR(c);a="x"+a.x+"y"+a.y+"z"+a.z;1c b.dQ[a]},tv:1b(d,e,b){Z c=V;if(c.kv==0){1c}b=b||c.dR(d);if(b&&b!=""){if(c.hR.1g>=c.kv){Z a=c.hR.89();c.dQ[a]=1d;4S c.dQ[a]}b="x"+b.x+"y"+b.y+"z"+b.z;c.dQ[b]=e;c.hR.1r(b)}},Df:1b(g){Z f=V,c,j=f.hP,b=V.1v.9v.De?g.z+V.1v.9v.De:g.z,a=f.4J[b];if(!a){a=V.tu(b)}if(V.1v&&V.1v.9v&&V!==V.1v.9v){Z d=V.1v.9v.tu(g.z)*V.1v.9v.5B/V.5B;Z h=[1e-9,2e-9,4e-9,8e-9,1.6e-8,3.2e-8,6.4e-8,1.QZ-7,2.QY-7,5.12e-7,0.QX,0.QW,0.QV,0.QU,0.QT,0.QS,0.QR,0.QQ];Z i=g.z>h.1g?h.1g:g.z;if(d&&1q.4t(d-a)>h[i]){a=d}}c={1I:j.w,1L:j.h,x:g.x,y:g.y,2t:a};if(f.9x||1a.bj.cD){Z e=f.9x||1a.bj.cD;c[e.2h]=e.cr()}if(!f.aw.ku){c.t=1n 9i().gL()}if(1P f.aw.bk!=="1z"&&1P c.bk==="1z"){if(f.aw.bk&&f.aw.bk.1g>0){c.bk=f.aw.bk}}if(f.og){c.QP=f.og}1c f.Dd(c)},Dd:1b(e,d){Z g=V,b=d||V.2S,f,a,c;f=1a.1t.8J({},g.aw),f=1a.1t.8J(f,e);if(f.fs===1m){g.cE=f.cE;g.fs=f.fs;4S f.fs;4S f.cE}a=1a.1t.tt(f);if(1a.1t.5u(b)){Z i=""+e.x+e.y;b=g.Dc(i,b)}b=b+"/oe.6u";c=1a.1t.QO(1a.1t.QN(b));1i(Z h in f){if(h.bU()in c){4S f[h]}}a=1a.1t.tt(f);if(g.ts){a=a+\'&hQ={"x":\'+g.ts.bR+\',"y":\'+g.ts.es+"}"}if(g.fs===1m){g.cE=g.cE?g.cE:1n 1a.fj.QM();a+="&fs=1m&cE="+g.cE.2c()}1c 1a.1t.Db(b,a)},Da:1b(b){if(1P(b.kt)!=="1z"){if(b.kt 2a 1a.1R){b.QL=1j;Z a=1a.fj.QK.QJ(b.kt);b.kt=1a.1t.QI(a)}1f{4S b.kt}}1c 1a.1J.tq.1u.Da.1x(V,[b])},QH:1b(c,a){Z b=1n V.tp(V,a,c,1d,V.hP,V.tn);V.1Y.2z("QG",{6K:b});1c b},D5:1b(){Z c=V;Z d=c.2S+"/oe/QF.6u";Z a=1a.1t.hO(d);if(!a){d=d.3h(/.6u/,".tm")}if(c.9x||1a.bj.cD){Z b=c.9x||1a.bj.cD;d=d+"?"+b.D7()}1a.1t.tk({2S:d,bi:c.bi,hO:a,9w:"jK",tj:1b(e){1c 1b(g){Z i=e?1n 1a.od.ks().hN(g.hd):g;if(!i){1c}if(i.1k&&i.1p==="D9"){Z h=i.1k;1i(Z f in c.7M){Z j=f.3h(/[@#\\s]/gi,"nQ");h=h.3h(f.3h(/[#]/gi,"\\\\#"),j)}h=h.3h(/[#]/gi,"\\n#");h=h.3h(/\\[33/gi,"[2t");c.t6(h,1j)}if(c.kr){c.1Y.2z("cA",c)}}}(a),th:1b(){if(c.kr){c.1Y.2z("cA",c)}},6L:c})},D8:1b(){Z c=V;Z d=c.2S+"/5R.6u";Z a=1a.1t.hO(d);if(!a){d=d.3h(/.6u/,".tm")}if(c.9x||1a.bj.cD){Z b=c.9x||1a.bj.cD;d=d+"?"+b.D7()}1a.1t.tk({2S:d,bi:c.bi,hO:a,9w:"jK",tj:1b(e){1c 1b(g){c.ti=1j;c.7M=e?1n 1a.od.ks().hN(g.hd):g;if(!c.7M){1c}Z n={};1i(Z l=0,f=c.7M.1g;l<f;l++){Z m=c.7M[l].D6.5R;1i(Z k=0,h=m.1g;k<h;k++){m[k].bh=h-k;n[m[k].2h]=m[k]}}c.7M=n;if(!V.oc){c.D5()}1f{if(c.kr){c.1Y.2z("cA",c)}}}}(a),th:1b(){},6L:c})},D2:1b(e,d){Z c=V.1v.D4({x:e,y:d});if(!c){1c 1d}Z a=V.tg(c);if(!a){1c 1d}Z b=a.6K.D3(a.i,a.j);b.xy={x:e,y:d};1c b},D1:1b(a){V.tf=V.kq;V.kq=a;V.ob=1j;V.te=1m;V.4i(1d,a&&a.bg)},D0:1b(){V.ob=1m;V.tf=V.kq;V.kq=1d;V.te=1j;V.4i()},4i:1b(){1i(Z b=0,d=V.av.1g;b<d;b++){Z e=V.av[b];1i(Z a=0,c=e.1g;a<c;a++){e[a].4i()}}},oa:1b(a){if(V.au&&V.au[a]){1c}Z c=V.1v;Z b={};b[a]=1b(e,d){1c 1b(o){if(!o.xy||!o.xy.x){1c}if(d==="eV"){d="4k"}Z g=e.D2(o.xy.x,o.xy.y);Z n=1m;Z k={1p:1d};if(g&&g.bg){Z j=e.cC&&e.cC[d]||[];1i(Z l=0,m=j.1g;l<m;l++){if(j[l].1g<1){3o}Z f=j[l].5q;n=h(g.bg,f,k);if(n&&j[l].o9){n=j[l].o9(g.hz)}if(n){e.tc=k.1p==="tb"?j[l]:1d;e.QE=k.1p==="kp"?j[l]:1d;1H}}}if(n){e.o8=d;e.D1(g)}1f{if(e.o8==="7g"||(e.o8==="4k"&&d==="4k")){e.o8=1d;e.D0()}}1b h(r,u,i){if(u.1g<1){1c 1m}1i(Z q=0,p=u.1g;q<p;q++){Z s=u[q];Z t=s.1p;if(t==="o7"){i.1p="kp";1c 1j}if(r[t]!==s.fr){1c 1m}}i.1p="tb";1c 1j}}}(V,a);V.au=V.au||{};V.au[a]=V.au[a]||{};V.au[a]=b[a];c.1Y.on(b)},QD:1b(b){if(!V.au||!V.au[b]){1c}Z c=V.1v;Z d=V.au[b];1i(Z a=d.1g-1;a>=0;a--){c.1Y.un(d[a])}V.au[b]=1d},QC:1b(){Z h=V,d,g,a,f,j={},e=1j;if(h.3r&&h.4J){g=h.3r.1g;h.3r.6n(1b(l,i){1c(i-l)});if(!h.bf){h.bf=h.3r[0]}if(!h.bb){h.bb=h.3r[g-1]}h.4J.6n(1b(l,i){1c(l-i)});if(!h.bc){h.bc=h.4J[g-1]}if(!h.bd){h.bd=h.4J[0]}h.o5=g;1c}1i(d=0,g=h.o6.1g;d<g;d++){a=h.o6[d];j[a]=h.74[a];if(e&&h.74[a]){e=1m}}if(h.CZ==1d){h.CZ=e}if(j.3r==1d){j.3r=h.t9(j.4J)}if(j.3r==1d){j.3r=h.t8(j)}if(h.1v.3r&&h.1v.4J){h.3r=h.1v.3r;h.4J=h.1v.4J;g=h.3r.1g;h.3r.6n(1b(l,i){1c(i-l)});if(!h.bf){h.bf=h.3r[0]}if(!h.bb){h.bb=h.3r[g-1]}h.4J.6n(1b(l,i){1c(l-i)});if(!h.bc){h.bc=h.4J[g-1]}if(!h.bd){h.bd=h.4J[0]}h.o5=g;1c}if(j.3r==1d){1i(d=0,g=h.o6.1g;d<g;d++){a=h.o6[d];j[a]=h.74[a]!=1d?h.74[a]:h.1v[a]}if(j.3r==1d){j.3r=h.t9(j.4J)}if(j.3r==1d){if(h.1v.9v!=1d){j.3r=h.1v.9v.3r}}if(j.3r==1d){j.3r=h.t8(j)}}Z c;if(h.74.bf&&h.74.bf!=="73"){c=h.74.bf}if(h.74.bd){c=1a.1t.ko(h.74.bd,h.5B,h.5p,h.6b)}Z b;if(h.74.bb&&h.74.bb!=="73"){b=h.74.bb}if(h.74.bc){b=1a.1t.ko(h.74.bc,h.5B,h.5p,h.6b)}if(j.3r){j.3r.6n(1b(l,i){1c(i-l)});if(!c){c=j.3r[0]}if(!b){Z k=j.3r.1g-1;b=j.3r[k]}}h.3r=j.3r;if(h.3r){g=h.3r.1g;h.4J=[g];if(h.1v.9v){f=V.CY(h.3r)}1f{f=0}1i(d=f;d<g+f;d++){h.4J[d]=1a.1t.ta(h.3r[d-f],h.5B,h.5p,h.6b)}h.o5=g}h.bb=b;if(b){h.bc=1a.1t.ta(b,h.5B,h.5p,h.6b)}h.bf=c;if(c){h.bd=1a.1t.ta(c,h.5B,h.5p,h.6b)}},t9:1b(e){if(e==1d){1c}Z d=V,b,a;a=e.1g;b=[a];1i(Z c=0;c<a;c++){b[c]=1a.1t.ko(e[c],d.5B,d.5p,d.6b)}1c b},t8:1b(l){Z k=V,n=l.bf;if(l.bd!=1d){n=1a.1t.ko(l.bd,k.5B,k.5p,k.6b)}1f{if(n==="73"&&k.9u!=1d){Z m,j,g;m=k.1v.bS();j=k.9u.gV()/m.w;g=k.9u.gU()/m.h;n=1q.2L(j,g)}}Z f=l.bb;if(l.bc!=1d){f=1a.1t.ko(l.bc,k.5B,k.5p,k.6b)}1f{if(l.bb==="73"&&k.t7!=1d){Z m,j,g;m=k.1v.bS();j=k.t7.gV()/m.w;g=k.t7.gU()/m.h;f=1q.2L(j,g)}}if(1P n!=="3s"&&1P f!=="3s"&&V.9u!=1d){Z o=V.1v.QB();n=1q.2L(V.9u.gV()/o.w,V.9u.gU()/o.h)}Z a=l.QA;Z b=l.o5;if(1P f==="3s"&&1P n==="3s"&&b===1z){Z h=n/f;b=1q.7m(1q.rX(h)/1q.rX(2))+1}1f{if(b===1z&&a!=1d){b=a+1}}if(1P b!=="3s"||b<=0||(1P n!=="3s"&&1P f!=="3s")){1c}Z d=[b];Z c=2;if(1P f==="3s"&&1P n==="3s"){c=1q.5K((n/f),(1/(b-1)))}if(1P n==="3s"){1i(Z e=0;e<b;e++){d[e]=n/1q.5K(c,e)}}1f{1i(e=0;e<b;e++){d[b-1-e]=f*1q.5K(c,e)}}1c d},1T:"1a.1J.fq"});1a.2l.2W=1a.1U(1a.2l,{2H:1d,kl:1m,1w:1d,9t:1d,ao:1d,b7:1d,hL:1d,t4:1d,CX:1d,o0:1d,9s:1d,hH:1d,b8:1d,kn:1d,km:1d,f3:0,f2:0,1B:1b(a){if(a&&a.1w&&!(a.1w 2a 1a.1J.fq)){a.1w=1d}1a.2l.1u.1B.1x(V,1G);V.ao=V.ao||{};V.9s={nU:1d,t0:1d,sZ:1d,ke:1d,sY:1d};V.hH=[];if(!V.2H){V.2H=1n 1a.dh(0,0)}V.1Y.b4("sM");V.1Y.on({sM:1a.3g.3p(V.4N,V)});V.kn=1a.3g.3p(V.CW,V);V.km=1a.3g.3p(V.CV,V)},1Q:1b(){1a.2l.1u.1Q.4q(V);V.2H=1d;if(V.1w&&V.1w 2a 1a.1J.fq){V.1w.fp=1d}V.1w=1d;V.9t=1d;V.ao=1d;V.b7=1d;V.hL=1d;V.o0=1d;V.t4=1d;V.CX=1d;V.9s=1d;1i(Z b=0,a=V.hH.1g;b<a;b++){V.hH[b]&&V.hH[b].1Q()}V.b8&&V.b8.1Q();V.kn=1d;V.km=1d;V.f3=1d;V.f2=1d},Qz:1b(a){if(V.1w&&V.1w 2a 1a.1J.fq){1c(V.1w===a)}1c 1m},Qy:1b(){Z a={};a.2H={x:V.2H.x,y:V.2H.y};a.kl=V.kl;a.ao=V.ao;1c a},4N:1b(){if(V.1w&&V.1w 2a 1a.1J.fq){V.1w.t6(V.9t)}},dP:1b(a){1c a?V.dA():V.t2()},dA:1b(){if(V.2o){V.2o.1k.4H="hM"}1c 1j},t2:1b(){if(V.2o){V.2o.1k.4H="3c"}1c 1j},nF:1b(){Z a=!!V.2o&&(V.2o.1k.4H==="3c");V.dP(a)},Qx:1b(){Z a=V;8A(1b(){1c 1b(){if(a.1w&&a.1w.1v){Z b=a.1w.1v.bS().h-32;a.2H=1n 1a.dh(70+32,b)}}}(),0)},cB:1b(a){1a.2l.1u.cB.1x(V,1G);if(V.1w){if(V.1w.fp){V.kl?V.1w.fp.cu():V.1w.fp.fl();1c}V.1w.fp=V;if(V.1w.7M){V.t5()}1f{V.1w.1Y.on({cA:1a.3g.3p(V.t5,V)})}}1c V.2o},t5:1b(){V.b8=1n 1a.2B.cz();Z a=V;V.b8.hG=1b(c){a.dJ()};Z b=V.t4=V.CS();V.CN();V.CK();V.CJ();V.CI();V.CH();V.2o.2r(b);V.sN(V.b7);V.sJ()},CQ:1b(d){if(V.8m){d=d||2u.7k;d.jM();d.jL();Z b=1a.3f.ag(d);if(!(b===V.Qw&&1a.2l.2W.cp(b,"Qv"))){if(1a.2l.2W.cp(b,"hK-ap")){b=b.6Y}Z a=d.gW,g=d.jn,f=0,e=0;4n(b!==1d){f+=b.mG;e+=b.jo;b=b.sP;if(V.1w&&V.1w.1v&&V.1w.1v.Qu===b){1H}}V.f3=a-f;V.f2=g-e;Z c=V;if(V.t3){7Y(V.t3)}V.t3=8A(1b(){1a.3f.4s(2n,"7g",c.kn);1a.3f.4s(2n,"9m",c.km)},10)}}},CW:1b(d){if(V.8m){d=d||2u.7k;d.jM();d.jL();Z c=1a.3f.ag(d);Z b=d.gW,f=d.jn,a=V.f3,e=V.f2;b-=a;f-=e;V.2o.1k.2F=b+"px";V.2o.1k.2m=f+"px";V.2H.x=b;V.2H.y=f;V.CU=1j}},CV:1b(b){if(V.8m){b=b||2u.7k;b.jM();b.jL();1a.3f.o4(2n,"7g",V.kn);1a.3f.o4(2n,"9m",V.km);Z a=V;8A(1b(){a.CU=1m},0)}},CR:1b(){Z b=1a.1t.5s("Qt");Z a=2n.2K("sX");a.2q("4b","Qs-cf Qr-Qq-3b");a.2q("ap",1a.7p("Qp"));1a.3f.4s(a,"4k",1a.3g.3p(V.CT,V));1c a},CT:1b(){V.t2()},CS:1b(){Z a=1a.1t.5s("Qo");Z b=1a.1t.fo(a);if(V.kl){b.2q("4b","hK cu")}1f{b.2q("4b","hK")}Z i=1a.1t.5s("Qn");Z f=1a.1t.fo(i,1d,1d,1d,"4I");f.2q("4b","hK-Qm CO-o3");Z g=V.CR();Z d=2n.2K("h4");d.2q("4b","hK-ap");V.hL=V.hL||1a.7p("hL");Z c=2n.cv(V.hL+(V.1w?":"+V.1w.2h:""));Z h=1a.1t.5s("Ql");Z e=V.o0=1a.1t.fo(h,1d,1d,1d,"4I");e.2q("4b","hK-hJ");d.2r(c);f.2r(d);f.2r(g);b.2r(f);b.2r(e);1a.3f.4s(f,"86",1a.3g.3p(V.CQ,V));1c b},hI:1b(l,m,n){Z c=l.3h(/[^/w]/,l[0].bU());Z n=V.b7&&(c.9f()===(V.b7.am+"Qk"));Z h=1a.1t.5s(l+"Qj");Z d=V.9s[l]=1a.1t.fo(h,1d,1d,1d,"4I");Z o="sm"+c+"o2 o1";Z g="";if(l.3k("sL")>-1){o+=" CP";g+=" CP-o3"}if(n){o+=" fl"}d.2q("4b",o);Z i=1a.1t.5s(l+"Qi");Z f=1a.1t.fo(i,1d,1d,1d,"Qh");f.2q("4b","sm"+c+"o2-o3 o1-o3"+g);Z b=1a.1t.5s(l+"Qg");Z k=1a.1t.fo(b,1d,1d,1d,"4I");k.2q("4b","sm"+c+"o2-ap CO-ap o1-ap");if(n&&V.b7){m+=" \\\\ "+V.b7.6a}Z a=2n.cv(m);Z j=1a.1t.5s(l+"Qf");Z e=1a.1t.fo(j,1d,1d,1d,"4I");e.2q("4b","sm"+c+"o2-hJ o1-hJ");k.2r(a);f.2r(k);d.2r(f);d.2r(e);V.o0.2r(d);1c e},CN:1b(){Z a=V.1w.7M;Z b=V.hI("nU",1a.7p("Qe"));V.CG(b,a)},kk:1b(g){Z b=2n.2K("Qd");Z h=1a.2l.2W.Cr[g];Z o=2n.2K("t1");o.2q("4b","Qc");Z m=2n.2K("2o");m.2q("4b","CM Qb cu");Z c=2n.2K("2o");c.2q("4b","CM Qa");Z n=2n.2K("a");n.c2=1a.7p("nT");n.2q("Q9","#");Z t=2n.2K("t1");t.2q("4b","Q8");1i(Z p=0,q=h.1g;p<q;p++){Z k=h[p];Z d=k.3q;Z e=k.3i;Z l=1a.jQ.Q7(e);Z j=1a.7p(l+"bP");Z s=1a.7p(l+"Q6");Z f={3i:e,nW:s,3m:k.3m,2Q:k.5o,2L:k.5n,"1o":k.2C};Z r=k.5N;Z a=1d;if(d==="2S"||d==="3s"||d==="3P"||d==="nH"||d==="1K"||d==="1X"){d=d==="nH"?"1K":d;a=V.CA(j,d,f)}1f{if(d==="5L"){a=V.Cy(j,f)}}if(a){if(r){o.2r(a)}1f{a.1k.1L="0";t.2r(a)}}}c.2r(n);b.2r(o);b.2r(m);b.2r(t);b.2r(c);1a.3f.4s(n,"4k",1a.3g.3p(V.CL,[m,t,b,V]));1c b},CL:1b(a){if(V[3]&&V[3].8m){a=a||2u.7k;Z c=1a.3f.ag(a);Z h=V[2].6Y.6Y;Z g=V[3],i=V[1],b=V[0];g.dN&&cw(g.dN);Z d=i.3d.1g,e;Z f=1a.7p("Q5");if(c.c2!==f){e=-1;i.1k.4H="t1";1a.2l.2W.al(b,"cu");g.dN=kj(1b(){if(e>=d){g.dN&&cw(g.dN);c.c2=f;Z l=h.dL;Z j=h.xM;g.ba&&cw(g.ba);g.ba=kj(1b(){if(l>=j){g.ba&&cw(g.ba);1c}l+=5;h.dL=l},10);1c}if(e<0){e++;1c}Z k=i.3d[e++];k.1k.1L="Q4"},50)}1f{e=d;if(1a.dO.2h==="Q3"&&1a.dO.4Z==="9.0"){i.1k.4H="3c";c.c2=1a.7p("nT");1a.2l.2W.6J(b,"cu")}g.dN=kj(1b(){if(e<0){g.dN&&cw(g.dN);c.c2=1a.7p("nT");1a.2l.2W.6J(b,"cu");Z k=h.dL;g.ba&&cw(g.ba);g.ba=kj(1b(){if(k<=0){g.ba&&cw(g.ba);8A(1b(){i.1k.4H="3c"},100);1c}k-=5;h.dL=k},10);1c}if(e>=d){e--;1c}Z j=i.3d[e--];j.1k.1L="0"},50)}}},CK:1b(){Z a=V.hI("t0",1a.7p("3j"));a.2q("2g-nZ","t0");a.2r(V.kk("3j"));1a.3f.4s(a,"c5",1a.3g.3p(V.cy,V));1a.3f.4s(a,"h0",1a.3g.3p(V.cy,V))},CJ:1b(){Z a=V.hI("sZ",1a.7p("1Z"));a.2q("2g-nZ","sZ");a.2r(V.kk("1Z"));1a.3f.4s(a,"c5",1a.3g.3p(V.cy,V));1a.3f.4s(a,"h0",1a.3g.3p(V.cy,V))},CI:1b(){Z a=V.hI("ke",1a.7p("kc"));a.2q("2g-nZ","ke");a.2r(V.kk("kc"));1a.3f.4s(a,"c5",1a.3g.3p(V.cy,V));1a.3f.4s(a,"h0",1a.3g.3p(V.cy,V))},CH:1b(){Z a=V.hI("sY",1a.7p("1K"));a.2q("2g-nZ","sY");a.2r(V.kk("1K"));1a.3f.4s(a,"c5",1a.3g.3p(V.cy,V));1a.3f.4s(a,"h0",1a.3g.3p(V.cy,V))},cy:1b(a){if(V.8m){if(V.b8){V.b8.hF()}}},CG:1b(h,j){Z r=2n.2K("ul"),o={dM:1d,fn:1d,fm:1d,cx:1d},b=1m;1i(Z k in j){if(!j.eL(k)){3o}Z p=j[k];Z c=p.nY.1p;Z s=1a.7p(c.9f());if(!s){3o}if(!o.eL(c)){3o}if(!o[c]){Z i=2n.2K("li");i.2q("4b","Q2 CF");i.2q("2g-CB",c.9f());Z g=2n.cv(s);Z l=2n.2K("sX");l.2q("ap",s);l.2r(g);l.2q("4b","sU");1a.3f.4s(l,"4k",1a.3g.3p(V.CE,V));i.2r(l);Z e=2n.2K("ul");i.2r(e);o[c]={li:i,sW:e}}Z d=2n.2K("li");d.2q("4b","CF sU");d.2q("ap",k);d.2q("2g-CC",k);1a.3f.4s(d,"4k",1a.3g.3p(V.CD,V));Z q=2n.cv(k);d.2r(q);o[c].sW.2r(d);if(!b){b=1j;1a.2l.2W.6J(d,"5L");Z n=V.ao[k];if(!n){n=V.ao[k]={}}n.6a=n.6a||k;n.am=n.am||c.9f();n.cq=n.cq||[];V.b7=n;1a.2l.2W.6J(o[c].li,"dA")}}1i(Z m in o){if(o[m]&&o[m].li){r.2r(o[m].li);Z a=o[m].sW;if(a&&1a.2l.2W.cp(o[m].li,"dA")){Z f=a.3d.1g;a.1k.1L=f*31+"px"}1f{a.1k.1L="ar"}}}h.2r(r)},CE:1b(a){if(V.8m){a=a||2u.7k;Z d=1a.3f.ag(a);Z k=d.6Y;Z h=k.3d[1];Z f=h.3d.1g;Z c=k.6Y;1i(Z e=0,g=c.3d.1g;e<g;e++){Z b=c.3d[e];if(b==k){1a.2l.2W.sI(b,"dA");if(1a.2l.2W.cp(b,"dA")){h.1k.1L=31*f+"px"}1f{h.1k.1L="ar"}}1f{1a.2l.2W.al(b,"dA");b.3d[1].1k.1L="ar"}}Z j=V;j.ki&&cw(j.ki);j.sV&&7Y(j.sV);j.sV=8A(1b(){Z i=k.jo;Z l=c.6Y.6Y.dL;Z m=i>l;j.ki=kj(1b(){c.6Y.6Y.dL=l;m?l+=2:l-=2;if(l<(i+2)&&l>(i-2)){j.ki&&cw(j.ki)}},6)},jz)}},CD:1b(b){if(V.8m){b=b||2u.7k;Z g=1a.3f.ag(b);Z k=g.6Y;Z e=k.6Y;Z h=g.hE("2g-CC");Z c=e.hE("2g-CB");if(h){Z d=V.ao[h];if(!d){d=V.ao[h]={}}d.6a=d.6a||h;d.am=d.am||c;d.cq=d.cq||[];V.b7=d;V.sN(d)}Z a=V.9s.nU.sK("sU");1i(Z f=0,j=a.1g;f<j;f++){1a.2l.2W.al(a[f],"5L")}1a.2l.2W.6J(g,"5L")}},CA:1b(n,q,e){Z d=e&&e.3i,f=e&&e.nW,o=e&&e.3m,t=e&&e.2Q,v=e&&e.2L,s=e&&e["1o"];Z p=2n.2K("nV");p.2q("1p","Cx");p.2q("4b","Cw");Z r=1a.1t.5s(V.id+"Q1");Z k=2n.2K("4R");Z u=2n.cv(n+":");k.2q("1i",r);Z m;Z x="Cv";if(q==="3P"){Z h=v===1?0.jO:1;m=1n 1a.2B.kg({2Q:t,2L:v,dn:h,1l:s});V.hH.1r(m);1a.2l.2W.6J(m.aq,x);m.dK=1m;if(f){m.aq.2q("ap",f)}}1f{if(q==="1X"){m=2n.2K("2o");m.2q("1p","1K");m.1k.nM=s;1a.2l.2W.6J(m,"sS");Z j=2n.2K("2o");j.2q("4b","Q0");Z i=2n.2K("2o");i.2q("4b","PZ");j.2r(m);j.2r(i)}1f{m=2n.2K("nV");m.2q("1p",q);m.1k.1I="PY";m.2q("1l",s)}1a.2l.2W.6J(m,x);m.2q("id",r);m.2q("ct",1j);if(f){m.2q("ap",f)}}Z l=2n.2K("nV");l.2q("1p","1K");l.2q("4b","PX");l.2q("ct",1j);l.1l=m.1l;Z b=2n.2K("tr");b.2q("2g-nN",q);if(d){b.2q("2g-7f",d)}b.2q("4b","nP");Z w=2n.2K("td");Z g=2n.2K("td");g.2q("4b","Ct");Z c=2n.2K("td");w.2r(p);k.2r(u);g.2r(k);if(q==="3P"){m.sT(c)}1f{if(q==="1X"){c.2r(j)}1f{c.2r(m)}}if(!(q==="2S"||q==="1X")){c.2r(l)}if(o){Z a=2n.cv(o);c.2r(a)}b.2r(w);b.2r(g);b.2r(c);1a.3f.4s(p,"b9",1a.3g.3p(V.sO,[m,l,V]));1a.3f.4s(p,"b9",1a.3g.3p(V.dJ,V));if(q==="3P"){m.kh=1a.3g.3p(V.sR,[l,V,m]);1a.3f.4s(l,"b9",1a.3g.3p(V.sR,[m,V]))}1f{if(q==="1X"){1a.3f.4s(i,"4k",1a.3g.3p(V.sQ,[m,V]));1a.3f.4s(m,"4k",1a.3g.3p(V.sQ,[m,V]));1a.3f.4s(l,"b9",1a.3g.3p(V.nX,[m,V,"1X"]))}1f{1a.3f.4s(m,"b9",1a.3g.3p(V.nX,[l,V]));1a.3f.4s(l,"b9",1a.3g.3p(V.nX,[m,V]))}}1c b},sO:1b(b){if(V[2]&&V[2].8m){b=b||2u.7k;Z a=1a.3f.ag(b);if(a.nO){if(V[0]&&V[0] 2a 1a.2B.kg){V[0].dK=1j}1f{if(V[0]&&1a.2l.2W.cp(V[0],"sS")){1a.2l.2W.6J(V[0].eS,"cs");1a.2l.2W.6J(V[0],"cs")}1f{V[0]&&V[0].nR("ct")}}V[1]&&V[1].nR("ct")}1f{if(V[0]&&V[0] 2a 1a.2B.kg){V[0].dK=1m}1f{if(V[0]&&1a.2l.2W.cp(V[0],"sS")){1a.2l.2W.al(V[0].eS,"cs");1a.2l.2W.al(V[0],"cs")}1f{V[0]&&V[0].2q("ct",1j)}}V[1]&&V[1].2q("ct",1j)}}},nX:1b(b){if(V[1]&&V[1].8m){b=b||2u.7k;Z c,a;a=1a.3f.ag(b);c=a.1l;if(V[2]!=="1X"){V[0].1l=c}V[1].dJ()}},sR:1b(b){if(V[1]&&V[1].8m){Z c;if(V[2]){c=V[2].cr();V[0].1l=c}1f{b=b||2u.7k;Z a=1a.3f.ag(b);c=a.1l;V[0].nS(c);a.1l=V[0].cr()}V[1].dJ()}},sQ:1b(d){if(V[1]&&V[1].8m){Z a=V[0];if(1a.2l.2W.cp(a.eS,"cs")){Z c=V[1];Z e=0,b=0;4n(a!==1d){e+=a.mG-a.k0;b+=a.jo-a.dL;a=a.sP}c.b8.hG=1b(f){c.Cz(f)};c.b8.3N(b+23,e+5,V[0])}}},Cz:1b(a,b){V.dJ()},Cy:1b(l,e){Z c=e&&e.3i,f=e&&e.nW,o=e&&e["1o"];Z n=2n.2K("nV");n.2q("1p","Cx");n.2q("4b","Cw");Z b=1a.1t.5s(V.id+"PW");Z j=2n.2K("4R");Z q=2n.cv(l+":");j.2q("1i",b);Z p=2n.2K("5L");1a.2l.2W.6J(p,"Cv");p.2q("id",b);p.2q("ct",1j);if(f){p.2q("ap",f)}1i(Z r=0,g=o.1g;r<g;r++){Z m=2n.2K("Cu");Z d=2n.cv(o[r]);m.2r(d);p.2r(m)}Z a=2n.2K("tr");a.2q("2g-nN","5L");if(c){a.2q("2g-7f",c)}a.2q("4b","nP");j.2r(q);Z s=2n.2K("td");Z h=2n.2K("td");h.2q("4b","Ct");Z k=2n.2K("td");s.2r(n);j.2r(q);h.2r(j);k.2r(p);a.2r(s);a.2r(h);a.2r(k);1a.3f.4s(n,"b9",1a.3g.3p(V.sO,[p,1d,V]));1a.3f.4s(n,"b9",1a.3g.3p(V.dJ,V));1a.3f.4s(p,"b9",1a.3g.3p(V.dJ,V));1c a},sN:1b(r){if(!r){1c}Z h=r.am==="kc"?"ke":r.am+"sL";1i(Z m in V.9s){if(m==="nU"){3o}if(h===m){V.9s[m]&&1a.2l.2W.6J(V.9s[m],"fl")}1f{V.9s[m]&&1a.2l.2W.al(V.9s[m],"fl")}}Z n=r.cq,d=V.9s[h];d.3d[0].3d[0].c2=1a.7p(r.am)+" \\\\ "+r.6a;Z l=d.3d[1];Z b=l.3d[0];Z o=b.3d[1],q=b.3d[2],g=b.3d[3];l.dL=0;1a.2l.2W.6J(o,"cu");q.1k.4H="3c";g.kf.c2=1a.7p("nT");Z a=d.sK("nP");1i(Z j=0,k=a.1g;j<k;j++){Z f=a[j];Z c=f.hE("2g-7f");Z m=f.hE("2g-nN");Z p=n[0]&&n[0][c];if(p!==1d&&p!==1z){if(m==="3P"){f.3d[2].3d[0].kd.nS(p);f.3d[2].3d[0].kd.dK=1j}1f{if(m==="1X"){Z e=f.3d[2].3d[0].kf;e.1k.nM=p;1a.2l.2W.6J(e.eS,"cs");1a.2l.2W.6J(e,"cs")}1f{f.3d[2].3d[0].1l=p;f.3d[2].3d[0].nR("ct")}}if(f.3d[2].3d[1]){f.3d[2].3d[1].1l=p;f.3d[2].3d[1].nR("ct")}f.3d[0].3d[0].nO=1j}1f{f.3d[0].3d[0].nO=1m;if(m==="1X"){Z e=f.3d[2].3d[0].kf;1a.2l.2W.al(e.eS,"cs");1a.2l.2W.al(e,"cs");V.b8.hF()}}}},sJ:1b(){Z e="",c=V.ao;1i(Z g in c){Z d=g.3h(/[@#]/gi,"nQ"),n=c[g];Z l=n.cq;1i(Z f=0,j=l.1g;f<j;f++){Z b="",h=0;b+=(!!e?"\\n":"")+"#"+d+"{";Z a=l[f];1i(Z k in a){Z m=a[k];b+="\\n\\t"+k+":"+m+";";h++}b+="\\n}";if(h){e+=b}}}V.9t=e;V.1Y.2z("sM",{9t:e})},dJ:1b(){Z e=V.b7;if(!e){1c 1d}Z b=e.am;Z g=b==="kc"?"ke":b+"sL";Z d=V.9s[g];Z a=d.sK("nP");Z l={};1i(Z h=0,j=a.1g;h<j;h++){Z f=a[h];if(f.3d[0].3d[0].nO){Z c=f.hE("2g-7f");Z k=f.hE("2g-nN");Z m;if(k==="3P"){m=f.3d[2].3d[0].kd.cr()}1f{if(k==="1X"){m=f.3d[2].3d[0].3d[0].1k.nM}1f{m=f.3d[2].3d[0].1l}}if(c==="3j-5Q"){if(!/^2S\\(/.jP(m)){m=\'2S("\'+m+\'")\'}}l[c]=m}}e.cq=e.cq||[];e.cq[0]=l;V.sJ()},PV:1b(c){Z h=/\\d+/g;Z f=c.3B(h);Z e=2P(f[0]).2c(16),d=2P(f[1]).2c(16),a=2P(f[2]).2c(16);e=e.1g===1?"0"+e:e;d=d.1g===1?"0"+d:d;a=a.1g===1?"0"+a:a;1c"#"+e+d+a},1T:"1a.2l.2W"});1a.2l.2W.6J=1b(a,b){if(a&&a.9r&&1P a.9r.5y==="1b"){1c a.9r.5y(b)}1c 1a.cd.6J(a,b)};1a.2l.2W.al=1b(a,b){if(a&&a.9r&&1P a.9r.mX==="1b"){1c a.9r.mX(b)}1c 1a.cd.al(a,b)};1a.2l.2W.sI=1b(a,b){if(a&&a.9r&&1P a.9r.nF==="1b"){1c a.9r.nF(b)}1c 1a.cd.sI(a,b)};1a.2l.2W.cp=1b(a,b){if(a&&a.9r&&1P a.9r.dI==="1b"){1c a.9r.dI(b)}1c 1a.cd.cp(a,b)};1a.2l.2W.Cq=["","5C","39","Cs"];1a.2l.2W.sH=["","nL","39","hD"];1a.2l.2W.Cp=["","5Z","2F","4y"];1a.2l.2W.Co=["","2m","7Z","PU","4F"];1a.2l.2W.kb=["","2i-2G","2x-2G","2i-in","2x-in","2i-3u","2x-3E","8l","8N","8k"];1a.2l.2W.Cr={3j:[{3i:"3j-5Q",3q:"2S",2C:"",5N:1j},{3i:"3j-26",3q:"1X",2C:"#nK",5N:1j},{3i:"3j-5D",3q:"3P",3m:"px",5o:0,5n:100,2C:5,5N:1j},{3i:"3j-5A-5D",3q:"3P",3m:"px",5o:0,5n:100,2C:2},{3i:"3j-5A-1X",3q:"1X",2C:"#nJ"},{3i:"3j-dx",3q:"3P",3m:"px",5o:-5,5n:5,2C:0},{3i:"3j-dy",3q:"3P",3m:"px",5o:-5,5n:5,2C:0},{3i:"3j-2s",3q:"3P",5o:0,5n:1,2C:1,5N:1j},{3i:"3j-4r-op",3q:"5L",2C:1a.2l.2W.kb}],1Z:[{3i:"1Z-1X",3q:"1X",2C:"#hi",5N:1j},{3i:"1Z-2s",3q:"3P",5o:0,5n:1,2C:1,5N:1j},{3i:"1Z-1I",3q:"3P",3m:"px",5o:0,5n:100,2C:1,5N:1j},{3i:"1Z-nI",3q:"5L",2C:1a.2l.2W.Cq,5N:1j},{3i:"1Z-44",3q:"5L",2C:1a.2l.2W.sH,5N:1j},{3i:"1Z-hC",3q:"3P",3m:"px",5o:0,5n:50,2C:10},{3i:"1Z-8C-5P",3q:"3P",3m:"px",5o:0,5n:100,2C:0},{3i:"1Z-hB",3q:"nH",2C:"10,10"},{3i:"1Z-5P",3q:"3P",5o:-100,5n:100,2C:0},{3i:"1Z-4r-op",3q:"5L",2C:1a.2l.2W.kb}],kc:[{3i:"3x-26",3q:"1X",2C:"#hi",5N:1j},{3i:"3x-dx",3q:"3P",3m:"px",5o:-5,5n:5,2C:0},{3i:"3x-dy",3q:"3P",3m:"px",5o:-5,5n:5,2C:0},{3i:"3x-2s",3q:"3P",5o:0,5n:1,2C:1,5N:1j},{3i:"1Z-1X",3q:"1X",2C:"#hi",5N:1j},{3i:"1Z-2s",3q:"3P",5o:0,5n:1,2C:1,5N:1j},{3i:"1Z-1I",3q:"3P",3m:"px",5o:0,5n:100,2C:1,5N:1j},{3i:"1Z-44",3q:"5L",2C:1a.2l.2W.sH},{3i:"1Z-hC",3q:"3P",3m:"px",5o:0,5n:100,2C:10},{3i:"1Z-8C-5P",3q:"3P",3m:"px",5o:-100,5n:100,2C:0},{3i:"1Z-hB",3q:"nH",2C:"10,10"},{3i:"3x-4r-op",3q:"5L",2C:1a.2l.2W.kb}],1K:[{3i:"1K-5M",3q:"3P",3m:"px",5o:10,5n:100,2C:18,5N:1j},{3i:"1K-fk-2h",3q:"1K",2C:"iQ-iP",5N:1j},{3i:"1K-hA",3q:"5L",2C:1a.2l.2W.Cp,5N:1j},{3i:"1K-dp-5O",3q:"5L",2C:1a.2l.2W.Co,5N:1j},{3i:"1K-5A-5D",3q:"3P",3m:"px",5o:0,5n:20,2C:0},{3i:"1K-5A-1X",3q:"1X",2C:"#gH"},{3i:"1K-26",3q:"1X",2C:"#hi",5N:1j},{3i:"1K-2s",3q:"3P",5o:0,5n:1,2C:1,5N:1j},{3i:"1K-dx",3q:"3P",3m:"px",5o:-10,5n:10,2C:0},{3i:"1K-dy",3q:"3P",3m:"px",5o:-10,5n:10,2C:0},{3i:"1K-4r-op",3q:"5L",2C:1a.2l.2W.kb}]};1a.h6=1a.1U({ak:1d,7o:1,5f:1d,68:1d,8L:1j,3Y:1d,5d:1d,8j:1m,7K:1m,8K:60,3J:0,5G:["4m","ka","8I","sG","Cm","k8","k9"],1Y:1d,co:1d,1B:1b(c,a){Z b=V;2u.sE=2u.yv||2u.yt||2u.ys||2u.yu||2u.PT||1b(d){1c 8A(d,mj/60)};2u.sF=2u.PS||2u.PR||2u.PQ||2u.PP||1b(d){2u.7Y(d)};b.7o=(a&&a.7o!=1z&&a.7o>=0)?a.7o:b.7o;b.5f=(a&&(a.5f!=1z&&a.5f!=1d))?a.5f:0;b.68=(a&&(a.68!=1z&&a.68!=1d&&a.68>=b.5f))?a.68:+1n 9i();b.8L=(a&&a.8L!=1z)?a.8L:b.8L;b.7K=(a&&a.7K!=1z)?a.7K:b.7K;b.8K=(a&&a.8K!=1z&&a.8K>=0&&a.8K<=60)?a.8K:b.8K;b.1Y=1n 1a.nG(V,1d,V.5G);b.1Y.b4("sG");b.1Y.b4("k8");b.1Y.b4("k9");b.8j=1m;if(!3g.1u.3p){3g.1u.3p=1b(d){if(1P V!=="1b"){8y 1n s3("3g.1u.3p - PO is Cn to be PN is 3n PM")}Z h=4d.1u.4a.4q(1G,1),g=V,e=1b(){},f=1b(){1c g.1x(V 2a e&&d?V:d,h.5k(4d.1u.4a.4q(1G)))};e.1u=V.1u;f.1u=1n e();1c f}}b.aj=b.aj.3p(b);b.3Y=b.5f;b.5d=b.3Y;b.ak=c},4m:1b(){Z a=V;if(!a.8j){a.8j=1j;if(a.7K){if(a.3Y===a.5f){a.5d=a.68;a.3Y=a.5d;a.1Y.2z("k9",a.3Y)}}1f{if(a.5d===a.68){a.3Y=a.5f;a.5d=a.3Y;a.1Y.2z("k8",a.3Y)}}a.aj()}},ka:1b(){Z a=V;a.8j=1m},8I:1b(){Z a=V;a.3Y=a.5f;a.5d=a.3Y;if(a.8j){a.8j=1m}1f{a.aj()}},nF:1b(){Z a=V;if(a.8j){a.ka()}1f{a.4m()}},6D:1b(){Z a=V;if(a.8j){}1f{a.aj()}},PL:1b(b){Z a=V;if(b>=0){a.7o=b;1c 1j}1f{1c 1m}},PK:1b(){1c V.7o},PJ:1b(a){Z b=V;if(a<=b.68){b.5f=a}1f{1c 1m}if(b.3Y<b.5f){b.3Y=b.5f;b.aj()}1c 1j},PH:1b(){1c V.5f},PG:1b(a){Z b=V;if(a>=b.5f){b.68=a}1f{1c 1m}if(b.3Y>=b.68){b.3Y=b.5f;b.aj()}1c 1j},PF:1b(){1c V.68},PE:1b(b){Z a=V;if(b>=a.5f&&b<=a.68){a.3Y=b;a.5d=a.3Y;a.aj();1c 1j}1f{1c 1m}},BY:1b(){1c V.3Y},BZ:1b(){1c V.5d},PD:1b(a){V.8L=a},PC:1b(){1c V.8L},PB:1b(a){V.7K=a},PA:1b(){1c V.8K},Pz:1b(a){Z b=V;if(a>=0&&a<=60){b.8K=a;1c 1j}1f{1c 1m}},Py:1b(){1c V.7K},Px:1b(){1c V.8j},1Q:1b(){Z a=V;a.7o=1d;a.5f=1d;a.68=1d;a.3Y=1d;a.5d=1d;a.8L=1d;a.8j=1d;a.7K=1d;a.8K=1d;a.3J=1d;a.ak=1d},aj:1b(){Z a=V;if(a.3J%(60/a.8K)!=0){a.3J++;a.co&&2u.sF(a.co);a.co=1d;a.co=2u.sE(a.aj);1c}a.3J=0;a.1Y.2z("sG",a.3Y);if(a.8j){a.ak&&a.ak();a.1Y.2z("Cm",a.3Y);if(!a.7K){if(a.5d===a.68){if(!a.8L){a.8j=1m;1c 1d}1f{a.1Y.2z("k8",a.3Y)}a.3Y=a.5f;a.5d=a.3Y}1f{a.5d=a.3Y;a.3Y+=a.7o}if(a.3Y>=a.68){a.3Y=a.68;a.1Y.2z("k9",a.3Y)}}1f{if(a.3Y===a.5f){if(!a.8L){a.8j=1m;1c 1d}1f{a.1Y.2z("k9",a.3Y)}a.5d=a.68;a.3Y=a.5d}1f{a.3Y=a.5d;a.5d-=a.7o}if(a.5d<=a.5f){a.5d=a.5f;a.1Y.2z("k8",a.3Y)}}a.co&&2u.sF(a.co);a.co=1d;a.co=2u.sE(a.aj);a.3J++}},1T:"1a.h6"});1a.4C.cg=1a.1U(1a.4C,{6Z:1j,sC:0,1W:1d,1M:1d,k5:{},nB:{},1w:1d,1B:1b(a,b,c){V.1w=c;1a.4C.1u.1B.1x(V,1G);V.4o=2n.2K("1W");V.cf.2r(V.4o);V.1W=V.4o.4G("2d");V.1M={};if(V.6Z){V.nD=2n.2K("1W");V.2T=V.nD.4G("2d")}},sp:1b(a,b){1a.4C.1u.sp.1x(V,1G);1c 1m},Pw:1b(b,a){V.np(V.1M[a][0])},cn:1b(){Z a=2n.2K("1W");1c!!a.4G},sr:1b(b){V.5M=b.2A();Z a=V.4o;a.1k.1I=b.w+"px";a.1k.1L=b.h+"px";a.1I=b.w;a.1L=b.h;V.nE=1d;if(V.6Z){Z c=V.nD;c.1k.1I=b.w+"px";c.1k.1L=b.h+"px";c.1I=b.w;c.1L=b.h}},k6:1b(c,a){Z d;c.Pv();Z b=c.9W();d=(a.4H!=="3c")&&!!b&&b.qw(V.ci);1c d},Cl:1b(a){Z b;4h(a){1E"1a.1R.lZ":b=1n 1a.1R.lZ();1H;1E"1a.1R.eq":b=1n 1a.1R.eq();1H;1E"1a.1R.dd":b=1n 1a.1R.dd();1H;1E"1a.1R.dc":b=1n 1a.1R.dc();1H;1o:1H}1c b},Ck:1b(a,d){Z c=V.1M[d][0].id;1i(Z b=0;b<a.1g;b++){if(a[b][0].id==c){a.6o(b,1);1H}}},dF:1b(a,c,b){Z f;if(a.27){V.1M[a.id]=[a,c,b];c=V.Pu(c||a.1k);Z e=V.Cl(a.27.1T);Z d=V.k7(a.27,c,a.id,a.5e&&a.5e.27,a.51&&a.51.27,e);if(!!d){f=a.2A();f.27=d}1f{V.Ck(V.1M,a.id)}}1c f},k7:1b(h,b,e,a,n,c){Z g=h.1T;if((g==="1a.1R.lZ")||(g==="1a.1R.eq")||(g==="1a.1R.dd")||(g==="1a.1R.dc")){1i(Z f=0;f<h.1S.1g;f++){Z l=V.k7(h.1S[f],b,e,a&&a.1S[f],n&&n.1S[f],c);c.1S[f]=l}1c c}4h(h.1T){1E"1a.1R.2N":Z m=V.sA(h,a,n,e);if(V.k6(m[0],b)){V.hx(m[0],b,e,m[1],m[2]);1c m[0]}1f{1c h}1E"1a.1R.de":1E"1a.fj.Pt":Z k=V.nu(h,a,n,e);if(V.k6(k[0],b)){V.sz(k[0],b,e,k[1],k[2]);1c k[0]}1f{1c h}1E"1a.1R.9b":Z d=V.nu(h,a,n,e);if(V.k6(d[0],b)){V.fg(d[0],b,e,d[1],d[2]);1c d[0]}1f{1c h}1E"1a.1R.6j":Z j=V.Cj(h,a,n,e);if(V.k6(j[0],b)){V.Cf(j[0],b,e,j[1],j[2]);1c j[0]}1f{1c h}1o:1H}},sA:1b(f,b,d,e){Z a=V.1M[e][2];if(a&&a.2D&&a.2D[0]){Z c=f.2A();c.x=b.x+(c.x-b.x)*a.2D[1];c.y=b.y+(c.y-b.y)*a.2D[1];1c[c,b,f]}1f{1c[f,b,d]}},fi:[],nu:1b(l,v,o,G){Z g=V.1M[G][2];if(g&&g.2D&&g.2D[0]){Z N=l.2A();if(V.fi[G]&&V.fi[G][l.id]){Z z=V.fi[G][l.id];if(z[0]===v.id){Z w=z[1];Z H=z[2];Z n=[];1i(Z C=0,r=w.1g;C<r;C++){n.1r(1n 1a.1R.2N(w[C].x+(H[C].x-w[C].x)*g.2D[1],w[C].y+(H[C].y-w[C].y)*g.2D[1]))}N.1S=n;1c[N,v,l]}}Z K=v.2A();Z J=l.2A();Z q=K.nC();Z p=J.nC();Z m=[K.1S[0].2A()];Z h=[J.1S[0].2A()];Z c=[1n 1a.1R.2N(K.1S[0].x+(J.1S[0].x-K.1S[0].x)*g.2D[1],K.1S[0].y+(J.1S[0].y-K.1S[0].y)*g.2D[1])];Z f=0;Z d=0;Z F=1,E=1;1i(;F<K.1S.1g||E<J.1S.1g;){Z B=K.1S[F];Z A=J.1S[E];Z I=K.1S[F-1];Z u=J.1S[E-1];Z M=B.8g(I);Z L=A.8g(u);if((f+M)/q>(d+L)/p){Z b=q*(d+L)/p-f;d+=L;Z t=I.x+(B.x-I.x)*b/M;Z s=I.y+(B.y-I.y)*b/M;Z e=1n 1a.1R.2N(t,s);m.1r(e);h.1r(A.2A());c.1r(1n 1a.1R.2N(e.x+(A.x-e.x)*g.2D[1],e.y+(A.y-e.y)*g.2D[1]));if((E===J.1S.1g-1)&&(F===K.1S.1g-1)){1H}if(E<J.1S.1g-1){E++}}1f{if((f+M)/q<(d+L)/p){Z a=p*(f+M)/q-d;f+=M;Z t=u.x+(A.x-u.x)*a/L;Z s=u.y+(A.y-u.y)*a/L;Z D=1n 1a.1R.2N(t,s);m.1r(B.2A());h.1r(D);c.1r(1n 1a.1R.2N(B.x+(D.x-B.x)*g.2D[1],B.y+(D.y-B.y)*g.2D[1]));if((E===J.1S.1g-1)&&(F===K.1S.1g-1)){1H}if(F<K.1S.1g-1){F++}}1f{m.1r(B.2A());h.1r(A.2A());c.1r(1n 1a.1R.2N(B.x+(A.x-B.x)*g.2D[1],B.y+(A.y-B.y)*g.2D[1]));if((E===J.1S.1g-1)&&(F===K.1S.1g-1)){1H}if(F<K.1S.1g-1){F++}if(E<J.1S.1g-1){E++}}}}N.1S=c;if(!V.fi[G]){V.fi[G]={}}V.fi[G][l.id]=[v.id,m,h];1c[N,v,l]}1f{1c[l,v,o]}},fh:[],Cj:1b(q,u,d,A){Z v=V.1M[A][2];if(v&&v.2D&&v.2D[0]){Z T=q.2A();if(V.fh[A]&&V.fh[A][q.id]){Z t=V.fh[A][q.id];if(t[0]===u.id){1i(Z I=0;I<t[1].1g;I++){Z f=t[1][I];Z b=f[0];Z C=f[1];Z s=[];1i(Z O=0,E=b.1g;O<E;O++){s.1r(1n 1a.1R.2N(b[O].x+(C[O].x-b[O].x)*v.2D[1],b[O].y+(C[O].y-b[O].y)*v.2D[1]))}T.1S[I].1S=s}1c[T,u,q]}}if(!V.fh[A]){V.fh[A]={}}Z L=u.2A();Z H=q.2A();Z c=[];1i(Z M=0;M<H.1S.1g;M++){Z l=L.1S[M].nC();Z h=H.1S[M].nC();Z S=[L.1S[M].1S[0].2A()];Z R=[H.1S[M].1S[0].2A()];Z r=[1n 1a.1R.2N(L.1S[M].1S[0].x+(H.1S[M].1S[0].x-L.1S[M].1S[0].x)*v.2D[1],L.1S[M].1S[0].y+(H.1S[M].1S[0].y-L.1S[M].1S[0].y)*v.2D[1])];Z N=0;Z J=0;Z Q=1,P=1;1i(;Q<L.1S[M].1S.1g||P<H.1S[M].1S.1g;){Z p=L.1S[M].1S[Q];Z o=H.1S[M].1S[P];Z g=L.1S[M].1S[Q-1];Z a=H.1S[M].1S[P-1];Z K=p.8g(g);Z G=o.8g(a);if((N+K)/l>(J+G)/h){Z z=l*(J+G)/h-N;J+=G;Z D=g.x+(p.x-g.x)*z/K;Z B=g.y+(p.y-g.y)*z/K;Z F=1n 1a.1R.2N(D,B);S.1r(F);R.1r(o.2A());r.1r(1n 1a.1R.2N(F.x+(o.x-F.x)*v.2D[1],F.y+(o.y-F.y)*v.2D[1]));if((P===H.1S[M].1S.1g-1)&&(Q===L.1S[M].1S.1g-1)){1H}if(P<H.1S[M].1S.1g-1){P++}}1f{if((N+K)/l<(J+G)/h){Z w=h*(N+K)/l-J;N+=K;Z D=a.x+(o.x-a.x)*w/G;Z B=a.y+(o.y-a.y)*w/G;Z e=1n 1a.1R.2N(D,B);S.1r(p.2A());R.1r(e);r.1r(1n 1a.1R.2N(p.x+(e.x-p.x)*v.2D[1],p.y+(e.y-p.y)*v.2D[1]));if((P===H.1S[M].1S.1g-1)&&(Q===L.1S[M].1S.1g-1)){1H}if(Q<L.1S[M].1S.1g-1){Q++}}1f{S.1r(p.2A());R.1r(o.2A());r.1r(1n 1a.1R.2N(p.x+(o.x-p.x)*v.2D[1],p.y+(o.y-p.y)*v.2D[1]));if((P===H.1S[M].1S.1g-1)&&(Q===L.1S[M].1S.1g-1)){1H}if(Q<L.1S[M].1S.1g-1){Q++}if(P<H.1S[M].1S.1g-1){P++}}}}T.1S[M].1S=r;c.1r([S,R])}V.fh[A][q.id]=[u.id,c];1c[T,u,q]}1f{1c[q,u,d]}},sB:1b(h,u,s){Z m=V;Z i=m.1M[s][0];Z w=i.5e;Z A;if(V.nB[u.8h]){A=V.nB[u.8h];Z q=u.ck||u.cl;Z o=u.cl||u.ck;q=q?q:u.7x*2;o=o?o:u.7x*2;Z z=(u.nA!=1z)?u.nA:-(0.5*q);Z j=(u.nz!=1z)?u.nz:-(0.5*o);Z f=u.Ci||u.6r,v=u.Ps;Z p=m.4M(h);Z c=p[0];Z a=p[1];Z r=0;if(v){if(w){Z e=w.27;r=1q.PI/2-1q.eZ(h.y-e.y,h.x-e.x)}1f{if(i.51&&i.51.27){Z g=i.51.27;r=1q.PI/2-1q.eZ(g.y-h.y,g.x-h.x)}1f{r=0}}}if(!2Y(c)&&!2Y(a)){Z l=(c+z)|0;Z k=(a+j)|0;Z d=m.1W;d.3D=f;Z n=1a.4C.cj.ny||(1a.4C.cj.ny=/jN 2.1/.jP(rZ.rY.9f())?Ch/2u.8i.1I:1);if(r!=0){d.4N();d.4V(c,a);d.6F(r);d.7h(A,(l-c)*n,(k-a)*n,q*n,o*n);d.4U()}1f{d.7h(A,l*n,k*n,q*n,o*n)}if(m.6Z){m.ch("26",s);m.2T.eP(l,k,q,o)}}1c}if(V.k5[u.8h]){V.k5[u.8h].a1=1b(){1c 1m}}Z A=1n 6R();V.k5[u.8h]=A;Z b=1b(){Z Q=V.hz;Z F=V.27;Z R=V.1k;Z U=V.Cg;m.k5[R.8h]=1d;m.nB[R.8h]=U;if(!m.1M[Q]){1c}Z H=m.1M[Q][0];Z S=H.5e;Z O=R.ck||R.cl;Z M=R.cl||R.ck;O=O?O:R.7x*2;M=M?M:R.7x*2;Z T=(R.nA!=1z)?R.nA:-(0.5*O);Z I=(R.nz!=1z)?R.nz:-(0.5*M);Z D=R.Ci||R.6r;Z N=m.4M(F);Z B=N[0];Z t=N[1];Z P;if(S){Z E=S.27;P=1q.PI/2-1q.eZ(F.y-E.y,F.x-E.x)}1f{if(H.51){Z G=H.51.27;P=1q.PI/2-1q.eZ(G.y-F.y,G.x-F.x)}1f{P=0}}if(!2Y(B)&&!2Y(t)){Z K=(B+T)|0;Z J=(t+I)|0;Z C=m.1W;C.3D=D;Z L=1a.4C.cj.ny||(1a.4C.cj.ny=/jN 2.1/.jP(rZ.rY.9f())?Ch/2u.8i.1I:1);if(P!=0){C.4N();C.4V(B,t);C.6F(P);C.7h(U,(K-B)*L,(J-t)*L,O*L,M*L);C.4U()}1f{C.7h(U,K*L,J*L,O*L,M*L)}if(m.6Z){m.ch("26",Q);m.2T.eP(K,J,O,M)}}};A.a1=1a.3g.3p(b,{hz:s,27:h.2A(),1k:u,Cg:A});A.2i=u.8h},8M:1b(b,a){if(b==="26"){V.1W.3D=a.6r;V.1W.4W=a.97}1f{if(b==="2k"){V.1W.3D=a.8D;V.1W.3I=a.lO;V.1W.6X=a.6A;V.1W.2I=a.94}1f{V.1W.3D=0;V.1W.2I=1}}},nw:1b(c){Z d=dj(c.6q("3z").jH())+1;if(d>=nx){V.sC=d-Pr;d=d%nx+1}Z b="k3"+d.2c(16);Z a=b.1g;b="#"+b.k4(a-6,a);1c b},ch:1b(b,d,a){Z c=V.nw(d);if(b==="26"){V.2T.3D=1;V.2T.4W=c}1f{if(b==="2k"){V.2T.3D=1;V.2T.6X=c;V.2T.2I=a.94+2}1f{V.2T.3D=0;V.2T.2I=1}}},hx:1b(g,b,c,a,i){Z f=V;if(b.k2!==1m){if(b.8h){f.sB(g,b,c)}1f{Z k=f.4M(g);Z j=k[0];Z h=k[1];if(!2Y(j)&&!2Y(h)){Z e=1q.PI*2;Z d=b.7x;if(b.26!==1m){f.8M("26",b);f.1W.4P();f.1W.5v(j,h,d,0,e,1j);f.1W.26();if(V.6Z){V.ch("26",c,b);V.2T.4P();V.2T.5v(j,h,d,0,e,1j);V.2T.26()}}if(b.2k!==1m){V.8M("2k",b);V.1W.4P();V.1W.5v(j,h,d,0,e,1j);V.1W.2k();if(V.6Z){V.ch("2k",c,b);V.2T.4P();V.2T.5v(j,h,d,0,e,1j);V.2T.2k()}V.8M("3N")}}}}},sz:1b(e,a,d,b,c){a=1a.1t.nv({26:1m},a);V.fg(e,a,d)},fg:1b(c,a,b){if(a.26!==1m){V.8M("26",a);V.hw(V.1W,c,a,b,"26");if(V.6Z){V.ch("26",b,a);V.hw(V.2T,c,a,b,"26")}}if(a.2k!==1m){V.8M("2k",a);V.hw(V.1W,c,a,b,"2k");if(V.6Z){V.ch("2k",b,a);V.hw(V.2T,c,a,b,"2k")}}V.8M("3N")},hw:1b(c,l,a,e,j){Z h=1;if(1P c.88==="1b"){Z m=V.sw(a,h);c.88(m)}Z f=l.1S;Z g=f.1g;c.4P();Z b=V.4M(f[0]);Z n=b[0];Z k=b[1];if(!2Y(n)&&!2Y(k)){c.3A(b[0],b[1]);1i(Z d=1;d<g;++d){Z o=V.4M(f[d]);c.4T(o[0],o[1])}if(j==="26"){c.26()}1f{c.2k()}}if(1P c.88==="1b"){c.88([])}},Cf:1b(h,c,g,e,f){Z d=h.1S;Z a=d.1g;V.fg(d[0],c,g);1i(Z b=1;b<a;++b){V.1W.4O="bX-3u";if(V.6Z){V.2T.4O="bX-3u"}V.fg(d[b],1a.1t.nv({2k:1m,6r:1},c),g);V.1W.4O="5H-2G";if(V.6Z){V.2T.4O="5H-2G"}V.fg(d[b],1a.1t.nv({26:1m},c),g)}},Pq:1b(d,a,c){Z b=(1n 1a.1R.9b([1n 1a.1R.2N(d.x,d.y),1n 1a.1R.2N(d.x+d.1I,d.y),1n 1a.1R.2N(d.x+d.1I,d.y+d.1L),1n 1a.1R.2N(d.x,d.y+d.1L)]));V.fg(b,a,c)},di:1b(n,a){a=1a.1t.8J({d3:"#k3",91:"cm"},a);Z o=V.4M(n);if(a.9h||a.9g){Z h=2Y(a.9h)?0:a.9h;Z c=2Y(a.9g)?0:a.9g;o[0]+=h;o[1]-=c}V.8M("3N");V.1W.4W=a.d3;V.1W.3D=a.wF||1;Z e=[a.gh?a.gh:"7U","7U",a.aM?a.aM:"7U",a.bQ?a.bQ:"Ce",a.eo?a.eo:"iQ-iP"].44(" ");Z d=a.4R.6q("\\n");Z g=d.1g;if(V.1W.4u){V.1W.81=e;V.1W.6S=1a.4C.cj.Cd[a.91[0]]||"5Z";V.1W.5E=1a.4C.cj.Cd[a.91[1]]||"7Z";Z l=1a.4C.cj.sD[a.91[1]];if(l==1d){l=-0.5}Z m=V.1W.jT("Mg").1L||V.1W.jT("xx").1I;o[1]+=m*l*(g-1);1i(Z f=0;f<g;f++){if(a.4A!=0){V.1W.4N();V.1W.4V(o[0],o[1]);V.1W.6F(a.4A*1q.PI/62);V.1W.4u(d[f],0,(m*f));V.1W.4U()}1f{V.1W.4u(d[f],o[0],o[1]+(m*f))}}}1f{if(V.1W.Cb){V.1W.Pp=e;Z b=1a.4C.cj.sD[a.91[0]];if(b==1d){b=-0.5}Z l=1a.4C.cj.sD[a.91[1]];if(l==1d){l=-0.5}Z m=V.1W.Cc("xx");o[1]+=m*(1+(l*g));1i(Z f=0;f<g;f++){Z k=o[0]+(b*V.1W.Cc(d[f]));Z j=o[1]+(f*m);V.1W.4V(k,j);V.1W.Cb(d[f]);V.1W.4V(-k,-j)}}}V.8M("3N")},sw:1b(c,b){if(!c){1c[]}Z a=c.94*b;Z d=c.qk;4h(d){1E"dl":1c[];1E"dk":1c[1,4*a];1E"8C":1c[4*a,4*a];1E"Po":1c[4*a,4*a,1,4*a];1E"eD":1c[8*a,4*a];1E"eC":1c[8*a,4*a,1,4*a];1o:if(!d){1c[]}if(1a.1t.5u(d)){1c d}d=1a.jQ.f7(d).3h(/\\s+/g,",");1c d.3h(/\\[|\\]/gi,"").6q(",")}},4M:1b(b){Z c=V.6U();Z d=V.ci;Z a=(b.x/c+(-d.2F/c));Z e=((d.2m/c)-b.y/c);1c[a,e]},3b:1b(){Z a=V.4o.1L;Z b=V.4o.1I;V.1W.7E(0,0,b,a);V.1M={};if(V.6Z){V.2T.7E(0,0,b,a)}},BR:1b(b){Z c=1d;if(V.6Z){if(!V.1v.Ca){Z e=b.xy;Z a=e.x|0;Z g=e.y|0;Z d=V.2T.ff(a,g,1,1).2g;if(d[3]===1V){Z f=d[2]+(b6*(d[1]+(b6*d[0])));if(f){c=V.1M["1a.1O.Pn"+(f-1+V.sC)][0]}}}}1c c},np:1b(b){if(!(1a.1t.5u(b))){b=[b]}1i(Z a=0;a<b.1g;++a){4S V.1M[b[a].id]}V.6D()},1T:"1a.4C.cg"});1a.4C.C7=1a.1U(1a.4C.cg,{C9:1j,C8:1j,hy:1d,1B:1b(a,b,c){1a.4C.cg.1u.1B.1x(V,1G);V.hy={}},hx:1b(l,C,B,t,o){Z H=V;if(C.k2!==1m){if(C.8h){H.sB(l,C,B)}1f{Z m=H.1M[B][0];Z I=m.5e;Z w=H.4M(l);Z e=w[0];Z d=w[1];if(!2Y(e)&&!2Y(d)){Z y=1q.PI*2;Z j=C.7x;if(C.26!==1m){H.8M("26",C);H.1W.4P();H.1W.5v(e,d,j,0,y,1j);H.1W.26();Z u=e;Z b=d;if(H.C9){Z f=m.2Z[V.1w.dH];Z z=V.hy[f];if(!z){V.hy[f]=1q.s5()+0.5}1f{if(z+0.1>1){z=z+0.1-1}1f{z+=0.1}V.hy[f]=z}Z x=z;Z E=1a.1t.eF(C);E.6r=0.3;H.8M("26",E);H.1W.4P();H.1W.5v(e,d,j*(1+x*2),0,y,1j);H.1W.26()}if(H.C8){H.1W.4N();Z h;if(t){h=t;Z a=H.4M(h);Z s=a[0];Z G=a[1]}if(!2Y(s)&&!2Y(G)){Z n=1/j,k=1/(2*n)+1,D=j*0.8,p=1q.39(1/0.9/n),g=C.6r||1,c=g/p;Z F=1;1i(Z A=3;1j;A++){if(k<1.9){1H}g-=c;g=g<0?0:g;H.1W.3D=g;H.1W.4P();Z v=1q.5x((s-u)*(s-u)+(G-b)*(G-b));if(v==0){}Z r=D*(s-u)/v;Z q=D*(G-b)/v;if(1q.4t(r*F)<1q.4t(s-u)||1q.4t(q*F)<1q.4t(G-b)){H.1W.5v(u+r*F,b+q*F,k,0,y,1j);F++}1f{H.1W.5v(s,G,k,0,y,1j);u=s;b=G;if(I.5e){h=I.5e.27;a=H.4M(h);s=a[0];G=a[1]}1f{H.1W.26();1H}F=1}H.1W.26();D=k;k=1/(A*n)+1}}H.1W.4U()}if(H.6Z){H.ch("26",B,C);H.2T.4P();H.2T.5v(e,d,j,0,y,1j);H.2T.26()}}if(C.2k!==1m){H.8M("2k",C);H.1W.4P();H.1W.5v(e,d,j,0,y,1j);H.1W.2k();if(H.6Z){H.ch("2k",B,C);H.2T.4P();H.2T.5v(e,d,j,0,y,1j);H.2T.2k()}H.8M("3N")}}}}},1T:"1a.4C.C7"});1a.4C.C6=1a.1U(1a.4C.cg,{3C:1d,b5:1d,1k:1d,1B:1b(a,b,c){1a.4C.cg.1u.1B.1x(V,1G);V.hy={}},sA:1b(k,a,m,d){Z j=V;Z r=j.1M[d][2];Z q=j.1M[d][0];if(r&&r.2D&&r.2D[0]&&a&&j.3C){Z e=q.5e.2Z[j.b5];Z c=k.2A();c.x=a.x+(c.x-a.x)*r.2D[1];c.y=a.y+(c.y-a.y)*r.2D[1];Z h=c.8g(a);Z g=c.8g(k);Z f=0;1i(Z b=0;b<j.3C.1g;b++){Z o=j.3C[b];if(e>=o.4m&&e<=o.4E){f=o.1g;j.1k=o.1k;1H}}Z n=j.1w.1v.6U();f=f*n;Z l;Z p;if(f/2<h){if(f/2<g){l=1n 1a.1R.2N((a.x-c.x)*f/h/2+c.x,(a.y-c.y)*f/h/2+c.y);p=1n 1a.1R.2N((k.x-c.x)*f/g/2+c.x,(k.y-c.y)*f/g/2+c.y)}1f{p=k.2A();l=1n 1a.1R.2N(c.x*2-p.x,c.y*2-p.y)}}1f{if(f/2<g){l=a.2A();p=1n 1a.1R.2N(c.x*2-l.x,c.y*2-l.y)}1f{p=k.2A();l=a.2A()}}1c[1n 1a.1R.de([l,p]),a,k]}1f{1c[k,a,m]}},hx:1b(f,a,e,c,d){Z b=V;if(f 2a 1a.1R.de){V.sz(f,b.1k,e,1d,1d)}},hw:1b(c,m,a,f,k){Z j=1;if(1P c.88==="1b"){Z n=V.sw(a,j);c.88(n)}Z g=m.1S;Z h=g.1g;c.4P();Z b=V.4M(g[0]);Z o=b[0];Z l=b[1];if(!2Y(o)&&!2Y(l)){c.3A(b[0],b[1]);1i(Z e=1;e<h;++e){Z p=V.4M(g[e]);Z d=c.nd(o,l,p[0],p[1]);d.f8("0","4f(1V,1V,1V,0)");d.f8("1",a.6A);c.6X=d;c.3I="39";c.4T(p[0],p[1])}if(k==="26"){c.26()}1f{c.2k()}}if(1P c.88==="1b"){c.88([])}},1T:"1a.4C.C6"});1a.4C.C5=1a.1U(1a.4C.cg,{1B:1b(a,b,c){1a.4C.cg.1u.1B.1x(V,1G)},nu:1b(g,t,o,C){Z f=V.1M[C][2];if(f&&f.2D&&f.2D[0]){Z G=g.2A();Z F=t.2A();Z E=g.2A();Z b=[];Z q=0;Z l=0;Z p=0;Z h=0;Z z=0;Z c=1j;Z x=0;Z a=1j;Z B=1m;1i(Z A=0,D=E.1S.1g;A<D;A++){if(B){l++}Z e=F.1S[l];Z d=E.1S[A];if(e){if(e.k1(d)){if(!B){B=1j;p=A;if(A>0&&a){x+=E.1S[A].8g(E.1S[A-1])}a=1m}h=A;b.1r(d.2A())}1f{if(A>0&&a){x+=E.1S[A].8g(E.1S[A-1])}}}1f{if(l>0){l--}1H}}if(h==0){B=1m;1i(Z y=0,D=F.1S.1g;y<D;y++){if(B){h++}Z e=F.1S[y];Z d=E.1S[h];if(d){if(d.k1(e)){if(!B){B=1j;q=y;if(A>0&&a){z+=F.1S[y].8g(F.1S[y-1])}c=1m}l=y;b.1r(e.2A())}1f{if(y>0&&c){z+=F.1S[y].8g(F.1S[y-1])}}}1f{if(h>0){h--}1H}}}if(p>0&&(q==0)){Z u=E.1S.4a(0,p+1);V.sv(b,u,x,f.2D[1])}if(q>0&&(p==0)){Z w=F.1S.4a(0,q+1);V.sv(b,w,z,1-f.2D[1])}if(h<E.1S.1g-1&&(l===F.1S.1g-1)){Z k=E.1S.4a(h);Z r=0;1i(Z v=0;v<k.1g-1;v++){r+=k[v].8g(k[v+1])}V.su(b,k,r,f.2D[1])}if(l<F.1S.1g-1&&(h===E.1S.1g-1)){Z n=F.1S.4a(l);Z s=0;1i(Z v=0;v<n.1g-1;v++){s+=n[v].8g(n[v+1])}V.su(b,n,s,1-f.2D[1])}G.1S=b;1c[G,t,g]}1f{1c[g,t,o]}},sv:1b(m,h,e,c){Z d=0;1i(Z l=h.1g-1;l>0;l--){Z g=h[l];Z f=h[l-1];Z i=g.8g(f);Z j=e*c-d;if(j<=i){Z b=g.x+(f.x-g.x)*j/i;Z k=g.y+(f.y-g.y)*j/i;m.na(1n 1a.1R.2N(b,k));1H}1f{d+=i;m.na(f.2A())}}1c m},su:1b(m,h,e,c){Z d=0;1i(Z l=0;l<h.1g-1;l++){Z g=h[l+1];Z f=h[l];Z i=g.8g(f);Z j=e*c-d;if(j<=i){Z b=f.x+(g.x-f.x)*j/i;Z k=f.y+(g.y-f.y)*j/i;m.1r(1n 1a.1R.2N(b,k));1H}1f{d+=i;m.1r(g.2A())}}1c m},1T:"1a.4C.C5"});1a.1J.BP=1a.1U(1a.1J,{j5:1m,nm:1m,1M:1d,b3:1d,1k:1d,nq:1d,C3:1d,ai:1,sq:1d,fe:1d,dH:"nt",dG:"Pm",ss:1d,b1:1d,BU:1m,2D:1j,8f:{},C4:"cg",2f:1d,1B:1b(b,a,f){Z d=V;1a.1J.1u.1B.1x(d,1G);d.1Y.b4("BX");d.1Y.b4("BW");d.1Y.b4("Pl");d.1Y.b4("C1");Z e=1a.4C[d.C4];d.2f=1n e(d.2o,d.C3,d);if(!V.nq){V.nq=1n 1a.Pk()}d.1M=[];d.b3=[];d.8f={};d.b1=[];Z c;if(f){c={7o:f.7o,5f:f.5f,68:f.68,8L:f.8L,7K:f.7K,8K:f.8K}}d.fe=1n 1a.h6(1b(g){1c d.sn(g)},c);d.ss={}},6E:1b(e,o){if(!(1a.1t.5u(e))){e=[e]}Z a=o&&o.1k;1i(Z g=0,h=e.1g;g<h;g++){Z n=e[g];if(a){n.1k=a}n.1w=V;if(V.1M.1g<1){V.1M.1r(n);V.8f[n.2Z[V.dH]]=n}1f{1i(Z f=V.1M.1g-1;f>-1;f--){Z m=40(n.2Z[V.dG]);Z l=40(V.1M[f].2Z[V.dG]);if(m>=l){Z d=n.2Z[V.dH];if(V.8f[d]){Z c=V.8f[d];if(V.st(c.27.1T,n.27.1T)){V.ns(c,n)}1f{3o}}1f{V.8f[d]=n}V.1M.6o(f+1,0,n);1H}1f{if(f==0){Z b=n.2Z[V.dH];if(V.8f[b]){Z k=V.8f[b];if(V.st(k.27.1T,n.27.1T)){V.ns(k,n)}1f{3o}}1f{V.8f[b]=n}V.1M.6o(0,0,n);1H}}}}}V.fe.6D()},st:1b(b,a){4h(b){1E"1a.1R.9b":if(a==="1a.1R.9b"||a==="1a.1R.de"||a==="1a.1R.dd"||a==="1a.1R.dc"||a==="1a.1R.6j"){1c 1j}1f{1c 1m}1E"1a.1R.de":if(a==="1a.1R.9b"||a==="1a.1R.de"||a==="1a.1R.dd"){1c 1j}1f{1c 1m}1E"1a.1R.dd":if(a==="1a.1R.9b"||a==="1a.1R.de"||a==="1a.1R.dd"){1c 1j}1f{1c 1m}1E"1a.1R.eq":if(a==="1a.1R.eq"||a==="1a.1R.2N"){1c 1j}1f{1c 1m}1E"1a.1R.2N":if(a==="1a.1R.eq"||a==="1a.1R.2N"){1c 1j}1f{1c 1m}1E"1a.1R.dc":if(a==="1a.1R.9b"||a==="1a.1R.dc"||a==="1a.1R.6j"){1c 1j}1f{1c 1m}1E"1a.1R.6j":if(a==="1a.1R.9b"||a==="1a.1R.dc"||a==="1a.1R.6j"){1c 1j}1f{1c 1m}1o:1c 1m}1c 1m},ns:1b(d,a){Z c=40(d.2Z[V.dG]);Z b=40(a.2Z[V.dG]);if(c<=b){if(d.51){d.51.5e=a;a.51=d.51}1f{V.8f[a.2Z[V.dH]]=a}d.51=a;a.5e=d}1f{if(d.5e){V.ns(d.5e,a)}1f{a.51=d;d.5e=a}}},9d:1b(f){if(!f||f.1g===0){1c}if(f===V.1M){1c V.5t()}if(!(1a.1t.5u(f))){f=[f]}if(f===V.b3){f=f.4a()}Z h=(f===V.b1);if(h){V.sl()}Z e=[];1i(Z d=0,a=f.1g-1;d<=a;d++){Z c=f[d];Z b=1a.1t.3k(V.1M,c);if(b===-1){e.1r(c);3o}V.1M.6o(b,1);if(!h){V.BT(c)}if(!c.5e&&!c.51){4S(V.8f[c.2Z[V.dH]])}if(c.5e){if(c.51){c.5e.51=c.51}1f{c.5e.51=1d}}if(c.51){if(c.5e){c.51.5e=c.5e}1f{c.51.5e=1d}}c.5e=1d;c.51=1d;if(1a.1t.3k(V.b3,c)!==-1){1a.1t.C2(V.b3,c)}c.1w=1d}V.2f.3b();V.6D();Z g=e.1g==0?1j:1m},5t:1b(){V.2f.3b();V.sl();1i(Z b=0,a=V.1M.1g;b<a;b++){V.1M[b].51=1d;V.1M[b].5e=1d}V.1M=[];V.b3=[];4S(V.8f);V.8f={}},j2:1b(c,b){Z a=1d;1i(Z d in V.1M){if(V.1M[d][c]===b){a=V.1M[d];1H}}1c a},j3:1b(a){1c V.j2("id",a)},x4:1b(c,d){Z b,a,f=[];1i(Z e in V.1M){a=V.1M[e];if(a&&a.2Z){if(a.2Z[c]===d){f.1r(a)}}}1c f},1Q:1b(){1i(Z a=V.1M.1g-1;a>=0;a--){V.1M[a].5e=1d;V.1M[a].51=1d;V.1M[a].1w=1d;V.1M[a].1Q()}V.1M=1d;V.b1=1d;V.b3=1d;if(V.2f){V.2f.1Q()}V.2f=1d;V.fe.1Q();V.fe=1d;V.dH=1d;V.8f=1d;V.dG=1d;V.ss=1d;1a.1J.1u.1Q.1x(V,1G)},j1:1b(a){if(a!==V.2s){V.2s=a;Z b=V.2f.4o;1a.1t.gv(b,1d,1d,1d,1d,1d,1d,a);if(V.1v!=1d){V.1v.1Y.2z("x3",{1w:V,7f:"2s"})}}},4H:1b(a){1a.1J.1u.4H.1x(V,1G);Z b=V.2o.1k.4H;if(b!==V.2f.4o.1k.4H){V.2f.4o.1k.4H=b}},bT:1b(b){1a.1J.1u.bT.1x(V,1G);if(!V.2f){V.1v.qA(V)}1f{V.2f.1v=V.1v;Z a=V.1v.bS();a.w=a.w*V.ai;a.h=a.h*V.ai;V.2f.sr(a)}},4i:1b(a){if(V.Pj()&&V.ce){V.1Y.2z("4i",a)}},m2:1b(){1a.1J.1u.m2.1x(V,1G);Z a=V.1v.bS();a.w=a.w*V.ai;a.h=a.h*V.ai;V.2f.sr(a);V.1Y.2z("C1",a)},3A:1b(a,b,i){1a.1J.1u.3A.1x(V,1G);V.sq=b;Z c=1j;if(!i){V.2f.4o.1k.ce="dt";Z h=V.1v.bS(),g=h.w,f=h.h,e=(g/2*V.ai)-g/2,d=(f/2*V.ai)-f/2;e+=2P(V.1v.7A.1k.2F,10);e=-1q.39(e);d+=2P(V.1v.7A.1k.2m,10);d=-1q.39(d);V.2o.1k.2F=e+"px";V.2o.1k.2m=d+"px";Z j=V.1v.7d().2t(V.ai);c=V.2f.sp(j,b);V.2f.4o.1k.ce="b2";if(1a.C0===1j){V.2o.k0=V.2o.k0}}if(b||!c){V.sn(a)}},sn:1b(a){Z l=V,b=l.1M;if(!l.ce){1c}Z g={5d:l.fe.BZ(),hv:l.fe.BY()};V.2f.3b();if(!b||b.1g<1){1c}1i(Z e=0,j=b.1g;e<j;e++){Z m=b[e];Z c=m.51;Z i=40(m.2Z[l.dG]);Z f=1d;if(c){f=40(c.2Z[l.dG])}if(i>=g.5d){if(i<=g.hv){if(!f||f>g.hv){l.1Y.2z("BX",m);l.dF(m,1z,{2D:[1m,1]})}}1f{1H}}1f{if(f&&f>g.hv&&l.2D){Z d=(g.hv-g.5d)/(f-i);Z h=1q.f4((g.5d-i)/(g.hv-g.5d));l.dF(c,1z,{2D:[1j,h*d]})}}}},6D:1b(){1c 1a.1J.1u.6D.1x(V,1G)},dF:1b(a,c,b){if(1P c!=="7J"){if(!c&&a.nr===1a.Pi.Ph){c="4S"}Z e=c||a.Pg;c=a.1k||V.1k;if(!c){c=V.nq.Pf(a,e)}}Z d=V.2f.dF(a,c,b);d&&V.BV(d);V.2f.cf.1k.eX="rE";d&&V.1Y.2z("BW",d)},BV:1b(a){if(V.BU){if(1a.1t.3k(V.b1,a)<0){V.b1.1r(a);1c 1j}}1c 1m},Pe:1b(){1c V.b1},sl:1b(){V.b1=[]},BT:1b(b){Z a=1a.1t.3k(V.b1,b);if(a>-1){V.b1.6o(a,1)}},np:1b(a){V.2f.np(a)},BS:1b(a){if(V.ce==1m){1c 1d}if(!V.2f){8y 1n d8("BS Pd on 1w 8d no 2f. 5z nn dE jZ Pc a 1w, hu 3n ah 6I 9q is Pb 8d it.")}Z b=1d;Z c=V.2f.BR(a);if(c){if(1P c==="3t"){b=V.j3(c)}1f{b=c}}1c b},Pa:1b(a){1c V.j2("P9",a)},BQ:1b(){Z a=1d;Z b=V.1M;if(b){Z c=1d;1i(Z d in V.1M){c=b[d].27;if(c){if(a===1d){a=1n 1a.d9()}a.8J(c.9W())}}}1c a},1T:"1a.1J.BP"});1a.1J.BO=1a.1U(1a.1J,{hr:1d,nk:1d,nm:1m,ht:1j,1B:1b(b,a){1a.1J.1u.1B.1x(V,[b,a])},P8:1b(){1c V.2o},3A:1b(e,b,g){1a.1J.1u.3A.1x(V,1G);if(V.nm&&!V.ht){if(b){V.2o.1k.2F=0+"px";V.2o.1k.2m=0+"px"}1f{V.2o.1k.2F=-2P(V.1v.7A.1k.2F,10)+"px";V.2o.1k.2m=-2P(V.1v.7A.1k.2m,10)+"px"}1c}V.ht=1m;Z f=2P(V.1v.7A.1k.2F,10);f=-1q.39(f);Z d=2P(V.1v.7A.1k.2m,10);d=-1q.39(d);V.2o.1k.2F=f+"px";V.2o.1k.2m=d+"px";Z c=V.nl(1n 1a.aO(0,0));if(!V.hr){V.hr=V.nk=c}1f{V.hr=c}},m3:1b(b,a){if(V.nm){V.2o.1k.2F=-2P(V.1v.7A.1k.2F,10)+"px";V.2o.1k.2m=-2P(V.1v.7A.1k.2m,10)+"px"}},nl:1b(c){Z d=V.1v.nl(c);Z b=2P(V.1v.7A.1k.2F,10);b=1q.39(b);Z a=2P(V.1v.7A.1k.2m,10);a=1q.39(a);1c d.5y(b,a)},P7:1b(){1c{x:V.hr.x-V.nk.x,y:V.hr.y-V.nk.y}},1T:"1a.1J.BO"});1a.1h=1a.1U({4Z:"2.0.4",1B:1b(){},1Q:1b(){V.7B();V.4Z=1d},qz:1b(b){Z a=1n 1a.1h.jY(1a.1t.5s("P6"),b);1a.1h.fd[a.id]=a;1c a},7B:1b(b){if(b){b.7B()}1f{1i(Z a in 1a.1h.fd){1a.1h.fd[a].7B()}1a.1h.fd={}}1c V},P5:1b(a){1c 1a.1h.fd[a]},BL:1b(a){4S 1a.1h.fd[a];1c V},1T:"1a.1h"});1a.1h.fd={};1a.1h.jY=1a.1U({id:1d,3v:1d,3K:1d,6I:1d,hp:1d,ad:1d,fc:1d,1B:1b(b,a){V.id=b;V.3v=1n 1a.1h.gN();V.3K=1n 1a.1h.3l(a,V.3v);V.6I=1n 1a.1h.9k(a,V.3v,V.3K);V.hp=[];V.ad=1n 1a.1h.3O({h9:{gR:1a.1h.jY.BK(V)}});V.ad.4m();V.fc=1m},1Q:1b(){V.id=1d;V.3v=1d;V.3K=1d;V.6I=1d;V.hp=1d;V.ad=1d;V.fc=1d},P4:1b(){1c V.id},db:1b(a){V.3v.r6(a);1c V},P3:1b(a){V.3v.r6(a);1c V},P2:1b(a){V.3v.jg(a);1c V},P1:1b(a){V.3v.jg(a);1c V},P0:1b(b,a){V.3v.eM(b,a);1c V},OZ:1b(a,b){V.3v.eM(a,b);1c V},mD:1b(b,a){V.3K.mD(b,a);1c V},qx:1b(a){V.3v.eK(a);1c V},aP:1b(a){V.3K.aP(a);V.fc=1m;1c V},4i:1b(a){V.3K.4i(a);V.fc=1m;1c V},OY:1b(){V.fc=1j;1c V},jl:1b(a){V.3K.jl(a);1c V},mE:1b(a,b){V.3K.mE(a,b);1c V},7X:1b(){V.3K.7X();1c V},rM:1b(b,j,f){if(1P(b)==="3t"){b=V.3v.gO(b)}if(b){Z g;if(j){Z h=j.6q(".");Z a=b;1i(Z e=0,d=h.1g;e<d;e++){if(!a){3o}a=a[h[e]]}if(a){g=a}}1f{g=b}if(!g){1a.1h.dm(\'BN "\'+j+\'" is 3n BM in ag \'+b.id);1c}Z c=V.hp;if(1P b.hq==="1z"){b.hq=0}if(b.hq===0){c.1r(b)}b.hq++;1c V.ad.rM(g,{eI:f}).mW(1b(){b.hq--;if(b.hq===0){Z i=1a.1h.1t.3k(c,b);c.6o(i,1)}})}1f{1a.1h.dm("cd 3n BM")}},OX:1b(){V.ad.3b()},gV:1b(){1c V.3K.gV()},gU:1b(){1c V.3K.gU()},jj:1b(c,a,b){1c V.3K.jj(c,a,b)},jm:1b(c,b,a){Z d=1a.1t.5s("1a.1h.OW");1c V.3K.jm(d,c,b,a)},on:1b(a,b){V.6I.on(a,b);1c V},un:1b(a,b){V.6I.un(a,b);1c V},rB:1b(a,b){V.6I.rB(a,b);1c V},3b:1b(){V.3v.jg();V.3K.3b();1c V},7B:1b(){V.ad.8I();V.3b();V.3v.7B();V.3K.7B();V.6I.7B();V.ad=1d;V.hp=1d;V.3v=1d;V.3K=1d;V.6I=1d;1a.1h.1u.BL.1x(V,[V.id])},x0:1b(a){V.3K.xJ(a);1c V},qt:1b(){1c V.3v.7D},iZ:1b(){V.3b();V.3K.gT();1c V},x1:1b(){1c V.6I.xU()},1T:"1a.1h.jY"});1a.1h.jY.BK=1b(a){1c 1b(){Z c=a.hp;if(c 2a 4d){1i(Z d=0,b=c.1g;d<b;d++){a.3v.eM(c[d].id)}if(c.1g||a.fc){a.4i()}}}};1a.1h.2B={};1a.1h.2B.rU=1a.1U({cb:1d,f9:1d,4B:1d,hk:1d,hj:1d,ni:1d,ng:1d,nh:1d,hm:1d,jV:1d,fa:1d,1B:1b(){V.cb=1n 1a.1h.2B.1t();V.f9=1n 1a.1h.2B.er();V.hk={};V.hj={};V.ni=0;V.ng=0;V.nh=BJ;V.hm=1q.PI*2;V.jV=[-1,-1,-1];V.fa=[-1,-1]},cc:1b(a){a%=V.hm;if(a<0){a+=V.hm}1c a},qP:1b(b,c,a,g){if(!c||!b){1c 1m}Z f=b.1p;V.4B=V.4B||V.cb.4G();Z e=V.BI(b,c,a,g);if(1P e!="1z"){1c e}if(b.5m&&V.4B.BD){1c V.BE(b,V.4B,c,a,g)}4h(f){1E"ho":1E"xd":1c 1j;1E"OV":Z d=c.5F=="3u"?c.r1+c.r2+c.d:c.r1-c.r2+c.d;1c V.jW(c,a,g,d);1E"OU":1c V.jW(c,a,g,c.OT);1o:1c 1m}},BI:1b(b,p,d,c){Z h=b.1p;4h(h){1E"OR-f9":if(1P(p.BF)==="1z"){1c V.sf(p.mc,p.ma,p.BH,p.BG,p.mb,p.m9,p.2I,d,c)}1c V.sg(p.mc,p.ma,p.BH,p.BG,p.BF,p.OQ,p.mb,p.m9,p.2I,d,c);1E"1Z":1c V.jU(p.mc,p.ma,p.mb,p.m9,p.2I,d,c);1E"OP-1Z":1c V.sk(p.3w,p.2I,d,c);1E"xo-1Z":Z u=d;Z t=c;if(b.1y){u=d-b.1y[0];t=c-b.1y[1]}1c V.sk(p.3w,p.2I,u,t);1E"OO":1c V.sj(p.x,p.y,p.r0,p.r,d,c);1E"x9":Z q=p.x;Z o=p.y;if(b.1y){q=p.x+b.1y[0];o=p.y+b.1y[1]}1c V.sj(q,o,p.r0,p.r,d,c);1E"jX":1c V.jW(p.x,p.y,p.r,d,c);1E"xp":Z u=d;Z t=c;if(b.1y){u=d-b.1y[0];t=c-b.1y[1]}1c V.jW(p.x,p.y,p.r,u,t);1E"ON":Z l=p.9R*1q.PI/62;Z j=p.8v*1q.PI/62;if(!p.8Y){l=-l;j=-j}1c V.si(p.x,p.y,p.r0,p.r,l,j,!p.8Y,d,c);1E"xe":Z l=p.9R*1q.PI/62;Z j=p.8v*1q.PI/62;if(!p.8Y){l=-l;j=-j}Z q=p.x;Z o=p.y;if(b.1y){q=p.x+b.1y[0];o=p.y+b.1y[1]}1c V.si(q,o,p.r0,p.r,l,j,!p.8Y,d,c);1E"fb":1c V.BB(p.OM,1q.2L(p.2I,5),p.3H,d,c);1E"3x":1E"OL":1E"x7":1E"OK":1E"xb":1c V.hn(p.3w,d,c);1E"xn":Z u=d;Z t=c;if(b.1y){u=d-b.1y[0];t=c-b.1y[1]}if(b.9S&&b.9S.1g>0){Z e=V.hn(p.3w,u,t);Z f=b.9S;Z k=1m;1i(Z m=0,g=f.1g;m<g;m++){Z n=f[m];Z s=V.hn(n,u,t);if(s===1j){k=1j}}if(e===1j&&k===1m){1c 1j}1f{1c 1m}}1f{1c V.hn(p.3w,u,t)}1E"1K":Z a=p.3e||b.6p(p);1c V.nj(a.x,a.y,a.1I,a.1L,d,c);1E"xi":Z r=b.qF(p);1c V.hn(r,d,c);1E"OJ":1E"3M":1c V.nj(p.x,p.y,p.1I,p.1L,d,c);1E"xh":Z q=p.x;Z o=p.y;if(b.1y){q=p.x+b.1y[0];o=p.y+b.1y[1]}1c V.nj(q,o,p.1I,p.1L,d,c)}},BE:1b(b,c,d,a,e){c.4P();b.5m(c,d);c.a0();1c c.BD(a,e)},OI:1b(b,c,a,d){1c!V.qP(b,c,a,d)},jU:1b(b,k,a,i,e,j,h){if(e===0){1c 1m}Z c=1q.2L(e,5);Z g=0;Z f=b;if((h>k+c&&h>i+c)||(h<k-c&&h<i-c)||(j>b+c&&j>a+c)||(j<b-c&&j<a-c)){1c 1m}if(b!==a){g=(k-i)/(b-a);f=(b*i-a*k)/(b-a)}1f{1c 1q.4t(j-b)<=c/2}Z d=g*j-h+f;Z l=d*d/(g*g+1);1c l<=c/2*c/2},sg:1b(e,n,c,m,b,k,a,i,g,l,j){if(g===0){1c 1m}Z f=1q.2L(g,5);if((j>n+f&&j>m+f&&j>k+f&&j>i+f)||(j<n-f&&j<m-f&&j<k-f&&j<i-f)||(l>e+f&&l>c+f&&l>b+f&&l>a+f)||(l<e-f&&l<c-f&&l<b-f&&l<a-f)){1c 1m}Z h=V.f9.yV(e,n,c,m,b,k,a,i,l,j,1d);1c h<=f/2},sf:1b(c,l,b,j,a,i,f,k,h){if(f===0){1c 1m}Z e=1q.2L(f,5);if((h>l+e&&h>j+e&&h>i+e)||(h<l-e&&h<j-e&&h<i-e)||(k>c+e&&k>b+e&&k>a+e)||(k<c-e&&k<b-e&&k<a-e)){1c 1m}Z g=V.f9.yT(c,l,b,j,a,i,k,h,1d);1c g<=e/2},se:1b(h,g,a,k,b,e,j,n,m){Z o=V.hm;if(j===0){1c 1m}Z c=1q.2L(j,5);n-=h;m-=g;Z l=1q.5x(n*n+m*m);if((l-c>a)||(l+c<a)){1c 1m}if(1q.4t(k-b)>=o){1c 1j}if(e){Z i=k;k=V.cc(b);b=V.cc(i)}1f{k=V.cc(k);b=V.cc(b)}if(k>b){b+=o}Z f=1q.eZ(m,n);if(f<0){f+=o}1c(f>=k&&f<=b)||(f+o>=k&&f+o<=b)},sk:1b(k,e,h,f){Z e=1q.2L(e,10);1i(Z d=0,c=k.1g-1;d<c;d++){Z b=k[d][0];Z j=k[d][1];Z a=k[d+1][0];Z g=k[d+1][1];if(V.jU(b,j,a,g,e,h,f)){1c 1j}}1c 1m},sj:1b(b,h,c,e,a,g){Z f=(a-b)*(a-b)+(g-h)*(g-h);1c(f<e*e)&&(f>c*c)},nj:1b(c,e,d,b,a,f){1c a>=c&&a<=(c+d)&&f>=e&&f<=(e+b)},jW:1b(b,d,c,a,e){1c(a-b)*(a-b)+(e-d)*(e-d)<c*c},si:1b(f,e,d,a,g,b,c,i,h){1c V.se(f,e,(d+a)/2,g,b,c,a-d,i,h)},hn:1b(m,h,f){Z e=m.1g;Z l=0;1i(Z d=0,c=e-1;d<e;d++){Z b=m[c][0];Z k=m[c][1];Z a=m[d][0];Z g=m[d][1];l+=V.hl(b,k,a,g,h,f);c=d}1c l!==0},hl:1b(c,h,b,f,g,e){if((e>h&&e>f)||(e<h&&e<f)){1c 0}if(f==h){1c 0}Z d=f<h?1:-1;Z i=(e-h)/(f-h);Z a=i*(b-c)+c;1c a>g?d:0},BC:1b(){Z a=V.fa[0];V.fa[0]=V.fa[1];V.fa[1]=a},BA:1b(z,e,u,d,s,c,r,b,j,h){Z n=V.f9;Z g=V.jV;Z o=V.fa;if((h>e&&h>d&&h>c&&h>b)||(h<e&&h<d&&h<c&&h<b)){1c 0}Z a=n.yW(e,d,c,b,h,g);if(a===0){1c 0}1f{Z k=0;Z p=-1;Z f,m;1i(Z q=0;q<a;q++){Z l=g[q];Z v=n.8b(z,u,s,r,l);if(v<j){3o}if(p<0){p=n.n7(e,d,c,b,o);if(o[1]<o[0]&&p>1){V.BC()}f=n.8b(e,d,c,b,o[0]);if(p>1){m=n.8b(e,d,c,b,o[1])}}if(p==2){if(l<o[0]){k+=f<e?1:-1}1f{if(l<o[1]){k+=m<f?1:-1}1f{k+=b<m?1:-1}}}1f{if(l<o[0]){k+=f<e?1:-1}1f{k+=b<f?1:-1}}}1c k}},Bz:1b(d,o,c,l,a,j,m,h){Z e=V.f9;Z p=V.jV;if((h>o&&h>l&&h>j)||(h<o&&h<l&&h<j)){1c 0}Z g=e.yU(o,l,j,h,p);if(g===0){1c 0}1f{Z q=e.n6(o,l,j);if(q>=0&&q<=1){Z n=0;Z k=e.9n(o,l,j,q);1i(Z f=0;f<g;f++){Z b=e.9n(d,c,a,p[f]);if(b>m){3o}if(p[f]<q){n+=k<o?1:-1}1f{n+=j<k?1:-1}}1c n}1f{Z b=e.9n(d,c,a,p[0]);if(b>m){1c 0}1c j<o?1:-1}}},By:1b(h,g,a,l,c,e,n,m){Z q=V.jV;Z p=V.hm;m-=g;if(m>a||m<-a){1c 0}Z k=1q.5x(a*a-m*m);q[0]=-k;q[1]=k;if(1q.4t(l-c)>=p){l=0;c=p;Z d=e?1:-1;if(n>=q[0]+h&&n<=q[1]+h){1c d}1f{1c 0}}if(e){Z k=l;l=V.cc(c);c=V.cc(k)}1f{l=V.cc(l);c=V.cc(c)}if(l>c){c+=p}Z o=0;1i(Z j=0;j<2;j++){Z b=q[j];if(b+h>n){Z f=1q.eZ(m,b);Z d=e?1:-1;if(f<0){f=p+f}if((f>=l&&f<=c)||(f+p>=l&&f+p<=c)){if(f>1q.PI/2&&f<1q.PI*1.5){d=-d}o+=d}}}1c o},BB:1b(t,b,j,m,l){Z o=0;Z r=0;Z E=0;Z C=0;Z f=0;Z a=1j;Z n=1j;j=j||"26";Z D=j==="2k"||j==="7T";Z q=j==="26"||j==="7T";1i(Z u=0;u<t.1g;u++){Z A=t[u];Z s=A.b0;if(a||A.sh==="M"){if(u>0){if(q){o+=V.hl(r,E,C,f,m,l)}if(o!==0){1c 1j}}C=s[s.1g-2];f=s[s.1g-1];a=1m;if(n&&A.sh!=="A"){n=1m;r=C;E=f}}4h(A.sh){1E"M":r=s[0];E=s[1];1H;1E"L":if(D){if(V.jU(r,E,s[0],s[1],b,m,l)){1c 1j}}if(q){o+=V.hl(r,E,s[0],s[1],m,l)}r=s[0];E=s[1];1H;1E"C":if(D){if(V.sg(r,E,s[0],s[1],s[2],s[3],s[4],s[5],b,m,l)){1c 1j}}if(q){o+=V.BA(r,E,s[0],s[1],s[2],s[3],s[4],s[5],m,l)}r=s[4];E=s[5];1H;1E"Q":if(D){if(V.sf(r,E,s[0],s[1],s[2],s[3],b,m,l)){1c 1j}}if(q){o+=V.Bz(r,E,s[0],s[1],s[2],s[3],m,l)}r=s[2];E=s[3];1H;1E"A":Z e=s[0];Z c=s[1];Z h=s[2];Z g=s[3];Z k=s[4];Z B=s[5];Z z=1q.6V(k)*h+e;Z d=1q.5w(k)*g+c;if(!n){o+=V.hl(r,E,z,d)}1f{n=1m;C=z;f=d}Z v=(m-e)*g/h+e;if(D){if(V.se(e,c,g,k,k+B,1-s[7],b,v,l)){1c 1j}}if(q){o+=V.By(e,c,g,k,k+B,1-s[7],v,l)}r=1q.6V(k+B)*h+e;E=1q.5w(k+B)*g+c;1H;1E"z":if(D){if(V.jU(r,E,C,f,b,m,l)){1c 1j}}a=1j;1H}}if(q){o+=V.hl(r,E,C,f,m,l)}1c o!==0},qH:1b(f,e){Z c=f+":"+e;if(V.hk[c]){1c V.hk[c]}V.4B=V.4B||V.cb.4G();V.4B.4N();if(e){V.4B.81=e}f=(f+"").6q("\\n");Z d=0;1i(Z b=0,a=f.1g;b<a;b++){d=1q.2L(V.4B.jT(f[b]).1I,d)}V.4B.4U();V.hk[c]=d;if(++V.ni>V.nh){V.ni=0;V.hk={}}1c d},gy:1b(d,c){Z b=d+":"+c;if(V.hj[b]){1c V.hj[b]}V.4B=V.4B||V.cb.4G();V.4B.4N();if(c){V.4B.81=c}d=(d+"").6q("\\n");Z a=(V.4B.jT("ZH").1I+2)*d.1g;V.4B.4U();V.hj[b]=a;if(++V.ng>V.nh){V.ng=0;V.hj={}}1c a},1T:"1a.1h.2B.rU"});1a.1h.2B.7I=1a.1U({cb:1d,4B:1d,hh:1d,sa:1d,hg:1d,s9:1d,s4:1d,hf:1d,1B:1b(){V.cb=1n 1a.1h.2B.1t();V.hh=["#OH"," #OG"," #OF"," #OE"," #OD","#OC"," #OB"," #OA"," #Oz"," #Oy","#Ox"," #Ow"," #Ov"," #Ou"," #Ot","#Os"," #Or"," #Oq"," #Op"," #Oo","#On"," #Om"," #Ol"," #Ok"," #Oj","#Oi"," #Oh"," #Og"," #Of"," #Oe"];V.sa=V.hh;V.hg="4f(0,0,1V,1)";V.s9=V.hg;V.s4=/^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|4f?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|z2?\\(\\s*([\\d\\.]+(?:Bx|\\Bw|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+)?)%?\\s*\\)|jR?\\(\\s*([\\d\\.]+(?:Bx|\\Bw|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+)?)%?\\s*\\))\\s*$/i;V.hf={Bv:"#Od",Bu:"#Oc",Bt:"#Bc",Bs:"#Ob",Br:"#Oa",Bq:"#O9",Bp:"#O8",nf:"#hi",Bo:"#O7",7n:"#Bn",Bm:"#O6",Bl:"#O5",Bk:"#O4",Bj:"#O3",Bi:"#O2",Bh:"#O1",Bg:"#O0",Bf:"#NZ",Be:"#NY",Bd:"#NX",sd:"#Bc",Bb:"#NV",Ba:"#NU",B9:"#NT",B8:"#B6",B7:"#B6",B5:"#NS",B4:"#NR",B3:"#NQ",B2:"#NP",B1:"#NO",B0:"#NN",AZ:"#NM",AY:"#NL",AX:"#NK",AW:"#NJ",NI:"#AU",AV:"#AU",AT:"#NH",AS:"#NG",AR:"#NF",AQ:"#ND",AP:"#AN",AO:"#AN",AM:"#NC",AL:"#NB",AK:"#NA",AJ:"#Nz",AI:"#A3",AG:"#Ny",AF:"#Nx",AE:"#Nw",AD:"#Nv",jS:"#AB",AC:"#AB",8c:"#Nu",Az:"#Nt",Ay:"#Ns",Ax:"#Nr",Aw:"#Nq",Av:"#Np",Au:"#Nn",At:"#Nm",As:"#Nl",Ar:"#Nk",Aq:"#Nj",Ap:"#Ni",Ao:"#Nh",Am:"#Ng",Al:"#Nf",Ak:"#Ne",Aj:"#Ah",Ai:"#Ah",Ag:"#Nd",Af:"#Nc",Ae:"#Nb",Ad:"#Na",Ac:"#N9",Ab:"#A9",Aa:"#A9",A8:"#N8",A7:"#N7",sc:"#N6",A6:"#N5",A5:"#N4",A4:"#A3",A2:"#N3",A1:"#N2",A0:"#N1",zZ:"#N0",zY:"#MZ",zX:"#MY",zW:"#MX",zV:"#MW",zU:"#MV",zT:"#MU",zS:"#MT",zR:"#MS",zQ:"#MR",zP:"#MQ",zO:"#MP",zN:"#MO",zM:"#MN",zL:"#MM",zK:"#ML",zJ:"#MK",zI:"#MJ",zH:"#MI",zG:"#MH",zF:"#MG",zE:"#MF",zD:"#ME",zC:"#MD",zB:"#MC",zz:"#MB",zy:"#MA",zx:"#Mz",zw:"#My",zv:"#Mx",7L:"#Mw",zu:"#Mv",zt:"#Mu",zs:"#Mt",zr:"#Ms",zq:"#Mr",zp:"#Mq",zo:"#Mp",zn:"#Mo",zm:"#Mn",zl:"#Mm",zk:"#Ml",zj:"#zh",zi:"#zh",zg:"#Mk",zf:"#Mj",ze:"#Mi",zd:"#Mh",zc:"#Mf",zb:"#Me",za:"#Md",z9:"#Mc",z8:"#Mb",z7:"#Ma",ne:"#gH",z6:"#M9",sb:"#M8",z5:"#M7"}},M6:1b(a){V.hh=a},M5:1b(){V.hh=V.sa},M4:1b(a,b){a=a|0;b=b||V.hh;1c b[a%b.1g]},M3:1b(a){V.hg=a},M2:1b(){V.hg=V.s9},xw:1b(){1c V.hg},M1:1b(b,m,d,a,k,c,g){Z h=V.cb;if(!V.4B){V.4B=h.4G()}Z j=V.4B.M0(b,m,d,a,k,c);1i(Z f=0,e=g.1g;f<e;f++){j.f8(g[f][0],g[f][1])}j.z4=1j;1c j},LZ:1b(b,j,a,h,e){Z f=V.cb;if(!V.4B){V.4B=f.4G()}Z g=V.4B.nd(b,j,a,h);1i(Z d=0,c=e.1g;d<c;d++){g.f8(e[d][0],e[d][1])}g.z4=1j;1c g},s8:1b(e,j,h){e=V.dD(e);j=V.dD(j);e=V.ca(e);j=V.ca(j);Z d=[];Z f=(j[0]-e[0])/h;Z m=(j[1]-e[1])/h;Z p=(j[2]-e[2])/h;Z q=(j[3]-e[3])/h;1i(Z k=0,c=e[0],l=e[1],n=e[2],o=e[3];k<h;k++){d[k]=V.aY([V.9o(1q.7m(c),[0,1V]),V.9o(1q.7m(l),[0,1V]),V.9o(1q.7m(n),[0,1V]),o.iW(4)-0],"4f");c+=f;l+=m;n+=p;o+=q}c=j[0];l=j[1];n=j[2];o=j[3];d[k]=V.aY([c,l,n,o],"4f");1c d},LY:1b(b,f){Z d=[];Z a=b.1g;if(f===1z){f=20}if(a===1){d=V.s8(b[0],b[0],f)}1f{if(a>1){1i(Z e=0,g=a-1;e<g;e++){Z c=V.s8(b[e],b[e+1],f);if(e<g-1){c.jH()}d=d.5k(c)}}}1c d},aY:1b(a,b){b=b||"3X";if(a&&(a.1g===3||a.1g===4)){a=V.1v(a,1b(d){1c d>1?1q.f4(d):d});if(b.3k("z3")>-1){1c"#"+((1<<24)+(a[0]<<16)+(a[1]<<8)+(+a[2])).2c(16).4a(1)}1f{if(b.3k("hs")>-1){Z c=V.1v(a.4a(1,3),1b(d){1c d+"%"});a[1]=c[0];a[2]=c[1]}}if(b.3k("a")>-1){if(a.1g===3){a.1r(1)}a[3]=V.9o(a[3],[0,1]);1c b+"("+a.4a(0,4).44(",")+")"}1c b+"("+a.4a(0,3).44(",")+")"}},yq:1b(a){a=V.f7(a);if(a.3k("4f")<0){a=V.dD(a)}Z c=[];Z b=0;a.3h(/[\\d.]+/g,1b(d){if(b<3){d=d|0}1f{d=+d}c[b++]=d});1c c},9p:1b(a,d){if(!V.f6(a)){1c a}Z b=V.ca(a);Z c=b[3];if(1P c==="1z"){c=1}if(a.3k("nb")>-1){b=V.z1(b)}1f{if(a.3k("nc")>-1){b=V.z0(b)}}if(d.3k("nb")>-1||d.3k("s6")>-1){b=V.yZ(b)}1f{if(d.3k("nc")>-1){b=V.yY(b)}}b[3]=c;1c V.aY(b,d)},dD:1b(a){1c V.9p(a,"4f")},qR:1b(a){1c V.9p(a,"3X")},s7:1b(a){1c V.9p(a,"z3")},LX:1b(a){1c V.9p(a,"LW")},LV:1b(a){1c V.9p(a,"s6")},LU:1b(a){1c V.9p(a,"z2")},LT:1b(a){1c V.9p(a,"nb")},LS:1b(a){1c V.9p(a,"jR")},4Q:1b(a){1c V.9p(a,"nc")},LR:1b(a){1i(Z b in V.hf){if(V.s7(V.hf[b])===V.s7(a)){1c b}}1c 1d},f7:1b(a){1c jQ(a).3h(/\\s+/g,"")},n1:1b(c){if(V.hf[c]){c=V.hf[c]}c=V.f7(c);c=c.3h(/s6/i,"nb");if(/^#[\\da-f]{3}$/i.jP(c)){c=2P(c.4a(1),16);Z e=(c&LQ)<<8;Z d=(c&6t)<<4;Z a=c&15;c="#"+((1<<24)+(e<<4)+e+(d<<4)+d+(a<<4)+a).2c(16).4a(1)}1c c},LP:1b(a,e){if(!V.f6(a)){1c a}Z d=e>0?1:-1;if(1P e==="1z"){e=0}e=1q.4t(e)>1?1:1q.4t(e);a=V.qR(a);Z c=V.ca(a);1i(Z b=0;b<3;b++){if(d===1){c[b]=c[b]*(1-e)|0}1f{c[b]=((1V-c[b])*e+c[b])|0}}1c"3X("+c.44(",")+")"},7K:1b(a){if(!V.f6(a)){1c a}Z b=V.ca(V.dD(a));b=V.1v(b,1b(d){1c 1V-d});1c V.aY(b,"3X")},qS:1b(n,m,g){if(!V.f6(n)||!V.f6(m)){1c n}if(1P g==="1z"){g=0.5}g=1-V.9o(g,[0,1]);Z l=g*2-1;Z c=V.ca(V.dD(n));Z a=V.ca(V.dD(m));Z j=c[3]-a[3];Z k=(((l*j===-1)?l:(l+j)/(1+l*j))+1)/2;Z h=1-k;Z f=[];1i(Z e=0;e<3;e++){f[e]=c[e]*k+a[e]*h}Z b=c[3]*g+a[3]*(1-g);b=1q.2L(0,1q.2Q(1,b));if(c[3]===1&&a[3]===1){1c V.aY(f,"3X")}f[3]=b;1c V.aY(f,"4f")},s5:1b(){1c"#"+1q.s5().2c(16).4a(2,8)},ca:1b(e){e=V.n1(e);Z b=e.3B(V.s4);if(b===1d){8y 1n d8("3a 1X aZ 3W")}Z i;Z l;Z f=[];Z j;if(b[2]){i=b[2].3h("#","").6q("");j=[i[0]+i[1],i[2]+i[3],i[4]+i[5]];f=V.1v(j,1b(a){1c 1a.1h.2B.7I.1u.9o.4q(V,2P(a,16),[0,1V])})}1f{if(b[4]){Z c=(b[4]).6q(",");l=c[3];j=c.4a(0,3);f=V.1v(j,1b(a){a=1q.7m(a.3k("%")>0?2P(a,0)*2.55:a);1c 1a.1h.2B.7I.1u.9o.4q(V,a,[0,1V])});if(1P l!=="1z"){f.1r(V.9o(40(l),[0,1]))}}1f{if(b[5]||b[6]){Z m=(b[5]||b[6]).6q(",");Z g=2P(m[0],0)/dC;Z n=m[1];Z k=m[2];l=m[3];f=V.1v([n,k],1b(a){1c 1a.1h.2B.7I.1u.9o.4q(V,40(a)/100,[0,1])});f.na(g);if(1P l!=="1z"){f.1r(V.9o(40(l),[0,1]))}}}}1c f},6H:1b(c,b){if(!V.f6(c)){1c c}if(b===1d){b=1}Z d=V.ca(V.dD(c));d[3]=V.9o(dj(b).iW(4),[0,1]);1c V.aY(d,"4f")},1v:1b(d,b){if(1P b!=="1b"){8y 1n s3()}Z a=d?d.1g:0;1i(Z c=0;c<a;c++){d[c]=b(d[c])}1c d},9o:1b(a,b){if(a<=b[0]){a=b[0]}1f{if(a>=b[1]){a=b[1]}}1c a},f6:1b(a){1c a 2a 4d||1P a==="3t"},z1:1b(j){Z s=j[0];Z e=j[1];Z d=j[2];Z k;Z t;Z c;if(e===0){k=d*1V;t=d*1V;c=d*1V}1f{Z l=s*6;if(l===6){l=0}Z f=l|0;Z q=d*(1-e);Z p=d*(1-e*(l-f));Z o=d*(1-e*(1-(l-f)));Z a=0;Z m=0;Z n=0;if(f===0){a=d;m=o;n=q}1f{if(f===1){a=p;m=d;n=q}1f{if(f===2){a=q;m=d;n=o}1f{if(f===3){a=q;m=p;n=d}1f{if(f===4){a=o;m=q;n=d}1f{a=d;m=q;n=p}}}}}k=a*1V;t=m*1V;c=n*1V}1c[k,t,c]},z0:1b(c){Z h=c[0];Z b=c[1];Z e=c[2];Z d;Z i;Z a;if(b===0){d=e*1V;i=e*1V;a=e*1V}1f{Z f;if(e<0.5){f=e*(1+b)}1f{f=(e+b)-(b*e)}Z g=2*e-f;d=1V*V.n9(g,f,h+(1/3));i=1V*V.n9(g,f,h);a=1V*V.n9(g,f,h-(1/3))}1c[d,i,a]},n9:1b(c,b,a){if(a<0){a+=1}if(a>1){a-=1}if((6*a)<1){1c(c+(b-c)*6*a)}if((2*a)<1){1c(b)}if((3*a)<2){1c(c+(b-c)*((2/3)-a)*6)}1c c},yZ:1b(f){Z g=(f[0]/1V);Z l=(f[1]/1V);Z b=(f[2]/1V);Z i=1q.2Q(g,l,b);Z m=1q.2L(g,l,b);Z k=m-i;Z c=m;Z j;Z e;if(k===0){j=0;e=0}1f{e=k/m;Z h=(((m-g)/6)+(k/2))/k;Z a=(((m-l)/6)+(k/2))/k;Z d=(((m-b)/6)+(k/2))/k;if(g===m){j=d-a}1f{if(l===m){j=(1/3)+h-d}1f{if(b===m){j=(2/3)+a-h}}}if(j<0){j+=1}if(j>1){j-=1}}j=j*dC;e=e*100;c=c*100;1c[j,e,c]},yY:1b(e){Z f=(e[0]/1V);Z l=(e[1]/1V);Z b=(e[2]/1V);Z h=1q.2Q(f,l,b);Z m=1q.2L(f,l,b);Z k=m-h;Z i=(m+h)/2;Z j;Z d;if(k===0){j=0;d=0}1f{if(i<0.5){d=k/(m+h)}1f{d=k/(2-m-h)}Z g=(((m-f)/6)+(k/2))/k;Z a=(((m-l)/6)+(k/2))/k;Z c=(((m-b)/6)+(k/2))/k;if(f===m){j=c-a}1f{if(l===m){j=(1/3)+g-c}1f{if(b===m){j=(2/3)+a-g}}}if(j<0){j+=1}if(j>1){j-=1}}j=j*dC;d=d*100;i=i*100;1c[j,d,i]},1T:"1a.1h.2B.7I"});1a.1h.2B.rT=1a.1U({1B:1b(){if(1G.1g===3){V.yX(1G)}},yX:1b(h,d,g){if(h.1g===0){1c}Z c=h[0][0];Z j=h[0][0];Z f=h[0][1];Z a=h[0][1];1i(Z e=1;e<h.1g;e++){Z b=h[e];if(b[0]<c){c=b[0]}if(b[0]>j){j=b[0]}if(b[1]<f){f=b[1]}if(b[1]>a){a=b[1]}}d[0]=c;d[1]=f;g[0]=j;g[1]=a},LO:1b(o,m,l,j,e,h){Z b=1n 1a.1h.2B.er();Z c=[];b.n7(o[0],m[0],l[0],j[0],c);1i(Z f=0;f<c.1g;f++){c[f]=b.8b(o[0],m[0],l[0],j[0],c[f])}Z n=[];b.n7(o[1],m[1],l[1],j[1],n);1i(Z f=0;f<n.1g;f++){n[f]=b.8b(o[1],m[1],l[1],j[1],n[f])}c.1r(o[0],j[0]);n.1r(o[1],j[1]);Z d=1q.2Q.1x(1d,c);Z k=1q.2L.1x(1d,c);Z g=1q.2Q.1x(1d,n);Z a=1q.2L.1x(1d,n);e[0]=d;e[1]=g;h[0]=k;h[1]=a},LN:1b(m,l,k,e,i){Z d=1n 1a.1h.2B.er();Z g=d.n6(m[0],l[0],k[0]);Z f=d.n6(m[1],l[1],k[1]);g=1q.2L(1q.2Q(g,1),0);f=1q.2L(1q.2Q(f,1),0);Z a=1-g;Z n=1-f;Z c=a*a*m[0]+2*a*g*l[0]+g*g*k[0];Z j=a*a*m[1]+2*a*g*l[1]+g*g*k[1];Z b=n*n*m[0]+2*n*f*l[0]+f*f*k[0];Z h=n*n*m[1]+2*n*f*l[1]+f*f*k[1];e[0]=1q.2Q(m[0],k[0],c,b);e[1]=1q.2Q(m[1],k[1],j,h);i[0]=1q.2L(m[0],k[0],c,b);i[1]=1q.2L(m[1],k[1],j,h)},5v:1b(m,k,a,j,c,d,g,l){Z i=1n 1a.1h.2B.49();Z b=i.5b();Z f=i.5b();Z n=i.5b();b[0]=1q.6V(j)*a+m;b[1]=1q.5w(j)*a+k;f[0]=1q.6V(c)*a+m;f[1]=1q.5w(c)*a+k;i.2Q(g,b,f);i.2L(l,b,f);j=j%(1q.PI*2);if(j<0){j=j+1q.PI*2}c=c%(1q.PI*2);if(c<0){c=c+1q.PI*2}if(j>c&&!d){c+=1q.PI*2}1f{if(j<c&&d){j+=1q.PI*2}}if(d){Z h=c;c=j;j=h}1i(Z e=0;e<c;e+=1q.PI/2){if(e>j){n[0]=1q.6V(e)*a+m;n[1]=1q.5w(e)*a+k;i.2Q(g,n,g);i.2L(l,n,l)}}},1T:"1a.1h.2B.rT"});1a.1h.2B.er=1a.1U({8a:1d,dB:1d,n8:1d,he:1d,1B:1b(){V.8a=1n 1a.1h.2B.49();V.dB=0.LM;V.n8=1q.5x(3);V.he=1/3},c9:1b(a){1c a>-V.dB&&a<V.dB},s2:1b(a){1c a>V.dB||a<-V.dB},8b:1b(f,e,d,c,a){Z b=1-a;1c b*b*(b*f+3*a*e)+a*a*(a*c+3*b*d)},LL:1b(f,e,d,c,a){Z b=1-a;1c 3*(((e-f)*b+2*(d-e)*a)*b+(c-d)*a*a)},yW:1b(j,i,h,f,H,p){Z G=f+3*(i-h)-j;Z F=3*(h-i*2+j);Z E=3*(i-j);Z z=j-H;Z x=F*F-3*G*E;Z w=F*E-9*G*z;Z v=E*E-3*F*z;Z y=0;if(V.c9(x)&&V.c9(w)){if(V.c9(F)){p[0]=0}1f{Z u=-E/F;if(u>=0&&u<=1){p[y++]=u}}}1f{Z e=w*w-4*x*v;if(V.c9(e)){Z s=w/x;Z u=-F/G+s;Z t=-s/2;if(u>=0&&u<=1){p[y++]=u}if(t>=0&&t<=1){p[y++]=t}}1f{if(e>0){Z g=1q.5x(e);Z m=x*F+1.5*G*(-w+g);Z l=x*F+1.5*G*(-w-g);if(m<0){m=-1q.5K(-m,V.he)}1f{m=1q.5K(m,V.he)}if(l<0){l=-1q.5K(-l,V.he)}1f{l=1q.5K(l,V.he)}Z u=(-F-(m+l))/(3*G);if(u>=0&&u<=1){p[y++]=u}}1f{Z k=(2*x*F-3*G*w)/(2*1q.5x(x*x*x));Z q=1q.LK(k)/3;Z o=1q.5x(x);Z D=1q.6V(q);Z u=(-F-2*o*D)/(3*G);Z t=(-F+o*(D+V.n8*1q.5w(q)))/(3*G);Z r=(-F+o*(D-V.n8*1q.5w(q)))/(3*G);if(u>=0&&u<=1){p[y++]=u}if(t>=0&&t<=1){p[y++]=t}if(r>=0&&r<=1){p[y++]=r}}}}1c y},n7:1b(p,o,m,l,h){Z j=6*m-12*o+6*p;Z k=9*o+3*l-3*p-9*m;Z i=3*o-3*p;Z d=0;if(V.c9(k)){if(V.s2(j)){Z g=-i/j;if(g>=0&&g<=1){h[d++]=g}}}1f{Z e=j*j-4*k*i;if(V.c9(e)){h[0]=-j/(2*k)}1f{if(e>0){Z q=1q.5x(e);Z g=(-j+q)/(2*k);Z f=(-j-q)/(2*k);if(g>=0&&g<=1){h[d++]=g}if(f>=0&&f<=1){h[d++]=f}}}}1c d},LJ:1b(j,i,h,g,k,b){Z c=(i-j)*k+j;Z a=(h-i)*k+i;Z d=(g-h)*k+h;Z l=(a-c)*k+c;Z f=(d-a)*k+a;Z e=(f-l)*k+l;b[0]=j;b[1]=c;b[2]=l;b[3]=e;b[4]=e;b[5]=f;b[6]=d;b[7]=g},yV:1b(u,e,s,c,r,b,q,a,g,f,p){Z n=V.8a.5b();Z m=V.8a.5b();Z l=V.8a.5b();Z h;Z z=0.yS;Z w=a7;n[0]=g;n[1]=f;1i(Z v=0;v<1;v+=0.jO){m[0]=V.8b(u,s,r,q,v);m[1]=V.8b(e,c,b,a,v);Z B=V.8a.f1(n,m);if(B<w){h=v;w=B}}w=a7;1i(Z o=0;o<32;o++){if(z<V.dB){1H}Z j=h-z;Z k=h+z;m[0]=V.8b(u,s,r,q,j);m[1]=V.8b(e,c,b,a,j);Z B=V.8a.f1(m,n);if(j>=0&&B<w){h=j;w=B}1f{l[0]=V.8b(u,s,r,q,k);l[1]=V.8b(e,c,b,a,k);Z A=V.8a.f1(l,n);if(k<=1&&A<w){h=k;w=A}1f{z*=0.5}}}if(p){p[0]=V.8b(u,s,r,q,h);p[1]=V.8b(e,c,b,a,h)}1c 1q.5x(w)},9n:1b(e,d,c,a){Z b=1-a;1c b*(b*e+2*a*d)+a*a*c},LI:1b(d,c,b,a){1c 2*((1-a)*(c-d)+a*(b-c))},yU:1b(p,m,l,e,o){Z k=p-2*m+l;Z j=2*(m-p);Z i=p-e;Z d=0;if(V.c9(k)){if(V.s2(j)){Z h=-i/j;if(h>=0&&h<=1){o[d++]=h}}}1f{Z f=j*j-4*k*i;if(V.c9(f)){Z h=-j/(2*k);if(h>=0&&h<=1){o[d++]=h}}1f{if(f>0){Z q=1q.5x(f);Z h=(-j+q)/(2*k);Z g=(-j-q)/(2*k);if(h>=0&&h<=1){o[d++]=h}if(g>=0&&g<=1){o[d++]=g}}}}1c d},n6:1b(d,c,b){Z a=d+b-2*c;if(a===0){1c 0.5}1f{1c(d-c)/a}},yT:1b(r,c,q,b,p,a,f,e,o){Z m=V.8a.5b();Z l=V.8a.5b();Z k=V.8a.5b();Z g;Z v=0.yS;Z u=a7;m[0]=f;m[1]=e;1i(Z s=0;s<1;s+=0.jO){l[0]=V.9n(r,q,p,s);l[1]=V.9n(c,b,a,s);Z z=V.8a.f1(m,l);if(z<u){g=s;u=z}}u=a7;1i(Z n=0;n<32;n++){if(v<V.dB){1H}Z h=g-v;Z j=g+v;l[0]=V.9n(r,q,p,h);l[1]=V.9n(c,b,a,h);Z z=V.8a.f1(l,m);if(h>=0&&z<u){g=h;u=z}1f{k[0]=V.9n(r,q,p,j);k[1]=V.9n(c,b,a,j);Z w=V.8a.f1(k,m);if(j<=1&&w<u){g=j;u=w}1f{v*=0.5}}}if(o){o[0]=V.9n(r,q,p,g);o[1]=V.9n(c,b,a,g)}1c 1q.5x(u)},1T:"1a.1h.2B.er"});1a.1h.2B.rS=1a.1U({1B:1b(){1b a(t){Z j=V.os={};Z u=V.yD={};Z c=t.3B(/LH[kK]it[\\/]{0,1}([\\d.]+)/);Z v=t.3B(/(yG);?[\\s\\/]+([\\d.]+)?/);Z n=t.3B(/(yN).*OS\\s([\\s1]+)/);Z h=t.3B(/(yO)(.*OS\\s([\\s1]+))?/);Z f=!n&&t.3B(/(yP\\yQ)\\s([\\s1]+)/);Z b=t.3B(/(LG|LF)[\\s\\/]([\\d.]+)/);Z p=b&&t.3B(/LE/);Z g=t.3B(/yL\\/([\\d.]+)/);Z s=t.3B(/LD\\/([\\d.3z]+)/);Z o=t.3B(/(LC).*yR\\/([\\d.]+)/);Z l=t.3B(/(LB).*yR\\/([\\d.]+)/);Z d=t.3B(/(LA\\Lz\\yQ)\\s([\\d.]+)/);Z m=t.3B(/Ly/);Z r=t.3B(/Lx\\/([\\d.]+)/)||t.3B(/yF\\/([\\d.]+)/);Z i=t.3B(/Lw\\/([\\d.]+)/);Z q=t.3B(/yM ([\\d.]+)/);Z k=c&&t.3B(/s0\\//)&&!r;Z e=t.3B(/(yP|yO|yN).*Lv(?!.*yJ)/)&&!r;Z q=t.3B(/yM\\s([\\d.]+)/);if(u.aX=!!c){u.4Z=c[1]}if(v){j.jN=1j,j.4Z=v[2]}if(f&&!h){j.n5=j.Lu=1j,j.4Z=f[2].3h(/3z/g,".")}if(n){j.n5=j.Lt=1j,j.4Z=n[2].3h(/3z/g,".")}if(h){j.n5=j.yH=1j,j.4Z=h[3]?h[3].3h(/3z/g,"."):1d}if(b){j.Ls=1j,j.4Z=b[2]}if(p){j.Lr=1j}if(o){j.Lq=1j,j.4Z=o[2]}if(l){j.Lp=1j,j.4Z=l[2]}if(d){j.Lo=1j,j.4Z=d[2]}if(m){u.Ln=1j}if(g){j.Lm=1j,j.4Z=g[1]}if(s){u.yK=1j,u.4Z=s[1]}if(!s&&j.jN&&t.3B(/yL Ll/)){u.yK=1j}if(r){u.Lk=1j,u.4Z=r[1]}if(i){u.Lj=1j,u.4Z=i[1]}if(q){u.ie=1j,u.4Z=q[1]}if(k&&(t.3B(/yJ/)||!!j.n5)){u.yI=1j}if(e){u.Li=1j}if(q){u.ie=1j,u.4Z=q[1]}j.mQ=!!(n||m||(v&&!t.3B(/s0/))||(i&&t.3B(/Lh/))||(q&&!t.3B(/Lg/)&&t.3B(/yE/)));j.rt=!!(!j.mQ&&!j.yH&&(v||f||b||o||l||(r&&t.3B(/yG/))||(r&&t.3B(/yF\\/([\\d.]+)/))||(i&&t.3B(/s0/))||(q&&t.3B(/yE/))));1c{yD:u,os:j,Lf:2n.2K("1W").4G?1j:1m}}1c a(rZ.rY)},1T:"1a.1h.2B.rS"});1a.1h.2B.3f=1a.1U({8I:1d,1B:1b(){V.8I=1P 2u.7l==="1b"?1b(a){a.jM();a.jL();a.gX=1j}:1b(a){a.Le=1m;a.gX=1j}},yn:1b(a){1c 1P a.eU!="1z"&&a.eU||1P a.7G!="1z"&&a.7G||1P a.jq!="1z"&&a.jq||1P a.gW!="1z"&&a.gW},ym:1b(a){1c 1P a.eT!="1z"&&a.eT||1P a.7F!="1z"&&a.7F||1P a.jp!="1z"&&a.jp||1P a.jn!="1z"&&a.jn},Ld:1b(a){1c 1P a.yC!="1z"&&a.yC||1P a.rG!="1z"&&a.rG||1P a.rF!="1z"&&-a.rF},1T:"1a.1h.2B.3f"});1a.1h.2B.rR=1a.1U({1B:1b(){},gO:1b(c,b,a,d){if(1P(c)==="7J"){Z e=c;c=e.2S;b=e.Lc;a=e.yB;d=e}1f{if(1P(a)==="7J"){d=a}}Z f=2u.yA?1n yA():1n xg("Lb.La");f.dA("jK",c,1j);f.yz=1b(){if(f.xf==4){if(f.f5>=n4&&f.f5<jz||f.f5===L9){b&&b(f.hd)}1f{a&&a()}f.yz=1n 3g();f=1d}};f.L8(1d)},1T:"1a.1h.2B.rR"});1a.1h.2B.rQ=1a.1U({1B:1b(){1c 1b(){if(1a.1h.4v.mT===0){1c}1f{if(1a.1h.4v.mT==1){1i(Z a in 1G){8y 1n d8(1G[a])}}1f{if(1a.1h.4v.mT>1){1i(Z a in 1G){L7.rX(1G[a])}}}}}},1T:"1a.1h.2B.rQ"});1a.1h.2B.1q=1a.1U({hc:1d,1B:1b(){V.hc=1q.PI/62},5w:1b(b,a){1c 1q.5w(a?b*V.hc:b)},6V:1b(b,a){1c 1q.6V(a?b*V.hc:b)},j6:1b(a){1c a*V.hc},L6:1b(a){1c a/V.hc},1T:"1a.1h.2B.1q"});1a.1h.2B.rP=1a.1U({ha:1d,1B:1b(){V.ha=1P n2==="1z"?4d:n2},5b:1b(){Z a=V.ha;Z b=1n a(6);V.rO(b);1c b},rO:1b(a){a[0]=1;a[1]=0;a[2]=0;a[3]=1;a[4]=0;a[5]=0;1c a},mu:1b(b,a){b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];1c b},rN:1b(c,b,a){c[0]=b[0]*a[0]+b[2]*a[1];c[1]=b[1]*a[0]+b[3]*a[1];c[2]=b[0]*a[2]+b[2]*a[3];c[3]=b[1]*a[2]+b[3]*a[3];c[4]=b[0]*a[4]+b[2]*a[5]+b[4];c[5]=b[1]*a[4]+b[3]*a[5]+b[5];1c c},4V:1b(d,b,c){d[0]=b[0];d[1]=b[1];d[2]=b[2];d[3]=b[3];d[4]=b[4]+c[0];d[5]=b[5]+c[1];1c d},6F:1b(c,h,g){Z b=h[0];Z k=h[2];Z f=h[4];Z l=h[1];Z i=h[3];Z d=h[5];Z j=1q.5w(g);Z e=1q.6V(g);c[0]=b*e+l*j;c[1]=-b*j+l*e;c[2]=k*e+i*j;c[3]=-k*j+e*i;c[4]=e*f+j*d;c[5]=e*d-j*f;1c c},2t:1b(d,b,c){Z f=c[0];Z e=c[1];d[0]=b[0]*f;d[1]=b[1]*e;d[2]=b[2]*f;d[3]=b[3]*e;d[4]=b[4]*f;d[5]=b[5]*e;1c d},4j:1b(c,g){Z b=g[0];Z i=g[2];Z e=g[4];Z j=g[1];Z h=g[3];Z d=g[5];Z f=b*h-j*i;if(!f){1c 1d}f=1/f;c[0]=h*f;c[1]=-j*f;c[2]=-i*f;c[3]=b*f;c[4]=(i*d-h*e)*f;c[5]=(j*e-b*d)*f;1c c},xv:1b(c,f,g){Z b=f[0];Z i=f[2];Z e=f[4];Z j=f[1];Z h=f[3];Z d=f[5];c[0]=g[0]*b+g[1]*i+e;c[1]=g[0]*j+g[1]*h+d;1c c},1T:"1a.1h.2B.rP"});1a.1h.2B.1t=1a.1U({n3:1d,4B:1d,hb:1d,jJ:1d,aV:1d,aU:1d,f3:0,f2:0,1B:1b(){V.n3={"[7J 3g]":1,"[7J L5]":1,"[7J 9i]":1,"[7J d8]":1,"[7J L4]":1}},2A:1b(f){Z c=V.n3;if(1P f=="7J"&&f!==1d){Z b=f;if(f 2a 4d){b=[];1i(Z e=0,a=f.1g;e<a;e++){b[e]=V.2A(f[e])}}1f{if(!c[3U.1u.2c.4q(f)]){b={};1i(Z d in f){if(f.eL(d)){b[d]=V.2A(f[d])}}}}1c b}1c f},yy:1b(e,d,c,b){Z a=V.n3;if(d.eL(c)){if(1P e[c]=="7J"&&!a[3U.1u.2c.4q(e[c])]){V.6s(e[c],d[c],b)}1f{if(b||!(c in e)){e[c]=d[c]}}}},6s:1b(d,c,a){1i(Z b in c){V.yy(d,c,b,a)}1c d},4G:1b(){if(!V.4B){V.4B=2n.2K("1W").4G("2d")}1c V.4B},L3:1b(){if(!V.jJ){V.hb=2n.2K("1W");V.aV=V.hb.1I;V.aU=V.hb.1L;V.jJ=V.hb.4G("2d")}1c V.jJ},L2:1b(i,h){Z f=V.hb;Z g=V.jJ;Z a=V.aV;Z e=V.aU;Z d=V.f3;Z b=V.f2;Z j=100;Z c;if(i+d>a){a=i+d+j;f.1I=a;c=1j}if(h+b>e){e=h+b+j;f.1L=e;c=1j}if(i<-d){d=1q.f4(-i/j)*j;a+=d;f.1I=a;c=1j}if(h<-b){b=1q.f4(-h/j)*j;e+=b;f.1L=e;c=1j}if(c){g.4V(d,b)}},L1:1b(){1c{x:V.f3,y:V.f2}},3k:1b(d,c){if(d.3k){1c d.3k(c)}1i(Z b=0,a=d.1g;b<a;b++){if(d[b]===c){1c b}}1c-1},L0:1b(b,a){Z c=b.1u;1b d(){}d.1u=a.1u;b.1u=1n d();1i(Z e in c){b.1u[e]=c[e]}b.KZ=b},1T:"1a.1h.2B.1t"});1a.1h.2B.49=1a.1U({ha:1d,1B:1b(){V.ha=1P n2==="1z"?4d:n2},5b:1b(b,d){Z a=V.ha;Z c=1n a(2);c[0]=b||0;c[1]=d||0;1c c},mu:1b(b,a){b[0]=a[0];b[1]=a[1];1c b},c8:1b(e,d,c){e[0]=d;e[1]=c;1c e},5y:1b(a,c,b){a[0]=c[0]+b[0];a[1]=c[1]+b[1];1c a},KY:1b(c,e,d,b){c[0]=e[0]+d[0]*b;c[1]=e[1]+d[1]*b;1c c},jI:1b(a,c,b){a[0]=c[0]-b[0];a[1]=c[1]-b[1];1c a},rW:1b(a){1c 1q.5x(V.rV(a))},rV:1b(a){1c a[0]*a[0]+a[1]*a[1]},rN:1b(a,c,b){a[0]=c[0]*b[0];a[1]=c[1]*b[1];1c a},2o:1b(a,c,b){a[0]=c[0]/b[0];a[1]=c[1]/b[1];1c a},dk:1b(b,a){1c b[0]*a[0]+b[1]*a[1]},2t:1b(b,a,c){b[0]=a[0]*c;b[1]=a[1]*c;1c b},n1:1b(b,a){Z c=V.rW(a);if(c===0){b[0]=0;b[1]=0}1f{b[0]=a[0]/c;b[1]=a[1]/c}1c b},af:1b(b,a){1c 1q.5x((b[0]-a[0])*(b[0]-a[0])+(b[1]-a[1])*(b[1]-a[1]))},yx:1b(b,a){1c(b[0]-a[0])*(b[0]-a[0])+(b[1]-a[1])*(b[1]-a[1])},KX:1b(b,a){b[0]=-a[0];b[1]=-a[1];1c b},KW:1b(a,d,c,b){a[0]=d[0]+b*(c[0]-d[0]);a[1]=d[1]+b*(c[1]-d[1]);1c a},xY:1b(d,c,b){Z a=c[0];Z e=c[1];d[0]=b[0]*a+b[2]*e+b[4];d[1]=b[1]*a+b[3]*e+b[5];1c d},2Q:1b(a,c,b){a[0]=1q.2Q(c[0],b[0]);a[1]=1q.2Q(c[1],b[1]);1c a},2L:1b(a,c,b){a[0]=1q.2L(c[0],b[0]);a[1]=1q.2L(c[1],b[1]);1c a},1g:1b(a){1c V.rW(a)},KV:1b(a){1c V.rV(a)},KU:1b(b,a){1c V.af(b,a)},f1:1b(b,a){1c V.yx(b,a)},1T:"1a.1h.2B.49"});1a.1h.bV=1n 1a.1h.2B.rU();1a.1h.jd=1n 1a.1h.2B.7I();1a.1h.qB=1n 1a.1h.2B.rT();1a.1h.KT=1n 1a.1h.2B.er();1a.1h.jw=1n 1a.1h.2B.rS();1a.1h.jx=1n 1a.1h.2B.3f();1a.1h.KS=1n 1a.1h.2B.rR();1a.1h.dm=1n 1a.1h.2B.rQ();1a.1h.8z=1n 1a.1h.2B.1q();1a.1h.5I=1n 1a.1h.2B.rP();1a.1h.1t=1n 1a.1h.2B.1t();1a.1h.4z=1n 1a.1h.2B.49();1a.1h.qJ=1b(n,j,x,b,w){if(!w||w!==2){w=[0,0]}Z u=w;Z f=[];Z g=[];Z e=[];Z c=[];Z h=!!b;Z l,o;if(h){l=[a7,a7];o=[-a7,-a7];1i(Z p=0,q=n.1g;p<q;p++){1a.1h.4z.2Q(l,l,[n[p][0]+u[0],n[p][1]+u[1]]);1a.1h.4z.2L(o,o,[n[p][0]+u[0],n[p][1]+u[1]])}1a.1h.4z.2Q(l,l,b[0]);1a.1h.4z.2L(o,o,b[1])}1i(Z p=0,q=n.1g;p<q;p++){Z k=[n[p][0]+u[0],n[p][1]+u[1]];Z m;Z r;if(x){m=[n[p?p-1:q-1][0]+u[0],n[p?p-1:q-1][1]+u[1]];r=[n[(p+1)%q][0]+u[0],n[(p+1)%q][1]+u[1]]}1f{if(p===0||p===q-1){f.1r([n[p][0]+u[0],n[p][1]+u[1]]);3o}1f{m=[n[p-1][0]+u[0],n[p-1][1]+u[1]];r=[n[p+1][0]+u[0],n[p+1][1]+u[1]]}}1a.1h.4z.jI(g,r,m);1a.1h.4z.2t(g,g,j);Z a=1a.1h.4z.af(k,m);Z y=1a.1h.4z.af(k,r);Z d=a+y;if(d!==0){a/=d;y/=d}1a.1h.4z.2t(e,g,-a);1a.1h.4z.2t(c,g,y);Z t=1a.1h.4z.5y([],k,e);Z s=1a.1h.4z.5y([],k,c);if(h){1a.1h.4z.2L(t,t,l);1a.1h.4z.2Q(t,t,o);1a.1h.4z.2L(s,s,l);1a.1h.4z.2Q(s,s,o)}f.1r(t);f.1r(s)}if(x){f.1r(f.89())}1c f};1a.1h.qI=1b(o,t,a,s){if(!s||s!==2){s=[0,0]}Z r=s;Z q=o.1g;Z u=[];Z f=0;1i(Z p=1;p<q;p++){f+=1a.1h.4z.af([o[p-1][0]+r[0],o[p-1][1]+r[1]],[o[p][0]+r[0],o[p][1]+r[1]])}Z n=f/5;n=n<q?q:n;1i(Z p=0;p<n;p++){Z g=p/(n-1)*(t?q:q-1);Z m=1q.7m(g);Z l=g-m;Z e;Z d=[o[m%q][0]+r[0],o[m%q][1]+r[1]];Z c;Z b;if(!t){e=[o[m===0?m:m-1][0]+r[0],o[m===0?m:m-1][1]+r[1]];c=[o[m>q-2?q-1:m+1][0]+r[0],o[m>q-2?q-1:m+1][1]+r[1]];b=[o[m>q-3?q-1:m+2][0]+r[0],o[m>q-3?q-1:m+2][1]+r[1]]}1f{e=[o[(m-1+q)%q][0]+r[0],o[(m-1+q)%q][1]+r[1]];c=[o[(m+1)%q][0]+r[0],o[(m+1)%q][1]+r[1]];b=[o[(m+2)%q][0]+r[0],o[(m+2)%q][1]+r[1]]}Z k=l*l;Z j=l*k;u.1r([h(e[0],d[0],c[0],b[0],l,k,j),h(e[1],d[1],c[1],b[1],l,k,j)])}1c u;1b h(B,A,y,x,C,v,i){Z z=(y-B)*0.5;Z w=(x-A)*0.5;1c(2*(A-y)+z+w)*i+(-3*(A-y)-2*z-w)*v+z*C+A}};1a.1h.eB=1b(m,d,k,a,h,c,j){Z b=[5,5];c=1P c!="3s"?5:c;if(m.88){b[0]=c;b[1]=c;if(j&&(j 2a 4d)){m.88(j)}1f{m.88(b)}m.3A(d,k);m.4T(a,h);1c}Z n=a-d;Z l=h-k;Z f=1q.7m(1q.5x(n*n+l*l)/c);n=n/f;l=l/f;Z g=1j;1i(Z e=0;e<f;++e){if(g){m.3A(d,k)}1f{m.4T(d,k)}g=!g;d+=n;k+=l}m.4T(a,h)};1a.1h.8E=1a.1U({ae:1d,1B:1b(){V.ae={}},1Q:1b(){V.ae=1d},f0:1b(c,b,a){Z d=V.ae;if(!b||!c){1c V}if(!d[c]){d[c]=[]}d[c].1r({h:b,f0:1j,84:a||V});1c V},3p:1b(c,b,a){Z d=V.ae;if(!b||!c){1c V}if(!d[c]){d[c]=[]}d[c].1r({h:b,f0:1m,84:a||V});1c V},yh:1b(e,d){Z f=V.ae;if(!e){V.ae={};1c V}if(d){if(f[e]){Z c=[];1i(Z b=0,a=f[e].1g;b<a;b++){if(f[e][b]["h"]!=d){c.1r(f[e][b])}}f[e]=c}if(f[e]&&f[e].1g===0){4S f[e]}}1f{4S f[e]}1c V},eW:1b(e){if(V.ae[e]){Z c=1G;Z b=c.1g;if(b>3){c=4d.1u.4a.4q(c,1)}Z f=V.ae[e];Z a=f.1g;1i(Z d=0;d<a;){4h(b){1E 1:f[d]["h"].4q(f[d]["84"]);1H;1E 2:f[d]["h"].4q(f[d]["84"],c[1]);1H;1E 3:f[d]["h"].4q(f[d]["84"],c[1],c[2]);1H;1o:f[d]["h"].1x(f[d]["84"],c);1H}if(f[d]["f0"]){f.6o(d,1);a--}1f{d++}}}1c V},KR:1b(f){if(V.ae[f]){Z d=1G;Z c=d.1g;if(c>4){d=4d.1u.4a.4q(d,1,d.1g-1)}Z b=d[d.1g-1];Z g=V.ae[f];Z a=g.1g;1i(Z e=0;e<a;){4h(c){1E 1:g[e]["h"].4q(b);1H;1E 2:g[e]["h"].4q(b,d[1]);1H;1E 3:g[e]["h"].4q(b,d[1],d[2]);1H;1o:g[e]["h"].1x(b,d);1H}if(g[e]["f0"]){g.6o(e,1);a--}1f{e++}}}1c V},1T:"1a.1h.8E"});1a.1h.a2=1a.1U({2H:1d,4A:1d,2t:1d,dz:1d,5J:1d,1B:1b(){if(!V.2H){V.2H=[0,0]}if(!V.4A){V.4A=[0,0,0]}if(!V.2t){V.2t=[1,1,0,0]}V.dz=1m;V.5J=1m},1Q:1b(){V.2H=1d;V.4A=1d;V.2t=1d;V.dz=1d;V.5J=1d},md:1b(){V.dz=a(V.4A[0])||a(V.2H[0])||a(V.2H[1])||a(V.2t[0]-1)||a(V.2t[1]-1);1b a(c){Z b=0.n0;1c c>b||c<-b}},eN:1b(){V.md();if(V.66){V.5J=V.dz||V.66.5J}1f{V.5J=V.dz}if(!V.5J){1c}Z c=[0,0];Z a=V.2J||1a.1h.5I.5b();1a.1h.5I.rO(a);if(V.dz){if(b(V.2t[0])||b(V.2t[1])){c[0]=-V.2t[2]||0;c[1]=-V.2t[3]||0;Z d=b(c[0])||b(c[1]);if(d){1a.1h.5I.4V(a,a,c)}1a.1h.5I.2t(a,a,V.2t);if(d){c[0]=-c[0];c[1]=-c[1];1a.1h.5I.4V(a,a,c)}}if(V.4A 2a 4d){if(V.4A[0]!==0){c[0]=-V.4A[1]||0;c[1]=-V.4A[2]||0;Z d=b(c[0])||b(c[1]);if(d){1a.1h.5I.4V(a,a,c)}1a.1h.5I.6F(a,a,V.4A[0]);if(d){c[0]=-c[0];c[1]=-c[1];1a.1h.5I.4V(a,a,c)}}}1f{if(V.4A!==0){1a.1h.5I.6F(a,a,V.4A)}}if(b(V.2H[0])||b(V.2H[1])){1a.1h.5I.4V(a,a,V.2H)}}V.2J=a;if(V.66&&V.66.5J){if(V.dz){1a.1h.5I.rN(V.2J,V.66.2J,V.2J)}1f{1a.1h.5I.mu(V.2J,V.66.2J)}}1b b(f){Z e=0.n0;1c f>e||f<-e}},eA:1b(b){if(V.5J){Z a=V.2J;b.2J(a[0],a[1],a[2],a[3],a[4],a[5])}},KQ:(1b(){Z a=1a.1h.4z.5b();1c 1b(d){if(!V.2J){V.2J=1a.1h.5I.5b()}Z b=V.2J;1a.1h.4z.jI(a,d,V.2H);if(c(a[0])&&c(a[1])){1c}1a.1h.4z.n1(a,a);b[2]=a[0]*V.2t[1];b[3]=a[1]*V.2t[1];b[0]=a[1]*V.2t[0];b[1]=-a[0]*V.2t[0];b[4]=V.2H[0];b[5]=V.2H[1];V.yw();1b c(f){Z e=0.n0;1c f>-e&&f<e}}})(),yw:1b(){if(!V.2J){1c}Z b=V.2J;Z g=b[0]*b[0]+b[1]*b[1];Z a=V.2H;Z f=V.2t;Z d=V.4A;if(c(g-1)){g=1q.5x(g)}Z e=b[2]*b[2]+b[3]*b[3];if(c(e-1)){e=1q.5x(e)}a[0]=b[4];a[1]=b[5];f[0]=g;f[1]=e;f[2]=f[3]=0;d[0]=1q.eZ(-b[1]/e,b[0]/g);d[1]=d[2]=0;1b c(i){Z h=0.n0;1c i>h||i<-h}},1T:"1a.1h.a2"});1a.1h.3O=1a.1U(1a.1h.8E,{h9:1d,eJ:1d,eY:[],jF:1m,jG:0,1B:1b(a){1a.1h.8E.1u.1B.1x(V,1G);a=a||{};V.h9=a.h9||{};V.eJ=a.eJ||1b(){};V.eY=[];V.jF=1m;V.jG=0},5y:1b(a){V.eY.1r(a)},mX:1b(b){Z a=1a.1h.1t.3k(V.eY,b);if(a>=0){V.eY.6o(a,1)}},yr:1b(){Z c=1n 9i().gL();Z k=c-V.jG;Z a=V.eY;Z g=a.1g;Z b=[];Z j=[];1i(Z f=0;f<g;f++){Z d=a[f];Z h=d.dn(c);if(h){b.1r(h);j.1r(d)}}if(V.h9.gR){V.h9.gR()}1i(Z f=0;f<g;){if(a[f].xD){a[f]=a[g-1];a.jH();g--}1f{f++}}g=b.1g;1i(Z f=0;f<g;f++){j[f].qY(b[f])}V.jG=c;V.eJ(k);V.eW("3J",k)},4m:1b(){Z c=2u.yv||2u.yu||2u.yt||2u.ys||1b(d){8A(d,16)};Z a=V;V.jF=1j;1b b(){if(a.jF){a.yr();c(b)}}V.jG=1n 9i().gL();c(b)},8I:1b(){V.jF=1m},3b:1b(){V.eY=[]},rM:1b(c,b){b=b||{};Z a=1n 1a.1h.3O.h6(c,b.eI,b.KP,b.KO);a.ad=V;1c a},1T:"1a.1h.3O"});1a.1h.3O.h6=1a.1U({c7:1d,mY:1d,rK:1d,mZ:1d,rL:1d,jC:0,gM:0,jB:[],jD:[],h7:[],1B:1b(e,b,a,f){V.c7={};V.mY=e;V.rK=b||1m;V.mZ=a||c;V.rL=f||d;V.jC=0;V.gM=0;V.jB=[];V.jD=[];V.h7=[];1b c(h,g){1c h[g]}1b d(i,g,h){i[g]=h}},dw:1b(c,a){1i(Z b in a){if(!V.c7[b]){V.c7[b]=[];if(c!==0){V.c7[b].1r({h8:0,1l:1a.1h.3O.yp(V.mZ(V.mY,b))})}}V.c7[b].1r({h8:2P(c,10),1l:a[b]})}1c V},jE:1b(a){V.jD.1r(a);1c V},4m:1b(g){Z i=V;Z b=V.rL;Z h=V.mZ;Z e=i.jD.1g;Z c=g==="gB";Z a=1b(){i.jC--;if(i.jC===0){i.c7={};Z j=i.jB.1g;1i(Z k=0;k<j;k++){i.jB[k].4q(i)}}};Z d=1b(x,v){Z j=x.1g;if(!j){1c}Z z=x[0].1l;Z A=1a.1h.3O.jA(z);Z o=1m;Z p=(A&&1a.1h.3O.jA(z[0]))?2:1;x.6n(1b(H,w){1c H.h8-w.h8});Z t;if(j){t=x[j-1].h8}1f{1c}Z C=[];Z G=[];1i(Z B=0;B<j;B++){C.1r(x[B].h8/t);Z y=x[B].1l;if(1P(y)=="3t"){y=1a.1h.jd.yq(y);if(y.1g===0){y[0]=y[1]=y[2]=0;y[3]=1}o=1j}G.1r(y)}Z s=0;Z F=0;Z q;Z B;Z u;Z n;Z m;Z l;Z k;if(o){Z r=[0,0,0,0]}Z E=1b(J,H){if(H<F){q=1q.2Q(s+1,j-1);1i(B=q;B>=0;B--){if(C[B]<=H){1H}}B=1q.2Q(B,j-2)}1f{1i(B=s;B<j;B++){if(C[B]>H){1H}}B=1q.2Q(B-1,j-2)}s=B;F=H;Z w=(C[B+1]-C[B]);if(w===0){1c}1f{u=(H-C[B])/w}if(c){m=G[B];n=G[B===0?B:B-1];l=G[B>j-2?j-1:B+1];k=G[B>j-3?j-1:B+2];if(A){1a.1h.3O.rI(n,m,l,k,u,u*u,u*u*u,h(J,v),p)}1f{Z I;if(o){I=1a.1h.3O.rI(n,m,l,k,u,u*u,u*u*u,r,1);I=1a.1h.3O.rH(r)}1f{I=1a.1h.3O.mU(n,m,l,k,u,u*u,u*u*u)}b(J,v,I)}}1f{if(A){1a.1h.3O.rJ(G[B],G[B+1],u,h(J,v),p)}1f{Z I;if(o){1a.1h.3O.rJ(G[B],G[B+1],u,r,1);I=1a.1h.3O.rH(r)}1f{I=1a.1h.3O.mV(G[B],G[B+1],u)}b(J,v,I)}}1i(B=0;B<e;B++){i.jD[B](J,H)}};Z D=1n 1a.1h.3O.qX({ml:i.mY,xF:t,eI:i.rK,mk:i.gM,eJ:E,r3:a});if(g&&g!=="gB"){D.aS=g}i.h7.1r(D);i.jC++;i.ad.5y(D)};1i(Z f in V.c7){d(V.c7[f],f)}1c V},8I:1b(){1i(Z a=0;a<V.h7.1g;a++){Z b=V.h7[a];V.ad.mX(b)}V.h7=[]},mk:1b(a){V.gM=a;1c V},mW:1b(a){if(a){V.jB.1r(a)}1c V},1T:"1a.1h.3O.h6"});1a.1h.3O.mV=1b(c,b,a){1c(b-c)*a+c};1a.1h.3O.rJ=1b(k,h,f,c,g){Z e=k.1g;if(g==1){1i(Z d=0;d<e;d++){c[d]=1a.1h.3O.mV(k[d],h[d],f)}}1f{Z a=k[0].1g;1i(Z d=0;d<e;d++){1i(Z b=0;b<a;b++){c[d][b]=1a.1h.3O.mV(k[d][b],h[d][b],f)}}}};1a.1h.3O.jA=1b(a){4h(1P a){1E"1z":1E"3t":1c 1m}1c 1P a.1g!=="1z"};1a.1h.3O.rI=1b(n,m,l,k,o,f,e,c,h){Z g=n.1g;if(h==1){1i(Z d=0;d<g;d++){c[d]=1a.1h.3O.mU(n[d],m[d],l[d],k[d],o,f,e)}}1f{Z a=n[0].1g;1i(Z d=0;d<g;d++){1i(Z b=0;b<a;b++){c[d][b]=1a.1h.3O.mU(n[d][b],m[d][b],l[d][b],k[d][b],o,f,e)}}}};1a.1h.3O.mU=1b(h,g,e,d,i,b,a){Z f=(e-h)*0.5;Z c=(d-g)*0.5;1c(2*(g-e)+f+c)*a+(-3*(g-e)-2*f-c)*b+f*i+g};1a.1h.3O.yp=1b(d){Z e=4d.1u.4a;if(1a.1h.3O.jA(d)){Z a=d.1g;if(1a.1h.3O.jA(d[0])){Z b=[];1i(Z c=0;c<a;c++){b.1r(e.4q(d[c]))}1c b}1f{1c e.4q(d)}}1f{1c d}};1a.1h.3O.rH=1b(a){a[0]=1q.7m(a[0]);a[1]=1q.7m(a[1]);a[2]=1q.7m(a[2]);1c"4f("+a.44(",")+")"};1a.1h.4v={};1a.1h.4v.67={rA:"7X",rz:"4k",ry:"9l",rx:"c5",rw:"7g",xZ:"KN",ro:"jv",rv:"86",ru:"9m",yl:"KM",y8:"KL",y1:"KK",y6:"KJ",y4:"KI",y3:"KH",y2:"h5",rC:jz};1a.1h.4v.mA=1m;1a.1h.4v.mT=0;1a.1h.bZ=1a.1U(1a.1h.8E,1a.1h.a2,{id:1d,1p:1d,aT:1d,6G:1d,7C:1d,83:1j,bY:1m,1B:1b(a){1a.1h.8E.1u.1B.1x(V,1G);1a.1h.a2.1u.1B.1x(V,1G);a=a||{};V.id=a.id||1a.1t.5s("KG");1i(Z b in a){V[b]=a[b]}V.1p="gQ";V.aT=1d;V.6G=[];V.7C=1d;V.83=1j},1Q:1b(){V.id=1d;V.1p=1d;V.aT=1d;V.6G=1d;V.7C=1d;V.83=1d;V.bY=1d;1a.1h.a2.1Q.1x(V,1G);1a.1h.8E.1Q.1x(V,1G)},mS:1b(){1c V.6G.4a()},KF:1b(a){1c V.6G[a]},KE:1b(a){if(a==V){1c}if(a.66==V){1c}if(a.66){a.66.a8(a)}V.6G.1r(a);a.66=V;if(V.7C&&V.7C!==a.7C){V.7C.mo(a);if(a 2a 1a.1h.bZ){a.mp(V.7C)}}},a8:1b(b){Z a=1a.1h.1t.3k(V.6G,b);V.6G.6o(a,1);b.66=1d;if(V.7C){V.7C.mn(b.id);if(b 2a 1a.1h.bZ){b.jf(V.7C)}}},KD:1b(a,c){Z e=!!c;1i(Z b=0;b<V.6G.1g;b++){Z d=V.6G[b];if(e){a.4q(c,d)}1f{a(d)}}},yo:1b(a,c){Z e=!!c;1i(Z b=0;b<V.6G.1g;b++){Z d=V.6G[b];if(e){a.4q(c,d)}1f{a(d)}if(d.1p==="gQ"){d.yo(a,c)}}},mp:1b(c){1i(Z a=0;a<V.6G.1g;a++){Z b=V.6G[a];c.mo(b);if(b.1p==="gQ"){b.mp(c)}}},jf:1b(c){1i(Z a=0;a<V.6G.1g;a++){Z b=V.6G[a];c.mn(b.id);if(b.1p==="gQ"){b.jf(c)}}},ja:1b(){V.83=1j},1T:"1a.1h.bZ"});1a.1h.9k=1a.1U(1a.1h.8E,{4o:1d,3v:1d,3K:1d,h2:0,h1:0,8G:0,ac:0,mJ:1d,mH:1d,1B:1b(c,h,b){1a.1h.8E.1u.1B.1x(V,1G);V.4o=c;V.3v=h;V.3K=b;V.h2=0;V.h1=0;V.8G=0;V.ac=0;V.mJ=a(d,V);V.mH=b.xQ();Z g={7X:1b(i){i=i||2u.7k;V.4p=1d;V.gY=0;V.eW(1a.1h.4v.67.rA,i)},4k:1b(j){j=V.ab(j);Z i=V.4p;if((i&&i.5j)||!i){if(V.mR<10){V.7H(i,1a.1h.4v.67.rz,j)}}V.c4(j)},9l:1b(j){j=j||2u.7k;j=V.ab(j);Z i=V.4p;if((i&&i.5j)||!i){if(V.mR<5){V.7H(i,1a.1h.4v.67.ry,j)}}V.c4(j)},c5:1b(i){i=V.ab(i);Z q=i.rG||-i.rF;Z j=q>0?1.1:1/1.1;Z l=V.3K.mF();Z k=1m;1i(Z o in l){if(o!=="7j"){Z n=l[o];Z p=n.2H;if(n.mz){n.jy=n.jy||1;Z m=n.jy;m*=j;m=1q.2L(1q.2Q(n.c0,m),n.mx);j=m/n.jy;n.jy=m;p[0]-=(V.8G-p[0])*(j-1);p[1]-=(V.ac-p[1])*(j-1);n.2t[0]*=j;n.2t[1]*=j;n.a6=1j;k=1j}}}if(k){V.3K.4i()}V.7H(V.4p,1a.1h.4v.67.rx,i);V.c4(i)},7g:1b(m){V.mR++;m=V.ab(m);V.h2=V.8G;V.h1=V.ac;V.8G=1a.1h.jx.yn(m);V.ac=1a.1h.jx.ym(m);Z j=V.8G-V.h2;Z i=V.ac-V.h1;V.yb(m);V.h3=0;V.rm=m;V.mI();if(!V.h3){if(!V.4Y||(V.4p&&V.4p!=V.4Y)){V.mK(m);V.rs(m)}V.4p=1d;V.3v.mq();V.3K.gT()}Z p="";if(V.4Y){V.3v.mf(V.4Y.id,j,i);V.4Y.ja();V.3v.eK(V.4Y)}1f{if(V.gY){Z n=V.3K.mF();Z l=1m;1i(Z o in n){if(o!=="7j"){Z k=n[o];if(k.my){p="dv";k.2H[0]+=j;k.2H[1]+=i;l=1j;k.a6=1j}}}if(l){V.3K.4i()}}}if(V.4Y||(V.h3&&V.4p.eG)){p="dv"}1f{if(V.h3&&V.4p.5j){p="rE"}}V.4o.1k.eX=p;V.7H(V.4p,1a.1h.4v.67.rw,m);if(V.4Y||V.h3||V.3v.xG()){V.3K.jl()}},jv:1b(j){j=V.ab(j);Z i=j.xX||j.xW;if(i!=V.4o){4n(i&&i.KC!=9){if(i==V.4o){V.c4(j);1c}i=i.6Y}}j.eU=V.h2;j.eT=V.h1;V.4o.1k.eX="";V.gY=0;V.mK(j);V.rr(j);V.rq(j);V.3K.jl();V.eW(1a.1h.4v.67.yl,j)},86:1b(i){V.mR=0;if(V.rD==2){V.rD=i.yk;V.mL=1d;1c}V.ya=1n 9i();i=V.ab(i);V.gY=1;V.mL=V.4p;V.7H(V.4p,1a.1h.4v.67.rv,i);V.rD=i.yk},9m:1b(i){i=V.ab(i);V.4o.1k.eX="";V.gY=0;V.mL=1d;V.7H(V.4p,1a.1h.4v.67.ru,i);V.rr(i);V.rq(i)},mP:1b(i){i=V.ab(i,1j);V.yj=1n 9i();V.rn(i);V.js(i)},mO:1b(i){i=V.ab(i,1j);V.c4(i);if(V.rp){1a.1h.jx.8I(i)}},eV:1b(j){j=V.ab(j,1j);V.jr(j);Z i=1n 9i();if(i-V.yj<1a.1h.4v.67.rC){V.rn(j);V.ju(j);if(i-V.yi<1a.1h.4v.67.rC/2){V.jt(j);if(V.4p&&V.4p.5j){1a.1h.jx.8I(j)}}V.yi=i}V.3K.gT()}};f(V);if(2u.7l){2u.7l("7X",V.mN);if(1a.1h.jw.os.mQ||1a.1h.jw.os.rt){c.7l("mP",V.yg);c.7l("mO",V.yf);c.7l("eV",V.ye)}1f{c.7l("4k",V.ju);c.7l("9l",V.jt);c.7l("c5",V.gZ);c.7l("7g",V.c4);c.7l("86",V.js);c.7l("9m",V.jr)}c.7l("h0",V.gZ);c.7l("jv",V.mM)}1f{2u.c6("yd",V.mN);c.c6("qK",V.ju);c.KB=V.jt;c.c6("yc",V.gZ);c.c6("qO",V.c4);c.c6("qN",V.mM);c.c6("qM",V.js);c.c6("qL",V.jr)}1b e(j,i){1c 1b(k){1c j.4q(i,k)}}1b a(j,i){1c 1b(m,l,k){1c j.4q(i,m,l,k)}}1b f(j){Z l=["7X","4k","9l","c5","7g","jv","9m","86","mP","eV","mO"];Z i=l.1g;4n(i--){Z k=l[i];j["3z"+k+"9k"]=e(g[k],j)}}1b d(s,v,u){Z t=V;if((t.4Y&&t.4Y.id==s.id)||s.xs()){1c 1m}Z k=t.rm;if(s.qQ(v,u)){if(s.5X){if(s.8Z&&s.8Z===1j){if(s.5Y){Z m=s.5Y;Z j=1d;if(s.d2){j=s.d2}Z n=t.3v.7D;1i(Z q=0,r=n.1g;q<r;q++){Z o=n[q];if(o.5Y&&m===o.5Y){if(j){if(o.d2&&j===o.d2){t.3v.eK(o)}}1f{t.3v.eK(o)}}}}}1f{t.3v.eK(s)}}Z l=s.66;4n(l){if(l.aT&&!l.aT.qQ(t.8G,t.ac)){1c 1m}l=l.66}if(t.4p!=s){t.mK(k);t.rs(k);t.4p=s;t.y7(k)}t.y0(k);t.y5(k);t.h3=1;1c 1j}1c 1m}},1Q:1b(){V.7B();V.h2=1d;V.h1=1d;V.8G=1d;V.ac=1d;V.mJ=1d;1a.1h.8E.1u.1Q.1x(V,1G)},on:1b(a,b){V.3p(a,b);1c V},un:1b(a,b){V.yh(a,b);1c V},rB:1b(b,a){Z c=1a.1h.4v.67;4h(b){1E c.rA:1E c.rz:1E c.ry:1E c.rx:1E c.rw:1E c.rv:1E c.ru:1E c.ro:V["3z"+b+"9k"](a);1H}},7B:1b(){Z a=V.4o;if(2u.8H){2u.8H("7X",V.mN);if(1a.1h.jw.os.mQ||1a.1h.jw.os.rt){a.8H("mP",V.yg);a.8H("mO",V.yf);a.8H("eV",V.ye)}1f{a.8H("4k",V.ju);a.8H("9l",V.jt);a.8H("c5",V.gZ);a.8H("7g",V.c4);a.8H("86",V.js);a.8H("9m",V.jr)}a.8H("h0",V.gZ);a.8H("jv",V.mM)}1f{2u.du("yd",V.mN);a.du("qK",V.ju);a.du("9l",V.jt);a.du("yc",V.gZ);a.du("qO",V.c4);a.du("qN",V.mM);a.du("qM",V.js);a.du("qL",V.jr)}V.4o=1d;V.mH=1d;V.3v=1d;V.3K=1d;V.un()},yb:1b(c){Z b=V.4p;if(V.gY&&b&&b.eG&&!V.4Y&&V.mL==b){if(b.y9&&1n 9i()-V.ya<b.y9){1c}Z a=b;V.4Y=a;V.rp=1;a.gJ=1j;V.3v.eM(a.id);V.7H(a,1a.1h.4v.67.y8,c);V.3K.4i()}},y7:1b(a){if(V.4Y){V.7H(V.4p,1a.1h.4v.67.y6,a,V.4Y)}},y5:1b(a){if(V.4Y){V.7H(V.4p,1a.1h.4v.67.y4,a,V.4Y)}},rs:1b(a){if(V.4Y){V.7H(V.4p,1a.1h.4v.67.y3,a,V.4Y)}},rr:1b(a){if(V.4Y){V.4Y.gJ=1m;V.3v.eM(V.4Y.id);V.3K.4i();V.7H(V.4p,1a.1h.4v.67.y2,a,V.4Y)}},rq:1b(a){if(V.4Y){V.7H(V.4Y,1a.1h.4v.67.y1,a);V.4p=1d}V.rp=0;V.4Y=1d},y0:1b(a){V.7H(V.4p,1a.1h.4v.67.xZ,a)},mK:1b(a){V.7H(V.4p,1a.1h.4v.67.ro,a)},7H:1b(a,b,e,g){Z c="on"+b;Z f={1p:b,7k:e,ml:a,gX:1m};Z d=a;if(g){f.KA=g}4n(d){d[c]&&(f.gX=d[c](f));d.eW(b,f);d=d.66;if(f.gX){1H}}if(a){if(!f.gX){V.eW(b,f)}}1f{if(!g){V.eW(b,{1p:b,7k:e})}}},mI:1b(){Z f=1a.1h.5I.5b();Z g=V.3v.ra();Z e;Z b;Z d=[0,0];1i(Z c=g.1g-1;c>=0;c--){Z a=g[c];if(e!==a.8F){b=V.3K.mB(a.8F,b);d[0]=V.8G;d[1]=V.ac;if(b.5J){1a.1h.5I.4j(f,b.2J);1a.1h.4z.xY(d,d,f)}}if(V.mJ(a,d[0],d[1])){1H}}},rn:1b(b){Z d=[{x:10},{x:-20},{x:10,y:10},{y:-20}];V.4p=1d;V.8G=b.eU;V.ac=b.eT;V.rm=b;V.mI();1i(Z a=0;!V.4p&&a<d.1g;a++){Z c=d[a];c.x&&(V.8G+=c.x);c.y&&(V.8G+=c.y);V.mI()}if(V.4p){b.eU=V.8G;b.eT=V.ac}},ab:1b(b,a){if(b.xV){1c b}if(!a){b=b||2u.7k;Z c=b.xX||b.xW||b.Kz||b.ml;if(c&&c!=V.mH){b.eU=(1P b.7G!="1z"?b.7G:b.jq)+c.mG;b.eT=(1P b.7F!="1z"?b.7F:b.jp)+c.jo}}1f{Z e=b.1p!="eV"?b.Ky[0]:b.Kx[0];if(e){Z d=V.4o.Kw();b.eU=e.gW-d.2F;b.eT=e.jn-d.2m}}b.xV=1;1c b},xU:1b(){if(V.4p){1c V.4p}1c 1d},1T:"1a.1h.9k"});1a.1h.3l=1a.1U({4o:1d,3v:1d,mC:1d,4X:1d,aa:1d,c3:1d,a9:1d,jm:1d,1B:1b(b,g){V.4o=b;V.3v=g;b.c2="";V.aV=V.rk();V.aU=V.rj();Z a=2n.2K("2o");V.mC=a;a.1k.2H="4I";a.1k.xT="dt";a.1k.1I=V.aV+"px";a.1k.1L=V.aU+"px";b.2r(a);V.4X={};V.aa=[];V.c3={};V.jm=V.xL();V.a9=1a.1h.3l.jh(1a.1t.5s("1a.Kv"),"2o",V);a.2r(V.a9);V.a9.rh=d;V.a9.1k["-aX-ds-5L"]="3c";V.a9.1k["ds-5L"]="3c";V.a9.1k["-aX-rg-rf"]="3c";Z f=1n 1a.1h.3l.1J(1a.1t.5s("Ku"),V);V.4X.7j=f;a.2r(f.5c);f.rd();f.5c.rh=d;f.5c.1k["-aX-ds-5L"]="3c";f.5c.1k["ds-5L"]="3c";f.5c.1k["-aX-rg-rf"]="3c";Z e=V;V.eR=1b(h,i){e.mE(h,i)};1b d(){1c 1m}1b c(){}},1Q:1b(){V.7B();V.aa=1d;V.c3=1d;V.a9=1d;V.jm=1d},aP:1b(a){V.4i(a,1j);1c V},4i:1b(c,a){Z b=V.3v.ra(1j);V.xS(b,a);if(1P c=="1b"){c()}1c V},xS:1b(j,n){if(1P(n)=="1z"){n=1m}V.xR(j);Z g;Z o;Z q;1i(Z a in V.4X){if(a!=="7j"){V.4X[a].gS++;V.4X[a].eN()}}Z p=[];1i(Z e=0,d=j.1g;e<d;e++){Z h=j[e];if(o!==h.8F){if(g&&g.5J){q.4U()}g=V.mB(h.8F);q=g.84;o=h.8F;g.gS=0;if(g.a6||n){g.3b()}if(g.5J){q.4N();g.eA(q)}}if(h.mr){Z b=h.mr;q.4N();if(b.5J){Z c=b.2J;1a.1h.5I.4j(p,c);q.2J(c[0],c[1],c[2],c[3],c[4],c[5])}q.4P();b.5m(q,b.1k);q.7i();if(b.5J){Z c=p;q.2J(c[0],c[1],c[2],c[3],c[4],c[5])}}if((g.a6||n)&&!h.gJ){if(!h.c1||(h.c1&&!h.c1(q,1m))){if(1a.1h.4v.mA){6k{h.8B(q,1m,V.eR)}6B(k){1a.1h.dm(k,"8B 3W of "+h.1p,h)}}1f{h.8B(q,1m,V.eR)}}}if(h.Kt){q.4U()}h.83=1m}if(g&&g.5J){q.4U()}1i(Z a in V.4X){if(a!=="7j"){Z f=V.4X[a];f.a6=1m;if(f.gS==1){f.3b()}}}},mB:1b(b){Z c=V.4X[b];if(!c){Z a=V.aa.1g;Z e=1d;Z d=-1;if(a>0&&b>V.aa[0]){1i(d=0;d<a-1;d++){if(V.aa[d]<b&&V.aa[d+1]>b){1H}}e=V.4X[V.aa[d]]}V.aa.6o(d+1,0,b);c=1n 1a.1h.3l.1J(1a.1t.5s("Ks"+b),V);Z f=e?e.5c:V.a9;if(f.eS){f.6Y.Kr(c.5c,f.eS)}1f{f.6Y.2r(c.5c)}c.rd();V.4X[b]=c;if(V.c3[b]){1a.1h.1t.6s(c,V.c3[b],1j)}c.eN()}1c c},mF:1b(){1c V.4X},xR:1b(g){Z c=V.4X;Z b={};1i(Z j in c){if(j!=="7j"){b[j]=c[j].eQ;c[j].eQ=0}}1i(Z d=0,a=g.1g;d<a;d++){Z h=g[d];Z e=h.8F;Z f=c[e];if(f){f.eQ++;if(f.a6){3o}f.a6=h.83}}1i(Z j in c){if(j!=="7j"){if(b[j]!==c[j].eQ){c[j].a6=1j}}}},mE:1b(d,e){1i(Z c=0,a=d.1g;c<a;c++){Z b=d[c];V.3v.eM(b.id)}V.4i(e);1c V},3b:1b(){1i(Z a in V.4X){if(a=="7j"){3o}V.4X[a].3b()}1c V},mD:1b(a,b){if(b){if(!V.c3[a]){V.c3[a]=b}1f{1a.1h.1t.6s(V.c3[a],b,1j)}Z c=V.4X[a];if(c){1a.1h.1t.6s(c,V.c3[a],1j)}}},Kq:1b(a){Z b=V.4X[a];if(!b){1c}V.mD(a,{2H:b.2H,4A:b.4A,2t:b.2t});b.5c.6Y.a8(b.5c);4S V.4X[a];V.aa.6o(1a.1h.1t.3k(V.aa,a),1)},jl:1b(){V.gT();Z c=V.3v.xH(1j);1i(Z b=0,a=c.1g;b<a;b++){V.ri(c[b])}V.3v.mq();1c V},gT:1b(){Z a=V.4X.7j;a&&a.3b();1c V},7X:1b(){Z b=V.mC;b.1k.4H="3c";Z c=V.rk();Z a=V.rj();b.1k.4H="";if(V.aV!=c||a!=V.aU){V.aV=c;V.aU=a;b.1k.1I=c+"px";b.1k.1L=a+"px";1i(Z d in V.4X){V.4X[d].7X(c,a)}V.4i(1d,1j)}1c V},Kp:1b(b){Z a=V.4X[b];if(a){a.3b()}},7B:1b(){V.4o.c2="";V.4o=1d;V.3v=1d;V.mC=1d;V.4X=1d},xQ:1b(){1c V.4X.7j.5c},jj:1b(e,c,d){Z g=1a.1h.3l.jh(1a.1t.5s("1a.2E.Ko"),"1W",V);V.a9.2r(g);Z a=g.4G("2d");1a.1h.3l.3V!=1&&a.2t(1a.1h.3l.3V,1a.1h.3l.3V);a.4W=c||"#gH";a.Kn(0,0,V.aV*1a.1h.3l.3V,V.aU*1a.1h.3l.3V);a.26();Z b=V;V.3v.xI(1b(h){if(!h.gJ){if(!h.c1||(h.c1&&!h.c1(a,1m))){if(1a.1h.4v.mA){6k{h.8B(a,1m,b.eR)}6B(i){1a.1h.dm(i,"8B 3W of "+h.1p,h)}}1f{h.8B(a,1m,b.eR)}}}},{7U:"up",gR:1j});Z f=g.jj(e,d);a=1d;V.a9.a8(g);1c f},gV:1b(){1c V.aV},gU:1b(){1c V.aU},rk:1b(){Z a=V.4o;Z b=a.xP||2n.xO.xN(a);1c((a.Km||2P(b.1I,10))-2P(b.Kl,10)-2P(b.Kk,10)).iW(0)-0},rj:1b(){Z a=V.4o;Z b=a.xP||2n.xO.xN(a);1c((a.xM||2P(b.1L,10))-2P(b.Kj,10)-2P(b.Ki,10)).iW(0)-0},ri:1b(b){Z a=V.4X.7j.84;if(!b.c1||(b.c1&&!b.c1(a,1j))){Z d=V.mB(b.8F);if(d.5J){a.4N();d.eA(a)}if(1a.1h.4v.mA){6k{b.8B(a,1j,V.eR)}6B(c){1a.1h.dm(c,"Kh 3W of "+b.1p,b)}}1f{b.8B(a,1j,V.eR)}if(d.5J){a.4U()}}},xK:1b(a,f,b,h,g){Z c=2n.2K("1W");Z i=c.4G("2d");Z g=2u.3V||1;c.1k.1I=b+"px";c.1k.1L=h+"px";c.2q("1I",b*g);c.2q("1L",h*g);i.7E(0,0,b*g,h*g);Z e={2H:f.2H,4A:f.4A,2t:f.2t};f.2H=[0,0,0];f.4A=0;f.2t=[1,1];if(f){f.8B(i,1m)}Z d=1n 1a.1h.2b.9U({id:a,1k:{x:0,y:0,3M:c}});if(e.2H!=1d){d.2H=f.2H=e.2H}if(e.4A!=1d){d.4A=f.4A=e.4A}if(e.2t!=1d){d.2t=f.2t=e.2t}1c d},xL:1b(){Z a=V;1c 1b(f,d,c,b){1c a.xK(f,d,c,b,1a.1h.3l.3V)}},xJ:1b(a){if(!(a 2a 4d)){1c V}V.gT();V.3v.mq();1i(Z b=0;b<a.1g;b++){V.3v.eK(a[b]);V.ri(a[b])}},1T:"1a.1h.3l"});1a.1h.3l.1J=1a.1U(1a.1h.a2,{5c:1d,aW:1d,dr:1d,3K:1d,gS:1d,mt:1d,a6:1d,eQ:1d,ji:0,mw:1m,mv:0.7,mz:1m,my:1m,c0:a7,mx:0,84:1d,1B:1b(c,a){1a.1h.a2.1u.1B.1x(V,1G);V.5c=1a.1h.3l.jh(1a.1t.5s("1a.2E"+c),"1W",a);V.5c.rh=b;V.5c.1k["-aX-ds-5L"]="3c";V.5c.1k["ds-5L"]="3c";V.5c.1k["-aX-rg-rf"]="3c";V.aW=1d;V.dr=1d;V.3K=a;V.gS=0;V.mt=1d;V.a6=1j;V.eQ=0;V.ji=0;V.mw=1m;V.mv=0.7;V.mz=1m;V.my=1m;V.c0=a7;V.mx=0;1b b(){1c 1m}},1Q:1b(){V.5c=1d;V.aW=1d;V.dr=1d;V.3K=1d;V.gS=1d;V.mt=1d;V.a6=1d;V.eQ=1d;V.ji=1d;V.mw=1d;V.mv=1d;V.mz=1d;V.my=1d;V.c0=1d;V.mx=1d;V.84=1d;1a.1h.a2.1Q.1x(V,1G)},rd:1b(){V.84=V.5c.4G("2d");if(1a.1h.3l.3V!=1){V.84.2t(1a.1h.3l.3V,1a.1h.3l.3V)}},rb:1b(){V.aW=1a.1h.3l.jh(1a.1t.5s("1a.2E.rc-"+V.id),"1W",V.3K);V.dr=V.aW.4G("2d");if(1a.1h.3l.3V!=1){V.dr.2t(1a.1h.3l.3V,1a.1h.3l.3V)}},7X:1b(b,a){V.5c.1k.1I=b+"px";V.5c.1k.1L=a+"px";V.5c.2q("1I",b*1a.1h.3l.3V);V.5c.2q("1L",a*1a.1h.3l.3V);if(1a.1h.3l.3V!=1){V.84.2t(1a.1h.3l.3V,1a.1h.3l.3V)}if(V.aW){V.aW.2q("1I",b*1a.1h.3l.3V);V.aW.2q("1L",a*1a.1h.3l.3V);if(1a.1h.3l.3V!=1){V.dr.2t(1a.1h.3l.3V,1a.1h.3l.3V)}}},3b:1b(){Z g=V.5c;Z c=V.84;Z d=g.1I;Z a=g.1L;Z h=V.ji;Z e=V.mw;Z f=V.mv;if(e){if(!V.aW){V.rb()}V.dr.4O="mu";V.dr.7h(g,0,0,d/1a.1h.3l.3V,a/1a.1h.3l.3V)}if(h){c.4N();c.4W=V.mt.ji;c.eP(0,0,d/1a.1h.3l.3V,a/1a.1h.3l.3V);c.4U()}1f{c.7E(0,0,d/1a.1h.3l.3V,a/1a.1h.3l.3V)}if(e){Z b=V.aW;c.4N();c.3D=f;c.7h(b,0,0,d/1a.1h.3l.3V,a/1a.1h.3l.3V);c.4U()}},1T:"1a.1h.3l.1J"});1a.1h.3l.jh=1b(f,e,b){Z c=2n.2K(e);Z d=b.aV;Z a=b.aU;c.1k.2H="a5";c.1k.2F=0;c.1k.2m=0;c.1k.1I=d+"px";c.1k.1L=a+"px";c.2q("1I",d*1a.1h.3l.3V);c.2q("1L",a*1a.1h.3l.3V);c.2q("id",f);1c c};1a.1h.3l.3V=1q.2L((2u.3V||1),1);1a.1h.gN=1a.1U({a4:1d,9j:1d,a3:1d,7D:1d,gP:0,1B:1b(){V.a4={};V.9j=[];V.a3=[];V.7D=[];V.gP=0},1Q:1b(){V.7B();V.7D=1d;V.gP=1d},xI:1b(b,f){if(!f){Z c={7j:1m,7U:"eO",gR:1m};f=c}if(f.7j){1i(Z d=0,a=V.9j.1g;d<a;d++){Z e=V.9j[d];e.eN();if(b(e)){1c V}}}if(f.gR){V.r9()}4h(f.7U){1E"eO":Z a=V.7D.1g;4n(a--){if(b(V.7D[a])){1c V}}1H;1o:1i(Z d=0,a=V.7D.1g;d<a;d++){if(b(V.7D[d])){1c V}}1H}1c V},xH:1b(h){Z b=[];1i(Z f=0,a=V.9j.1g;f<a;f++){b.1r(V.9j[f]);Z g=V.9j[f].Kg;if(g){Z d;g=g 2a 4d?g:[g];1i(Z e=0,c=g.1g;e<c;e++){d=g[e].id?g[e]:V.gO(g[e]);if(d){b.1r(d)}}}}b.6n(1a.1h.gN.r5);if(h){1i(Z f=0,a=b.1g;f<a;f++){b[f].eN()}}1c b},ra:1b(a){if(a){V.r9()}1c V.7D},r9:1b(){V.gP=0;1i(Z c=0,a=V.a3.1g;c<a;c++){Z b=V.a3[c];V.r8(b)}V.7D.1g=V.gP;1i(Z c=0,a=V.7D.1g;c<a;c++){V.7D[c].r4=c}V.7D.6n(1a.1h.gN.r5)},r8:1b(b,c){if(b.bY){1c}b.eN();if(b.1p=="gQ"){if(b.aT){b.aT.66=b;b.aT.eN();if(c){c=c.4a();c.1r(b.aT)}1f{c=[b.aT]}}1i(Z a=0;a<b.6G.1g;a++){Z d=b.6G[a];d.83=b.83||d.83;V.r8(d,c)}b.83=1m}1f{b.eH=c;V.7D[V.gP++]=b}},eM:1b(b,e){Z c=V.a4[b];if(c){c.ja();if(e){if(e.66||e.7C||e.mr){Z d={};1i(Z a in e){if(a=="66"||a=="7C"||a=="mr"){3o}if(e.eL(a)){d[a]=e[a]}}1a.1h.1t.6s(c,d,1j)}1f{1a.1h.1t.6s(c,e,1j)}}}1c V},mf:1b(d,c,a){Z b=V.a4[d];if(b){b.5J=1j;if(b.eG==="dq"){a=0}1f{if(b.eG==="dp"){c=0}}if(!b.r7||(b.r7&&!b.r7(c,a))){b.mf(c,a)}}1c V},eK:1b(a){a.md();V.9j.1r(a);1c V},mq:1b(){V.9j=[];1c V},xG:1b(){1c V.9j.1g>0},r6:1b(a){if(a 2a 1a.1h.bZ){a.mp(V)}V.mo(a);V.a3.1r(a)},jg:1b(d){if(1P(d)=="1z"){1i(Z e=0;e<V.a3.1g;e++){Z c=V.a3[e];if(c 2a 1a.1h.bZ){c.jf(V)}}V.a4={};V.9j=[];V.a3=[];1c}if(d 2a 4d){1i(Z e=0,b=d.1g;e<b;e++){V.jg(d[e])}1c}Z f;if(1P(d)=="3t"){f=V.a4[d]}1f{f=d}Z a=1a.1h.1t.3k(V.a3,f);if(a>=0){V.mn(f.id);V.a3.6o(a,1);if(f 2a 1a.1h.bZ){f.jf(V)}}},mo:1b(a){if(a 2a 1a.1h.bZ){a.7C=V}a.ja();V.a4[a.id]=a;1c V},gO:1b(a){1c V.a4[a]},mn:1b(a){Z b=V.a4[a];if(b){4S V.a4[a];if(b 2a 1a.1h.bZ){b.7C=1d}}1c V},7B:1b(){V.a4=1d;V.a3=1d;V.9j=1d},1T:"1a.1h.gN"});1a.1h.gN.r5=1b(d,c){if(d.8F==c.8F){if(d.z==c.z){1c d.r4-c.r4}1c d.z-c.z}1c d.8F-c.8F};1a.1h.3O.qX=1a.1U({1B:1b(a){V.gK=a.ml||{};if(!(V.gK 2a 4d)){V.gK=[V.gK]}V.mi=a.xF||mj;V.gM=a.mk||0;V.je=1n 9i().gL()+V.gM;V.Kf=V.je+V.mi*mj;V.eI=1P a.eI=="1z"?1m:a.eI;V.mh=a.mh||0;V.aS=a.aS||"qW";V.eJ=a.eJ;V.r3=a.r3;V.xE=a.xE},1Q:1b(){},dn:1b(d){Z c=1n 1a.1h.3O.aS();Z b=(d-V.je)/V.mi;if(b<0){1c}b=1q.2Q(b,1);Z a=1P V.aS=="3t"?c[V.aS]:V.aS;Z e=1P a==="1b"?a(b):b;V.qY("3J",e);if(b==1){if(V.eI){V.qZ();1c"qZ"}V.xD=1j;1c"1Q"}1c 1d},qZ:1b(){Z b=1n 9i().gL();Z a=(b-V.je)%V.mi;V.je=1n 9i().gL()-a+V.mh},qY:1b(d,b){1i(Z c=0,a=V.gK.1g;c<a;c++){if(V["on"+d]){V["on"+d](V.gK[c],b)}}},1T:"1a.1h.3O.qX"});1a.1h.3O.aS=1a.1U({1B:1b(){},1Q:1b(){},qW:1b(a){1c a},Ke:1b(a){1c a*a},Kd:1b(a){1c a*(2-a)},Kc:1b(a){if((a*=2)<1){1c 0.5*a*a}1c-0.5*(--a*(a-2)-1)},Kb:1b(a){1c a*a*a},Ka:1b(a){1c--a*a*a+1},K9:1b(a){if((a*=2)<1){1c 0.5*a*a*a}1c 0.5*((a-=2)*a*a+2)},K8:1b(a){1c a*a*a*a},K7:1b(a){1c 1-(--a*a*a*a)},K6:1b(a){if((a*=2)<1){1c 0.5*a*a*a*a}1c-0.5*((a-=2)*a*a*a-2)},K5:1b(a){1c a*a*a*a*a},K4:1b(a){1c--a*a*a*a*a+1},K3:1b(a){if((a*=2)<1){1c 0.5*a*a*a*a*a}1c 0.5*((a-=2)*a*a*a*a+2)},K2:1b(a){1c 1-1q.6V(a*1q.PI/2)},K1:1b(a){1c 1q.5w(a*1q.PI/2)},K0:1b(a){1c 0.5*(1-1q.6V(1q.PI*a))},JZ:1b(a){1c a===0?0:1q.5K(xC,a-1)},JY:1b(a){1c a===1?1:1-1q.5K(2,-10*a)},JX:1b(a){if(a===0){1c 0}if(a===1){1c 1}if((a*=2)<1){1c 0.5*1q.5K(xC,a-1)}1c 0.5*(-1q.5K(2,-10*(a-1))+2)},JW:1b(a){1c 1-1q.5x(1-a*a)},JV:1b(a){1c 1q.5x(1-(--a*a))},JU:1b(a){if((a*=2)<1){1c-0.5*(1q.5x(1-a*a)-1)}1c 0.5*(1q.5x(1-(a-=2)*a)+1)},JT:1b(c){Z d;Z b=0.1;Z e=0.4;if(c===0){1c 0}if(c===1){1c 1}if(!b||b<1){b=1;d=e/4}1f{d=e*1q.qV(1/b)/(2*1q.PI)}1c-(b*1q.5K(2,10*(c-=1))*1q.5w((c-d)*(2*1q.PI)/e))},JS:1b(c){Z d;Z b=0.1;Z e=0.4;if(c===0){1c 0}if(c===1){1c 1}if(!b||b<1){b=1;d=e/4}1f{d=e*1q.qV(1/b)/(2*1q.PI)}1c(b*1q.5K(2,-10*c)*1q.5w((c-d)*(2*1q.PI)/e)+1)},JR:1b(c){Z d;Z b=0.1;Z e=0.4;if(c===0){1c 0}if(c===1){1c 1}if(!b||b<1){b=1;d=e/4}1f{d=e*1q.qV(1/b)/(2*1q.PI)}if((c*=2)<1){1c-0.5*(b*1q.5K(2,10*(c-=1))*1q.5w((c-d)*(2*1q.PI)/e))}1c b*1q.5K(2,-10*(c-=1))*1q.5w((c-d)*(2*1q.PI)/e)*0.5+1},JQ:1b(a){Z b=1.qU;1c a*a*((b+1)*a-b)},JP:1b(a){Z b=1.qU;1c--a*a*((b+1)*a+b)+1},JO:1b(a){Z b=1.qU*1.JN;if((a*=2)<1){1c 0.5*(a*a*((b+1)*a-b))}1c 0.5*((a-=2)*a*((b+1)*a+b)+2)},xB:1b(a){1c 1-V.qT(1-a)},qT:1b(a){if(a<(1/2.75)){1c 7.mg*a*a}1f{if(a<(2/2.75)){1c 7.mg*(a-=(1.5/2.75))*a+0.75}1f{if(a<(2.5/2.75)){1c 7.mg*(a-=(2.25/2.75))*a+0.JM}1f{1c 7.mg*(a-=(2.JL/2.75))*a+0.JK}}}},JJ:1b(a){if(a<0.5){1c V.xB(a*2)*0.5}1c V.qT(a*2-1)*0.5+0.5},1T:"1a.1h.3O.aS"});1a.1h.2b=1a.1U(1a.1h.8E,1a.1h.a2,{id:1d,1k:1d,2v:1d,66:1d,83:1d,eH:1d,gJ:1m,bY:1m,8F:0,eG:1m,5j:1m,5X:1j,z:0,1y:1d,5Y:1d,8Z:1m,d2:1d,lH:1d,1B:1b(a){1a.1h.8E.1u.1B.1x(V,1G);1a.1h.a2.1u.1B.1x(V,1G);a=a||{};V.id=a.id||1a.1t.5s("JI");1i(Z b in a){V[b]=a[b]}V.1k=V.1k||{};V.2v=V.2v||1d;V.66=1d;V.83=1j;V.eH=[];V.1y=[0,0]},1Q:1b(){V.id=1d;V.1k=1d;V.2v=1d;V.66=1d;V.83=1d;V.eH=1d;V.gJ=1d;V.bY=1d;V.8F=1d;V.eG=1d;V.5j=1d;V.5X=1d;V.z=1d;V.1y=1d;V.5Y=1d;V.d2=1d;V.8Z=1d;V.lH=1d;1a.1h.a2.1u.1Q.1x(V,1G);1a.1h.8E.1u.1Q.1x(V,1G)},8B:1b(a,c){Z b=V.xA(a,c);a.4P();V.5m(a,b);4h(b.3H){1E"7T":V.2R(a,"26",b);a.26();if(b.2I>0){V.2R(a,"2k",b);a.2k()}V.2R(a,"3N",b);1H;1E"2k":V.2R(a,"2k",b);b.2I>0&&a.2k();V.2R(a,"3N",b);1H;1o:V.2R(a,"26",b);a.26();V.2R(a,"3N",b);1H}V.di(a,b,V.1k);V.xz(a)},xA:1b(a,c){Z b=V.1k;if(V.gG){b.3H=V.gG}if(c){b=V.j8(b,V.2v||{},V.gG)}if(V.gG=="2k"){b.6A=b.6A||b.1X}a.4N();V.m5(a);V.j7(a,b);V.eA(a);1c b},xz:1b(a){a.4U()},j7:1b(c,g){Z h=[["1X","4W"],["6A","6X"],["2s","3D"],["3I","3I"],["ep","ep"],["gI","gI"],["2I","2I"],["gF","gF"],["gE","gE"],["gD","gD"],["gC","gC"]];1i(Z f=0,b=h.1g;f<b;f++){Z a=h[f][0];Z e=g[a];Z d=h[f][1];if(1P e!="1z"){c[d]=e}}},m5:1b(b){Z d=1a.1h.5I.5b();if(V.eH){1i(Z c=0;c<V.eH.1g;c++){Z e=V.eH[c];if(e.5J){Z a=e.2J;1a.1h.5I.4j(d,a);b.2J(a[0],a[1],a[2],a[3],a[4],a[5])}b.4P();e.5m(b,e.1k);b.7i();if(e.5J){Z a=d;b.2J(a[0],a[1],a[2],a[3],a[4],a[5])}}}},j8:1b(d,b,c){Z e={};1i(Z a in d){e[a]=d[a]}Z f=1a.1h.jd.xw();if(d.3H!="2k"){e.6A=f;e.2I=(d.2I||1);e.3H="7T"}1f{if(c!="2k"){e.6A=f;e.2I=(d.2I||1)}1f{e.6A=b.6A||1a.1h.jd.qS(d.6A,1a.1h.jd.qR(f))}}1i(Z a in b){if(1P b[a]!="1z"){e[a]=b[a]}}1c e},JH:1b(){1c V.1p!="1K"?6:2},mf:1b(b,a){V.2H[0]+=b;V.2H[1]+=a},xt:(1b(){Z a=[];1c 1b(b,d){Z c=[b,d];if(V.5J&&V.2J){1a.1h.5I.4j(a,V.2J);1a.1h.5I.xv(c,a,[b,d,1]);if(b==c[0]&&d==c[1]){V.md()}}1c c}})(),5m:1b(a,b){1a.1h.dm("5m 3n xu in "+V.1p)},6p:1b(a){1a.1h.dm("6p 3n xu in "+V.1p)},qQ:1b(a,d){Z c=V.xt(a,d);a=c[0];d=c[1];Z b=V.1k.3e;if(!b){b=V.1k.3e=V.6p(V.1k)}if(a>=b.x&&a<=(b.x+b.1I)&&d>=b.y&&d<=(b.y+b.1L)){1c 1a.1h.bV.qP(V,V.1k,a,d)}1c 1m},di:1b(l,n,g){if(1P(n.1K)=="1z"||n.1K===1m){1c}Z e=n.wG||n.1X||n.6A;l.4W=e;Z p=10;Z m;Z a;Z r;Z q;Z d=n.gg||V.gg||"2m";Z o=[];if(!V.1y||V.1y.1g!==2){o=[0,0]}1f{o=V.1y}4h(d){1E"jc":1E"2m":1E"4F":1E"2F":1E"4y":if(V.6p){Z b=(g||n).3e||V.6p(g||n);4h(d){1E"jc":r=b.x+b.1I/2;q=b.y+b.1L/2;m="5Z";a="7Z";if(n.3H!="2k"&&e==n.1X){l.4W="#gH"}1H;1E"2F":r=b.x-p;q=b.y+b.1L/2;m="4E";a="7Z";1H;1E"4y":r=b.x+b.1I+p;q=b.y+b.1L/2;m="4m";a="7Z";1H;1E"2m":r=b.x+b.1I/2;q=b.y-p;m="5Z";a="4F";1H;1E"4F":r=b.x+b.1I/2;q=b.y+b.1L+p;m="5Z";a="2m";1H}}1H;1E"4m":1E"4E":Z f=0;Z h=0;Z i=0;Z j=0;if(1P n.3w!="1z"){Z k=n.3w;if(k.1g<2){1c}Z c=k.1g;4h(d){1E"4m":f=k[0][0]+o[0];h=k[1][0]+o[0];i=k[0][1]+o[1];j=k[1][1]+o[1];1H;1E"4E":f=k[c-2][0]+o[0];h=k[c-1][0]+o[0];i=k[c-2][1]+o[1];j=k[c-1][1]+o[1];1H}}1f{f=(n.mc+o[0])||0;h=(n.mb+o[0])||0;i=(n.ma+o[1])||0;j=(n.m9+o[1])||0}4h(d){1E"4m":m=f<h?"4E":"4m";a=i<j?"4F":"2m";r=f;q=i;1H;1E"4E":m=f<h?"4m":"4E";a=i<j?"2m":"4F";r=h;q=j;1H}p-=4;if(f&&h&&f!=h){r-=(m=="4E"?p:-p)}1f{m="5Z"}if(i!=j){q-=(a=="4F"?p:-p)}1f{a="7Z"}1H;1E"jb":r=n.JG||0;q=n.JF||0;m="4m";a="7Z";1H}if(n.9h&&!2Y(n.9h)){r+=n.9h}if(n.9g&&!2Y(n.9g)){q+=n.9g}if(r!=1d&&q!=1d){1a.1h.2b.xr(l,n.1K,r,q,n.aL,n.6S||m,n.5E||a)}},ja:1b(){V.83=1j;if(V.1k){V.1k.3e=1d}if(V.2v){V.2v.3e=1d}},xs:1b(){1c!(V.5X||V.eG||V.5j||V.qO||V.JE||V.qN||V.qM||V.qL||V.qK||V.JD||V.JC||V.JB||V.JA)},2R:1b(a,c,b){if(c==="26"){a.3D=1P(b.6r)==="1z"?(1P(b.2s)==="1z"?1:b.2s):b.6r}1f{if(c==="2k"){a.3D=1P(b.8D)==="1z"?(1P(b.2s)==="1z"?1:b.2s):b.8D}1f{a.3D=1P(b.2s)==="1z"?1:b.2s}}},1T:"1a.1h.2b"});1a.1h.2b.xr=1b(m,k,h,f,c,b,a){if(c){m.81=c}m.6S=b;m.5E=a;Z g=1a.1h.2b.xq(k,h,f,c,b,a);k=(k+"").6q("\\n");Z j=1a.1h.bV.gy("ZH",c);4h(a){1E"2m":f=g.y;1H;1E"4F":f=g.y+j;1H;1o:f=g.y+j/2}1i(Z e=0,d=k.1g;e<d;e++){m.4u(k[e],h,f);f+=j}};1a.1h.2b.xq=1b(g,a,h,f,b,c){Z e=1a.1h.bV.qH(g,f);Z d=1a.1h.bV.gy("ZH",f);g=(g+"").6q("\\n");4h(b){1E"4E":1E"4y":a-=e;1H;1E"5Z":a-=(e/2);1H}4h(c){1E"2m":1H;1E"4F":h-=d*g.1g;1H;1o:h-=d*g.1g/2}1c{x:a,y:h,1I:e,1L:d*g.1g}};1a.1h.2b.iS=1a.1U(1a.1h.2b,{1p:"xp",1B:1b(){1a.1h.2b.1u.1B.1x(V,1G);if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}},1Q:1b(){V.1p=1d;1a.1h.2b.1u.1Q.1x(V,1G)},5m:1b(a,b){if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z c=V.1y;a.5v(b.x+c[0],b.y+c[1],b.r,0,1q.PI*2,1j);1c},6p:1b(b){if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z c=V.1y;if(b.3e){1c b.3e}Z a;if(b.3H=="2k"||b.3H=="26"){a=b.2I||1}1f{a=0}b.3e={x:1q.39((b.x+c[0])-b.r-a/2),y:1q.39((b.y+c[1])-b.r-a/2),1I:b.r*2+a,1L:b.r*2+a};1c b.3e},1T:"1a.1h.2b.iS"});1a.1h.2b.lR=1a.1U(1a.1h.2b,{gG:"2k",gg:"4E",1p:"xo-1Z",1B:1b(){1a.1h.2b.1u.1B.1x(V,1G);if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}},1Q:1b(){V.gG=1d;V.gg=1d;V.1p=1d;1a.1h.2b.1u.1Q.1x(V,1G)},5m:1b(n,c){if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z l=V.1y;Z b=c.3w;if(b.1g<2){1c}Z j=1q.2Q(c.3w.1g,1q.39(c.Jz||c.3w.1g));if(c.2D&&c.2D!=="gB"){Z q=1a.1h.qJ(b,c.2D,1m,c.xm,l);n.3A(b[0][0]+l[0],b[0][1]+l[1]);Z h;Z f;Z e;1i(Z g=0;g<j-1;g++){h=q[g*2];f=q[g*2+1];e=[b[g+1][0]+l[0],b[g+1][1]+l[1]];n.gx(h[0],h[1],f[0],f[1],e[0],e[1])}}1f{if(c.2D==="gB"){b=1a.1h.qI(b,1d,1d,l);j=b.1g}if(!c.2X||c.2X==="dl"){n.3A(b[0][0]+l[0],b[0][1]+l[1]);1i(Z g=1;g<j;g++){n.4T(b[g][0]+l[0],b[g][1]+l[1])}}1f{if(c.2X==="bW"||c.2X==="gA"||c.2X==="dk"||c.2X==="8C"||c.2X==="eD"){Z d=(c.2I||1);Z a=d;Z o=d;if(c.2X==="bW"){a*=5;o*=5;if(c.3I&&c.3I!=="5C"){a-=d;o+=d}}if(c.2X==="gA"){if(c.3I&&c.3I!=="5C"){a=1;o+=d}}if(c.2X==="dk"){o*=4;if(c.3I&&c.3I!=="5C"){a=1;o+=d}}if(c.2X==="8C"){a*=4;o*=4;if(c.3I&&c.3I!=="5C"){a-=d;o+=d}}if(c.2X==="eD"){a*=8;o*=4;if(c.3I&&c.3I!=="5C"){a-=d;o+=d}}n.3A(b[0][0]+l[0],b[0][1]+l[1]);1i(Z g=1;g<j;g++){1a.1h.eB(n,b[g-1][0]+l[0],b[g-1][1]+l[1],b[g][0]+l[0],b[g][1]+l[1],d,[a,o])}}1f{if(c.2X==="gz"||c.2X==="eC"){Z d=(c.2I||1);Z a=d;Z o=d;Z m=d;Z k=d;if(c.2X==="gz"){a*=4;o*=4;k*=4;if(c.3I&&c.3I!=="5C"){a-=d;o+=d;m=1;k+=d}}if(c.2X==="eC"){a*=8;o*=4;k*=4;if(c.3I&&c.3I!=="5C"){a-=d;o+=d;m=1;k+=d}}Z d=(c.2I||1)*(c.2X==="bW"?5:1);n.3A(b[0][0]+l[0],b[0][1]+l[1]);1i(Z g=1;g<j;g++){1a.1h.eB(n,b[g-1][0]+l[0],b[g-1][1]+l[1],b[g][0]+l[0],b[g][1]+l[1],d,[a,o,m,k])}}}}}1c},6p:1b(a){if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z b=V.1y;1c 1a.1h.2b.iR.1u.6p.1x(V,[a,b])},1T:"1a.1h.2b.lR"});1a.1h.2b.iR=1a.1U(1a.1h.2b,{1p:"xn",9S:1d,1B:1b(){1a.1h.2b.1u.1B.1x(V,1G);if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}},1Q:1b(){V.1p=1d;V.9S=1d;1a.1h.2b.1u.1Q.1x(V,1G)},8B:1b(j,c){if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z a=V.1k;if(c){a=V.j8(a,V.2v||{})}j.4N();V.j7(j,a);V.eA(j);Z e=1m;if(a.3H=="26"||a.3H=="7T"||1P a.3H=="1z"){j.4P();if(a.2X=="bW"||a.2X=="gA"||a.2X=="dk"||a.2X=="8C"||a.2X=="gz"||a.2X=="eD"||a.2X=="eC"){V.5m(j,{2X:"dl",2I:a.2I,3w:a.3w});e=1m}1f{V.5m(j,a);e=1j}j.a0();V.2R(j,"26",a);j.26();V.2R(j,"3N",a)}if(a.2I>0&&(a.3H=="2k"||a.3H=="7T")){if(!e){j.4P();V.5m(j,a)}V.2R(j,"2k",a);j.2k();V.2R(j,"3N",a)}V.di(j,a,V.1k);Z f=1a.1t.eF(a);if(f.3w){if(V.9S&&V.9S.1g>0){Z b=V.9S;Z h=b.1g;1i(Z d=0;d<h;d++){Z g=b[d];f.3w=g;j.4O="bX-3u";Z e=1m;if(f.3H=="26"||f.3H=="7T"||1P f.3H=="1z"){j.4P();if(f.2X=="bW"||f.2X=="gA"||f.2X=="dk"||f.2X=="8C"||f.2X=="gz"||f.2X=="eD"||f.2X=="eC"){V.5m(j,{2X:"dl",2I:f.2I,3w:f.3w});e=1m}1f{V.5m(j,f);e=1j}j.a0();V.2R(j,"26",f);j.26();V.2R(j,"3N",f)}if(f.2I>0&&(f.3H=="2k"||f.3H=="7T")){if(!e){j.4P();V.5m(j,f)}j.4O="5H-2G";V.2R(j,"2k",f);j.2k();V.2R(j,"3N",f)}1f{j.4O="5H-2G"}}}}f=1d;j.4U();1c},5m:1b(r,c){if(c.Jy){r.gF=c.gF;r.gE=c.gE;r.gD=c.gD;r.gC=c.gC}if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z o=V.1y;Z b=c.3w;if(b.1g<2){1c}if(c.2D&&c.2D!=="gB"){Z t=1a.1h.qJ(b,c.2D,1j,c.xm,o);r.3A(b[0][0]+o[0],b[0][1]+o[1]);Z j;Z g;Z e;Z k=b.1g;1i(Z h=0;h<k;h++){j=t[h*2];g=t[h*2+1];e=[b[(h+1)%k][0]+o[0],b[(h+1)%k][1]+o[1]];r.gx(j[0],j[1],g[0],g[1],e[0],e[1])}}1f{if(c.2D==="gB"){b=1a.1h.qI(b,1j,1d,o)}if(!c.2X||c.2X=="dl"){r.3A(b[0][0]+o[0],b[0][1]+o[1]);1i(Z h=1,f=b.1g;h<f;h++){r.4T(b[h][0]+o[0],b[h][1]+o[1])}r.4T(b[0][0]+o[0],b[0][1]+o[1])}1f{if(c.2X==="bW"||c.2X==="gA"||c.2X==="dk"||c.2X==="8C"||c.2X==="eD"){Z m=c.m8||(c.2I||1)*(c.2X=="bW"?5:1);c.m8=m;Z d=(c.2I||1);Z a=d;Z s=d;if(c.2X==="bW"){a*=5;s*=5;if(c.3I&&c.3I!=="5C"){a-=d;s+=d}}if(c.2X==="gA"){if(c.3I&&c.3I!=="5C"){a=1;s+=d}}if(c.2X==="dk"){s*=4;if(c.3I&&c.3I!=="5C"){a=1;s+=d}}if(c.2X==="8C"){a*=4;s*=4;if(c.3I&&c.3I!=="5C"){a-=d;s+=d}}if(c.2X==="eD"){a*=8;s*=4;if(c.3I&&c.3I!=="5C"){a-=d;s+=d}}r.3A(b[0][0]+o[0],b[0][1]+o[1]);1i(Z h=1,f=b.1g;h<f;h++){1a.1h.eB(r,b[h-1][0]+o[0],b[h-1][1]+o[1],b[h][0]+o[0],b[h][1]+o[1],d,[a,s])}1a.1h.eB(r,b[b.1g-1][0]+o[0],b[b.1g-1][1]+o[1],b[0][0]+o[0],b[0][1]+o[1],d,[a,s])}1f{if(c.2X==="gz"||c.2X==="eC"){Z m=c.m8||(c.2I||1)*(c.2X=="bW"?5:1);c.m8=m;Z d=(c.2I||1);Z a=d;Z s=d;Z q=d;Z n=d;if(c.2X==="gz"){a*=4;s*=4;n*=4;if(c.3I&&c.3I!=="5C"){a-=d;s+=d;q=1;n+=d}}if(c.2X==="eC"){a*=8;s*=4;n*=4;if(c.3I&&c.3I!=="5C"){a-=d;s+=d;q=1;n+=d}}r.3A(b[0][0]+o[0],b[0][1]+o[1]);1i(Z h=1,f=b.1g;h<f;h++){1a.1h.eB(r,b[h-1][0]+o[0],b[h-1][1]+o[1],b[h][0]+o[0],b[h][1]+o[1],d,[a,s,q,n])}1a.1h.eB(r,b[b.1g-1][0]+o[0],b[b.1g-1][1]+o[1],b[0][0]+o[0],b[0][1]+o[1],d,[a,s,q,n])}}}}1c},6p:1b(d,e){Z m;if(!e){if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}m=V.1y}1f{m=e}if(d.3e){1c d.3e}Z h=dj.xl;Z c=dj.xk;Z f=dj.xl;Z a=dj.xk;Z b=d.3w;1i(Z j=0,g=b.1g;j<g;j++){if(b[j][0]+m[0]<h){h=b[j][0]+m[0]}if(b[j][0]+m[0]>c){c=b[j][0]+m[0]}if(b[j][1]+m[1]<f){f=b[j][1]+m[1]}if(b[j][1]+m[1]>a){a=b[j][1]+m[1]}}Z k;if(d.3H=="2k"||d.3H=="26"){k=d.2I||1}1f{k=0}d.3e={x:1q.39(h-k/2),y:1q.39(f-k/2),1I:c-h+k,1L:a-f+k};1c d.3e},1T:"1a.1h.2b.iR"});1a.1h.2b.lQ=1a.1U(1a.1h.2b,{1p:"Jx",1B:1b(){1a.1h.2b.1u.1B.1x(V,1G);if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}},1Q:1b(){V.1p=1d;1a.1h.2b.1u.1Q.1x(V,1G)},xj:1b(m,c){if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z k=V.1y;Z j=c.x+k[0];Z i=c.y+k[1];Z e=c.1I;Z l=c.1L;Z a=c.5D;Z g;Z f;Z d;Z b;if(1P a==="3s"){g=f=d=b=a}1f{if(a 2a 4d){if(a.1g===1){g=f=d=b=a[0]}1f{if(a.1g===2){g=d=a[0];f=b=a[1]}1f{if(a.1g===3){g=a[0];f=b=a[1];d=a[2]}1f{g=a[0];f=a[1];d=a[2];b=a[3]}}}}1f{g=f=d=b=0}}Z h;if(g+f>e){h=g+f;g*=e/h;f*=e/h}if(d+b>e){h=d+b;d*=e/h;b*=e/h}if(f+d>l){h=f+d;f*=l/h;d*=l/h}if(g+b>l){h=g+b;g*=l/h;b*=l/h}m.3A(j+g,i);m.4T(j+e-f,i);f!==0&&m.m7(j+e,i,j+e,i+f);m.4T(j+e,i+l-d);d!==0&&m.m7(j+e,i+l,j+e-d,i+l);m.4T(j+b,i+l);b!==0&&m.m7(j,i+l,j,i+l-b);m.4T(j,i+g);g!==0&&m.m7(j,i,j+g,i)},5m:1b(a,b){if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z c=V.1y;if(!b.5D){a.3A(b.x+c[0],b.y+c[1]);a.4T((b.x+c[0])+b.1I,(b.y+c[1]));a.4T((b.x+c[0])+b.1I,(b.y+c[1])+b.1L);a.4T((b.x+c[0]),(b.y+c[1])+b.1L);a.4T(b.x+c[0],b.y+c[1])}1f{V.xj(a,b)}a.a0();1c},6p:1b(b){if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z c=V.1y;if(b.3e){1c b.3e}Z a;if(b.3H=="2k"||b.3H=="26"){a=b.2I||1}1f{a=0}b.3e={x:1q.39((b.x+c[0])-a/2),y:1q.39((b.y+c[1])-a/2),1I:b.1I+a,1L:b.1L+a};1c b.3e},1T:"1a.1h.2b.lQ"});1a.1h.2b.lP=1a.1U(1a.1h.2b,{1p:"xi",1B:1b(){1a.1h.2b.1u.1B.1x(V,1G);if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}},1Q:1b(){V.1p=1d;1a.1h.2b.1u.1Q.1x(V,1G)},8B:1b(o,e){if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z n=V.1y;Z a=V.1k;if(e){a=V.j8(a,V.2v||{})}if(1P(a.1K)=="1z"||a.1K===1m){1c}o.4N();V.m5(o);V.j7(o,a);V.eA(o);if(a.aL){o.81=a.aL}o.6S=a.6S||"4m";o.5E=a.5E||"7Z";Z m=(a.1K+"").6q("\\n");Z k=1a.1h.bV.gy("ZH",a.aL);Z h=V.qE(a);Z j=a.x+n[0];Z g;if(a.5E=="2m"){g=h.y}1f{if(a.5E=="4F"){g=h.y+k}1f{g=h.y+k/2}}Z c=a.x+n[0];Z b=a.y+n[1];1i(Z f=0,d=m.1g;f<d;f++){4h(a.3H){1E"26":V.2R(o,"26",a);if(a.7c&&a.7c!==0){o.4N();o.4V(c,b);o.6F(a.7c*1q.PI/62);if(a.5E=="2m"){if(a.2V){o.4u(m[f],0,k*f,a.2V)}1f{o.4u(m[f],0,k*f)}}1f{if(a.5E=="4F"){if(a.2V){o.4u(m[f],0,k*(f+1)-h.1L,a.2V)}1f{o.4u(m[f],0,k*(f+1)-h.1L)}}1f{if(a.2V){o.4u(m[f],0,k*(f+1)-h.1L/2-k/2,a.2V)}1f{o.4u(m[f],0,k*(f+1)-h.1L/2-k/2)}}}o.4U()}1f{if(a.2V){o.4u(m[f],j,g,a.2V)}1f{o.4u(m[f],j,g)}}V.2R(o,"3N",a);1H;1E"2k":V.2R(o,"2k",a);if(a.7c&&a.7c!==0){o.4N();o.4V(c,b);o.6F(a.7c*1q.PI/62);if(a.5E=="2m"){if(a.2V){o.6W(m[f],0,k*f,a.2V)}1f{o.6W(m[f],0,k*f)}}1f{if(a.5E=="4F"){if(a.2V){o.6W(m[f],0,k*(f+1)-h.1L,a.2V)}1f{o.6W(m[f],0,k*(f+1)-h.1L)}}1f{if(a.2V){o.6W(m[f],0,k*(f+1)-h.1L/2-k/2,a.2V)}1f{o.6W(m[f],0,k*(f+1)-h.1L/2-k/2)}}}o.4U()}1f{if(a.2V){o.6W(m[f],j,g,a.2V)}1f{o.6W(m[f],j,g)}}V.2R(o,"3N",a);1H;1E"7T":if(a.7c&&a.7c!==0){o.4N();o.4V(c,b);o.6F(a.7c*1q.PI/62);if(a.5E=="2m"){if(a.2V){V.2R(o,"26",a);o.4u(m[f],0,k*f,a.2V);V.2R(o,"3N",a);V.2R(o,"2k",a);o.6W(m[f],0,k*f,a.2V);V.2R(o,"3N",a)}1f{V.2R(o,"26",a);o.4u(m[f],0,k*f);V.2R(o,"3N",a);V.2R(o,"2k",a);o.6W(m[f],0,k*f);V.2R(o,"3N",a)}}1f{if(a.5E=="4F"){if(a.2V){V.2R(o,"26",a);o.4u(m[f],0,k*(f+1)-h.1L,a.2V);V.2R(o,"3N",a);V.2R(o,"2k",a);o.6W(m[f],0,k*(f+1)-h.1L,a.2V);V.2R(o,"3N",a)}1f{V.2R(o,"26",a);o.4u(m[f],0,k*(f+1)-h.1L);V.2R(o,"3N",a);V.2R(o,"2k",a);o.6W(m[f],0,k*(f+1)-h.1L);V.2R(o,"3N",a)}}1f{if(a.2V){V.2R(o,"26",a);o.4u(m[f],0,k*(f+1)-h.1L/2-k/2,a.2V);V.2R(o,"3N",a);V.2R(o,"2k",a);o.6W(m[f],0,k*(f+1)-h.1L/2-k/2,a.2V);V.2R(o,"3N",a)}1f{V.2R(o,"26",a);o.4u(m[f],0,k*(f+1)-h.1L/2-k/2);V.2R(o,"3N",a);V.2R(o,"2k",a);o.6W(m[f],0,k*(f+1)-h.1L/2-k/2);V.2R(o,"3N",a)}}}o.4U()}1f{if(a.2V){V.2R(o,"26",a);o.4u(m[f],j,g,a.2V);V.2R(o,"3N",a);V.2R(o,"2k",a);o.6W(m[f],j,g,a.2V);V.2R(o,"3N",a)}1f{V.2R(o,"26",a);o.4u(m[f],j,g);V.2R(o,"3N",a);V.2R(o,"2k",a);o.6W(m[f],j,g);V.2R(o,"3N",a)}}1H;1o:V.2R(o,"26",a);if(a.7c&&a.7c!==0){o.4N();o.4V(c,b);o.6F(a.7c*1q.PI/62);if(a.5E=="2m"){if(a.2V){o.4u(m[f],0,k*f,a.2V)}1f{o.4u(m[f],0,k*f)}}1f{if(a.5E=="4F"){if(a.2V){o.4u(m[f],0,k*(f+1)-h.1L,a.2V)}1f{o.4u(m[f],0,k*(f+1)-h.1L)}}1f{if(a.2V){o.4u(m[f],0,k*(f+1)-h.1L/2-k/2,a.2V)}1f{o.4u(m[f],0,k*(f+1)-h.1L/2-k/2)}}}o.4U()}1f{if(a.2V){o.4u(m[f],j,g,a.2V)}1f{o.4u(m[f],j,g)}}V.2R(o,"3N",a)}g+=k}o.4U();1c},6p:1b(b){if(b.3e){1c b.3e}Z d,h,j,a;Z g=V.qF(b,1j);1i(Z e=0,f=g.1g;e<f;e++){Z c=g[e];if(e==0){d=c[0];j=c[0];h=c[1];a=c[1]}1f{if(c[0]<d){d=c[0]}if(c[0]>j){j=c[0]}if(c[1]<h){h=c[1]}if(c[1]>a){a=c[1]}}}b.3e={x:d,y:h,1I:j-d,1L:a-h};1c b.3e},qE:1b(a){if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z l=V.1y;Z i=1a.1h.bV.gy("ZH",a.aL);Z b=1a.1h.bV.qH(a.1K,a.aL);Z m=1a.1h.bV.gy(a.1K,a.aL);Z f=a.x+l[0];if(a.6S=="4E"||a.6S=="4y"){f-=b}1f{if(a.6S=="5Z"){f-=(b/2)}}Z e;if(a.5E=="2m"){e=a.y+l[1]}1f{if(a.5E=="4F"){e=(a.y+l[1])-m}1f{e=(a.y+l[1])-m/2}}Z k=1m;Z h;if(a.2V){Z j=2P(a.2V);if(j<b){h=b;k=1j;b=j}Z f=a.x+l[0];if(a.6S=="4E"||a.6S=="4y"){f-=b}1f{if(a.6S=="5Z"){f-=(b/2)}}}if(a.aL){Z d=a.aL;Z c=d.9f();if(c.3k("qG")>-1){if(h&&k===1j){b+=(i/3)*(b/h)}1f{b+=i/3}}}Z g={x:f,y:e,1I:b,1L:m};1c g},qF:1b(b,i){if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z l=V.1y;if((!i||i===1m)&&b.m6){1c b.m6}Z k=V.qE(b);Z e=b.x+l[0];Z d=b.y+l[1];Z c=[];if(b.7c&&b.7c!==0){Z g=b.7c;Z h=V.j9(k.x,k.y,e,d,g);Z a=V.j9(k.x+k.1I,k.y,e,d,g);Z j=V.j9(k.x+k.1I,k.y+k.1L,e,d,g);Z f=V.j9(k.x,k.y+k.1L,e,d,g);c.1r(h);c.1r(a);c.1r(j);c.1r(f)}1f{Z h=[k.x,k.y];Z a=[k.x+k.1I,k.y];Z j=[k.x+k.1I,k.y+k.1L];Z f=[k.x,k.y+k.1L];c.1r(h);c.1r(a);c.1r(j);c.1r(f)}b.m6=c;1c b.m6},j9:1b(a,h,e,d,g){Z f=1n 4d(),b,c;h=-h;d=-d;g=-g;b=(a-e)*1q.6V((g/62)*1q.PI)-(h-d)*1q.5w((g/62)*1q.PI)+e;c=(a-e)*1q.5w((g/62)*1q.PI)+(h-d)*1q.6V((g/62)*1q.PI)+d;f[0]=b;f[1]=-c;1c f},1T:"1a.1h.2b.lP"});1a.1h.2b.9U=1a.1U(1a.1h.2b,{1p:"xh",ez:1d,1B:1b(a){1a.1h.2b.1u.1B.1x(V,1G);if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}V.ez={}},1Q:1b(){V.1p=1d;V.ez=1d;1a.1h.2b.1u.1Q.1x(V,1G)},8B:1b(p,f,h){if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z o=V.1y;Z b=V.1k||{};if(f){b=V.j8(b,V.2v||{})}Z e=b.3M;Z i=V;if(1P(e)==="3t"){Z a=e;if(V.ez[a]){e=V.ez[a]}1f{e=1n 6R();e.a1=1b(){e.a1=1d;7Y(1a.1h.2b.9U.qC);1a.1h.2b.9U.m4.1r(i);1a.1h.2b.9U.qC=8A(1b(){h&&h(1a.1h.2b.9U.m4);1a.1h.2b.9U.m4=[]},10)};e.2i=a;V.ez[a]=e}}if(e){if(e.Jw.bU()=="Jv"){if(2u.xg){if(e.xf!="qD"){1c}}1f{if(!e.qD){1c}}}Z c=b.1I||e.1I;Z n=b.1L||e.1L;Z m=b.x+o[0];Z k=b.y+o[1];if(!e.1I||!e.1L){1c}p.4N();V.m5(p);V.j7(p,b);V.eA(p);if(b.aK&&b.aJ){Z l=(b.sx+o[0])||0;Z j=(b.sy+o[1])||0;p.7h(e,l,j,b.aK,b.aJ,m,k,c,n)}1f{if(b.sx&&b.sy){Z l=b.sx+o[0];Z j=b.sy+o[1];Z d=c-l;Z g=n-j;p.7h(e,l,j,d,g,m,k,c,n)}1f{p.7h(e,m,k,c,n)}}if(!b.1I){b.1I=c}if(!b.1L){b.1L=n}if(!V.1k.1I){V.1k.1I=c}if(!V.1k.1L){V.1k.1L=n}V.di(p,b,V.1k);p.4U()}},6p:1b(a){if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z b=V.1y;1c{x:a.x+b[0],y:a.y+b[1],1I:a.1I,1L:a.1L}},9X:1b(){V.ez={}},1T:"1a.1h.2b.9U"});1a.1h.2b.9U.m4=[];1a.1h.2b.9U.qC=1d;1a.1h.2b.qm=1a.1U(1a.1h.2b,{1p:"xe",1B:1b(a){1a.1h.2b.1u.1B.1x(V,1G);if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}},1Q:1b(){V.1p=1d;1a.1h.2b.1u.1Q.1x(V,1G)},5m:1b(l,b){if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z k=V.1y;Z j=b.x+k[0];Z h=b.y+k[1];Z d=b.r0||0;Z a=b.r;Z f=b.9R;Z c=b.8v;Z e=b.8Y||1m;f=1a.1h.8z.j6(f);c=1a.1h.8z.j6(c);if(!e){f=-f;c=-c}Z i=1a.1h.8z.6V(f);Z g=1a.1h.8z.5w(f);l.3A(i*d+j,g*d+h);l.4T(i*a+j,g*a+h);l.5v(j,h,a,f,c,!e);l.4T(1a.1h.8z.6V(c)*d+j,1a.1h.8z.5w(c)*d+h);if(d!==0){l.5v(j,h,d,c,f,e)}l.a0();1c},6p:1b(c){if(c.3e){1c c.3e}if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z l=V.1y;Z b=1a.1h.4z.5b();Z m=1a.1h.4z.5b();Z k=1a.1h.4z.5b();Z i=1a.1h.4z.5b();Z j=c.x+l[0];Z h=c.y+l[1];Z e=c.r0||0;Z a=c.r;Z g=1a.1h.8z.j6(c.9R);Z d=1a.1h.8z.j6(c.8v);Z f=c.8Y;if(!f){g=-g;d=-d}if(e>1){1a.1h.qB.5v(j,h,e,g,d,!f,b,k)}1f{b[0]=k[0]=j;b[1]=k[1]=h}1a.1h.qB.5v(j,h,a,g,d,!f,m,i);1a.1h.4z.2Q(b,b,m);1a.1h.4z.2L(k,k,i);c.3e={x:b[0],y:b[1],1I:k[0]-b[0],1L:k[1]-b[1]};1c c.3e},1T:"1a.1h.2b.qm"});1a.1h.2b.xc=1a.1U(1a.1h.2b,{1p:"xd",1B:1b(a){1a.1h.2b.1u.1B.1x(V,1G);if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}},1Q:1b(){V.1p=1d;1a.1h.2b.1u.1Q.1x(V,1G)},5m:1b(m,c){if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z l=V.1y;Z f=0.Ju;Z j=c.x+l[0];Z g=c.y+l[1];Z i=c.a;Z h=c.b;Z e=i*f;Z d=h*f;m.3A(j-i,g);m.gx(j-i,g-d,j-e,g-h,j,g-h);m.gx(j+e,g-h,j+i,g-d,j+i,g);m.gx(j+i,g+d,j+e,g+h,j,g+h);m.gx(j-e,g+h,j-i,g+d,j-i,g);m.a0()},6p:1b(b){if(b.3e){1c b.3e}if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z c=V.1y;Z a;if(b.3H=="2k"||b.3H=="26"){a=b.2I||1}1f{a=0}b.3e={x:1q.39((b.x+c[0])-b.a-a/2),y:1q.39((b.x+c[1])-b.b-a/2),1I:b.a*2+a,1L:b.b*2+a};1c b.3e},1T:"1a.1h.2b.xc"});1a.1h.2b.xa=1a.1U(1a.1h.2b,{1p:"xb",1B:1b(a){1a.1h.2b.1u.1B.1x(V,1G);if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}},1Q:1b(){V.1p=1d;1a.1h.2b.1u.1Q.1x(V,1G)},5m:1b(q,c){if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z p=V.1y;Z j=1a.1h.8z.5w;Z o=1a.1h.8z.6V;Z t=1q.PI;Z e=c.n;if(!e||e<2){1c}Z l=c.x+p[0];Z k=c.y+p[1];Z b=c.r;Z m=2*t/e;Z d=-t/2;Z h=l+b*o(d);Z s=k+b*j(d);d+=m;Z a=c.3w=[];a.1r([h,s]);1i(Z g=0,f=e-1;g<f;g++){a.1r([l+b*o(d),k+b*j(d)]);d+=m}a.1r([h,s]);q.3A(a[0][0],a[0][1]);1i(Z g=0;g<a.1g;g++){q.4T(a[g][0],a[g][1])}q.a0();1c},6p:1b(b){if(b.3e){1c b.3e}if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z c=V.1y;Z a;if(b.3H=="2k"||b.3H=="26"){a=b.2I||1}1f{a=0}b.3e={x:1q.39((b.x+c[0])-b.r-a/2),y:1q.39((b.y+c[1])-b.r-a/2),1I:b.r*2+a,1L:b.r*2+a};1c b.3e},1T:"1a.1h.2b.xa"});1a.1h.2b.x8=1a.1U(1a.1h.2b,{1p:"x9",1B:1b(a){1a.1h.2b.1u.1B.1x(V,1G);if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}},1Q:1b(){V.1p=1d;1a.1h.2b.1u.1Q.1x(V,1G)},5m:1b(a,b){if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z c=V.1y;a.5v(b.x+c[0],b.y+c[1],b.r,0,1q.PI*2,1m);a.3A((b.x+c[0])+b.r0,b.y+c[1]);a.5v(b.x+c[0],b.y+c[1],b.r0,0,1q.PI*2,1j);1c},6p:1b(b){if(b.3e){1c b.3e}if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z c=V.1y;Z a;if(b.3H=="2k"||b.3H=="26"){a=b.2I||1}1f{a=0}b.3e={x:1q.39((b.x+c[0])-b.r-a/2),y:1q.39((b.y+c[1])-b.r-a/2),1I:b.r*2+a,1L:b.r*2+a};1c b.3e},1T:"1a.1h.2b.x8"});1a.1h.2b.x6=1a.1U(1a.1h.2b,{1p:"x7",1B:1b(a){1a.1h.2b.1u.1B.1x(V,1G);if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}},1Q:1b(){V.1p=1d;1a.1h.2b.1u.1Q.1x(V,1G)},5m:1b(q,u){if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z v=V.1y;Z m=u.n;if(!m||m<2){1c}Z a=1a.1h.8z.5w;Z b=1a.1h.8z.6V;Z o=1q.PI;Z h=u.x+v[0];Z g=u.y+v[1];Z l=u.r;Z t=u.r0;if(t==1d){t=m>4?l*b(2*o/m)/b(o/m):l/3}Z d=o/m;Z j=-o/2;Z e=h+l*b(j);Z f=g+l*a(j);j+=d;Z p=u.3w=[];p.1r([e,f]);1i(Z s=0,c=m*2-1,k;s<c;s++){k=s%2===0?t:l;p.1r([h+k*b(j),g+k*a(j)]);j+=d}p.1r([e,f]);q.3A(p[0][0],p[0][1]);1i(Z s=0;s<p.1g;s++){q.4T(p[s][0],p[s][1])}q.a0();1c},6p:1b(b){if(b.3e){1c b.3e}if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z c=V.1y;Z a;if(b.3H=="2k"||b.3H=="26"){a=b.2I||1}1f{a=0}b.3e={x:1q.39((b.x+c[0])-b.r-a/2),y:1q.39((b.y+c[1])-b.r-a/2),1I:b.r*2+a,1L:b.r*2+a};1c b.3e},1T:"1a.1h.2b.x6"});1a.1h.2b.ql=1a.1U(1a.1h.2b,{1p:"Jt",1B:1b(a){1a.1h.2b.1u.1B.1x(V,1G);if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}},1Q:1b(){V.1p=1d;1a.1h.2b.1u.1Q.1x(V,1G)},5m:1b(b,c){if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z d=V.1y;Z a=c.x+d[0];Z e=c.y+d[1];b.3A(a+c.r,e);b.5v(a,e,c.r,0,1q.PI*2,1j);1c 1j},6p:1b(c){if(c.3e){1c c.3e}if(!V.1y||V.1y.1g!==2){V.1y=[0,0]}Z e=V.1y;Z b=c.x+e[0];Z f=c.y+e[1];Z d=c.r;Z a;if(c.3H=="2k"||c.3H=="26"){a=c.2I||1}1f{a=0}c.3e={x:1q.39(b-c.r-a/2),y:1q.39(f-c.r-a/2),1I:c.r*2+a,1L:c.r*2+a};1c c.3e},1T:"1a.1h.2b.ql"});1a.1J.2E=1a.1U(1a.1J,{5G:["gr","dg","gw"],j5:1m,1M:1d,ey:1d,aR:1d,j4:1d,2f:1d,ex:1d,1B:1b(b,a){V.5G=1a.1J.2E.1u.5G.5k(1a.1J.1u.5G);1a.1J.1u.1B.1x(V,1G);V.1M=[];V.ex=[];V.j4=1n 1a.1h();V.aR=[0,0]},bT:1b(b){1a.1J.1u.bT.1x(V,1G);if(!V.j4){V.1v.qA(V)}1f{Z a=V.1v.bS();V.2o.1k.1I=a.w+"px";V.2o.1k.1L=a.h+"px";V.2f=V.j4.qz(V.2o);V.2f.3b();V.x2()}},Js:1b(){Z a=V;V.1v.1Y.on({7g:1b(c){Z b=c.xy.2A();a.ey=1n 1a.dh(b.x+a.aR[0],b.y+a.aR[1])}})},1Q:1b(){V.5G=1d;V.j5=1d;V.ex=1d;V.x5();V.1M=1d;if(V.2f){V.2f.7B()}V.2f=1d;V.j4=1d;V.aR=1d;V.ey=1d;1a.1J.1u.1Q.1x(V,1G)},x5:1b(c){Z b=(c==1z);if(b){c=V.1M}if(c){V.9d(c);1i(Z a=c.1g-1;a>=0;a--){c[a].1Q()}}},2A:1b(e){if(e==1d){e=1n 1a.1J.2E(V.2h,V.qy())}e=1a.1J.1u.2A.1x(V,[e]);Z c=V.1M;Z a=c.1g;Z d=1n 4d(a);1i(Z b=0;b<a;++b){d[b]=c[b].2A()}e.1M=d;1c e},6E:1b(a){},9d:1b(b){if(!b||b.1g===0){1c}if(b===V.1M){1c V.5t()}if(!(1a.1t.5u(b))){b=[b]}Z c=[];1i(Z f=b.1g-1;f>=0;f--){Z j=b[f];Z h=1a.1t.3k(V.1M,j);if(h===-1){c.1r(j);3o}V.1M.6o(h,1)}Z a=[];1i(Z d=0,g=V.1M.1g;d<g;d++){j=V.1M[d];a.1r(j)}V.1M=[];V.6E(a);if(V.2f){if(V.1v){V.7e(V.1v.7d(),1m,1m)}1f{V.7e()}}Z e=c.1g==0?1j:1m;V.1Y.2z("gw",{1M:c,aQ:e})},5t:1b(){if(V.2f){V.2f.3b()}V.1M=[];V.1Y.2z("gw",{1M:[],aQ:1j})},Jr:1b(){Z a=V.1M.1g;Z c=1n 4d(a);1i(Z b=0;b<a;++b){c[b]=V.1M[b]}1c c},j2:1b(c,b){Z a=1d;1i(Z d in V.1M){if(V.1M[d][c]===b){a=V.1M[d];1H}}1c a},j3:1b(a){1c V.j2("id",a)},x4:1b(b,c){Z a,e=[];1i(Z d in V.1M){a=V.1M[d];if(a&&a.2Z){if(a.2Z[b]===c){e.1r(a)}}}1c e},3A:1b(c,a,e){1a.1J.1u.3A.1x(V,1G);Z d=2P(V.1v.7A.1k.2F,10);d=-1q.39(d);Z b=2P(V.1v.7A.1k.2m,10);b=-1q.39(b);V.2o.1k.2F=d+"px";V.2o.1k.2m=b+"px";if(V.2f){V.7e(c,a,e)}if(V.ey){V.ey=1n 1a.dh(V.ey.x-V.aR[0],V.ey.y-V.aR[1])}V.aR=[0,0]},m3:1b(b,a){V.aR[0]+=b;V.aR[1]+=a},7e:1b(b,a,c){},j1:1b(a){if(a!==V.2s){V.2s=a;Z b=V.2o;1a.1t.gv(b,1d,1d,1d,1d,1d,1d,a);if(V.1v!==1d){V.1v.1Y.2z("x3",{1w:V,7f:"2s"})}}},6D:1b(){if(V.2f){if(V.1v){V.7e(V.1v.7d(),1m,1m)}1f{V.7e()}}1c 1a.1J.1u.6D.1x(V,1G)},m2:1b(){1a.1J.1u.m2.1x(V,1G);Z a=V.1v.bS();V.2o.1k.1I=a.w+"px";V.2o.1k.1L=a.h+"px";V.2f.7X()},on:1b(b,d){Z a=d;if(!V.2f){Z c=[];c.1r(b);c.1r(a);V.ex.1r(c)}1f{V.2f.on(b,a)}},un:1b(g,h){Z b=h;if(!V.2f){Z d=V.ex;Z a=d.1g;Z f=[];1i(Z e=0;e<a;e++){Z c=d[e];if(!(c[0]===g&&c[1]===b)){f.1r(c)}}V.ex=f}1f{V.2f.un(g,b)}},x2:1b(){Z b=V.ex;Z a=b.1g;1i(Z c=0;c<a;c++){V.2f.on(b[c][0],b[c][1])}},4M:1b(e){Z b=V.1v.6U();Z c=V.1v.7d();if(e 2a 1a.1R.2N||e 2a 1a.1R.qr){Z a=(e.x/b+(-c.2F/b));Z d=((c.2m/b)-e.y/b);1c[a,d]}1f{if(e 2a 1a.aO){Z a=(e.bR/b+(-c.2F/b));Z d=((c.2m/b)-e.es/b);1c[a,d]}1f{1c 1d}}},1T:"1a.1J.2E"});1a.1J.2E.qx=1b(c,d){if(!c||!(c 2a 1a.1J.2E)||!c.2f||!d||!(d 2a 1a.1O.2w)){1c}Z b=1n 1a.1O.4c();Z a=b.8w(d);c.2f.qx(a)};1a.1J.2E.9Z=1a.1U(1a.1J.2E,{7z:1d,gu:1d,ew:0,gs:1m,7y:2,6m:1m,6l:1m,6C:1j,2v:1d,eu:1m,1k:1d,1B:1b(b,a){1a.1J.2E.1u.1B.1x(V,1G);V.7z=1n 3U();V.gu=1n 4d();V.1k=1n 3U()},1Q:1b(){V.ew=1d;V.gs=1d;V.7y=1d;V.6m=1d;V.6l=1d;V.6C=1d;V.7z=1d;V.gu=1d;V.1k=1d;V.2v=1d;V.eu=1d;1a.1J.2E.1u.1Q.1x(V,1G)},6E:1b(d){if(!(1a.1t.5u(d))){d=[d]}Z e={1M:d};Z b=V.1Y.2z("gr",e);if(b===1m){1c}d=e.1M;Z g=[];1i(Z c=0,a=d.1g;c<a;c++){V.1M.1r(d[c])}Z f=g.1g==0?1j:1m;V.1Y.2z("dg",{1M:g,aQ:f});if(!V.gs){V.ew=V.1M.1g*5}if(V.2f){if(V.1v){V.7e(V.1v.7d(),1m,1m)}1f{V.7e()}}},9d:1b(a){V.9X();1a.1J.2E.1u.9d.1x(V,1G)},5t:1b(){V.9X();1a.1J.2E.1u.5t.1x(V,1G)},7e:1b(d,f,n){Z c=V.2f.x1();Z r=1d;if(c&&c.5Y){r=c.5Y}V.2f.iZ();Z b=V.1M;Z k=V.7z;Z q=V.gu;Z l=V.1v.7W();Z h=V.ew;1i(Z o=0,p=b.1g;o<p;o++){Z a=b[o];Z s=a.27.9W();if(d){if(!d.qw(s)){3o}}Z m=a.id+"Jq"+l.2c();Z j;if(k[m]){k[m].wN()}1f{j=V.df(b[o]);if(j.wM()<1){3o}k[m]=j;q.1r(m);if(q.1g>h){Z g=q[0];q.6o(0,1);4S k[g]}}}V.2f.aP();if(r&&V.6m&&V.6l){Z e=V.qu(r);V.2f.x0(e)}},df:1b(c){Z e=1a.1t.2O(V.1k);if(c.1k&&V.eu===1j){e=1a.1t.2O(c.1k)}Z b={};b.7y=V.7y;b.6m=V.6m;b.6l=V.6l;b.6C=V.6C;b.2v=1a.1O.4c.5a(V.2v);Z d=1n 1a.1O.2E.49(c,V,1a.1O.4c.5a(e),b);1i(Z a=0;a<d.5l.1g;a++){V.2f.db(d.5l[a])}1c d},6D:1b(){V.9X();1c 1a.1J.2E.1u.6D.1x(V,1G)},9X:1b(){V.7z={};V.gu=[]},3b:1b(){V.2f.iZ();V.2f.4i();V.5t();V.9X()},Jp:1b(){1c V.gu.1g},Jo:1b(a){if(!2Y(a)){V.ew=a;V.gs=1j}},qu:1b(f){Z d=[];Z e=V.2f.qt();if(!f){1c e}1i(Z c=0,a=e.1g;c<a;c++){Z b=e[c];if(b.5Y&&f===b.5Y){d.1r(b)}}1c d},1T:"1a.1J.2E.9Z"});1a.1J.wZ=1a.1U(1a.1J.2E.9Z,{eu:1j,1k:1d,1B:1b(b,a){1a.1J.2E.9Z.1u.1B.1x(V,1G)},1Q:1b(){V.1k=1d;1a.1J.2E.9Z.1u.1Q.1x(V,1G)},df:1b(c){Z e=1a.1t.2O(V.1k);if(c.1k&&V.eu===1j){e=1a.1t.2O(c.1k)}Z b={};b.7y=V.7y;b.6m=V.6m;b.6l=V.6l;b.6C=V.6C;Z d=1n 1a.1O.2E.49(c,V,1a.1O.4c.5a(e),b);1i(Z a=0;a<d.5l.1g;a++){V.2f.db(d.5l[a])}1c d},1T:"1a.1J.wZ"});1a.1J.wY=1a.1U(1a.1J.2E.9Z,{1k:1d,9c:1d,9e:1d,1B:1b(b,a){1a.1J.2E.9Z.1u.1B.1x(V,1G);V.1k=1n 3U();V.9e=1n 4d()},1Q:1b(){V.1k=1d;V.9c=1d;V.9e=1d;1a.1J.2E.9Z.1u.1Q.1x(V,1G)},6E:1b(d){if(!(1a.1t.5u(d))){d=[d]}Z e={1M:d};Z b=V.1Y.2z("gr",e);if(b===1m){1c}d=e.1M;Z g=[];1i(Z c=0,a=d.1g;c<a;c++){V.1M.1r(d[c])}Z f=g.1g==0?1j:1m;V.1Y.2z("dg",{1M:g,aQ:f});if(!V.gs){V.ew=V.1M.1g*5}if(V.2f){if(V.1v){V.7e(V.1v.7d(),1m,1m)}1f{V.7e()}}},df:1b(c){Z e=V.m1(c);Z b={};b.7y=V.7y;b.6m=V.6m;b.6l=V.6l;b.6C=V.6C;b.2v=1a.1O.4c.5a(V.2v);Z d=1n 1a.1O.2E.49(c,V,1a.1O.4c.5a(e),b);1i(Z a=0;a<d.5l.1g;a++){V.2f.db(d.5l[a])}1c d},m1:1b(h){Z a={};Z m=h;a=1a.1t.2O(a,V.1k);if(V.9c&&V.9e&&V.9e.1g>0&&m.2Z){Z g=V.9c;Z f=m.2Z;Z k=V.9e;Z c=1m;Z e=1d;1i(Z j in f){if(g===j){c=1j;e=f[j];1H}}if(c){1i(Z b=0,d=k.1g;b<d;b++){if((e>=k[b].4m)&&(e<k[b].4E)){Z l=k[b].1k;a=1a.1t.2O(a,l)}}}}if(m.1k&&V.eu===1j){a=1a.1t.2O(m.1k)}1c a},1T:"1a.1J.wY"});1a.1J.wX=1a.1U(1a.1J.2E.9Z,{1k:1d,9c:1d,9e:1d,1B:1b(b,a){1a.1J.2E.9Z.1u.1B.1x(V,1G);V.1k=1n 3U();V.9e=1n 4d()},1Q:1b(){V.1k=1d;V.9c=1d;V.9e=1d;1a.1J.2E.9Z.1u.1Q.1x(V,1G)},6E:1b(d){if(!(1a.1t.5u(d))){d=[d]}Z e={1M:d};Z b=V.1Y.2z("gr",e);if(b===1m){1c}d=e.1M;Z g=[];1i(Z c=0,a=d.1g;c<a;c++){V.1M.1r(d[c])}Z f=g.1g==0?1j:1m;V.1Y.2z("dg",{1M:g,aQ:f});if(!V.gs){V.ew=V.1M.1g*5}if(V.2f){if(V.1v){V.7e(V.1v.7d(),1m,1m)}1f{V.7e()}}},df:1b(c){Z e=V.m1(c);Z b={};b.7y=V.7y;b.6m=V.6m;b.6l=V.6l;b.6C=V.6C;b.2v=1a.1O.4c.5a(V.2v);Z d=1n 1a.1O.2E.49(c,V,1a.1O.4c.5a(e),b);1i(Z a=0;a<d.5l.1g;a++){V.2f.db(d.5l[a])}1c d},m1:1b(h){Z a={};Z m=h;a=1a.1t.2O(a,V.1k);if(V.9c&&V.9e&&V.9e.1g>0&&m.2Z){Z b=V.9c;Z g=m.2Z;Z k=V.9e;Z d=1m;Z f=1d;1i(Z j in g){if(b===j){d=1j;f=g[j];1H}}if(d){1i(Z c=0,e=k.1g;c<e;c++){if((f).2c()===(k[c].1l).2c()){Z l=k[c].1k;a=1a.1t.2O(a,l)}}}}if(m.1k&&V.eu===1j){a=1a.1t.2O(m.1k)}1c a},1T:"1a.1J.wX"});1a.1J.aN=1a.1U(1a.1J.2E,{j0:1d,m0:1d,et:1d,qv:1j,gp:1d,7z:1d,gq:1d,1B:1b(c,d,b){Z a=[];a.1r(c);a.1r(b);1a.1J.2E.1u.1B.1x(V,a);V.gq=d;V.gp=[];V.7z={};V.j0={}},1Q:1b(){V.gq=1d;V.j0=1d;V.m0=1d;V.et=1d;V.qv=1d;1a.1J.2E.1u.1Q.1x(V,1G);V.gp=1d;V.7z=1d},Jn:1b(a){V.gq=a;V.6D()},6E:1b(d){if(!(1a.1t.5u(d))){d=[d]}Z e={1M:d};Z b=V.1Y.2z("gr",e);if(b===1m){1c}d=e.1M;Z g=[];1i(Z c=0,a=d.1g;c<a;c++){V.1M.1r(d[c])}Z f=g.1g==0?1j:1m;V.1Y.2z("dg",{1M:g,aQ:f});if(V.2f){if(V.1v){V.7e(V.1v.7d(),1m,1m)}1f{V.7e()}}},7e:1b(b,c,h){V.2f.iZ();Z d=V.1M;1i(Z e=0,f=d.1g;e<f;e++){Z l=d[e];Z j=l.27.9W();if(b){if(!b.qw(j)){3o}}Z a=V.7z;Z k=l.id;if(!a[k]){a[k]=k;Z g=V.df(l);if(g&&V.et){if(l.2Z[V.et]&&!2Y(l.2Z[V.et])){g.9Y=l.2Z[V.et]}}if(g){V.gp.1r(g)}}}V.wW()},df:1b(a){Z b;if(1a.1O.2E[V.gq]&&V.m0&&V.j0){b=1n 1a.1O.2E[V.gq](a,V,V.m0,V.j0)}if(!b){1c 1m}b.qn();1c b},wW:1b(){if(!V.2f){1c}Z w=V.gp;if(V.et){w.6n(1b(i,j){if(1P(i.9Y)=="1z"&&1P(j.9Y)=="1z"){1c 0}1f{if(1P(i.9Y)!="1z"&&1P(j.9Y)=="1z"){1c-1}1f{if(1P(i.9Y)=="1z"&&1P(j.9Y)!="1z"){1c 1}1f{if(1P(i.9Y)!="1z"&&1P(j.9Y)!="1z"){if(40(i.9Y)<40(j.9Y)){1c 1}1f{1c-1}}}}}})}if(!V.qv){1i(Z q=0,g=w.1g;q<g;q++){Z x=w[q];Z b=x.iT();Z y=x.5l;1i(Z o=0,l=y.1g;o<l;o++){y[o].1y=b;V.2f.db(y[o])}}}1f{Z d=[];Z e=V.1v.7d();if(e){Z v=V.4M(1n 1a.aO(e.2F,e.2m));Z a=V.4M(1n 1a.aO(e.4y,e.4F));Z c=1n 1a.d9(v[0],a[1],a[0],v[1]);1i(Z s=0,u=w.1g;s<u;s++){Z h=w[s];Z t=h.iT();Z p=h.lX;Z z=[{x:p.2F,y:p.2m},{x:p.2F,y:p.4F},{x:p.4y,y:p.4F},{x:p.4y,y:p.2m},{x:p.2F,y:p.2m}];if(c){if(!V.wU(c,z)){3o}}Z f=1m;if(s!==0){1i(Z r=0;r<d.1g;r++){if(V.wV(z,d[r])){f=1j;1H}}}if(f){3o}1f{d.1r(z)}Z k=h.5l;1i(Z r=0,A=k.1g;r<A;r++){k[r].1y=t;V.2f.db(k[r])}}}}V.2f.aP()},qu:1b(f){Z d=[];Z e=V.2f.qt();if(!f){1c e}1i(Z c=0,a=e.1g;c<a;c++){Z b=e[c];if(b.5Y&&f===b.5Y){d.1r(b)}}1c d},wV:1b(b,h){Z g=b.1g,a=h.1g;if(g!==5||a!==5){1c 1d}Z e=1m;1i(Z d=0;d<g;d++){if(V.qs(b[d],h)){e=1j;1H}}1i(Z d=0;d<a;d++){if(V.qs(h[d],b)){e=1j;1H}}1i(Z d=0;d<g-1;d++){if(e){1H}1i(Z c=0;c<a-1;c++){Z f=1a.1t.Jm(b[d],b[d+1],h[c],h[c+1]);if(f.1T==="1a.1R.2N"){e=1j;1H}}}1c e},qs:1b(f,d){1i(Z e=1m,c=-1,a=d.1g,b=a-1;++c<a;b=c){((d[c].y<=f.y&&f.y<d[b].y)||(d[b].y<=f.y&&f.y<d[c].y))&&(f.x<(d[b].x-d[c].x)*(f.y-d[c].y)/(d[b].y-d[c].y)+d[c].x)&&(e=!e)}1c e},wU:1b(f,d){Z g=f;Z e=1m;1i(Z c=0,b=d.1g;c<b;c++){Z a=d[c];if(a.x>=g.2F&&a.x<=g.4y&&a.y>=g.2m&&a.y<=g.4F){e=1j;1H}}1c e},9X:1b(){V.7z={};V.gp=[]},9d:1b(a){V.9X();1a.1J.2E.1u.9d.1x(V,1G)},5t:1b(){V.9X();1a.1J.2E.1u.5t.1x(V,1G)},6D:1b(){V.9X();1c 1a.1J.2E.1u.6D.1x(V,1G)},3b:1b(){if(V.2f){V.2f.iZ();V.2f.4i()}V.5t();V.9X()},Jl:1b(c,a,b){if(1P(b)=="1z"||2Y(b)){b=0}if(!c.2Z){1c b}Z d=c.2Z[a];if(1P(d)=="1z"||2Y(d)){d=b}1c d},1T:"1a.1J.aN"});1a.1J.lS=1a.1U(1a.1J.aN,{iY:1d,9c:1d,go:1d,1B:1b(b,c,a){1a.1J.aN.1u.1B.1x(V,1G);V.go=c;V.iY={}},1Q:1b(){V.go=1d;V.iY=1d;V.9c=1d;1a.1J.aN.1u.1Q.1x(V,1G)},Jk:1b(a){V.go=a;V.6D()},df:1b(a){Z b;if(1a.1O.2E[V.go]&&V.9c&&V.iY){b=1n 1a.1O.2E[V.go](a,V,[V.9c],V.iY)}if(!b){1c 1m}b.qn();1c b},1T:"1a.1J.lS"});1a.1O.2E=1a.1U({id:1d,9V:1d,5F:1d,2g:1d,5l:1d,1w:1d,1B:1b(b,a){if(!b){1c}if(!a||!a.1v||!a.2f){1c}V.id=1a.1t.5s(V.1T+"3z");V.2g=b;V.1w=a;V.5F=[];V.5l=[]},1Q:1b(){V.2g=1d;V.id=1d;V.9V=1d;V.5F=1d;V.5l=1d;V.1w=1d},4M:1b(e){Z b=V.1w.1v.6U();Z c=V.1w.1v.7d();if(e 2a 1a.1R.2N||e 2a 1a.1R.qr){Z a=(e.x/b+(-c.2F/b));Z d=((c.2m/b)-e.y/b);1c[a,d]}1f{if(e 2a 1a.aO){Z a=(e.bR/b+(-c.2F/b));Z d=((c.2m/b)-e.es/b);1c[a,d]}1f{1c 1d}}},1T:"1a.1O.2E"});1a.1O.2E.49=1a.1U(1a.1O.2E,{iX:1d,7y:2,6m:1j,6l:1j,6C:1j,2v:1d,6T:1d,1k:1d,1B:1b(e,c,d,b,a){1a.1O.2E.1u.1B.1x(V,1G);if(!e.27){1c}if(!(e.27 2a 1a.1R)){1c}V.1k=d?d:{};V.2g=e;if(b){1a.1t.2O(V,b,["6T","iX"])}if(a){V.6T={};1a.1t.2O(V.6T,a)}Z f=e.27;V.iX=f.9W();V.9V=V.iX.lW();V.5F=V.4M(V.9V);if(f 2a 1a.1R.9b){V.lY(f)}1f{if(f 2a 1a.1R.de){V.lY(f)}1f{if(f 2a 1a.1R.er){}1f{if(f 2a 1a.1R.eq){V.wT(f)}1f{if(f 2a 1a.1R.dd){V.wS(f)}1f{if(f 2a 1a.1R.dc){V.wR(f)}1f{if(f 2a 1a.1R.6j){V.qq(f)}1f{if(f 2a 1a.1R.lZ){}1f{if(f 2a 1a.1R.2N){V.wQ(f)}1f{if(f 2a 1a.1R.iM){V.wP(f)}1f{if(f 2a 1a.1R.qr){V.wO(f)}}}}}}}}}}}},1Q:1b(){V.1k=1d;V.iX=1d;V.7y=1d;V.6m=1d;V.6l=1d;V.6C=1d;V.2v=1d;V.6T=1d;1a.1O.2E.1u.1Q.1x(V,1G)},lY:1b(j){Z g=j.1S;Z b=[];Z e=[];Z l=V.5F;Z c=[];Z k=V.7y;1i(Z f=0;f<g.1g;f++){Z a=g[f];e=[];b=[];b=V.4M(a);e[0]=b[0]-l[0];e[1]=b[1]-l[1];if(c.1g>0){Z m=c[c.1g-1];if((1q.4t(m[0]-e[0])<=k)&&(1q.4t(m[1]-e[1])<=k)){3o}}c.1r(e)}if(c.1g<2){1c 1d}Z d=1n 3U();d=1a.1t.2O(d,V.1k,["3w"]);d.3w=c;Z h=1n 1a.1h.2b.lR({1k:d,5j:V.6C,5X:V.6m});if(V.2v){h.2v=V.2v}h.1y=V.5F;h.5Y=V.2g.id;h.8Z=V.6l;if(V.6T){1a.1t.2O(h,V.6T)}V.5l.1r(h)},wT:1b(j){Z g=j.1S;Z b=[];Z e=[];Z l=V.5F;Z c=[];Z k=V.7y;1i(Z f=0;f<g.1g;f++){Z a=g[f];e=[];b=[];b=V.4M(a);e[0]=b[0]-l[0];e[1]=b[1]-l[1];if(c.1g>0){Z m=c[c.1g-1];if((1q.4t(m[0]-e[0])<=k)&&(1q.4t(m[1]-e[1])<=k)){3o}}c.1r(e);Z d=1n 3U();d.r=6;d=1a.1t.2O(d,V.1k);d.x=e[0];d.y=e[1];Z h=1n 1a.1h.2b.iS({1k:d,5j:V.6C,5X:V.6m});if(V.2v){h.2v=V.2v}h.1y=l;h.5Y=V.2g.id;h.8Z=V.6l;if(V.6T){1a.1t.2O(h,V.6T)}V.5l.1r(h)}},wS:1b(d){Z c=d.1S;1i(Z b=0;b<c.1g;b++){Z a=c[b];V.lY(a)}},wR:1b(d){Z c=d.1S;1i(Z b=0;b<c.1g;b++){Z a=c[b];V.qq(a)}},wQ:1b(d){Z a=V.5F;Z e=V.4M(d);Z c=1n 3U();c.r=6;c=1a.1t.2O(c,V.1k);c.x=e[0]-a[0];c.y=e[1]-a[1];Z b=1n 1a.1h.2b.iS({1k:c,5j:V.6C,5X:V.6m});if(V.2v){b.2v=V.2v}b.1y=a;b.5Y=V.2g.id;b.8Z=V.6l;if(V.6T){1a.1t.2O(b,V.6T)}V.5l.1r(b)},qq:1b(l){Z h=l.1S;Z b=[];Z e=[];Z n=V.5F;Z c=[];Z o=[];Z p=[];Z m=V.7y;1i(Z g=0;g<h.1g;g++){Z a=h[g].1S;if(g===0){c=[];1i(Z f=0;f<a.1g;f++){e=[];b=[];b=V.4M(a[f]);e[0]=b[0]-n[0];e[1]=b[1]-n[1];if(c.1g>0){Z q=c[c.1g-1];if((1q.4t(q[0]-e[0])<=m)&&(1q.4t(q[1]-e[1])<=m)){3o}}c.1r(e)}}1f{o=[];1i(Z f=0;f<a.1g;f++){e=[];b=[];b=V.4M(a[f]);e[0]=b[0]-n[0];e[1]=b[1]-n[1];if(o.1g>0){Z q=o[o.1g-1];if((1q.4t(q[0]-e[0])<=m)&&(1q.4t(q[1]-e[1])<=m)){3o}}o.1r(e)}}if(o.1g<2){3o}p.1r(o)}if(c.1g<2){1c}Z d=1n 3U();d=1a.1t.2O(d,V.1k,["3w"]);d.3w=c;Z k=1n 1a.1h.2b.iR({1k:d,5j:V.6C,5X:V.6m});if(V.2v){k.2v=V.2v}k.1y=V.5F;k.5Y=V.2g.id;k.8Z=V.6l;if(p.1g>0){k.9S=p}if(V.6T){1a.1t.2O(k,V.6T)}V.5l.1r(k)},wP:1b(f){Z a=V.5F;Z e=1n 1a.aO(f.x,f.y);Z c=V.1w.1v.6U();Z g=V.4M(e);Z d=1n 3U();d.r=6;d=1a.1t.2O(d,V.1k);d.x=g[0]-a[0];d.y=(g[1]-a[1])-2*f.1I/c;d.1I=f.1I/c;d.1L=f.1L/c;Z b=1n 1a.1h.2b.lQ({1k:d,5j:V.6C,5X:V.6m});if(V.2v){b.2v=V.2v}b.1y=a;b.5Y=V.2g.id;b.8Z=V.6l;if(V.6T){1a.1t.2O(b,V.6T)}V.5l.1r(b)},wO:1b(d){Z a=V.5F;Z e=V.4M(d);Z c=1n 3U();c.r=6;c=1a.1t.2O(c,V.1k,["x","y","1K"]);c.x=e[0]-a[0];c.y=e[1]-a[1];c.1K=d.1K;Z b=1n 1a.1h.2b.lP({1k:c,5j:V.6C,5X:V.6m});if(V.2v){b.2v=V.2v}b.1y=a;b.5Y=V.2g.id;b.8Z=V.6l;if(V.6T){1a.1t.2O(b,V.6T)}V.5l.1r(b)},wN:1b(){Z e=V.4M(V.9V);V.5F=e;Z d=V.1w.2f;1i(Z c=0,a=V.5l.1g;c<a;c++){Z b=V.5l[c];b.1y=e;d.db(b)}},wM:1b(){1c V.5l.1g},1T:"1a.1O.2E.49"});1a.1O.2E.aN=1a.1U(1a.1O.2E,{lU:1d,d4:1d,wJ:1m,8x:1d,d7:1d,d6:1d,lX:1d,1I:1d,1L:1d,9a:0,98:0,gn:1d,d5:1d,lV:1d,gm:1d,wL:1d,7V:1d,gl:1d,gk:1d,gj:1d,iU:1d,qo:1d,1B:1b(f,c,a,d,e,b){1a.1O.2E.1u.1B.1x(V,1G);if(e){V.9V=e}1f{Z h=f.27;Z g=h.9W();V.9V=g.lW()}if(d&&d.1I&&d.1L&&d.iV){V.8x=d}V.iU=a?a:[];V.lU=1n 1a.1O.4c()},1Q:1b(){V.lU=1d;V.d4=1d;V.1I=1d;V.1L=1d;V.d7=1d;V.d6=1d;V.d5=1d;V.lX=1d;V.gn=1d;V.7V=1d;V.gm=1d;V.gl=1d;V.gk=1d;V.lV=1d;V.wL=1d;V.gj=1d;V.9a=1d;V.98=1d;V.iU=1d;V.qo=1d;V.8x=1d;1a.1O.2E.1u.1Q.1x(V,1G)},wH:1b(){Z a=1j;if(!V.8x){1c 1m}Z g=V.8x;if(!(g.1I&&g.1L&&g.iV)){1c 1m}Z j=(1P(g.qp)!=="1z"&&!2Y(g.qp))?g.qp:-1;Z l=1a.1O.2E.wI(V.2g,V.iU,j);V.qo=l?l:[];V.1I=40(g.1I);V.1L=40(g.1L);V.lV=g.iV;V.9a=g.9a?g.9a:0;V.98=g.98?g.98:0;V.d7=[];V.d6=[];V.d5=[];V.gn=g.lT?g.lT:[0,0,0,0];V.7V=[];V.gm=[];V.gj=[];V.iT();Z k=V.1I;Z d=V.1L;Z f=V.5F;V.d7=[f[0]-k/2,f[1]-d/2];Z e=V.d7;V.d6=[e[0],e[1]+d,e[0]+k,e[1]];Z b=V.d6;Z i=V.gn;V.d5=[b[0]+i[0],b[1]-i[1],b[2]-i[2],b[3]+i[3]];Z c=V.d5;if(c[0]>=c[2]||c[1]<=c[3]){1c 1m}V.7V=[c[0],c[3]];V.gl=1q.4t(c[2]-c[0]);V.gk=1q.4t(c[1]-c[3]);V.gm=[V.7V[0]+V.gl/2,V.7V[1]+V.gk/2];V.gj=[V.7V[0]-e[0],V.7V[1]-e[1]];1c a},iT:1b(d){if(d){V.9V=d}Z c=V.4M(V.9V);c[0]+=V.9a;c[1]+=V.98;V.5F=c;Z a=V.1I;Z b=V.1L;Z e=V.5F;V.lX=1n 1a.d9(e[0]-a/2,e[1]+b/2,e[0]+a/2,e[1]-b/2);V.wK();1c e},wK:1b(){},Jj:1b(){Z b=V.5l;Z c=V.5F;1i(Z h=0,k=b.1g;h<k;h++){b[h].1y=c;Z a=b[h].1k;1i(Z g in a){4h(g){1E"3w":Z e=a[g];1i(Z f=0,d=e.1g;f<d;f++){e[f][0]-=c[0];e[f][1]-=c[1]}1H;1E"x":a[g]-=c[0];1H;1E"y":a[g]-=c[1];1H}}}V.wJ=1j},qn:1b(){},1T:"1a.1O.2E.aN"});1a.1O.2E.wI=1b(f,a,j){if(!f.2Z){1c 1m}Z c=[];Z b=f.2Z;1i(Z d=0;d<a.1g;d++){1i(Z h in b){if(h===a[d]){6k{if(!2Y(j)&&j>=0){c.1r(40(b[h].2c()).iW(j))}1f{c.1r(40(b[h].2c()))}3o}6B(g){8y 1n d8("3n a 3s")}}}}if(c.1g===a.1g){1c c}1f{1c 1m}};1a.1O.2E.lS=1a.1U(1a.1O.2E.aN,{8x:1d,1B:1b(f,c,a,d,e,b){1a.1O.2E.aN.1u.1B.1x(V,1G);if(e){V.9V=e}1f{Z h=f.27;Z g=h.9W();V.9V=g.lW()}if(d&&d.iV){V.8x=d;V.lV=V.8x.iV}V.iU=a?a:[];V.lU=1n 1a.1O.4c()},1Q:1b(){V.8x=1d;1a.1O.2E.aN.1u.1Q.1x(V,1G)},wH:1b(){Z a=1j;if(!V.8x){1c 1m}Z g=V.8x;if(g.9a){V.9a=g.9a}if(g.98){V.98=g.98}V.9a=g.9a?g.9a:0;V.98=g.98?g.98:0;V.d7=[];V.d6=[];V.d5=[];V.gn=g.lT?g.lT:[0,0,0,0];V.7V=[];V.gm=[];V.gj=[];V.iT();Z j=V.1I;Z d=V.1L;Z f=V.5F;V.d7=[f[0]-j/2,f[1]-d/2];Z e=V.d7;V.d6=[e[0],e[1]+d,e[0]+j,e[1]];Z b=V.d6;Z i=V.gn;V.d5=[b[0]+i[0],b[1]-i[1],b[2]-i[2],b[3]+i[3]];Z c=V.d5;if(c[0]>=c[2]||c[1]<=c[3]){1c 1m}V.7V=[c[0],c[3]];V.gl=1q.4t(c[2]-c[0]);V.gk=1q.4t(c[1]-c[3]);V.gm=[V.7V[0]+V.gl/2,V.7V[1]+V.gk/2];V.gj=[V.7V[0]-e[0],V.7V[1]-e[1]];1c a},1T:"1a.1O.2E.lS"});1a.1O.4c=1a.1U({d4:1d,1B:1b(a){V.d4=a},1Q:1b(){V.d4=1d;1a.1O.2w.1u.1Q.1x(V,1G)},8w:1b(d){if(d){V.d4=d}if(!V.d4){jk;1c 1d}Z a=V.d4;if(a 2a 1a.1O.2w.2N){Z c=1n 3U();c.x=a.x;c.y=a.y;c.r=a.r;c=1a.1t.2O(c,a.1k,["x","y"]);Z b=1n 1a.1h.2b.iS();b.1k=1a.1O.4c.5a(c);b.2v=1a.1O.4c.5a(a.2v);1a.1t.2O(b,a,["x","y","1k","2v"]);1c b}1f{if(a 2a 1a.1O.2w.iN){if(!a.3w){1c 1d}Z c=1n 3U();c.3w=a.3w;c=1a.1t.2O(c,a.1k,["3w"]);Z b=1n 1a.1h.2b.lR();b.1k=1a.1O.4c.5a(c);b.2v=1a.1O.4c.5a(a.2v);1a.1t.2O(b,a,["3w","1k","2v"]);1c b}1f{if(a 2a 1a.1O.2w.6j){if(!a.3w){1c 1d}Z c=1n 3U();c.3w=a.3w;c=1a.1t.2O(c,a.1k,["3w"]);Z b=1n 1a.1h.2b.iR();b.1k=1a.1O.4c.5a(c);b.2v=1a.1O.4c.5a(a.2v);1a.1t.2O(b,a,["3w","1k","2v"]);1c b}1f{if(a 2a 1a.1O.2w.iM){if(!a.x&&!a.y&!a.1I&!a.1L){1c 1d}Z c=1n 3U();c.x=a.x;c.y=a.y;c.1I=a.1I;c.1L=a.1L;c=1a.1t.2O(c,a.1k,["x","y","1I","1L"]);Z b=1n 1a.1h.2b.lQ();b.1k=1a.1O.4c.5a(c);b.2v=1a.1O.4c.5a(a.2v);1a.1t.2O(b,a,["x","y","1I","1L","1k","2v"]);1c b}1f{if(a 2a 1a.1O.2w.qd){Z c=1n 3U();c.x=a.x;c.y=a.y;c.r=a.r;c.9R=a.9R;c.8v=a.8v;if(a.r0){c.r0=a.r0}if(a.8Y){c.8Y=a.8Y}c=1a.1t.2O(c,a.1k,["x","y","r","9R","8v","r0","8v"]);Z b=1n 1a.1h.2b.qm();b.1k=1a.1O.4c.5a(c);b.2v=1a.1O.4c.5a(a.2v);1a.1t.2O(b,a,["x","y","r","9R","8v","r0","8v","1k","2v"]);1c b}1f{if(a 2a 1a.1O.2w.bP){Z c=1n 3U();c.x=a.x;c.y=a.y;c.1K=a.1K;c=1a.1t.2O(c,a.1k,["x","y","1K"]);Z b=1n 1a.1h.2b.lP();b.1k=1a.1O.4c.5a(c);b.2v=1a.1O.4c.5a(a.2v);1a.1t.2O(b,a,["x","y","1K","1k","2v"]);1c b}1f{if(a 2a 1a.1O.2w.6R){Z c=1n 3U();c.x=a.x;c.y=a.y;if(a.3M){c.3M=a.3M}if(a.1I){c.1I=a.1I}if(a.1L){c.1L=a.1L}if(a.sx){c.sx=a.sx}if(a.sy){c.sy=a.sy}if(a.aK){c.aK=a.aK}if(a.aJ){c.aJ=a.aJ}c=1a.1t.2O(c,a.1k,["x","y","3M","1I","1L","sx","sy","aK","aJ"]);Z b=1n 1a.1h.2b.9U();b.1k=1a.1O.4c.5a(c);b.2v=1a.1O.4c.5a(a.2v);1a.1t.2O(b,a,["x","y","3M","1I","1L","1k","2v"]);1c b}1f{if(a 2a 1a.1O.2w.qc){Z c=1n 3U();c.x=a.x;c.r=a.r;c.y=a.y;c=1a.1t.2O(c,a.1k,["x","y","r"]);Z b=1n 1a.1h.2b.ql();b.1k=1n 1a.1O.4c.5a(c);b.2v=1n 1a.1O.4c.5a(a.2v);1a.1t.2O(b,a,["x","y","r","1k","2v","2I","1K","gg"]);1c b}}}}}}}}1c 1d},1T:"1a.1O.4c"});1a.1O.4c.5a=1b(c){Z d={};Z a=["7U","7U","7U","12","Ji,iQ-iP"];Z e=[1j,1m];1i(Z b in c){4h(b){1E"26":e[0]=c[b];1H;1H;1E"97":d.1X=c[b];1H;1E"2k":e[1]=c[b];1H;1H;1E"94":d.2I=c[b];1H;1E"lO":d.3I=c[b];1H;1E"qg":d.ep=c[b];1H;1E"qk":d.2X=c[b];1H;1E"7x":d.r=c[b];1H;1E"4R":d.1K=c[b];1H;1E"d3":d.wG=c[b];1H;1E"gh":a[0]=c[b];1H;1E"Jh":a[1]=c[b];1H;1E"aM":a[2]=c[b];1H;1E"bQ":a[3]=c[b]+"px";1H;1E"eo":a[4]=c[b];1H;1E"wF":d.2s=c[b];1H;1E"Jg":d.gg=c[b];1H;1E"91":d.6S=c[b];1H;1E"lI":d.5E=c[b];1H;1E"Jf":d.7c=c[b];1H;1o:d[b]=c[b];1H}}d.aL=a.44(" ");if(e[0]===1j&&e[1]===1m){d.3H="26"}1f{if(e[0]===1m&&e[1]===1j){d.3H="2k"}1f{if(e[0]===1j&&e[1]===1j){d.3H="7T"}1f{d.3H="26"}}}if(d.2I==1d){d.2I=1}1c d};1a.1O.4c.qj=1b(a,e,c){Z b=c?c:{};Z d=1n 1a.1O.2w.iM(e[0],e[3],1q.4t(e[2]-e[0]),1q.4t(e[3]-e[1]));d.1k={97:"#Je"};if(b.wE){1a.1t.2O(d.1k,b.wE)}if(b.wD){d.1k.5D=b.wD}d.5j=1m;d.5X=1m;1c a.8w(d)};1a.1O.4c.Jd=1b(x,r,g,A){Z O=r;Z t=g?g:{};Z n=[];Z H=[];Z o=t.wC?t.wC:1m;Z p=(t.qi&&!2Y(t.qi))?t.qi:0;Z C=[];Z u=[];Z a=[];if(p==0){a.1r([O[0],O[3]-5]);a.1r([O[0],O[1]]);if(t.9T&&!2Y(t.9T)&&t.9T>=15){Z M=2P(t.9T);Z D=[O[0]-M,O[1]+M];if(t.qh){u.1r([D[0]+1.5,D[1]-7.5]);u.1r([D[0]-1,D[1]+1]);u.1r([D[0]+7.5,D[1]-1.5]);a.1r([D[0],D[1]])}1f{a.1r([D[0],D[1]])}a.1r([O[0],O[1]])}a.1r([O[2]+5,O[1]])}1f{Z G=1q.4t(O[1]-O[3])/p;Z B=O[3];a.1r([O[0],B-5]);1i(Z P=0;P<p;P++){a.1r([O[0],B]);a.1r([O[0]-5,B]);a.1r([O[0],B]);if(o){Z F=1n 1a.1O.2w.iN([[O[0],B],[O[2],B]]);F.1k={6A:"#Jc",lO:"5C",qg:"39",94:1};F.5j=1m;F.5X=1m;if(t.wB){1a.1t.2O(F.1k,t.wB)}n.1r(x.8w(F))}B+=G}a.1r([O[0],O[1]]);if(t.9T&&!2Y(t.9T)&&t.9T>=15){Z M=2P(t.9T);Z D=[O[0]-M,O[1]+M];if(t.qh){u.1r([D[0]+1.5,D[1]-7.5]);u.1r([D[0]-1,D[1]+1]);u.1r([D[0]+7.5,D[1]-1.5]);a.1r([D[0],D[1]])}1f{a.1r([D[0],D[1]])}a.1r([O[0],O[1]])}a.1r([O[2]+5,O[1]])}if(t.qh){Z c=[[O[2]+5,O[1]+4],[O[2]+13,O[1]],[O[2]+5,O[1]-4]];Z q=[[O[0]-4,O[3]-5],[O[0],O[3]-13],[O[0]+4,O[3]-5]];Z k=1n 1a.1O.2w.6j(c);k.1k={97:"#lN"};1a.1t.2O(k.1k,t.iO);H.1r(x.8w(k));Z d=1n 1a.1O.2w.6j(q);d.1k={97:"#lN"};1a.1t.2O(d.1k,t.iO);H.1r(x.8w(d));if(t.9T&&!2Y(t.9T)&&t.9T>=15){Z R=1n 1a.1O.2w.6j(u);R.1k={97:"#lN"};1a.1t.2O(R.1k,t.iO);H.1r(x.8w(R))}}C=a;Z f=1n 1a.1O.2w.iN(C);f.1k={lO:"5C",qg:"39",6A:"#lN",94:1};if(t.iO){1a.1t.2O(f.1k,t.iO)}f.5j=1m;f.5X=1m;Z y=[x.8w(f)];Z e=[];if(t.lM&&t.lM.1g&&t.lM.1g>0){Z T=t.lM;Z s=T.1g;Z S=[0,0];if(t.qf&&t.qf.1g){S=t.qf}if(s==1){Z E=1n 1a.1O.2w.bP(O[0]-5+S[0],O[3]+S[1],T[0]);E.1k={91:"4y"};if(t.lL){1a.1t.2O(E.1k,t.lL)}E.5j=1m;E.5X=1m;e.1r(x.8w(E))}1f{Z v=O[3];Z z=1q.4t(O[1]-O[3])/(s-1);1i(Z N=0;N<s;N++){Z E=1n 1a.1O.2w.bP(O[0]-5+S[0],v+S[1],T[N]);E.1k={91:"4y"};if(t.lL){1a.1t.2O(E.1k,t.lL)}E.5j=1m;E.5X=1m;e.1r(x.8w(E));v+=z}}}Z b=[];if(t.lK&&t.lK.1g&&t.lK.1g>0){Z U=t.lK;Z s=U.1g;Z Q=[0,0];if(t.qe&&t.qe.1g){Q=t.qe}if(A&&A.lJ&&A.lJ.1g&&A.lJ.1g==s){Z h=A.lJ;1i(Z l=0;l<s;l++){Z L=1n 1a.1O.2w.bP(h[l]+Q[0],O[1]+Q[1],U[l]);L.1k={91:"5Z",lI:"2m"};if(t.gf){1a.1t.2O(L.1k,t.gf)}L.5j=1m;L.5X=1m;b.1r(x.8w(L))}}1f{if(s==1){Z L=1n 1a.1O.2w.bP(O[0]-5+Q[0],O[1]+Q[0],U[0]);L.1k={91:"5Z",lI:"2m"};if(t.gf){1a.1t.2O(L.1k,t.gf)}L.5j=1m;L.5X=1m;b.1r(x.8w(L))}1f{Z w=O[0];Z I=1q.4t(O[2]-O[0])/(s-1);1i(Z J=0;J<s;J++){Z L=1n 1a.1O.2w.bP(w+Q[0],O[1]+Q[1],U[J]);L.1k={91:"5Z",lI:"2m"};if(t.gf){1a.1t.2O(L.1k,t.gf)}L.5j=1m;L.5X=1m;b.1r(x.8w(L));w+=I}}}}1c((n.5k(y)).5k(e)).5k(b).5k(H)};1a.1O.4c.Jb=1b(l,b,a,e,h,j){Z c=l?l:{};if(b){1a.1t.2O(c,b)}if(a&&a.1g&&1P(h)!=="1z"&&!2Y(h)&&h>=0){if(a[h]){1a.1t.2O(c,a[h])}}if(e&&e.1g&&1P(j)!=="1z"){Z f=e;Z g=f.1g;Z k=40(j);1i(Z d=0;d<g;d++){if(f[d].4m<=k&&k<f[d].4E){1a.1t.2O(c,f[d].1k);1H}}}1c c};1a.1O.2w=1a.1U({1y:1d,5Y:1d,8Z:1m,d2:1d,lH:1d,5j:1j,5X:1j,1k:1d,2v:1d,1B:1b(){V.1y=[0,0];V.2v={}},1Q:1b(){V.1y=1d;V.5Y=1d;V.8Z=1d;V.d2=1d;V.lH=1d;V.5j=1d;V.5X=1d;V.1k=1d;V.2v=1d},1T:"1a.1O.2w"});1a.1O.2w.2N=1a.1U(1a.1O.2w,{x:1d,y:1d,r:6,1B:1b(a,b){1a.1O.2w.1u.1B.1x(V,1G);V.x=!2Y(a)?a:0;V.y=!2Y(b)?b:0},1Q:1b(){V.x=1d;V.y=1d;V.r=1d;1a.1O.2w.1u.1Q.1x(V,1G)},1T:"1a.1O.2w.2N"});1a.1O.2w.iN=1a.1U(1a.1O.2w,{3w:1d,1B:1b(a){1a.1O.2w.1u.1B.1x(V,1G);V.3w=a},1Q:1b(){V.3w=1d;1a.1O.2w.1u.1Q.1x(V,1G)},1T:"1a.1O.2w.iN"});1a.1O.2w.6j=1a.1U(1a.1O.2w,{3w:1d,9S:1d,1B:1b(a){1a.1O.2w.1u.1B.1x(V,1G);V.3w=a},1Q:1b(){V.3w=1d;V.9S=1d;1a.1O.2w.1u.1Q.1x(V,1G)},1T:"1a.1O.2w.6j"});1a.1O.2w.bP=1a.1U(1a.1O.2w,{x:1d,y:1d,1K:1d,1B:1b(a,c,b){1a.1O.2w.1u.1B.1x(V,1G);V.x=a;V.y=c;V.1K=b},1Q:1b(){V.x=1d;V.y=1d;V.1K=1d;1a.1O.2w.1u.1Q.1x(V,1G)},1T:"1a.1O.2w.bP"});1a.1O.2w.qd=1a.1U(1a.1O.2w,{x:1d,y:1d,r:1d,9R:1d,8v:1d,r0:1d,8Y:1d,1B:1b(a,g,e,d,b,c,f){1a.1O.2w.1u.1B.1x(V,1G);V.x=!2Y(a)?a:0;V.y=!2Y(g)?g:0;V.r=!2Y(e)?e:0;V.9R=!2Y(d)?d:0;V.8v=!2Y(b)?b:0;V.r0=!2Y(c)?c:0;V.8Y=f},1Q:1b(){V.x=1d;V.y=1d;V.r=1d;V.9R=1d;V.8v=1d;V.r0=1d;V.8Y=1d;1a.1O.2w.1u.1Q.1x(V,1G)},1T:"1a.1O.2w.qd"});1a.1O.2w.6R=1a.1U(1a.1O.2w,{x:1d,y:1d,3M:1d,1I:1d,1L:1d,sx:1d,sy:1d,aK:1d,aJ:1d,1B:1b(h,e,c,a,i,g,f,b,d){1a.1O.2w.1u.1B.1x(V,1G);V.x=h;V.y=e;V.3M=c;if(V.1I){V.1I=a}if(V.1L){V.1L=a}if(V.sx){V.sx=a}if(V.sy){V.sy=a}if(V.aK){V.aK=a}if(V.aJ){V.aJ=a}},1Q:1b(){V.x=1d;V.y=1d;V.3M=1d;V.1I=1d;V.1L=1d;V.sx=1d;V.sy=1d;V.aK=1d;V.aJ=1d;1a.1O.2w.1u.1Q.1x(V,1G)},1T:"1a.1O.2w.6R"});1a.1O.2w.iM=1a.1U(1a.1O.2w,{x:1d,y:1d,1I:1d,1L:1d,1B:1b(b,d,c,a){1a.1O.2w.1u.1B.1x(V,1G);V.x=!2Y(b)?b:0;V.y=!2Y(b)?d:0;V.1I=!2Y(c)?c:0;V.1L=!2Y(a)?a:0},1Q:1b(){V.x=1d;V.y=1d;V.1I=1d;V.1L=1d;1a.1O.2w.1u.1Q.1x(V,1G)},1T:"1a.1O.2w.iM"});1a.1O.2w.qc=1a.1U(1a.1O.2w,{x:1d,y:1d,r:1d,1B:1b(a,c,b){1a.1O.2w.1u.1B.1x(V,1G);V.x=!2Y(a)?a:0;V.y=!2Y(c)?c:0;V.r=!2Y(b)?b:0},1Q:1b(){V.x=1d;V.y=1d;V.r=1d;1a.1O.2w.1u.1Q.1x(V,1G)},1T:"1a.1O.2w.qc"});',62,4018,'|||||||||||||||||||||||||||||||||||||||||||||||||||||||||this||||var|||||||||||SuperMap|function|return|null||else|length|LevelRenderer|for|true|style|value|false|new|default|type|Math|push|the|Util|prototype|map|layer|apply|refOriginalPosition|undefined|CartoCSS|initialize|doc|Tree|case|css|arguments|break|width|Layer|text|height|features|filters|Feature|typeof|destroy|Geometry|components|CLASS_NAME|Class|255|canvas|color|events|line|||||||fill|geometry|meaning||instanceof|Shape|toString|||renderer|data|name|src|index|stroke|Control|top|document|div|will|setAttribute|appendChild|opacity|scale|window|highlightStyle|ShapeParameters|dst|val|triggerEvent|clone|Tool|defaultValue|smooth|Theme|left|over|position|lineWidth|transform|createElement|max|shield|Point|copyAttributesWithClip|parseInt|min|setCtxGlobalAlpha|url|hitContext|float|maxWidth|TiledVectorLayerEditor|lineType|isNaN|attributes||||zoom|||filename|||round|The|clear|none|childNodes|__rect|Event|Function|replace|propName|point|indexOf|Painter|unit|not|continue|bind|controlType|resolutions|number|string|out|storage|pointList|polygon|and|_|moveTo|match|items|globalAlpha|atop|symbolizer|marker|brushType|lineCap|frame|painter|context|image|reset|Animation|range|bounds|symbolizers|message|used|Object|devicePixelRatio|error|rgb|currentTime|functions|parseFloat||||join|||||Vector|slice|class|ShapeFactory|Array||rgba|rendering|switch|refresh|invert|click|placement|start|while|root|_lastHover|call|comp|observe|abs|fillText|Config|callbacks|rules|right|Util_vector|rotation|_ctx|Renderer|attachment|end|bottom|getContext|display|relative|scales|filter|entities|getLocalXY|save|globalCompositeOperation|beginPath|toHSL|label|delete|lineTo|restore|translate|fillStyle|_layers|_draggingTarget|version||backFeature|Reference||||selector||other|are|transformStyle|create|dom|oldTime|frontFeature|startTime|grain|light|boolean|clickable|concat|shapes|buildPath|maxValue|minValue|units|elements|minWeight|createUniqueID|removeAllFeatures|isArray|arc|sin|sqrt|add|This|halo|dpi|butt|radius|textBaseline|location|EVENT_TYPES|source|Util_matrix|needTransform|pow|select|size|regular|alignment|offset|file|layers|cartoRenderer|all|pixels|that|spacing|hoverable|refDataID|center|||180||||parent|EVENT|endTime||layerName|datumAxis|projection|cartoLayers||Zoom|charAt|from|key|Polygon|try|isMultiHover|isHoverAble|sort|splice|getRect|split|fillOpacity|merge|240|json|feature|canvasStyle|pattern|tiledDynamicRESTLayer|markerLayer|strokeColor|catch|isClickAble|redraw|addFeatures|rotate|_children|alpha|handler|addClass|tile|scope|Tile|current|wrap|utfgridLayer|maxWeight|Image|textAlign|shapeOptions|getResolution|cos|strokeText|strokeStyle|parentNode|hitDetection||||auto|options||avoid|geometries|before||curHoverMarker|pointFeatures|textRotation|getExtent|redrawThematicFeatures|property|mousemove|drawImage|clip|hover|event|addEventListener|floor|blue|speed|i18n|multiply|variable|should|gamma|pickerDiv|loc|curOpenCluster|pointRadius|nodesClipPixel|cache|layerContainerDiv|dispose|_storage|_shapeList|clearRect|offsetY|offsetX|_dispatchAgency|Color|object|reverse|red|layersInfo|viewBounds|weight|expression|allow|than|env|both|normal|DVBOrigonPoint|getZoom|resize|clearTimeout|middle||font||__dirty|ctx||mousedown||setLineDash|shift|vector|cubicAt|green|with||featureIdNames|distanceTo|externalGraphic|screen|running|lighten|xor|active|mapStatus|250|colors|Map|how|clipped|definition|childArray|endAngle|createShape|setting|throw|Util_math|setTimeout|brush|dash|strokeOpacity|Eventful|zlevel|_mouseX|removeEventListener|stop|extend|frameRate|repeat|setCanvasStyle|plus|viewer|canvasContext|saturation|hue|difference|darken|whether|curHoverIdx|locked|itemsC|clockWise|isHoverByRefDataID||labelAlign|||strokeWidth|||fillColor|YOffset||XOffset|LinearRing|themeField|removeFeatures|styleGroups|toLowerCase|labelYOffset|labelXOffset|Date|_hoverElements|Handler|dblclick|mouseup|quadraticAt|adjust|convert|which|classList|subPanel|cartoCss|maxExtent|baseLayer|method|credential|isLoading|extract|contrast|exclusion|soft|hard|burn|dodge|overlay|minus|toXML|between|keyword|operation|below|overlap|utfgridControl|UTFGrid|openedPoints|startAngle|holePolygonPointLists|axis3DParameter|SmicImage|lonlat|getBounds|clearCache|__overlayWeight|GeoFeature|closePath|onload|Transformable|_roots|_elements|absolute|dirty|Infinity|removeChild|_bgDom|_zlevelList|_zrenderEventFixed|_mouseY|animation|_handlers|distance|element|some|ratio|tick|callback|removeClass|layerType||layerSymbolsInfo|title|slider|0px|||mouseEventHandler|grid|params|eventListeners|featureStyleMap|Value|selectors|args|Dimension|behave|defines|Composite|markers|buffer|maxHeight|sHeight|sWidth|textFont|fontWeight|Graph|LonLat|render|succeed|movingOffset|easing|clipShape|_height|_width|domBack|webkit|toColor|format|points|drawedFeatures|visible|selectedFeatures|addEventType|dataField|256|currentLayerSymbolsInfo|colorPicker|change|_advanceBtnInterval|minResolution|maxScale|minScale||maxResolution|cartoLayer|layerIndex|proxy|Credential|layersID|initGriddedTiles|Grid|useCanvas|fillImages|sortedCartoLayers|CartoSymbolizer|lineDashOffset|Rule|unsigned|required|can|245|139||disable|may|minimum|along|character|fully|smoothing|pickerACurrentRGBA|isPositionInBox|labelMode|HeatMapLayer|tempValue|boundsminWeight|pixelHeatPoints|setPixelColor|rootCanvas|Label|fontSize|lon|getSize|setMap|toUpperCase|Util_area|dashed|destination|ignore|Group|maxZoom|onbrush|innerHTML|_layerConfig|_mousemoveHandler|mousewheel|attachEvent|_tracks|set|isAroundZero|getData|util|normalizeRadian|Element|visibility|container|AnimatorCanvas|setHitContextStyle|extent|Canvas|graphicWidth|graphicHeight||supported|timeoutId|hasClass|layerSymbols|getValue|activebtn|disabled|hide|createTextNode|clearInterval|TEXT|handleEditPanelMouseWheel|ColorPicker|layerInitialized|draw|hightlightShaders|CREDENTIAL|overlapDisplayedOptions|highLightCartoCss|lineDasharray|frames|field|uri|mean|operate|205|interior|labels|padding|amount|edges|opaque|transformation|each|raster|applied|_sliderBar|pickerCtx|onMouseout|clusterPoints|count|refDataHoverGroup|fontColor|shapeParameters|dataViewBox|chartBox|origonPoint|Error|Bounds||addShape|MultiPolygon|MultiLineString|LineString|createThematicFeature|featuresadded|Pixel|drawText|Number|dot|solid|Util_log|step||vertical|horizontal|ctxBack|user|hidden|detachEvent|move|when|||needLocalTransform|open|EPSILON|360|toRGBA|means|drawFeature|timeName|featureIdName|contains|getCurrentLayerSymbolsInfoFromPanel|enable|scrollTop|POINT|_advanceInterval|Browser|setVisibility|memoryTile|getXYZ|exec|isSupportHoles|ugcLayerType|getFeatureInfo|shader|loadend|foreColor|imagesBackup|drawVectorPoint|runtime|toJS|paths|Invalid|Ruleset|given|rule|Quoted|values|only|hsla_simple|238|230|211|220|artifacts|wish|using|overlapping|around|lines|__isPoi|isVML|fontFamily|lineJoin|MultiPoint|Curve|lat|overlayWeightField|isAllowFeatureStyle||maxCacheCount|TFEvents|currentMousePosition|_imageCache|setTransform|SUtil_dashedLineTo|longdashdot|longdash||cloneObject|draggable|__clipShapes|loop|onframe|addHover|hasOwnProperty|mod|updateTransform|down|fillRect|elCount|updatePainter|nextSibling|zrenderY|zrenderX|touchend|dispatch|cursor|_clips|atan2|one|distSquare|_offsetY|_offsetX|ceil|status|isCalculableColor|trim|addColorStop|curve|extrema|path|_needsRefreshNextFrame|_instances|animator|getImageData|drawLinearRing|polygonsIndex|linesIndex|REST|face|show|REGION|LINE|createDiv|layerEditor|TiledVectorLayer|clean|overlapDisplayed|_timeoutId|CartoRenderer|localStorage|pointFile|backColor|imageSmoothingEnabled|_value||specificity|validate|fonts|chunk|use|clamp|users|cases|performance|best|its|characters|shown|positive|placed|tolerance|skewY|skewX|matrix|control|mesh|antialiasing|then|Mapnik|srs|errors|barSize|sliderSize|pickerBBoxIn|pickerBBoxOut|pickerABoxOut|addEvent|pickerCvsForPointerrCtx|curClickMarker|getLayersInfoService|HeatGridLayer|clearOpenedPoints|_addFeatures|pointMap|usefulValue|axisXLabelsStyle|textPosition|fontStyle||origonPointOffset|DVBHeight|DVBWidth|DVBCenterPoint|DVBParameter|symbolType|charts|chartsType|beforefeaturesadded|isCustomSetMaxCacheCount||cacheFields|modifyDOMElement|featuresremoved|bezierCurveTo|getTextHeight|dashot|dotted|spline|shadowOffsetY|shadowOffsetX|shadowColor|shadowBlur|brushTypeOnly|fff|miterLimit|invisible|_targetPool|getTime|_delay|Storage|get|_shapeListOffset|group|update|unusedCount|clearHover|getHeight|getWidth|clientX|cancelBubble|_isMouseDown|_mousewheelHandler|DOMMouseScroll|_lastY|_lastX|_hasfound||drop|Animator|_clipList|time|stage|ArrayCtor|_canvas|_radians|responseText|ONE_THIRD|_nameColors|highlightColor|palette|000|_textHeightCache|_textWidthCache|windingLine|PI2|isInsidePolygon|ellipse|animatingElements|__aniCount|curReferencePoint||isFirstDraw|but|newTime|renderPath|drawPoint|glintId|featureId|align|dasharray|miterlimit|miter|getAttribute|hidePicker|onChange|sliders|createSubPanel|body|smMainPanel|editorName|block|read|isInTheSameDomain|tileSize|origin|memoryKeys|zoomDuration|tween|isFirstLoad|getMapStatusService|coordUnit|result|png|getShaders|className|hitCanvasPool|canvasPool|pointImagesInfo|transparent|conditions|selector_cache|Field|numeric|serialization|ruleIndex|169|building||||axis|fixed|Displace|maximum|Allows|repeated|SVG||Values|angles|mapnik|directory|||inputs|drag|_completeBar|pickerBArrowY|pickerABoxIn|pickerACrossPosition|removeHoverMarker|curHoverData|getLonLat|handlerMode|pixcell|utfTileSize|_callbacks|clickout|zIndex_c|drawDiffusePointTimeout|colorValues|alphaValues|Rectangle|Line|axisStyle|serif|sans|SmicPolygon|SmicPoint|resetLocation|fields|codomain|toFixed|dataBounds|symbolSetting|clearAll|chartsSetting|setOpacity|getFeatureBy|getFeatureById|levelRenderer|isBaseLayer|degreeToRadian|setContext|getHighlightStyle|getRotatedLocation|modSelf|specific|inside|Util_color|_startTime|delChildrenFromStorage|delRoot|createDom|clearColor|toDataURL||refreshHover|shapeToImage|clientY|offsetTop|layerY|layerX|_mouseupHandler|_mousedownHandler|_dblclickHandler|_clickHandler|mouseout|Util_env|Util_event|__zoom|300|_isArrayLike|_doneList|_clipCount|_onframeList|during|_running|_time|pop|sub|_pixelCtx|GET|stopPropagation|preventDefault|android|05|test|String|hsla|gray|measureText|isInsideLine|roots|isInsideCircle|circle|Render|you|scrollLeft|equals|graphic|000000|substring|londingimgs|isNeedToDraw|drawGeometry|firstframestart|lastframestart|pause|COMPOPTYPE|region|smSlider|polygonEdit|firstChild|Slider|onChanged|_layerListInterval|setInterval|createSubEditPanelContent|autoHide|_drop|_drag|getResolutionFromScaleDpi|whole|hightlightFeatureInfo|mapServiceInitialized|JSON|clipRegion|cacheEnabled|bufferTileCount|lastCanvasPosition|lastResolution|transitionEffect|isApp|getImagesLocation|highLightCartoShaders|VectorImage|CartoLayer|lockedDraw|haloRadius|bold|225|syntax|instance||Can|Filterset|ops|first|144|placements|parameter|like|transformed|looping|wild|produce|greater|smoothed|Smooths|rendered|within|same|box|policy|XML|background|processed|ruleSet|enumerable|configurable|defineProperty|comment|quoted|targetDom|getColorValue|pickerBArrowsPosition|isMouseDowning||deactivate|onMouseover|onMouseup|onMousedown|onDblclick|onClick|onMousemove|utfgridResolution|datasetName|handleEvent||handlerOptions|request|isShowLabel|gridHeight|gridWidth|isFeatureChanged|clusterStyles|toDrawFeatures|boundsmaxWeight|featureWeight|updateHeatPoints|canvasData|featureRadius|dataInfo|labelBaseline|xPositions|axisXLabels|axisYLabelsStyle|axisYLabels|008acd|strokeLinecap|SmicText|SmicRectangle|SmicBrokenLine|RankSymbol|dataViewBoxParameter|shapeFactory|DVBCodomain|getCenterLonLat|chartBounds|lineToTF|Collection|themeFields|getStyleByData|onMapResize|moveByPx|_needsRefresh|doClip|__textBackground|quadraticCurveTo|_dashLength|yEnd|yStart|xEnd|xStart|updateNeedTransform||drift|5625|gap|_life|1000|delay|target||delFromMap|addToMap|addChildrenToStorage|delHover|__startClip||config|copy|lastFrameAlpha|motionBlur|minZoom|panable|zoomable|catchBrushException|getLayer|_domRoot|modLayer|refreshShapes|getLayers|offsetLeft|_domHover|_iterateAndFindHover|_findHover|_processOutShape|_mouseDownTarget|_mouseoutHandler|_resizeHandler|touchmove|touchstart|tablet|_clickThreshold|children|debugMode|_catmullRomInterpolate|_interpolateNumber|done|remove|_target|_getter|00005|normalize|Float32Array|BUILTIN_OBJECT|200|ios|quadraticExtremum|cubicExtrema|THREE_SQRT|_HUE_2_RGB|unshift|hsb|hsl|createLinearGradient|white|black|_textHeightCacheCounter|TEXT_CACHE_MAX|_textWidthCacheCounter|isInsideRect|firstReferencePoint|getLayerPxFromLonLat|isFixed|usually||eraseFeatures|styleMap|state|findFrontOrBackFeature|FEATUREID|smoothConvertLine|applyDefaults|featureIdToHex|16777216|drawImageScaleFactor|graphicYOffset|graphicXOffset|londedimgs|getLength|hitCanvas|resolution|toggle|Events|array|cap|c33|fc0|bevel|backgroundColor|controltype|checked|smEditPanelControl|___|removeAttribute|setValue|advanceSetting|layerInfo|input|description|handleInputChange|datasetInfo|paneltype|mainPanelBody|smSubPanel|Panel|header|stopObserving|numZoomLevels|RESOLUTION_PROPERTIES|wildcard|highlightEventType|featureFilter|registerMouseEvent|activeHighLightFeature|donotNeedServerCartoCss|Format|tileFeature||prjStr1|getURL|lastChangDy|lastChangDx||device|containsBounds||rightBottom||Size|||processAsync|processFailed|processCompleted|loaded|clientCartoCss|clientCartoShaders|layerStyle|fromServer|recordSetToCartoLayer|loadedCallback|showTile|register|markerSize|textName|linkNext|258|drawDotedLine|parts|INCHES_PER_UNIT|DOTS_PER_INCH|fontName|lastZoom|URL|Selector|_lookups|keys|tag|numbers|selectorData|Literal|operands|invalid|Filter|Expression|available|222|224|210|192|160|143|248|either|algorithm|place||near|Default|centroid|detector|collision||bbox|quality|multiple|limit|agg|methods|linear|power|any|reference||proj4|literal|WGS84||separate|gradient|blur|processing|shaders|parser|parse|entity|dimension|renderPointerArrow|renderPickerB|renderPointerCross|pickerCvsForPointer|pickerCvs|GOIs|removeClickedMarker|removeMarker|transparentIcon|initializeFailed|getFeatureId|handlers|geometryTypes|clickGrid|calculateFeaturesEnd|calculateFeatures|selectGrid|isCluster|getPointTileIdx|info|isPoint|moreThanMax|addFeatures20|lastOpenedPoints|clearCluster|isFather|displayedBounds|636|drawHeatPoints|useRadius|convertToPixelPoints|Circle|Sector|axisXLabelsOffset|axisYLabelsOffset|strokeLineJoin|axisUseArrow|axisYTick|Background|strokeDashstyle|SmicCircle|SmicSector|assembleShapes|dataValues|decimalNumber|polygonToTF|GeoText|isPointInPoly|getAllShapes|getShapesByFeatureID|isOverLay|intersectsBounds|addHoverShape|getOptions|init|removeLayer|Util_computeBoundingBox|_refreshTimeout|complete|getRectNoRotation|getTextBackground|italic|getTextWidth|SUtil_smoothSpline|SUtil_smoothBezier|onclick|onmouseup|onmousedown|onmouseout|onmousemove|isInside|isCover|toRGB|mix|BounceOut|70158|asin|Linear|Clip|fire|restart||||ondestroy|__renderidx|shapeCompareFunc|addRoot|ondrift|_updateAndAddShape|updateShapeList|getShapeList|createBackBuffer|back|initContext||callout|touch|onselectstart|_brushHover|_getHeight|_getWidth||_event|_mobildFindFixed|MOUSEOUT|_isDragging|_processDragEnd|_processDrop|_processDragLeave|phone|MOUSEUP|MOUSEDOWN|MOUSEMOVE|MOUSEWHEEL|DBLCLICK|CLICK|RESIZE|trigger|touchClickDelay|_lastDownButton|pointer|detail|wheelDelta|rgba2String|_catmullRomInterpolateArray|_interpolateArray|_loop|_setter|animate|mul|identity|Matrix|Log|Http|Env|ComputeBoundingBox|Area|lenSquare|len|log|userAgent|navigator|Mobile|d_|isNotAroundZero|TypeError|colorRegExp|random|hsv|toHex|getStepColors|_highlightColor|_palette|yellow|lime|cyan|isInsideArcStroke|isInsideQuadraticStroke|isInsideCubicStroke|command|isInsideSector|isInsideRing|isInsideBrokenLine|clearDrawedFeatures||drawFeatures||setExtent|zoomChanged|setSize|oldTimeOption|isTheSameType|pushPoint|unshiftPoint|dashStyle|||drawLineString|smoothConvertPoint|drawExternalGraphic|hitOverflow|LABEL_FACTOR|requestAnimation|cancelAnimation|framestart|LINEJOINTYPE|toggleClass|layerSymbolsInfo2CartoCss|getElementsByClassName|Edit|cartocsschange|fillEditPanel|handleCheckboxChange|offsetParent|handleColorInputFocus|handleSliderChange|smEditPanelColorInput|appendTo|smPanelPointer|_layerListTimeout|subul|span|textEdit|lineEdit|pointEdit|table|close|_timeout|mainPanel|initEditorViewer|setCartoCSS|minExtent|calculateResolutions|resolutionsFromScales|getScaleFromResolutionDpi|single|currentHightlightShader||unHightlightFeature|unHightlightFeatureInfo|getTileData|failure|layersInfoInitialized|success|committer||jsonp|tileOptions||tileClass|HTTPRequest||tileOrigin|getParameterString|getScaleForZoom|addMemoryTile|xyz|isZoomming|moz|getLonLatFromLayerPx|zoomDelay|singleTile|getStatusFailed|LocalStoragePlugin|cordova|EPSG|getStatusSucceed|strServiceUrl|fillImageLoaded|serverCartoCss|resetCartoCSS|serverCartoShaders|500|useLocalStorage|THEME|getLayerInfo|setCartoLayerShaderer|addSymbolizer|useLayerInfo|pickShader|originIndex|createCanvas|lineSymbolID|fillSymbolID|pointHaloColor|pointHaloRadius|textHeight|_expandCanvasStyle|drawLine|styleInited|drawing|patternIndex|texts|__default__|putImageData|getValidStyleFromCarto|upperAttributes|ranges|Variable|Definition|flatten|find|_rulesets|_variables|ruleset|was|editDistance||mapnik_reference||mapnikFunctions||validation_data|divide|Operation|Font|produces|added|valid|ppi|content|Comment|mode|_mapnik_reference_latest|130|216|140|235|206|135|218|147|170|165|173|228|153|FFFFFF|automatically|Define|justify|centerpoint|simple|dummy|off|vertex|longer|labeling|positioning|Specify|Specifies|angle|space|wrapping|places|scaling|Level|antialiased|shields|polygons|largest|multi|behavior|ensure|AGG|joins|com|github|https|defaults|combination|slightly|pixel|registered|addition|interpreted|provided|files|base|clipping|spatial|system|after|maxzoom|minzoom|Style|Rules|cartoStr|seftFilter|operand|multiplication|primary|comparison|closing|u4e00|charCodeAt|parsers|lastIndex|column|onChanging|base64|gif|getEventPosition|getColorPositionInPickerB|getColorPositionInPickerA|margin|initPicker|pickerBox|activate|highlightIcon|isPoi|Markers|isUseCache|msg|resetHandler|stopDown|clickFeature|B8E4B8|C69944|gridID|calculateMaxOrMin|calculateSumOrMean|spreadZoom|zoomInNumber|isZoomIn|dataExtent|_makeFeature|geometryType|drawAllTimeout|displayedPoints|maxLevel|getOrigin|getTileSizeLonlat|maxColIdx|maxRowIdx|minColIdx|minRowIdx|getIdxOfBounds|showOpenedCluster|isRefresh|404040|endColor|startColor|convertWeightToColor|featuresdrawcompleted|getPixelXY|useGeoUnit|xReferenceLineStyle|useXReferenceLine|backgroundRadius|backgroundStyle|fontOpacity|textColor|initBaseParameter|getDataValues|RelativeCoordinate|resetLinearGradient|DVBUnitValue|getShapesCount|updateAndAddShapes|geoTextToTF|rectangleToTF|pointToTF|multiPolygonToTF|multiLineStringToTF|multiPointToTF|isChartInMap|isQuadrilateralOverLap|drawCharts|Unique|Range|CustomVector|updateHoverShapes|getHoverOne|addTFEvents|changelayer|getFeaturesByAttribute|destroyFeatures|SmicStar|smicstar|SmicRing|smicring|SmicIsogon|smicisogon|SmicEllipse|smicellipse|smicsector|readyState|ActiveXObject|smicimage|smictext|_buildRadiusPath|MIN_VALUE|MAX_VALUE|smoothConstraint|smicpolygon|smicbroken|smicpoint|_getTextRect|_fillText|isSilent|getTansform|implemented|mulVector|getHighlightColor|||afterBrush|beforeBrush|BounceIn|1024|_needsRemove|onrestart|life|hasHoverShape|getHoverShapes|iterShape|updateHoverLayer|_shapeToImage|_createShapeToImageProcessor|clientHeight|getComputedStyle|defaultView|currentStyle|getDomHover|_updateLayerStatus|_paintList|overflow|getLastHoverOne|zrenderFixed|relatedTarget|toElement|applyTransform|MOUSEOVER|_processOverShape|DRAGEND|DROP|DRAGLEAVE|DRAGOVER|_processDragOver|DRAGENTER|_processDragEnter|DRAGSTART|dragEnableTime|_lastMouseDownMoment|_processDragStart|onmousewheel|onresize|_touchendHandler|_touchmoveHandler|_touchstartHandler|unbind|_lastClickMoment|_lastTouchMoment|button|GLOBALOUT|getY|getX|traverse|_cloneValue|toArray|_update|webkitRequestAnimationFrame|mozRequestAnimationFrame|msRequestAnimationFrame|requestAnimationFrame|decomposeTransform|distanceSquare|mergeItem|onreadystatechange|XMLHttpRequest|onerror|zrenderDelta|browser|Touch|CriOS|Android|ipod|safari|Safari|silk|Kindle|MSIE|iPad|iPod|iPhone|sOS|Version|005|quadraticProjectPoint|quadraticRootAt|cubicProjectPoint|cubicRootAt|computeBoundingBox|_RGB_2_HSL|_RGB_2_HSB|_HSL_2_RGB|_HSV_2_RGB|hsba|hex|__nonRecursion|yellowgreen|whitesmoke|wheat|violet|turquoise|tomato|thistle|teal|tan|steelblue|springgreen|snow|708090|slategrey|slategray|slateblue|skyblue|silver|sienna|seashell|seagreen|sandybrown|salmon|saddlebrown|royalblue|rosybrown|purple|powderblue|plum|pink|peru||peachpuff|papayawhip|palevioletred|paleturquoise|palegreen|palegoldenrod|orchid|orangered|orange|olivedrab|olive|oldlace|navy|navajowhite|moccasin|mistyrose|mintcream|midnightblue|mediumvioletred|mediumturquoise|mediumspringgreen|mediumslateblue|mediumseagreen|mediumpurple|mediumorchid|mediumblue|mediumaquamarine|maroon|f0f|magenta|linen|limegreen|lightyellow|lightsteelblue|789|lightslategrey|lightslategray|lightskyblue|lightseagreen|lightsalmon|lightpink|lightgreen|d3d3d3|lightgrey|lightgray|lightgoldenrodyellow|lightcyan|lightcoral||lightblue|lemonchiffon|lawngreen|lavenderblush|lavender|khaki|ivory|indigo|indianred|hotpink|honeydew|greenyellow||808080|grey|goldenrod|gold|ghostwhite|gainsboro||fuchsia|forestgreen|floralwhite|firebrick|dodgerblue|696969|dimgrey|dimgray|deepskyblue|deeppink|darkviolet|darkturquoise|2f4f4f|darkslategrey|darkslateblue|darkseagreen|darksalmon|darkred|darkorchid|darkorange|darkolivegreen|darkmagenta|darkkhaki|darkgreen|a9a9a9|darkgrey|darkgray|darkgoldenrod|darkcyan|darkblue|0ff|crimson|cornsilk|cornflowerblue|coral|chocolate|chartreuse|cadetblue|burlywood|brown|blueviolet|00f|blanchedalmond|bisque|beige|azure|aquamarine|aqua|antiquewhite|aliceblue|xb0|deg|windingArc|windingQuadratic|windingCubic|isInsidePath|swapExtrema|isPointInPath|_buildPathMethod|cpX2|cpY1|cpX1|_mathMethod|5000|getFrameCallback|delInstance|existed|Property|Elements|AnimatorVector|getDataExtent|getFeatureIdFromEvent|getFeatureFromEvent|removeDrawedFeature|needRecordDrawedFeature|recordDrawedFeature|featurerendered|drawfeaturestart|getCurrentTime|getOldTime|IS_GECKO|mapresized|removeItem|rendererOptions|rendererType|StretchLine|RadiatePoint|TadpolePoint|tail|glint|dragging|mozDrawText|mozMeasureText|LABEL_ALIGN|1em|drawPolygon|img|320|graphicOpacity|smoothConvertPolygon|removeById|createGeometry|frameend|trying|VERTICALALIGN|ALIGN|LINECAPTYPE|CARTOCSSATTRLIST|square|smSecondTd|option|smEditPanelInput|smPanelCheckbox|checkbox|createSelectControl|handleColorInputChange|createInputControl|layertype|layername|handleSubLiClick|handleLiClick|smPanelLI|createListControl|createTextEditPanel|createPolygonEditPanel|createLineEditPanel|createPointEditPanel|handleAdvanceBtnClick|smSplitLine|createLayerInfoPanel|smPanel|smEditPanel|handleHeaderMouseDown|createEditorCloseBtn|createMainPanel|handleCloseBtnClick|_dragging|handleHeaderDrop|handleHeaderDrag|closeBtn|calculateResolutionsLevel|alwaysInRange|unHightlightFeatures|highlightFeatures|getFeature|getFeatureInfoes|getLonLatFromPixel|getVectorStyles|subLayers|getUrlParameters|initializeLayersInfo|cartoCSS|mergeNewParams|urlAppend|selectUrl|getFullRequestString|zOffset|getTileUrl|getMemoryTile|encodeURIComponent|zoomAnimate|scheduleMoveGriddedTiles|isIEMultipTouch|applyBackBuffer|inZoom|redrawCanvas||initSingleTile|getTilesBounds|_timeoutDelayId|DEFAULT_PARAMS|cartoShaders|hightlightFeatureInfoes|calculateDpi|MapService|getAppStatusSucceed|loading|System|initFillImages|cartocssChanged|Projection|Canvas_|UNKNOWN|CIRCLE|ELLIPSE|LINEM|SUPPORTED_TRANSITIONS|removeCanvas|sortCartoLayer|setIndex|addCartoLayer|initCanvas|setItem|recordsets|keyUrl|getItem|loadTileFeature|positionTile|zIndex|renderTile|loadstart|reload|layerAlphaHack|maxGetUrlLength|lighter|_compOpMap|degree|fillBackColor|_serverStyleMap|_cartoStyleMap|hightlightShader|lineOpacity|drawRegion|drawSegment|_drawDoteLine|tempImage|drawImagePoint|applyStyle|drawValidSymbolizers|BASELINE|symbol|getValidStyleFromLayerInfo|getDefaultStyle|MinScaleDenominator|MaxScaleDenominator|setZoom|_css|reduce|cloneWith|evZooms|rulesets|variables|selectorName|fontset|isFont|expected|Unrecognized|validValue|validSelector|updateID|latest|setVersion|_validateValue|styles|required_cache|requiredProperties|setData|math|Cannot|subtract|Keyword|code|FontSet|conflict|addable|_val|two|densities|physical_units|all_units|symbolizersToXML|collectSymbolizers|permitted|silent|incorrect|Call||desaturate|154|179|191|188|176|221|203|133|219|152|204|209|196|136|178|215|150|184|walls|where|justified|Transform|capitalize|lowercase|uppercase|orientation|Place|gets|Determines|next|Minimum|intersection|Tell|Fully|sharp|degrees|delta|char|works|adjustment|Vertical|Horizontal|aka|long|instead|Use|bit|wrapped|reached|Wrap|Length|total|column_name|brackets|specified|columns|Data|always|How|prevent|store|reprojection|larger|reduced|lanczos|accuracy|fast|sometimes|factor|local|attempts|per|times|uses|rather|unlock|high|actual|area|types|arrow|special|shape|shows|full|rasterizer|theta|enabled|renderers|agg_gamma_functions|include|deps|master|blob|hood|Under|hint|Antigrain|smoother|calculate|threshold|stylesheet|needed|compatibility|filesystem|coordinates|maxy|maxx|miny|minx|Should|query|Extra|coordinate|assumed|they|4326|no_defs|datum|ellps|longlat|proj|main|composited|list|sharpen|detect|edge|sobel|emboss|stack|querying|unless|WMS|determined|308|79769e|double|denominator|possible|epsg|CSS|isExcute|toList|toShaders|z_0|Missing|u9fa5|keywordcolor|hexcolor|missing|Parse|getParser|getElementPosiontion|limitSigDigs|caculatePosition|handleDrop|handleDrag|handleMouseDown|setSliderBarSize|setCompleteBarSize|setSliderSize|createSlider|imageArrowURL|imageCrossURL|imageHSURL|showPicker|togglePicker|isAutoHide|initEvents|C0C0C0|renderPickerA|getElementsByTagName|createUTFGridControl|addMarker|Marker|mouseOverUTFGrid_lineArea|isHighlight|mouseOverUTFGrid_point|TiledDynamicRESTLayer|setLayers|initialized|onMarkerLayerCreated|onUtfgridLayerCreated|getMaxExtent|addTiledDynamicRESTLayer|onTiledDynamicRESTLayerCreated|setLayersInfoCompleted|updateLayerInfo|getLayerInfoCompleted|getLayersInfo|moveGriddedTiles|getScale|utfGrid|useJSONP|findLayers|defaultHandlerOptions|Hover|parseData||indexFromCharCode|abortLoading|SelectGrid|smHandlerBoxSelectFeature|boxDivClassName|selectBox|Box||dblclickFeature|dblclickGrid|mouseoutFeature|mouseoutGrid|mouseoverFeature||mouseoverGrid|clickoutGrid|initLayer|SelectFeature|calculateStandardDeviation|calculateMedian|calculateMode|calculateCounts|gridMinCounts|gridMaxCounts|getResolutionForZoom|getViewPortPxFromLonLat|getCenter|SelectCluster|clickoutCluster|clickCluster|ClusterLayer|getTileCenter|assembleFeature|labelSelect|makeCluster|clusterLabel|modifyVMLLabel|drawTextVML|0F9FF2|clusterend|isMaxLeve|noDrawClusters|drawPointMap|maxDiffuseAmount|isDiffused|VML|destroyCluster|HeatMapWeight|370|HeatMapFastLayer|grad|createGradient|drawCircle|colorize|showPoint|geoRadius|00001|ShapeStyleTool|cfcfcf|GraphAxis|f3f3f3|labelRotation|labelPosition|fontVariant|arial|shapesConvertToRelativeCoordinate|setSymbolType|getWeightFieldValue|lineIntersection|setChartsType|setMaxCacheCount|getCacheCount|_zoom_|getFeatures|afterAdd|smiccircle|5522848|IMG|nodeName|smicrectangle|showShadow|pointListLength|ondrop|ondragleave|ondragover|ondragenter|onmouseover|textY|textX|getHighlightZoom|smShape_|BounceInOut|984375|625|9375|525|BackInOut|BackOut|BackIn|ElasticInOut|ElasticOut|ElasticIn|CircularInOut|CircularOut|CircularIn|ExponentialInOut|ExponentialOut|ExponentialIn|SinusoidalInOut|SinusoidalOut|SinusoidalIn|QuinticInOut|QuinticOut|QuinticIn|QuarticInOut|QuarticOut|QuarticIn|CubicInOut|CubicOut|CubicIn|QuadraticInOut|QuadraticOut|QuadraticIn|_endTime|hoverConnect|hoverBrush|paddingBottom|paddingTop|paddingRight|paddingLeft|clientWidth|rect|image_|clearLayer|delLayer|insertBefore|_levelLayer_|__stopClip|_highLightLayer_|Theme_background_|getBoundingClientRect|changedTouches|targetTouches|srcElement|dragged|ondblclick|nodeType|eachChild|addChild|childAt|smShapeGroup_|dragleave|dragover|dragenter|dragend|dragstart|globalout|mouseover|setter|getter|lookAt|dispatchWithContext|Util_http|Util_curve|dist|lengthSquare|lerp|negate|scaleAndAdd|constructor|inherits|getPixelOffset|adjustCanvasSize|getPixelContext|CanvasGradient|RegExp|radianToDegree|console|send|304|XMLHTTP|Microsoft|onsuccess|getDelta|returnValue|canvasSupported|Phone|Tablet|webview|firefox|chrome|Fire|kindle|playbook|rimtabletos|bb10|blackberry|touchpad|webos|ipad|iphone|AppleWebKit|Firefox|Chrome|PlayBook|sTablet|RIM|BB10|BlackBerry|Silk|TouchPad|hpwOS|webOS|Web|quadraticDerivativeAt|cubicSubdivide|acos|cubicDerivativeAt|0001|quadraticBezier|cubeBezier|lift|3840|toName|toHSLA|toHSB|toHSBA|toHSV|hsva|toHSVA|getGradientColors|getLinearGradient|createRadialGradient|getRadialGradient|resetHighlight|customHighlight|getColor|resetPalette|customPalette|9acd32|ff0|f5f5f5|f5deb3|ee82ee|40e0d0|ff6347|d8bfd8|008080||d2b48c|4682b4|00ff7f|fffafa|6a5acd|87ceeb|c0c0c0|a0522d|fff5ee|2e8b57|f4a460|fa8072|8b4513|4169e1|bc8f8f|f00|800080|b0e0e6|dda0dd|ffc0cb|cd853f|ffdab9|ffefd5|d87093|afeeee|98fb98|eee8aa|da70d6|ff4500|ffa500|6b8e23|808000|fdf5e6|000080|ffdead|ffe4b5|ffe4e1|f5fffa|191970|c71585|48d1cc|00fa9a|7b68ee|3cb371|9370d8|ba55d3|0000cd|66cdaa|800000|faf0e6|32cd32|0f0|ffffe0|b0c4de|87cefa|20b2aa|ffa07a|ffb6c1|90ee90|fafad2|e0ffff|f08080|add8e6|fffacd|7cfc00|fff0f5|e6e6fa|f0e68c|fffff0||4b0082|cd5c5c|ff69b4|f0fff0|adff2f|008000|daa520|ffd700|f8f8ff|dcdcdc|228b22|fffaf0|b22222|1e90ff|00bfff||ff1493|9400d3|00ced1|darkslategray|483d8b|8fbc8f|e9967a|8b0000|9932cc|ff8c00|556b2f|8b008b|bdb76b|006400|b8860b|008b8b|00008b||dc143c|fff8dc|6495ed|ff7f50|d2691e|7fff00|5f9ea0|deb887|a52a2a|8a2be2|ffebcd|ffe4c4|f5f5dc|f0ffff|7fffd4|faebd7|f0f8ff|772e00|dd0000|aa0088|8400dd|0088aa|00aa00|777700|dd0083|ff77ff|ad77ff|77c7ff|aa8800|ff6600|ff77ab|c877ff|778fff|77e3ff|83dd00|ff9900|ff7777|ffbbe3|e2bbff|b0dd00|ddb000|bbbbff|d5ffbb|bbe3ff|ffc877|dddd00|ff9277|isOutside|rectangle|isogon|star|pathArray|sector|ring|broken|cpY2|bezier||maxr|rose|trochoid|ToImage_|clearAnimation|refreshNextFrame|modGroup|modShape|delGroup|delShape|addGroup|getId|getInstance|LRenderer_|getOffset|getDiv|fid|getFeatureByFid|associated|destroyed|called|getDrawedFeatures|createSymbolizer|renderIntent|DELETE|State|calculateInRange|StyleMap|drawFrame|TIME|Vector_|dashdot|mozTextStyle|drawRectangle|16777215|allowRotate|Route|applyDefaultSymbolizer|calculateBounds|eraseGeometry|getRunning|getReverse|setFrameRate|getFrameRate|setReverse|getRepeat|setRepeat|setCurrentTime|getEndTime|setEndTime|getStartTime||setStartTime|getSpeed|setSpeed|callable|bound|what|oCancelAnimationFrame|mozCancelAnimationFrame|webkitCancelAnimationFrame|cancelAnimationFrame|oRequestAnimationFrame|baseLine|rgb2hex|_PanelSelect_|smPanelValueInput|150px|smEditPanelInputBtn|smEditPanelInputContainer|_PanelInput_|smLayerInfoLI|msie|42px|hideAdvanceSetting|Title|camelize|smAdvanceTable|href|smSplitLineBottom|smSplitLineTop|smRegularTable|form|layerList|PanelBody_|PanelTitle_|static|PanelHeader_|Panel_|edit|editorMainPanelBoby_|head|editorMainPanelHeader_|editorMainPanel_|closeEditor|icons|supermapol|smCloseBtn|editorCloseBtn_|viewPortDiv|hidebtn|showHideBtn|resetPosition|saveState|isAttachTo|maxZoomLevel|getTileSize|initResolutions|unRegisterMouseEvent|wholeHightligthtShader|vectorstyles|addtile|addTile|toJSON|fromGeometry|ServerGeometry|clipRegionEnabled|OverlapDisplayedOptions|getParameters|upperCaseObject|prjCoordSys|000131072|000065536|000032768|000016384|000008192|000004096|000002048|000001024|56e|28e|getTileOrigin|adjustBounds|lenColumn|lenRow|eachStep|easeInOut|Easing|INTERVAL|Tween|removeBackBuffer|fixPosition|changeDy|changeDx|listeners||savaconfig|prjCode|visibleScalesEnabled|visibleScales|originResult|6378137|eval|layerContext|collectHightlightShader|getServerCartoCSS|getClientCartoCSS|hightLightCartocssChanged|carto|setHighLightCartoCSS|epsgCode|getCode|storageType|getconfig|useHighSpeed|memoryImg|Animal|transitionObj|getsdcard|sdcard|sdcardPath|supportCanvas|bufferImgCount|tileOriginCorner|opera|useBlankTile|PadLeft|GeometryType|cloneNode|stopObservingElement|VECTOR|clearCanvas|getTopFeatureInfo|failured|load|write|transformResult|decodeURIComponent|SuperMapCanvas|getImageSize|imageOffset|isBackBuffer|getBoundsFromBaseLayer|reproject|removeCartoLayer|newFeatureTag|unregister|alphaHack|IFrame|pointImageUrls|markerSymbolID|fillGradientAngle|NONE|fillGradientMode|markerHeight|fillOpaqueRate|lineColor|fillGradientOffsetRatioY|fillGradientOffsetRatioX|fillForeColor|markerAngle|markerWidth|bool|fillBackOpaque|isForLayer|GLOBAL|SHADOW|polygonOpacity|ltr|direction|10px|00|0000|700|CatoLayer|cross|createPattern|outlineWidth|outline|alphabetic|CENTER|RIGHT|LEFT||BOTTOM|MIDDLE|TOP|fontHeight|textStyle|stringify|picHeight|picWidth|SYMBOLMARKER|resourceType|symbols|SCALE|searchValues|addFeature|999|750|1500||2500|12500|25000|50000|100000|200000|400000|750000|1500000|3000000|6500000|12500000|25000000|50000000|100000000|200000000|500000000|1000000000|levels|Only|forEach|_getFontSet|Did|tags|defining|contains_field|quot|amp|expressions|strings|substract|OperationError|imagefilter|Imagefilter|effects|Fontset|operator|01|subtracted|Percent|must|differ|metric|0254|screen_units|CDATA|properties|Symbolizer|appliesTo|addRules|assert|frame_offset|takes|did|unknown|pairs|NaN|greyscale|spin|fadeout|fadein|saturate|lightness|collection|linestring|208|164|244|185|213|239|175|251|232|214|142|253|181|199|186|193|182|252|148|233|183|189|134|237|149|158|226|138|212|including|buildings|directives|fit|could|depending|justification|except|centered|Auto|example|SIZES|POSITIONS|turn|basic|overlaps|attached|versus|Rotate|affected|Position|specifying|corners|fewer|higher|radians|converted|internally|adjacent|allowed|ideal|displaced|Distance|occurs|successive|present|Text|outside|geometric|calculates|Centroid|represent|distortion|lead|might|faster|determine|divided|Reprojection|highest|gives|compromise|good|Bilinear|versions|different|making|blackman|sinc|mitchell|bessel|gaussian|catrom|quadric|kaiser|hermite|hamming|hanning|spline36|spline16|bicubic|bilinear8|bilinear|cost|output|scaled|better|much|cause|Higher|overviews|images|downscale|pre|datasources|Gdal|Raster|downscaling|appropriate|choose|datasource|Allow|modifications|without|level|Apply|fills|global|warped|multiline|Currently|names|occurrences|necessarily|already|vertexes|anchor|beside|behind|conflicts|resolve|Setting|Space|makers|equal|provides|behaves|areas|bounding|aggregate|does|forced|Attempt|itself|cover|boundary|positioned|overrides|overall|sacrifices|alternate|Exposes|directionality|negative|Postive|parallel|Offsets|miterLength|spec|less|miters|Will|jaggy|help|need|Normally|stroking|thickness|beyond|extending|Used|yet|support|svg|experimental|exists|currently|dashoffset|patterns|complex|more|More|respectively|pair|endings|linecap|joining|linejoin|drawn|assign|Fill|holds|Path|functionality|certain|minumum|about|thrown|detected|load_map|calls|program|working|Paths|xml|memory|understood|Any|process|application|referenced|empty|intended|Not|cut|equally|boundaries|crossing|them|plot|transformations|declare|plotted|potentially|Grouped|wiki|grouping|previously|collisions|because|would|normally|even|desirable|immediately|cleared|duplicate|avoiding|explicitly|queried|able|rarely|GetFeatureInfo|direct|queryable|ensures|massive|likely|vary|being|marked|installed|identifier|etc|nad|proper|inherited|unique|ideally|validated|strictly|anything|been|has|evaluate|have|All|translation|simplify|implementations|further|evaluation|ends|matched|previous|independent|sequentially|sefgFilter|isMap|second|Encountered|u9fa5_|opening|void|getElement|clientLeft|smToolSliderBar|smToolCompleteBar|smToolSlider|6g8eKg8eCH5BAEKAAIALAAAAAAHAAsAAAITTIQYcLnsgGxvijrxqdQq6DRJAQA7|R0lGODlhBwALAKECAAAAAP|uVRsFADs|4AeQJbmKY4p1HHapBlwPL|yH5BAEKAAIALAAAAAAPAA8AAAIklB8Qx53b4otSUWcvyiz4|R0lGODlhDwAPAKEBAAAAAP|LUjHOuz5CksAAAAASUVORK5CYII|Hv8exON|6d0D7EltAh5wz|3Q12QnSnYLn5p9P|6D9ie2hC|KyJaI||94rU5dK8B8|MF8|mTN33ZGKE06HQbsQu0LV|tYPnOqanA|ohbRrZk3Qe9hdgY|haPyicuRcVmIxzAMTMl9wfi3sGtBuxF3ShH92C29yJTteU|LR3VqFNiGHRBv73ge9EZiM|SdRrMit8TRWwyEabxgFwJrQnsQt0rR|jV6qb||YHrrQD|0bfDgQ2p|GqyJqoxKnMufEVBLJxAJwJ7U9sDH3fX0CxnIB4orMyuilTyRh6g|QwcLSVDSGl78C6LePY6A3EptBf0BKcjWWH|6occctDKGriMPzH85D9qN2BG61g|t4zDodxCvQt|Zit7s4ZA7y5Qg2sDr|ekx0LuILaFr|xCNX|iAbi2lAsqNmbK3yBAyLNdbRzW8Y6Btqf2B76A2IURE2zZY16KGfZlwqofJSL4feABka|FLptzrvTDh9gl0oV|MjqJ9x2vQb7qgSuvX0StH0|MBtHutaPQOzh3H0RBoZS5OJ|0Q|u3QJXr|sLjacu28T3MVfd0Aha|JMiGS40|9SMoZG55q|TCDrrIxMHIFg512BWj9OgvYk9oK|fb4EDoLcTG0IV|PXc80L9d7OV294dVPbC|RCPy|DoJ2JXaAL|CVhm5OAn1STPkvhxBW1KXjeP60Y|xPfR9fwmKeu|QErCrG6jrTIynVUDwo896vCzssPrNnAYtD|ToLcQG0N|Arl93I3aMNOHPBce2PdSkL7Kpnwe9l9gGutCPoFgkUtytXAGbex0vKCznSOs00o|4Z3bJXRvY76s0|ycasM9WOxWu0PnTniLWE2iLRi|YHrqXf6T3bJUBhfxFWUDPg95CbAytm|TgG2p||LvpulVHylsgK|yUroGH0jleEX7MOgtxMbQ7PzKoMuajKyM8pYIiB194HnQzsQu0Gp|LdBsTbngv|2TDpv2iggYFW|oZlfGaS9ewetDGCLeV1exH4e9Mr|b1sZTTIr5OStMGHA6GdiV2gUf2UmQcfJdUbXOoe6HoN1A0b2uQD4EBosXJqQTwKnXvXAEX|9Ds|xPbRU|Ogd5FbAk9uL9H9LIyYg821sjo13gYtD|lHGpz7ZzpVsYTF7K8Hyj|DoPeSGwGrdvfY24RpKmVjrLuCQdCuxE7Qkv64TZ3Z44dVPrxUOh3EK9C1|idLK3UZWRkmKX2zA4Vc|Hdqf2B6a3b9SOerezsoIBWaJ3IBn1fp0j4PeQmwMzc5|efC3Ribb1VxlUHGQe8iTb0598|Bf9bCM1dBiBfrHeJ1HR6dKEedDf5yPdBLilp|2yx3msxVRHjZ0Td4GfV|jPaRoHGWl2|RGmqwBQ0jEDHFpoJ85BLN||9vq0yStiGNNVHkOe||v32rjAsdX9S5vgI4ENqT2Asa7Z|||||rOGGaRWr14yToLcTG0Ky|YntoRf9l2RtQWgJXzY4bdtbqx0OhnYldoHv7I79jf4|6dGh|esJHrH|76i|cRh02ndTNIMm1j8NxtmePs|rxIrhBQdCv494Hlrtz1lo30Qjz1z|sH2e49Yb3lRC6e9fSS9ETohjj7hdkx0rQ|Rev0gT2i2vu4cZrNI1|eSJ0UtxZmFGGg4MigZ75ovHnvsOcUX09zRbzjCrU|aquMLM9|3QLCg6lESZZkrfJ7nSj3gWNEMcRkYJsf5L0BXENBl1WV8|G3khsBk3Pf5mYvqOwMqZnNnw3i9cRDoT2JPaCZuvreskDuXkHxfQMvfbBgdBbiI2hC|FiwtgTlvIAznp4|9yxoZ2IXaLo|mp0p8LO5YyF0s215g|Qq1Ij995PrJ3|8dlhLtdhWvgfEfz4AeGf9hR2wcaeTPpacvRdzLTx8J|eAb2R2Aya9ueUY|lveHLZYCVK4GeN1P5N|3qx2HQbsSO0Ar|uljZei|4X1L8SzMb3BbkGdtwsD05AbP9YOU8xui|7TfoCuLj6hwgN89CwBJ3Gx8rOVsn0kQ48tDS|4i6IfcLS2mIY|er3X46B9ie2h6bX|wg8eiwpXYGQqPEgjsBrX|nDira20qqyZriv384xhoZ2IX6Lr|n5oo5jAVLY5Em6i8Pwm6uSNuCrNxpNX|sezoLcQG0Mjfy6xrqLnVBLGWHw1i69WP5LCCn0TNEL3DLNXpCV|fkvT4d2JnaBZv258M6h4IFu2Em7|UN2AxlDOyXfLQaxxf|jKh|sT10XR|q2YW2u6X1JWzfsYFPKX3L99LrQ|K04NFfNTauEBypXQWQLAfqQoHl9CfvpQ6C3ExtC9|4vo7flboRpjEQ6EjgojYK9|wXuYGj|bdgUWrAwNPhwInRxw1|XNJMabzHdCIbnuYDSItzZ|H23MBtHuvbn5mp7dlU9TUkP|HOMKDFoZvDFg6s89CNqf2B5a4e8Hts84W0pgeohBtspBXYp8H3Tk|L5VP3p0W4iNoYv6Oh6eoJmSMW5laIzF8iT1TtgeV9RZoZ7QvdEUzsQu0CP|WAG|qpemLEywlRhT6qvPx16C7ExdK0fSjcj0maAzsqgBt7rfIxGP46B9iT2gi70I842bNj0U4wd|KPNDjURg2tdEC7rSQN5B9DYR70X5YivVxft7AyrOvrD4V2JnaBJurr|a308LYR5pFquRRvlHIrKWoCj5woCVId4eR|dv4vS4A|zQ0AiXaRW5x|9mHMFuqrH3spFw0s0Bgr9OAzamdgFutaPpMuqo6WVEXWJdSL14xhof2J76MKfS2yXWGOVB1WXXGOVdxFSx587CXoLsTE0689RH7VW4RMLeKI9wPpzz4XeS2wDzdbXR52AWStjwiSAA6HdiB2h1f6cqT0whzzuzz0LejuxATTy90Xt40v7CzdGRvKS4O|afmg7tMrFxpG|QExdgp7gT5qCu2BLKiLqtc94hI7PB8auQP4KuyIvSJ960fUqXWcd2F48Khr1bHSj2dDp|wS6Q9ISWjVfLTVVT2mdiPGGRduFKWm7dBStWlLmI0j|ShDzV9xrtcgW21IT6L0yfcS90FKCdw||qKyJug4Yvg7xA0QEpB8nQe8itoQu9EOT8M3mTsqUSUzykH6cBO1PbA9d91||||0YBVx7rFwNHAj9JuIl6EI|GEA6HdiB2ha|JrU|kMl1Fl6J8o||qR2B|COq8481YrNI3|Phk6d|wyCpHoR|EvxPrdK0fD4aOLXQi7zyGxMaRvvWjjH2U8o9I44OKnf|rBSJ54l8FqTUse0J|x1GCZn9EYLEHqVfI6Efx0D7E9tDF|GbBxLlpKAkADoR2JnaBrvWD|G60A9km|cP4ASnJ1JH4|MsQ4zLE4AiIOcpibv4u9OET6|CD8jenbRJNyGOxLoAaH1iLu4EUEHAv1|3rnx8QI0SABO2xfAbiCfVR8Wj|fyTI8ZhHnodOGgcV|pDcTxP4BPGDtq3vYJGPpv8craeRdo|p41|9uQlzXlI2gGELoCEm6pxubp6PI69WoV3C20uIQPAH4A|iVBORw0KGgoAAAANSUhEUgAAALUAAABlCAIAAACEDzXRAAAKQ0lEQVR42u2d23IjKwxFBeRh5v8|crosshair|mouseleave|9999|120px|240px|Div|DOMContentLoaded|190|removeControl|addControl|fallThrough|SMY|SMX|blank|Icon|UTFGridLayer|templayer|redirect|newResourceID|SetLayersInfoService|atasetName|GetLayersInfoService|displayFilter|wrapDateLine|getServerZoom|getServerResolution|getVisibility|layerNames|pixCell|_cache|900913|CanvasLayer|Click|setHandler||stopDouble||||stopSingle|stopMove|||pixelTolerance|autoActivate|abort|unload|Request||Script|Protocol|encodeURI|LABELMODE_SUM|LABELMODE_MIN|LABELMODE_MAX|LABELMODE_MEAN|LABELMODE_NUMBER|df8505|E0E0A0|setCenter|outFeature|overFeature|clickoutFeature|backgroundGraphic|JSONClone|_geometryClass|_featureId|inline|lineHeight|backgroundHeight|backgroundWidth|textRoot|isNewAdd|component|movestart|unrenderedFeatures|getFeaturesByBounds|cancelDisplayFeatures|displayFeatures|containsLonLat|cluster1|cluster2|cluster3|createImageData'.split('|'),0,{}))



/***/ }),
/* 284 */
/***/ (function(module, exports) {

module.exports = function(){try{return mapv}catch(e){return {}}}();

/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(57);
__webpack_require__(54);
__webpack_require__(53);
__webpack_require__(56);
__webpack_require__(55);
__webpack_require__(58);
__webpack_require__(36);
__webpack_require__(76);
__webpack_require__(71);
__webpack_require__(72);
__webpack_require__(67);
__webpack_require__(68);
__webpack_require__(69);
__webpack_require__(70);
__webpack_require__(78);
__webpack_require__(74);
__webpack_require__(73);
__webpack_require__(77);
__webpack_require__(79);
__webpack_require__(50);
__webpack_require__(51);
__webpack_require__(75);
__webpack_require__(66);
__webpack_require__(35);
__webpack_require__(59);
__webpack_require__(60);
__webpack_require__(61);
__webpack_require__(65);
__webpack_require__(63);
__webpack_require__(64);
__webpack_require__(62);
module.exports = __webpack_require__(52);


/***/ })
/******/ ]);